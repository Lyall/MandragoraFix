#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_VFXHelperFunctions

#include "Basic.hpp"

#include "BPFL_VFXHelperFunctions_classes.hpp"
#include "BPFL_VFXHelperFunctions_parameters.hpp"


namespace SDK
{

// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.AttachXYZArrows
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Arrow_Size                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Arrow_Length                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OriginOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::AttachXYZArrows(class USceneComponent* Component, float Arrow_Size, float Arrow_Length, const struct FVector& OriginOffset, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "AttachXYZArrows");

	Params::BPFL_VFXHelperFunctions_C_AttachXYZArrows Parms{};

	Parms.Component = Component;
	Parms.Arrow_Size = Arrow_Size;
	Parms.Arrow_Length = Arrow_Length;
	Parms.OriginOffset = std::move(OriginOffset);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.SpawnArrow
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UArrowComponent*                  Arrow                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::SpawnArrow(class USceneComponent* Component, const struct FVector& Offset, class UObject* __WorldContext, class UArrowComponent** Arrow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "SpawnArrow");

	Params::BPFL_VFXHelperFunctions_C_SpawnArrow Parms{};

	Parms.Component = Component;
	Parms.Offset = std::move(Offset);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Arrow != nullptr)
		*Arrow = Parms.Arrow;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.ArrowSetup
// (Static, Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UArrowComponent*                  Arrow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ArrowSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ArrowLength                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::ArrowSetup(class UArrowComponent* Arrow, float ArrowSize, float ArrowLength, const struct FRotator& Rotation, const struct FLinearColor& Color, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "ArrowSetup");

	Params::BPFL_VFXHelperFunctions_C_ArrowSetup Parms{};

	Parms.Arrow = Arrow;
	Parms.ArrowSize = ArrowSize;
	Parms.ArrowLength = ArrowLength;
	Parms.Rotation = std::move(Rotation);
	Parms.Color = std::move(Color);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.SpawnSystemWithFixedFacing
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterBase*                   Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OriginOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraSystem*                   SystemTemplate                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENCPoolMethod                           PoolingMethod                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Debug_                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraComponent*                System                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::SpawnSystemWithFixedFacing(class ACharacterBase* Target, const struct FVector& OriginOffset, class UNiagaraSystem* SystemTemplate, ENCPoolMethod PoolingMethod, bool Debug_, class UObject* __WorldContext, class UNiagaraComponent** System)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "SpawnSystemWithFixedFacing");

	Params::BPFL_VFXHelperFunctions_C_SpawnSystemWithFixedFacing Parms{};

	Parms.Target = Target;
	Parms.OriginOffset = std::move(OriginOffset);
	Parms.SystemTemplate = SystemTemplate;
	Parms.PoolingMethod = PoolingMethod;
	Parms.Debug_ = Debug_;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (System != nullptr)
		*System = Parms.System;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.SpawnSurfaceTypeSystemAtLocation
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SurfaceLocation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       VFXTransform                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// E_SurfaceEffectType                     EffectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ColorScaleMultiply                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraComponent*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

class UNiagaraComponent* UBPFL_VFXHelperFunctions_C::SpawnSurfaceTypeSystemAtLocation(const struct FVector& SurfaceLocation, const struct FTransform& VFXTransform, E_SurfaceEffectType EffectType, float ColorScaleMultiply, class UObject* __WorldContext, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "SpawnSurfaceTypeSystemAtLocation");

	Params::BPFL_VFXHelperFunctions_C_SpawnSurfaceTypeSystemAtLocation Parms{};

	Parms.SurfaceLocation = std::move(SurfaceLocation);
	Parms.VFXTransform = std::move(VFXTransform);
	Parms.EffectType = EffectType;
	Parms.ColorScaleMultiply = ColorScaleMultiply;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	return Parms.ReturnValue;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.SpawnUniformSizedDecals
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterBase*                   Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               DecalMaterial                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DecalSizeMin                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DecalSizeMax                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DecalAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LocationMin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LocationMax                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LocationOffset                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DecalLifetime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FadeInDuration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FadeOutDuration                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Debug                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         OverrideRotation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_DecalRandomRotations                  RandomRotate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SortOrder                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::SpawnUniformSizedDecals(class ACharacterBase* Target, class UMaterialInterface* DecalMaterial, float DecalSizeMin, float DecalSizeMax, int32 DecalAmount, const struct FVector& LocationMin, const struct FVector& LocationMax, const struct FVector& LocationOffset, float DecalLifetime, float FadeInDuration, float FadeOutDuration, bool Debug, const struct FRotator& OverrideRotation, E_DecalRandomRotations RandomRotate, int32 SortOrder, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "SpawnUniformSizedDecals");

	Params::BPFL_VFXHelperFunctions_C_SpawnUniformSizedDecals Parms{};

	Parms.Target = Target;
	Parms.DecalMaterial = DecalMaterial;
	Parms.DecalSizeMin = DecalSizeMin;
	Parms.DecalSizeMax = DecalSizeMax;
	Parms.DecalAmount = DecalAmount;
	Parms.LocationMin = std::move(LocationMin);
	Parms.LocationMax = std::move(LocationMax);
	Parms.LocationOffset = std::move(LocationOffset);
	Parms.DecalLifetime = DecalLifetime;
	Parms.FadeInDuration = FadeInDuration;
	Parms.FadeOutDuration = FadeOutDuration;
	Parms.Debug = Debug;
	Parms.OverrideRotation = std::move(OverrideRotation);
	Parms.RandomRotate = RandomRotate;
	Parms.SortOrder = SortOrder;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.GetAbilityComponent
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterBase*                   Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AbilityName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           AbilityComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilityComponent*                OutComponent                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::GetAbilityComponent(class ACharacterBase* Character, class FName AbilityName, class UClass* AbilityComponent, class UObject* __WorldContext, class UAbilityComponent** OutComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "GetAbilityComponent");

	Params::BPFL_VFXHelperFunctions_C_GetAbilityComponent Parms{};

	Parms.Character = Character;
	Parms.AbilityName = AbilityName;
	Parms.AbilityComponent = AbilityComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutComponent != nullptr)
		*OutComponent = Parms.OutComponent;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.PlayTempDissolve
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMandragoraGameMode*              ManGameMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AEnemyCharacter*                  EnemyCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_TEMP_Dissolve_C*              VE                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::PlayTempDissolve(class AMandragoraGameMode* ManGameMode, class AEnemyCharacter* EnemyCharacter, class UObject* __WorldContext, class ABP_TEMP_Dissolve_C** VE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "PlayTempDissolve");

	Params::BPFL_VFXHelperFunctions_C_PlayTempDissolve Parms{};

	Parms.ManGameMode = ManGameMode;
	Parms.EnemyCharacter = EnemyCharacter;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (VE != nullptr)
		*VE = Parms.VE;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.TurnOffEffectsWithTag
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterBase*                   Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::TurnOffEffectsWithTag(class ACharacterBase* Character, class FName Tag, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "TurnOffEffectsWithTag");

	Params::BPFL_VFXHelperFunctions_C_TurnOffEffectsWithTag Parms{};

	Parms.Character = Character;
	Parms.Tag = Tag;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.GetChaoticEnergiesDefaults
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CE_Color                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CE_NormalCheck                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::GetChaoticEnergiesDefaults(class UObject* __WorldContext, struct FLinearColor* CE_Color, float* CE_NormalCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "GetChaoticEnergiesDefaults");

	Params::BPFL_VFXHelperFunctions_C_GetChaoticEnergiesDefaults Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CE_Color != nullptr)
		*CE_Color = std::move(Parms.CE_Color);

	if (CE_NormalCheck != nullptr)
		*CE_NormalCheck = Parms.CE_NormalCheck;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.SetMaterialTimer
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   MeshComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LifeTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::SetMaterialTimer(class UMeshComponent* MeshComponent, float LifeTime, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "SetMaterialTimer");

	Params::BPFL_VFXHelperFunctions_C_SetMaterialTimer Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.LifeTime = LifeTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.CacheDynamicMaterials
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInstanceDynamic*> DynamicMaterials                                       (Parm, OutParm)

void UBPFL_VFXHelperFunctions_C::CacheDynamicMaterials(class UMeshComponent* Target, class UObject* __WorldContext, TArray<class UMaterialInstanceDynamic*>* DynamicMaterials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "CacheDynamicMaterials");

	Params::BPFL_VFXHelperFunctions_C_CacheDynamicMaterials Parms{};

	Parms.Target = Target;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (DynamicMaterials != nullptr)
		*DynamicMaterials = std::move(Parms.DynamicMaterials);
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.SetScalarParamaterOnMaterialLayer
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInstanceDynamic*> Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// EMaterialParameterAssociation           Association                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialFunctionInterface*       LayerFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::SetScalarParamaterOnMaterialLayer(TArray<class UMaterialInstanceDynamic*>& Target, EMaterialParameterAssociation Association, class FName ParameterName, class UMaterialFunctionInterface* LayerFunction, float Value, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "SetScalarParamaterOnMaterialLayer");

	Params::BPFL_VFXHelperFunctions_C_SetScalarParamaterOnMaterialLayer Parms{};

	Parms.Target = std::move(Target);
	Parms.Association = Association;
	Parms.ParameterName = ParameterName;
	Parms.LayerFunction = LayerFunction;
	Parms.Value = Value;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Target = std::move(Parms.Target);
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.SetVectorParamaterOnMaterialLayer
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInstanceDynamic*> Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// EMaterialParameterAssociation           Association                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialFunctionInterface*       LayerFunction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::SetVectorParamaterOnMaterialLayer(TArray<class UMaterialInstanceDynamic*>& Target, EMaterialParameterAssociation Association, class FName ParameterName, class UMaterialFunctionInterface* LayerFunction, const struct FLinearColor& Value, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "SetVectorParamaterOnMaterialLayer");

	Params::BPFL_VFXHelperFunctions_C_SetVectorParamaterOnMaterialLayer Parms{};

	Parms.Target = std::move(Target);
	Parms.Association = Association;
	Parms.ParameterName = ParameterName;
	Parms.LayerFunction = LayerFunction;
	Parms.Value = std::move(Value);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Target = std::move(Parms.Target);
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.WorldPositionToScreenUV
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          WorldPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   U                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   V                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::WorldPositionToScreenUV(const struct FVector& WorldPosition, class UObject* __WorldContext, float* U, float* V)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "WorldPositionToScreenUV");

	Params::BPFL_VFXHelperFunctions_C_WorldPositionToScreenUV Parms{};

	Parms.WorldPosition = std::move(WorldPosition);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (U != nullptr)
		*U = Parms.U;

	if (V != nullptr)
		*V = Parms.V;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.PlayRadialBlurAtLocation
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          WorldPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ForTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BlurRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BlurStrength                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::PlayRadialBlurAtLocation(const struct FVector& WorldPosition, float ForTime, float BlurRadius, float BlurStrength, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "PlayRadialBlurAtLocation");

	Params::BPFL_VFXHelperFunctions_C_PlayRadialBlurAtLocation Parms{};

	Parms.WorldPosition = std::move(WorldPosition);
	Parms.ForTime = ForTime;
	Parms.BlurRadius = BlurRadius;
	Parms.BlurStrength = BlurStrength;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.GetSurfaceByWorldLocation
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          WorldPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASurfaceTypeVolume*               SurfaceType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Name_0                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::GetSurfaceByWorldLocation(const struct FVector& WorldPosition, class UObject* __WorldContext, class ASurfaceTypeVolume** SurfaceType, class FString* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "GetSurfaceByWorldLocation");

	Params::BPFL_VFXHelperFunctions_C_GetSurfaceByWorldLocation Parms{};

	Parms.WorldPosition = std::move(WorldPosition);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SurfaceType != nullptr)
		*SurfaceType = Parms.SurfaceType;

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.EaseOutCirc
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::EaseOutCirc(float In, class UObject* __WorldContext, float* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "EaseOutCirc");

	Params::BPFL_VFXHelperFunctions_C_EaseOutCirc Parms{};

	Parms.In = In;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.EaseOutCubic
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::EaseOutCubic(float In, class UObject* __WorldContext, float* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "EaseOutCubic");

	Params::BPFL_VFXHelperFunctions_C_EaseOutCubic Parms{};

	Parms.In = In;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.GetWorldPositionAsScreenUV
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          WorldPosition                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   U                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   V                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::GetWorldPositionAsScreenUV(const struct FVector& WorldPosition, class UObject* __WorldContext, float* U, float* V)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "GetWorldPositionAsScreenUV");

	Params::BPFL_VFXHelperFunctions_C_GetWorldPositionAsScreenUV Parms{};

	Parms.WorldPosition = std::move(WorldPosition);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (U != nullptr)
		*U = Parms.U;

	if (V != nullptr)
		*V = Parms.V;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.SpawnUniformSizedDecalsInActor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               DecalMaterial                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DecalSizeMin                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DecalSizeMax                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DecalAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LocationMin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LocationMax                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LocationOffset                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DecalLifetime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FadeInDuration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FadeOutDuration                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Debug                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         OverrideRotation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_DecalRandomRotations                  RandomRotate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SortOrder                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDecalComponent*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UDecalComponent* UBPFL_VFXHelperFunctions_C::SpawnUniformSizedDecalsInActor(class AActor* Actor, class UMaterialInterface* DecalMaterial, float DecalSizeMin, float DecalSizeMax, int32 DecalAmount, const struct FVector& LocationMin, const struct FVector& LocationMax, const struct FVector& LocationOffset, float DecalLifetime, float FadeInDuration, float FadeOutDuration, bool Debug, const struct FRotator& OverrideRotation, E_DecalRandomRotations RandomRotate, int32 SortOrder, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "SpawnUniformSizedDecalsInActor");

	Params::BPFL_VFXHelperFunctions_C_SpawnUniformSizedDecalsInActor Parms{};

	Parms.Actor = Actor;
	Parms.DecalMaterial = DecalMaterial;
	Parms.DecalSizeMin = DecalSizeMin;
	Parms.DecalSizeMax = DecalSizeMax;
	Parms.DecalAmount = DecalAmount;
	Parms.LocationMin = std::move(LocationMin);
	Parms.LocationMax = std::move(LocationMax);
	Parms.LocationOffset = std::move(LocationOffset);
	Parms.DecalLifetime = DecalLifetime;
	Parms.FadeInDuration = FadeInDuration;
	Parms.FadeOutDuration = FadeOutDuration;
	Parms.Debug = Debug;
	Parms.OverrideRotation = std::move(OverrideRotation);
	Parms.RandomRotate = RandomRotate;
	Parms.SortOrder = SortOrder;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.SpawnWorldDecals
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               DecalMaterial                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DecalSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DecalLifetime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FadeInDuration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FadeOutDuration                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Debug                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         OverrideRotation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_DecalRandomRotations                  RandomRotate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDecalComponent*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         DynamicMaterial                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UDecalComponent* UBPFL_VFXHelperFunctions_C::SpawnWorldDecals(class UMaterialInterface* DecalMaterial, float DecalSize, const struct FVector& Location, float DecalLifetime, float FadeInDuration, float FadeOutDuration, bool Debug, const struct FRotator& OverrideRotation, E_DecalRandomRotations RandomRotate, class UObject* __WorldContext, class UMaterialInstanceDynamic** DynamicMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "SpawnWorldDecals");

	Params::BPFL_VFXHelperFunctions_C_SpawnWorldDecals Parms{};

	Parms.DecalMaterial = DecalMaterial;
	Parms.DecalSize = DecalSize;
	Parms.Location = std::move(Location);
	Parms.DecalLifetime = DecalLifetime;
	Parms.FadeInDuration = FadeInDuration;
	Parms.FadeOutDuration = FadeOutDuration;
	Parms.Debug = Debug;
	Parms.OverrideRotation = std::move(OverrideRotation);
	Parms.RandomRotate = RandomRotate;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (DynamicMaterial != nullptr)
		*DynamicMaterial = Parms.DynamicMaterial;

	return Parms.ReturnValue;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.SetMaterialTimerOnMaterial
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         DynamicMaterial                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LifeTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::SetMaterialTimerOnMaterial(class UMaterialInstanceDynamic* DynamicMaterial, float LifeTime, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "SetMaterialTimerOnMaterial");

	Params::BPFL_VFXHelperFunctions_C_SetMaterialTimerOnMaterial Parms{};

	Parms.DynamicMaterial = DynamicMaterial;
	Parms.LifeTime = LifeTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.OverrideCharacterMaterial
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         OverrideMaterial                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInstanceDynamic*> PreviousMaterials                                      (Parm, OutParm)
// TArray<class UMaterialInstanceConstant*>PreviousMaterialsConstant                              (Parm, OutParm)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_VFXHelperFunctions_C::OverrideCharacterMaterial(class USkeletalMeshComponent* SkeletalMeshComponent, class UMaterialInstanceDynamic* OverrideMaterial, class UObject* __WorldContext, TArray<class UMaterialInstanceDynamic*>* PreviousMaterials, TArray<class UMaterialInstanceConstant*>* PreviousMaterialsConstant, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "OverrideCharacterMaterial");

	Params::BPFL_VFXHelperFunctions_C_OverrideCharacterMaterial Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.OverrideMaterial = OverrideMaterial;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PreviousMaterials != nullptr)
		*PreviousMaterials = std::move(Parms.PreviousMaterials);

	if (PreviousMaterialsConstant != nullptr)
		*PreviousMaterialsConstant = std::move(Parms.PreviousMaterialsConstant);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.EntropyEnemyDie
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFXSystemComponent*               EntropyEnemyDie_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFXSystemComponent*               EntropyLiving                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AEnemyCharacter*                  EnemyCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::EntropyEnemyDie(class UFXSystemComponent* EntropyEnemyDie_0, class UFXSystemComponent* EntropyLiving, class AEnemyCharacter* EnemyCharacter, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "EntropyEnemyDie");

	Params::BPFL_VFXHelperFunctions_C_EntropyEnemyDie Parms{};

	Parms.EntropyEnemyDie_0 = EntropyEnemyDie_0;
	Parms.EntropyLiving = EntropyLiving;
	Parms.EnemyCharacter = EnemyCharacter;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.GetAbilityComponentByClass
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterBase*                   Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           AbilityClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           AbilityComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilityComponent*                OutComponent                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_VFXHelperFunctions_C::GetAbilityComponentByClass(class ACharacterBase* Character, class UClass* AbilityClass, class UClass* AbilityComponent, class UObject* __WorldContext, class UAbilityComponent** OutComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "GetAbilityComponentByClass");

	Params::BPFL_VFXHelperFunctions_C_GetAbilityComponentByClass Parms{};

	Parms.Character = Character;
	Parms.AbilityClass = AbilityClass;
	Parms.AbilityComponent = AbilityComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutComponent != nullptr)
		*OutComponent = Parms.OutComponent;
}


// Function BPFL_VFXHelperFunctions.BPFL_VFXHelperFunctions_C.GetSceneComponentByName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class USceneComponent*>          Components                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class FName                             ComponentName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  SceneComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_VFXHelperFunctions_C::GetSceneComponentByName(TArray<class USceneComponent*>& Components, class FName ComponentName, class UObject* __WorldContext, class USceneComponent** SceneComponent, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_VFXHelperFunctions_C", "GetSceneComponentByName");

	Params::BPFL_VFXHelperFunctions_C_GetSceneComponentByName Parms{};

	Parms.Components = std::move(Components);
	Parms.ComponentName = ComponentName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Components = std::move(Parms.Components);

	if (SceneComponent != nullptr)
		*SceneComponent = Parms.SceneComponent;

	if (Found != nullptr)
		*Found = Parms.Found;
}

}

