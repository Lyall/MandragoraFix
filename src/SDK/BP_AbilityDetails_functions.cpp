#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AbilityDetails

#include "Basic.hpp"

#include "BP_AbilityDetails_classes.hpp"
#include "BP_AbilityDetails_parameters.hpp"


namespace SDK
{

// Function BP_AbilityDetails.BP_AbilityDetails_C.ExecuteUbergraph_BP_AbilityDetails
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AbilityDetails_C::ExecuteUbergraph_BP_AbilityDetails(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AbilityDetails_C", "ExecuteUbergraph_BP_AbilityDetails");

	Params::BP_AbilityDetails_C_ExecuteUbergraph_BP_AbilityDetails Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AbilityDetails.BP_AbilityDetails_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AbilityDetails_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AbilityDetails_C", "Tick");

	Params::BP_AbilityDetails_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AbilityDetails.BP_AbilityDetails_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AbilityDetails_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AbilityDetails_C", "PreConstruct");

	Params::BP_AbilityDetails_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AbilityDetails.BP_AbilityDetails_C.UpdateDetailsPanel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Name_0                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Description                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             CostText                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Requirements_0                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class UTexture2D*                       Icon_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           AbilityBaseClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InMaxUpgrades                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InLearnedUpgrades                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AbilityDetails_C::UpdateDetailsPanel(const class FText& Param_Name_0, const class FText& Description, const class FText& CostText, const class FText& Requirements_0, class UTexture2D* Icon_0, class UClass* AbilityBaseClass, int32 InMaxUpgrades, int32 InLearnedUpgrades)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AbilityDetails_C", "UpdateDetailsPanel");

	Params::BP_AbilityDetails_C_UpdateDetailsPanel Parms{};

	Parms.Param_Name_0 = std::move(Param_Name_0);
	Parms.Description = std::move(Description);
	Parms.CostText = std::move(CostText);
	Parms.Requirements_0 = std::move(Requirements_0);
	Parms.Icon_0 = Icon_0;
	Parms.AbilityBaseClass = AbilityBaseClass;
	Parms.InMaxUpgrades = InMaxUpgrades;
	Parms.InLearnedUpgrades = InLearnedUpgrades;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AbilityDetails.BP_AbilityDetails_C.FadeIn
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AbilityDetails_C::FadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AbilityDetails_C", "FadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AbilityDetails.BP_AbilityDetails_C.FadeOut
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AbilityDetails_C::FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AbilityDetails_C", "FadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AbilityDetails.BP_AbilityDetails_C.SetIconVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIconVisible                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AbilityDetails_C::SetIconVisible(bool InIconVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AbilityDetails_C", "SetIconVisible");

	Params::BP_AbilityDetails_C_SetIconVisible Parms{};

	Parms.InIconVisible = InIconVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AbilityDetails.BP_AbilityDetails_C.IsValidItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UManItemSlotBase*                 ManItemSlotBase                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_AbilityDetails_C::IsValidItem(class UManItemSlotBase* ManItemSlotBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AbilityDetails_C", "IsValidItem");

	Params::BP_AbilityDetails_C_IsValidItem Parms{};

	Parms.ManItemSlotBase = ManItemSlotBase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AbilityDetails.BP_AbilityDetails_C.SetUpgrades
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InMaxUpgrades                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InLearnedUpgrades                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AbilityDetails_C::SetUpgrades(int32 InMaxUpgrades, int32 InLearnedUpgrades)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AbilityDetails_C", "SetUpgrades");

	Params::BP_AbilityDetails_C_SetUpgrades Parms{};

	Parms.InMaxUpgrades = InMaxUpgrades;
	Parms.InLearnedUpgrades = InLearnedUpgrades;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AbilityDetails.BP_AbilityDetails_C.ToggleSmallScreen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsSmallScreen                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AbilityDetails_C::ToggleSmallScreen(bool InIsSmallScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AbilityDetails_C", "ToggleSmallScreen");

	Params::BP_AbilityDetails_C_ToggleSmallScreen Parms{};

	Parms.InIsSmallScreen = InIsSmallScreen;

	UObject::ProcessEvent(Func, &Parms);
}

}

