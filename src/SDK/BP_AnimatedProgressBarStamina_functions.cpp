#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AnimatedProgressBarStamina

#include "Basic.hpp"

#include "BP_AnimatedProgressBarStamina_classes.hpp"
#include "BP_AnimatedProgressBarStamina_parameters.hpp"


namespace SDK
{

// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.ExecuteUbergraph_BP_AnimatedProgressBarStamina
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimatedProgressBarStamina_C::ExecuteUbergraph_BP_AnimatedProgressBarStamina(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "ExecuteUbergraph_BP_AnimatedProgressBarStamina");

	Params::BP_AnimatedProgressBarStamina_C_ExecuteUbergraph_BP_AnimatedProgressBarStamina Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.OnSetPercentageText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             PercentageText_0                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_AnimatedProgressBarStamina_C::OnSetPercentageText(const class FText& PercentageText_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "OnSetPercentageText");

	Params::BP_AnimatedProgressBarStamina_C_OnSetPercentageText Parms{};

	Parms.PercentageText_0 = std::move(PercentageText_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.OnDisplayPercentageOnResourceBars
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInDisplayPercentageOnResourceBars                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBarStamina_C::OnDisplayPercentageOnResourceBars(bool bInDisplayPercentageOnResourceBars)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "OnDisplayPercentageOnResourceBars");

	Params::BP_AnimatedProgressBarStamina_C_OnDisplayPercentageOnResourceBars Parms{};

	Parms.bInDisplayPercentageOnResourceBars = bInDisplayPercentageOnResourceBars;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.OnSetReservedValue
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   InReservedValue                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimatedProgressBarStamina_C::OnSetReservedValue(float InReservedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "OnSetReservedValue");

	Params::BP_AnimatedProgressBarStamina_C_OnSetReservedValue Parms{};

	Parms.InReservedValue = InReservedValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimatedProgressBarStamina_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "Tick");

	Params::BP_AnimatedProgressBarStamina_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.OnSetNewValue
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHighlightChange                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bNeedExtraHighlight                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBarStamina_C::OnSetNewValue(float NewValue, bool bHighlightChange, bool bAnimate, bool bNeedExtraHighlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "OnSetNewValue");

	Params::BP_AnimatedProgressBarStamina_C_OnSetNewValue Parms{};

	Parms.NewValue = NewValue;
	Parms.bHighlightChange = bHighlightChange;
	Parms.bAnimate = bAnimate;
	Parms.bNeedExtraHighlight = bNeedExtraHighlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.OnSetNewMinMax
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NewMin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewMax                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LengthRatio                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBarStamina_C::OnSetNewMinMax(float NewMin, float NewMax, float LengthRatio, bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "OnSetNewMinMax");

	Params::BP_AnimatedProgressBarStamina_C_OnSetNewMinMax Parms{};

	Parms.NewMin = NewMin;
	Parms.NewMax = NewMax;
	Parms.LengthRatio = LengthRatio;
	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBarStamina_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "PreConstruct");

	Params::BP_AnimatedProgressBarStamina_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.SetNewValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HighlightChange_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Animate                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Restore                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBarStamina_C::SetNewValue(float NewValue, bool HighlightChange_0, bool Animate, bool Restore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "SetNewValue");

	Params::BP_AnimatedProgressBarStamina_C_SetNewValue Parms{};

	Parms.NewValue = NewValue;
	Parms.HighlightChange_0 = HighlightChange_0;
	Parms.Animate = Animate;
	Parms.Restore = Restore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.UpdateHighlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentPercent_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewPercent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimatedProgressBarStamina_C::UpdateHighlight(float CurrentPercent_0, float NewPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "UpdateHighlight");

	Params::BP_AnimatedProgressBarStamina_C_UpdateHighlight Parms{};

	Parms.CurrentPercent_0 = CurrentPercent_0;
	Parms.NewPercent = NewPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.TestWithRandom
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AnimatedProgressBarStamina_C::TestWithRandom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "TestWithRandom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.SetNewMinMax
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewMin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewMax                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LengthRatio                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Animate_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBarStamina_C::SetNewMinMax(float NewMin, float NewMax, float LengthRatio, bool Animate_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "SetNewMinMax");

	Params::BP_AnimatedProgressBarStamina_C_SetNewMinMax Parms{};

	Parms.NewMin = NewMin;
	Parms.NewMax = NewMax;
	Parms.LengthRatio = LengthRatio;
	Parms.Animate_ = Animate_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.AnimateBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimatedProgressBarStamina_C::AnimateBar(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "AnimateBar");

	Params::BP_AnimatedProgressBarStamina_C_AnimateBar Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.AnimateBarColor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AnimatedProgressBarStamina_C::AnimateBarColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "AnimateBarColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.SetZeroPoint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InMin                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InMax                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimatedProgressBarStamina_C::SetZeroPoint(float InMin, float InMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "SetZeroPoint");

	Params::BP_AnimatedProgressBarStamina_C_SetZeroPoint Parms{};

	Parms.InMin = InMin;
	Parms.InMax = InMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.SetBelowZero
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InBelowZero                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBarStamina_C::SetBelowZero(bool InBelowZero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "SetBelowZero");

	Params::BP_AnimatedProgressBarStamina_C_SetBelowZero Parms{};

	Parms.InBelowZero = InBelowZero;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.Resize Bar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LengthRatio                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Animate                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBarStamina_C::Resize_Bar(float Min, float Max, float LengthRatio, bool Animate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "Resize Bar");

	Params::BP_AnimatedProgressBarStamina_C_Resize_Bar Parms{};

	Parms.Min = Min;
	Parms.Max = Max;
	Parms.LengthRatio = LengthRatio;
	Parms.Animate = Animate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.SetReserve
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InReservedValue                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimatedProgressBarStamina_C::SetReserve(float InReservedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "SetReserve");

	Params::BP_AnimatedProgressBarStamina_C_SetReserve Parms{};

	Parms.InReservedValue = InReservedValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.RestoreHighlight
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AnimatedProgressBarStamina_C::RestoreHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "RestoreHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AnimatedProgressBarStamina.BP_AnimatedProgressBarStamina_C.OnPaint
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FPaintContext                    Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UBP_AnimatedProgressBarStamina_C::OnPaint(struct FPaintContext& Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBarStamina_C", "OnPaint");

	Params::BP_AnimatedProgressBarStamina_C_OnPaint Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);

	Context = std::move(Parms.Context);
}

}

