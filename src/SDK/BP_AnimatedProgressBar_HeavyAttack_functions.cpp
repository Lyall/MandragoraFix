#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AnimatedProgressBar_HeavyAttack

#include "Basic.hpp"

#include "BP_AnimatedProgressBar_HeavyAttack_classes.hpp"
#include "BP_AnimatedProgressBar_HeavyAttack_parameters.hpp"


namespace SDK
{

// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.ExecuteUbergraph_BP_AnimatedProgressBar_HeavyAttack
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimatedProgressBar_HeavyAttack_C::ExecuteUbergraph_BP_AnimatedProgressBar_HeavyAttack(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "ExecuteUbergraph_BP_AnimatedProgressBar_HeavyAttack");

	Params::BP_AnimatedProgressBar_HeavyAttack_C_ExecuteUbergraph_BP_AnimatedProgressBar_HeavyAttack Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimatedProgressBar_HeavyAttack_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "Tick");

	Params::BP_AnimatedProgressBar_HeavyAttack_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.OnSetNewValue
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHighlightChange                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bNeedExtraHighlight                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBar_HeavyAttack_C::OnSetNewValue(float NewValue, bool bHighlightChange, bool bAnimate, bool bNeedExtraHighlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "OnSetNewValue");

	Params::BP_AnimatedProgressBar_HeavyAttack_C_OnSetNewValue Parms{};

	Parms.NewValue = NewValue;
	Parms.bHighlightChange = bHighlightChange;
	Parms.bAnimate = bAnimate;
	Parms.bNeedExtraHighlight = bNeedExtraHighlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.OnSetNewMinMax
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NewMin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewMax                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LengthRatio                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBar_HeavyAttack_C::OnSetNewMinMax(float NewMin, float NewMax, float LengthRatio, bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "OnSetNewMinMax");

	Params::BP_AnimatedProgressBar_HeavyAttack_C_OnSetNewMinMax Parms{};

	Parms.NewMin = NewMin;
	Parms.NewMax = NewMax;
	Parms.LengthRatio = LengthRatio;
	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBar_HeavyAttack_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "PreConstruct");

	Params::BP_AnimatedProgressBar_HeavyAttack_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.SetNewValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HighlightChange_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Animate                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBar_HeavyAttack_C::SetNewValue(float NewValue, bool HighlightChange_0, bool Animate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "SetNewValue");

	Params::BP_AnimatedProgressBar_HeavyAttack_C_SetNewValue Parms{};

	Parms.NewValue = NewValue;
	Parms.HighlightChange_0 = HighlightChange_0;
	Parms.Animate = Animate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.UpdateHighlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentPercent_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewPercent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimatedProgressBar_HeavyAttack_C::UpdateHighlight(float CurrentPercent_0, float NewPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "UpdateHighlight");

	Params::BP_AnimatedProgressBar_HeavyAttack_C_UpdateHighlight Parms{};

	Parms.CurrentPercent_0 = CurrentPercent_0;
	Parms.NewPercent = NewPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.TestWithRandom
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AnimatedProgressBar_HeavyAttack_C::TestWithRandom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "TestWithRandom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.SetNewMinMax
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewMin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewMax                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Animate_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AnimatedProgressBar_HeavyAttack_C::SetNewMinMax(float NewMin, float NewMax, bool Animate_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "SetNewMinMax");

	Params::BP_AnimatedProgressBar_HeavyAttack_C_SetNewMinMax Parms{};

	Parms.NewMin = NewMin;
	Parms.NewMax = NewMax;
	Parms.Animate_ = Animate_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.AnimateBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimatedProgressBar_HeavyAttack_C::AnimateBar(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "AnimateBar");

	Params::BP_AnimatedProgressBar_HeavyAttack_C_AnimateBar Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.AnimateBarColor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AnimatedProgressBar_HeavyAttack_C::AnimateBarColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "AnimateBarColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.FadeIn
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AnimatedProgressBar_HeavyAttack_C::FadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "FadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.FadeOut
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AnimatedProgressBar_HeavyAttack_C::FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "FadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.SetMaxDamagePoint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InMaxDamagePoint                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimatedProgressBar_HeavyAttack_C::SetMaxDamagePoint(float InMaxDamagePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "SetMaxDamagePoint");

	Params::BP_AnimatedProgressBar_HeavyAttack_C_SetMaxDamagePoint Parms{};

	Parms.InMaxDamagePoint = InMaxDamagePoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimatedProgressBar_HeavyAttack.BP_AnimatedProgressBar_HeavyAttack_C.OnPaint
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FPaintContext                    Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UBP_AnimatedProgressBar_HeavyAttack_C::OnPaint(struct FPaintContext& Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimatedProgressBar_HeavyAttack_C", "OnPaint");

	Params::BP_AnimatedProgressBar_HeavyAttack_C_OnPaint Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);

	Context = std::move(Parms.Context);
}

}

