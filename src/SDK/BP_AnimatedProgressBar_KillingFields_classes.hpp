#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AnimatedProgressBar_KillingFields

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_AnimatedProgressBar_KillingFields.BP_AnimatedProgressBar_KillingFields_C
// 0x00A0 (0x0348 - 0x02A8)
class UBP_AnimatedProgressBar_KillingFields_C final : public UHUDAnimatedProgressBarUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ImmunityAnim;                                      // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOutAnim;                                       // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UProgressBar*                           Bar;                                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Immune;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Normal;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         CurrentPercent;                                    // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DisplayPercent;                                    // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinValue;                                          // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimSpeed;                                         // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentValue;                                      // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HighlightChange;                                   // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           HighlightColorDecrease;                            // 0x030C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               BarMaterial;                                       // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBelowZero;                                       // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LengthRatioValue;                                  // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(float NewWidth, bool Animate)> ResizeBarFrame;                                    // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Visible;                                           // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RequestAnimateBar;                                 // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsImmunityEnabled;                                 // 0x0342(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_AnimatedProgressBar_KillingFields(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnSetNewValue(float NewValue, bool bHighlightChange, bool bAnimate, bool bNeedExtraHighlight);
	void OnSetNewMinMax(float NewMin, float NewMax, float LengthRatio, bool bAnimate);
	void PreConstruct(bool IsDesignTime);
	void SetNewValue(float NewValue, bool HighlightChange_0, bool Animate);
	void UpdateHighlight(float CurrentPercent_0, float NewPercent);
	void TestWithRandom();
	void SetNewMinMax(float NewMin, float NewMax, bool Animate_);
	void AnimateBar(float InDeltaTime);
	void AnimateBarColor();
	void FadeIn();
	void FadeOut();
	void Toggle_Immunity(bool InImmunityEnabled);

	void OnPaint(struct FPaintContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AnimatedProgressBar_KillingFields_C">();
	}
	static class UBP_AnimatedProgressBar_KillingFields_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AnimatedProgressBar_KillingFields_C>();
	}
};
static_assert(alignof(UBP_AnimatedProgressBar_KillingFields_C) == 0x000008, "Wrong alignment on UBP_AnimatedProgressBar_KillingFields_C");
static_assert(sizeof(UBP_AnimatedProgressBar_KillingFields_C) == 0x000348, "Wrong size on UBP_AnimatedProgressBar_KillingFields_C");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, UberGraphFrame) == 0x0002A8, "Member 'UBP_AnimatedProgressBar_KillingFields_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, ImmunityAnim) == 0x0002B0, "Member 'UBP_AnimatedProgressBar_KillingFields_C::ImmunityAnim' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, FadeOutAnim) == 0x0002B8, "Member 'UBP_AnimatedProgressBar_KillingFields_C::FadeOutAnim' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, FadeInAnim) == 0x0002C0, "Member 'UBP_AnimatedProgressBar_KillingFields_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, Bar) == 0x0002C8, "Member 'UBP_AnimatedProgressBar_KillingFields_C::Bar' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, Frame_Immune) == 0x0002D0, "Member 'UBP_AnimatedProgressBar_KillingFields_C::Frame_Immune' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, Frame_Normal) == 0x0002D8, "Member 'UBP_AnimatedProgressBar_KillingFields_C::Frame_Normal' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, Overlay_0) == 0x0002E0, "Member 'UBP_AnimatedProgressBar_KillingFields_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, SizeBox) == 0x0002E8, "Member 'UBP_AnimatedProgressBar_KillingFields_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, CurrentPercent) == 0x0002F0, "Member 'UBP_AnimatedProgressBar_KillingFields_C::CurrentPercent' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, DisplayPercent) == 0x0002F4, "Member 'UBP_AnimatedProgressBar_KillingFields_C::DisplayPercent' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, MinValue) == 0x0002F8, "Member 'UBP_AnimatedProgressBar_KillingFields_C::MinValue' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, AnimSpeed) == 0x0002FC, "Member 'UBP_AnimatedProgressBar_KillingFields_C::AnimSpeed' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, MaxValue) == 0x000300, "Member 'UBP_AnimatedProgressBar_KillingFields_C::MaxValue' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, CurrentValue) == 0x000304, "Member 'UBP_AnimatedProgressBar_KillingFields_C::CurrentValue' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, HighlightChange) == 0x000308, "Member 'UBP_AnimatedProgressBar_KillingFields_C::HighlightChange' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, HighlightColorDecrease) == 0x00030C, "Member 'UBP_AnimatedProgressBar_KillingFields_C::HighlightColorDecrease' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, BarMaterial) == 0x000320, "Member 'UBP_AnimatedProgressBar_KillingFields_C::BarMaterial' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, IsBelowZero) == 0x000328, "Member 'UBP_AnimatedProgressBar_KillingFields_C::IsBelowZero' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, LengthRatioValue) == 0x00032C, "Member 'UBP_AnimatedProgressBar_KillingFields_C::LengthRatioValue' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, ResizeBarFrame) == 0x000330, "Member 'UBP_AnimatedProgressBar_KillingFields_C::ResizeBarFrame' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, Visible) == 0x000340, "Member 'UBP_AnimatedProgressBar_KillingFields_C::Visible' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, RequestAnimateBar) == 0x000341, "Member 'UBP_AnimatedProgressBar_KillingFields_C::RequestAnimateBar' has a wrong offset!");
static_assert(offsetof(UBP_AnimatedProgressBar_KillingFields_C, IsImmunityEnabled) == 0x000342, "Member 'UBP_AnimatedProgressBar_KillingFields_C::IsImmunityEnabled' has a wrong offset!");

}

