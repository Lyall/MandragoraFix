#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmorFragment

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_LootActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ArmorFragment.BP_ArmorFragment_C
// 0x0020 (0x0900 - 0x08E0)
class ABP_ArmorFragment_C final : public ABP_LootActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ArmorFragment_C;                 // 0x08E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x08E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Delta;                                             // 0x08F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ArmorFragment(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__BP_ArmorFragment_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ChooseLootActorVFX();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ArmorFragment_C">();
	}
	static class ABP_ArmorFragment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ArmorFragment_C>();
	}
};
static_assert(alignof(ABP_ArmorFragment_C) == 0x000008, "Wrong alignment on ABP_ArmorFragment_C");
static_assert(sizeof(ABP_ArmorFragment_C) == 0x000900, "Wrong size on ABP_ArmorFragment_C");
static_assert(offsetof(ABP_ArmorFragment_C, UberGraphFrame_BP_ArmorFragment_C) == 0x0008E0, "Member 'ABP_ArmorFragment_C::UberGraphFrame_BP_ArmorFragment_C' has a wrong offset!");
static_assert(offsetof(ABP_ArmorFragment_C, Sphere) == 0x0008E8, "Member 'ABP_ArmorFragment_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_ArmorFragment_C, Delta) == 0x0008F0, "Member 'ABP_ArmorFragment_C::Delta' has a wrong offset!");

}

