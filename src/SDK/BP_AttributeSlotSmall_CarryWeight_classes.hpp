#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AttributeSlotSmall_CarryWeight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_AttributeSlotSmall_CarryWeight.BP_AttributeSlotSmall_CarryWeight_C
// 0x0040 (0x0328 - 0x02E8)
class UBP_AttributeSlotSmall_CarryWeight_C final : public UAttributeSlotUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                CaptionFrame;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentValueCaption;                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Highlight;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxValueCaption;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PercentCaption;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      RichCaption;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCarryWeightValue;                           // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AttributeSlotSmall_CarryWeight(int32 EntryPoint);
	void OnSetCurrentValue(float Value);
	void PreConstruct(bool IsDesignTime);
	void SetCurrentCarryWeightValue(float Value);
	void SetMaxValue(float Value);
	void SetPercent();
	void Toggle_Highlight(bool InIsHighlighted);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AttributeSlotSmall_CarryWeight_C">();
	}
	static class UBP_AttributeSlotSmall_CarryWeight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AttributeSlotSmall_CarryWeight_C>();
	}
};
static_assert(alignof(UBP_AttributeSlotSmall_CarryWeight_C) == 0x000008, "Wrong alignment on UBP_AttributeSlotSmall_CarryWeight_C");
static_assert(sizeof(UBP_AttributeSlotSmall_CarryWeight_C) == 0x000328, "Wrong size on UBP_AttributeSlotSmall_CarryWeight_C");
static_assert(offsetof(UBP_AttributeSlotSmall_CarryWeight_C, UberGraphFrame) == 0x0002E8, "Member 'UBP_AttributeSlotSmall_CarryWeight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AttributeSlotSmall_CarryWeight_C, CaptionFrame) == 0x0002F0, "Member 'UBP_AttributeSlotSmall_CarryWeight_C::CaptionFrame' has a wrong offset!");
static_assert(offsetof(UBP_AttributeSlotSmall_CarryWeight_C, CurrentValueCaption) == 0x0002F8, "Member 'UBP_AttributeSlotSmall_CarryWeight_C::CurrentValueCaption' has a wrong offset!");
static_assert(offsetof(UBP_AttributeSlotSmall_CarryWeight_C, Highlight) == 0x000300, "Member 'UBP_AttributeSlotSmall_CarryWeight_C::Highlight' has a wrong offset!");
static_assert(offsetof(UBP_AttributeSlotSmall_CarryWeight_C, MaxValueCaption) == 0x000308, "Member 'UBP_AttributeSlotSmall_CarryWeight_C::MaxValueCaption' has a wrong offset!");
static_assert(offsetof(UBP_AttributeSlotSmall_CarryWeight_C, PercentCaption) == 0x000310, "Member 'UBP_AttributeSlotSmall_CarryWeight_C::PercentCaption' has a wrong offset!");
static_assert(offsetof(UBP_AttributeSlotSmall_CarryWeight_C, RichCaption) == 0x000318, "Member 'UBP_AttributeSlotSmall_CarryWeight_C::RichCaption' has a wrong offset!");
static_assert(offsetof(UBP_AttributeSlotSmall_CarryWeight_C, MaxValue) == 0x000320, "Member 'UBP_AttributeSlotSmall_CarryWeight_C::MaxValue' has a wrong offset!");
static_assert(offsetof(UBP_AttributeSlotSmall_CarryWeight_C, CurrentCarryWeightValue) == 0x000324, "Member 'UBP_AttributeSlotSmall_CarryWeight_C::CurrentCarryWeightValue' has a wrong offset!");

}

