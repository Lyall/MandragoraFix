#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BerserkerRage_PassiveSkill

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_BerserkerRage_PassiveSkill.BP_BerserkerRage_PassiveSkill_C.ExecuteUbergraph_BP_BerserkerRage_PassiveSkill
// 0x0050 (0x0050 - 0x0000)
struct BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float preHealth, float postHealth)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_preHealth;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_postHealth;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttributeContainer*                    CallFunc_GetAttributeContainer_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityComponent*                      CallFunc_BPGetComponentByClass_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UModifyAttributeAbilityComponent*       K2Node_DynamicCast_AsModify_Attribute_Ability_Component; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill) == 0x000008, "Wrong alignment on BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill");
static_assert(sizeof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill) == 0x000050, "Wrong size on BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill, EntryPoint) == 0x000000, "Member 'BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill, CallFunc_GetAbilityController_ReturnValue) == 0x000018, "Member 'BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill, K2Node_CustomEvent_preHealth) == 0x000020, "Member 'BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill::K2Node_CustomEvent_preHealth' has a wrong offset!");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill, K2Node_CustomEvent_postHealth) == 0x000024, "Member 'BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill::K2Node_CustomEvent_postHealth' has a wrong offset!");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill, CallFunc_GetAttributeContainer_ReturnValue) == 0x000028, "Member 'BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill::CallFunc_GetAttributeContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill, CallFunc_BPGetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill::CallFunc_BPGetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill, K2Node_DynamicCast_AsModify_Attribute_Ability_Component) == 0x000038, "Member 'BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill::K2Node_DynamicCast_AsModify_Attribute_Ability_Component' has a wrong offset!");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_BerserkerRage_PassiveSkill_C_ExecuteUbergraph_BP_BerserkerRage_PassiveSkill::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BerserkerRage_PassiveSkill.BP_BerserkerRage_PassiveSkill_C.HealthChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_BerserkerRage_PassiveSkill_C_HealthChanged final
{
public:
	float                                         preHealth;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         postHealth;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BerserkerRage_PassiveSkill_C_HealthChanged) == 0x000004, "Wrong alignment on BP_BerserkerRage_PassiveSkill_C_HealthChanged");
static_assert(sizeof(BP_BerserkerRage_PassiveSkill_C_HealthChanged) == 0x000008, "Wrong size on BP_BerserkerRage_PassiveSkill_C_HealthChanged");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_HealthChanged, preHealth) == 0x000000, "Member 'BP_BerserkerRage_PassiveSkill_C_HealthChanged::preHealth' has a wrong offset!");
static_assert(offsetof(BP_BerserkerRage_PassiveSkill_C_HealthChanged, postHealth) == 0x000004, "Member 'BP_BerserkerRage_PassiveSkill_C_HealthChanged::postHealth' has a wrong offset!");

}

