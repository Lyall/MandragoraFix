#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BestiaryUpdatedNotification

#include "Basic.hpp"

#include "BP_BestiaryUpdatedNotification_classes.hpp"
#include "BP_BestiaryUpdatedNotification_parameters.hpp"


namespace SDK
{

// Function BP_BestiaryUpdatedNotification.BP_BestiaryUpdatedNotification_C.ExecuteUbergraph_BP_BestiaryUpdatedNotification
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BestiaryUpdatedNotification_C::ExecuteUbergraph_BP_BestiaryUpdatedNotification(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BestiaryUpdatedNotification_C", "ExecuteUbergraph_BP_BestiaryUpdatedNotification");

	Params::BP_BestiaryUpdatedNotification_C_ExecuteUbergraph_BP_BestiaryUpdatedNotification Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BestiaryUpdatedNotification.BP_BestiaryUpdatedNotification_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_BestiaryUpdatedNotification_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BestiaryUpdatedNotification_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BestiaryUpdatedNotification.BP_BestiaryUpdatedNotification_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BestiaryUpdatedNotification_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BestiaryUpdatedNotification_C", "PreConstruct");

	Params::BP_BestiaryUpdatedNotification_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BestiaryUpdatedNotification.BP_BestiaryUpdatedNotification_C.ShowNotification
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Timeout                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BestiaryUpdatedNotification_C::ShowNotification(float Timeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BestiaryUpdatedNotification_C", "ShowNotification");

	Params::BP_BestiaryUpdatedNotification_C_ShowNotification Parms{};

	Parms.Timeout = Timeout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BestiaryUpdatedNotification.BP_BestiaryUpdatedNotification_C.HideNotification
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BestiaryUpdatedNotification_C::HideNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BestiaryUpdatedNotification_C", "HideNotification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BestiaryUpdatedNotification.BP_BestiaryUpdatedNotification_C.ToggleSmallScreen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsSmallScreen                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BestiaryUpdatedNotification_C::ToggleSmallScreen(bool InIsSmallScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BestiaryUpdatedNotification_C", "ToggleSmallScreen");

	Params::BP_BestiaryUpdatedNotification_C_ToggleSmallScreen Parms{};

	Parms.InIsSmallScreen = InIsSmallScreen;

	UObject::ProcessEvent(Func, &Parms);
}

}

