#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BlackSmithNPC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_VendorActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BlackSmithNPC.BP_BlackSmithNPC_C
// 0x0068 (0x0908 - 0x08A0)
class ABP_BlackSmithNPC_C final : public ABP_VendorActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BlackSmithNPC_C;                 // 0x08A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x08A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           AkAnim;                                            // 0x08B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGroomComponent*                        Groom2;                                            // 0x08B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGroomComponent*                        Groom;                                             // 0x08C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CameraSphere;                                      // 0x08C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMiniMapActorComponent*                 MiniMapActor;                                      // 0x08D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTriggerBoxComponent*                   TriggerBox;                                        // 0x08D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Mount;                                          // 0x08E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SparkEmitterPositionRef;                           // 0x08E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Blacksmith;                                     // 0x08F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractPrompWidgetComponent_C*     BP_InteractPrompWidgetComponent;                   // 0x08F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstTimeInCaravan;                                // 0x0900(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void BPShowMiniMapIcon(bool* Result);
	void OnVfxEvent(class FName VfxEventType);
	void ReceiveBeginPlay();
	void VisualVolumeEnter(class ALevelVisualVolume* Volume);
	void ExecuteUbergraph_BP_BlackSmithNPC(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BlackSmithNPC_C">();
	}
	static class ABP_BlackSmithNPC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BlackSmithNPC_C>();
	}
};
static_assert(alignof(ABP_BlackSmithNPC_C) == 0x000008, "Wrong alignment on ABP_BlackSmithNPC_C");
static_assert(sizeof(ABP_BlackSmithNPC_C) == 0x000908, "Wrong size on ABP_BlackSmithNPC_C");
static_assert(offsetof(ABP_BlackSmithNPC_C, UberGraphFrame_BP_BlackSmithNPC_C) == 0x0008A0, "Member 'ABP_BlackSmithNPC_C::UberGraphFrame_BP_BlackSmithNPC_C' has a wrong offset!");
static_assert(offsetof(ABP_BlackSmithNPC_C, Ak) == 0x0008A8, "Member 'ABP_BlackSmithNPC_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_BlackSmithNPC_C, AkAnim) == 0x0008B0, "Member 'ABP_BlackSmithNPC_C::AkAnim' has a wrong offset!");
static_assert(offsetof(ABP_BlackSmithNPC_C, Groom2) == 0x0008B8, "Member 'ABP_BlackSmithNPC_C::Groom2' has a wrong offset!");
static_assert(offsetof(ABP_BlackSmithNPC_C, Groom) == 0x0008C0, "Member 'ABP_BlackSmithNPC_C::Groom' has a wrong offset!");
static_assert(offsetof(ABP_BlackSmithNPC_C, CameraSphere) == 0x0008C8, "Member 'ABP_BlackSmithNPC_C::CameraSphere' has a wrong offset!");
static_assert(offsetof(ABP_BlackSmithNPC_C, MiniMapActor) == 0x0008D0, "Member 'ABP_BlackSmithNPC_C::MiniMapActor' has a wrong offset!");
static_assert(offsetof(ABP_BlackSmithNPC_C, TriggerBox) == 0x0008D8, "Member 'ABP_BlackSmithNPC_C::TriggerBox' has a wrong offset!");
static_assert(offsetof(ABP_BlackSmithNPC_C, SK_Mount) == 0x0008E0, "Member 'ABP_BlackSmithNPC_C::SK_Mount' has a wrong offset!");
static_assert(offsetof(ABP_BlackSmithNPC_C, SparkEmitterPositionRef) == 0x0008E8, "Member 'ABP_BlackSmithNPC_C::SparkEmitterPositionRef' has a wrong offset!");
static_assert(offsetof(ABP_BlackSmithNPC_C, SK_Blacksmith) == 0x0008F0, "Member 'ABP_BlackSmithNPC_C::SK_Blacksmith' has a wrong offset!");
static_assert(offsetof(ABP_BlackSmithNPC_C, BP_InteractPrompWidgetComponent) == 0x0008F8, "Member 'ABP_BlackSmithNPC_C::BP_InteractPrompWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_BlackSmithNPC_C, FirstTimeInCaravan) == 0x000900, "Member 'ABP_BlackSmithNPC_C::FirstTimeInCaravan' has a wrong offset!");

}

