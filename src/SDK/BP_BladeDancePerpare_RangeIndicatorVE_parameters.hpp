#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BladeDancePerpare_RangeIndicatorVE

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BladeDancePerpare_RangeIndicatorVE.BP_BladeDancePerpare_RangeIndicatorVE_C.ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE
// 0x0150 (0x0150 - 0x0000)
struct BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBase*                         K2Node_DynamicCast_AsCharacter_Base;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UAbilityBase*                           CallFunc_BPGetAbilityByClass_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBladeDanceAbility*                     K2Node_DynamicCast_AsBlade_Dance_Ability;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE) == 0x000008, "Wrong alignment on BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE");
static_assert(sizeof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE) == 0x000150, "Wrong size on BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE");
static_assert(offsetof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE, EntryPoint) == 0x000000, "Member 'BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE, CallFunc_GetAttachParentActor_ReturnValue) == 0x000008, "Member 'BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE, K2Node_DynamicCast_AsCharacter_Base) == 0x000010, "Member 'BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE::K2Node_DynamicCast_AsCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE, CallFunc_GetAbilityController_ReturnValue) == 0x000020, "Member 'BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000028, "Member 'BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE, CallFunc_BPGetAbilityByClass_ReturnValue) == 0x0000B0, "Member 'BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE::CallFunc_BPGetAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE, K2Node_DynamicCast_AsBlade_Dance_Ability) == 0x0000B8, "Member 'BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE::K2Node_DynamicCast_AsBlade_Dance_Ability' has a wrong offset!");
static_assert(offsetof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000C1, "Member 'BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000C8, "Member 'BP_BladeDancePerpare_RangeIndicatorVE_C_ExecuteUbergraph_BP_BladeDancePerpare_RangeIndicatorVE::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

}

