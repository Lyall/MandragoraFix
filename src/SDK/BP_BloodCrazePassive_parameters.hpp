#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BloodCrazePassive

#include "Basic.hpp"

#include "man_structs.hpp"


namespace SDK::Params
{

// Function BP_BloodCrazePassive.BP_BloodCrazePassive_C.ExecuteUbergraph_BP_BloodCrazePassive
// 0x01A0 (0x01A0 - 0x0000)
struct BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAbilityController* Source, class UAbilityController* Bullet, class UAbilityController* Target, class UAbilityBase* Ability, float effectiveDamage, const struct FDamageValue& DamageValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     K2Node_CustomEvent_Source;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     K2Node_CustomEvent_Bullet;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     K2Node_CustomEvent_Target;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           K2Node_CustomEvent_Ability;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_effectiveDamage;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageValue                           K2Node_CustomEvent_DamageValue;                    // 0x0048(0x0138)(ContainsInstancedReference)
	class ACharacterBase*                         CallFunc_GetCharacter_ReturnValue;                 // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue_1;       // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTime;                            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive) == 0x000008, "Wrong alignment on BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive");
static_assert(sizeof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive) == 0x0001A0, "Wrong size on BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, EntryPoint) == 0x000000, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, CallFunc_GetAbilityController_ReturnValue) == 0x000018, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, K2Node_CustomEvent_Source) == 0x000020, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::K2Node_CustomEvent_Source' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, K2Node_CustomEvent_Bullet) == 0x000028, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::K2Node_CustomEvent_Bullet' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, K2Node_CustomEvent_Target) == 0x000030, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, K2Node_CustomEvent_Ability) == 0x000038, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::K2Node_CustomEvent_Ability' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, K2Node_CustomEvent_effectiveDamage) == 0x000040, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::K2Node_CustomEvent_effectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, K2Node_CustomEvent_DamageValue) == 0x000048, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::K2Node_CustomEvent_DamageValue' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, CallFunc_GetCharacter_ReturnValue) == 0x000180, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, CallFunc_GetAbilityController_ReturnValue_1) == 0x000188, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::CallFunc_GetAbilityController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000190, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000191, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000192, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, CallFunc_BooleanAND_ReturnValue) == 0x000193, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, K2Node_Event_DeltaTime) == 0x000194, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000198, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, CallFunc_Less_FloatFloat_ReturnValue) == 0x00019C, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00019D, "Member 'BP_BloodCrazePassive_C_ExecuteUbergraph_BP_BloodCrazePassive::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_BloodCrazePassive.BP_BloodCrazePassive_C.BPOnTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BloodCrazePassive_C_BPOnTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BloodCrazePassive_C_BPOnTick) == 0x000004, "Wrong alignment on BP_BloodCrazePassive_C_BPOnTick");
static_assert(sizeof(BP_BloodCrazePassive_C_BPOnTick) == 0x000004, "Wrong size on BP_BloodCrazePassive_C_BPOnTick");
static_assert(offsetof(BP_BloodCrazePassive_C_BPOnTick, DeltaTime) == 0x000000, "Member 'BP_BloodCrazePassive_C_BPOnTick::DeltaTime' has a wrong offset!");

// Function BP_BloodCrazePassive.BP_BloodCrazePassive_C.BPDamageCausedEvent_Event_0
// 0x0160 (0x0160 - 0x0000)
struct BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0 final
{
public:
	class UAbilityController*                     Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     Bullet;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     Target_0;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           Ability;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         effectiveDamage;                                   // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageValue                           DamageValue;                                       // 0x0028(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0) == 0x000008, "Wrong alignment on BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0");
static_assert(sizeof(BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0) == 0x000160, "Wrong size on BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0");
static_assert(offsetof(BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0, Source) == 0x000000, "Member 'BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0::Source' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0, Bullet) == 0x000008, "Member 'BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0::Bullet' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0, Target_0) == 0x000010, "Member 'BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0::Target_0' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0, Ability) == 0x000018, "Member 'BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0::Ability' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0, effectiveDamage) == 0x000020, "Member 'BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0::effectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0, DamageValue) == 0x000028, "Member 'BP_BloodCrazePassive_C_BPDamageCausedEvent_Event_0::DamageValue' has a wrong offset!");

}

