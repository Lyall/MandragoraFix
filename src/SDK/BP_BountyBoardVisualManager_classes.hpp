#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BountyBoardVisualManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BountyBoardVisualManager.BP_BountyBoardVisualManager_C
// 0x0058 (0x0838 - 0x07E0)
class ABP_BountyBoardVisualManager_C final : public ABountyBoardVisualManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_InteractPrompWidgetComponent_C*     BP_InteractPrompWidgetComponent;                   // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTriggerBoxComponent*                   TriggerBox;                                        // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Checked;                                           // 0x0800(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_801[0x7];                                      // 0x0801(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AdventurerNPC_C*                    Gerald;                                            // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Key;                                               // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Arrive;                                            // 0x0818(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          Quest;                                             // 0x0819(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81A[0x6];                                      // 0x081A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Falcon_C*                           Falcon;                                            // 0x0820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GeraldCheck;                                       // 0x0828(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_829[0x3];                                      // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   State;                                             // 0x082C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalPos;                                          // 0x0834(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CaravanCheck();
	void CheckPointTravel(class UCheckpointData* CheckpointData);
	void HeroPreTravel(class ALevelVisualVolume* SourceLevelVisualVolume, class ALevelVisualVolume* TargetLevelVisualVolume, const struct FVector& NewPos);
	void BPPostBeginPlay();
	void LevelCheck();
	void GlobalChecks();
	void Check(class FName EntryKey);
	void QuestAdded(class UManQuest* Quest_0, float Timeout, float QuestPopupShowingDelayTime);
	void QuestBind();
	void OffSceen();
	void Landing();
	void FlyAway();
	void CustomEvent_0(class UManUserWidgetBase* ManUserWidgetBase);
	void NoNewQuestAvailable();
	void NewQuestAvailable();
	void StopAnims();
	void ExecuteUbergraph_BP_BountyBoardVisualManager(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BountyBoardVisualManager_C">();
	}
	static class ABP_BountyBoardVisualManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BountyBoardVisualManager_C>();
	}
};
static_assert(alignof(ABP_BountyBoardVisualManager_C) == 0x000008, "Wrong alignment on ABP_BountyBoardVisualManager_C");
static_assert(sizeof(ABP_BountyBoardVisualManager_C) == 0x000838, "Wrong size on ABP_BountyBoardVisualManager_C");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, UberGraphFrame) == 0x0007E0, "Member 'ABP_BountyBoardVisualManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, BP_InteractPrompWidgetComponent) == 0x0007E8, "Member 'ABP_BountyBoardVisualManager_C::BP_InteractPrompWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, TriggerBox) == 0x0007F0, "Member 'ABP_BountyBoardVisualManager_C::TriggerBox' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, DefaultSceneRoot) == 0x0007F8, "Member 'ABP_BountyBoardVisualManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, Checked) == 0x000800, "Member 'ABP_BountyBoardVisualManager_C::Checked' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, Gerald) == 0x000808, "Member 'ABP_BountyBoardVisualManager_C::Gerald' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, Key) == 0x000810, "Member 'ABP_BountyBoardVisualManager_C::Key' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, Arrive) == 0x000818, "Member 'ABP_BountyBoardVisualManager_C::Arrive' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, Quest) == 0x000819, "Member 'ABP_BountyBoardVisualManager_C::Quest' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, Falcon) == 0x000820, "Member 'ABP_BountyBoardVisualManager_C::Falcon' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, GeraldCheck) == 0x000828, "Member 'ABP_BountyBoardVisualManager_C::GeraldCheck' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, State) == 0x00082C, "Member 'ABP_BountyBoardVisualManager_C::State' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoardVisualManager_C, LocalPos) == 0x000834, "Member 'ABP_BountyBoardVisualManager_C::LocalPos' has a wrong offset!");

}

