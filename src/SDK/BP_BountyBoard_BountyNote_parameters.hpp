#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BountyBoard_BountyNote

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_BountyBoard_BountyNote.BP_BountyBoard_BountyNote_C.ExecuteUbergraph_BP_BountyBoard_BountyNote
// 0x0060 (0x0060 - 0x0000)
struct BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UManUserWidgetBase*                     CallFunc_GetManUserWidgetBase_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBountyBoardUserWidget*                 K2Node_DynamicCast_AsBounty_Board_User_Widget;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate_1;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInAccepted;                          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInCompleted;                         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInPlayCompleteAnim;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote) == 0x000008, "Wrong alignment on BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote");
static_assert(sizeof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote) == 0x000060, "Wrong size on BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, EntryPoint) == 0x000000, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, CallFunc_GetManUserWidgetBase_ReturnValue) == 0x000008, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::CallFunc_GetManUserWidgetBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, Temp_bool_Variable) == 0x000010, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, K2Node_DynamicCast_AsBounty_Board_User_Widget) == 0x000018, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::K2Node_DynamicCast_AsBounty_Board_User_Widget' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, Temp_float_Variable) == 0x000024, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, Temp_bool_Variable_1) == 0x000028, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, Temp_float_Variable_1) == 0x00002C, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, K2Node_Event_IsDesignTime) == 0x000030, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, K2Node_Event_bAnimate_1) == 0x000031, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::K2Node_Event_bAnimate_1' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, K2Node_Event_bAnimate) == 0x000032, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, CallFunc_GetEndTime_ReturnValue) == 0x000034, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, CallFunc_GetEndTime_ReturnValue_1) == 0x00003C, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, K2Node_Select_Default) == 0x000040, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, K2Node_Select_Default_1) == 0x000044, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, CallFunc_PlayAnimation_ReturnValue_1) == 0x000050, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, K2Node_Event_bInAccepted) == 0x000058, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::K2Node_Event_bInAccepted' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, K2Node_Event_bInCompleted) == 0x000059, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::K2Node_Event_bInCompleted' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote, K2Node_Event_bInPlayCompleteAnim) == 0x00005A, "Member 'BP_BountyBoard_BountyNote_C_ExecuteUbergraph_BP_BountyBoard_BountyNote::K2Node_Event_bInPlayCompleteAnim' has a wrong offset!");

// Function BP_BountyBoard_BountyNote.BP_BountyBoard_BountyNote_C.OnSetCompleted
// 0x0002 (0x0002 - 0x0000)
struct BP_BountyBoard_BountyNote_C_OnSetCompleted final
{
public:
	bool                                          bInCompleted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInPlayCompleteAnim;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BountyBoard_BountyNote_C_OnSetCompleted) == 0x000001, "Wrong alignment on BP_BountyBoard_BountyNote_C_OnSetCompleted");
static_assert(sizeof(BP_BountyBoard_BountyNote_C_OnSetCompleted) == 0x000002, "Wrong size on BP_BountyBoard_BountyNote_C_OnSetCompleted");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_OnSetCompleted, bInCompleted) == 0x000000, "Member 'BP_BountyBoard_BountyNote_C_OnSetCompleted::bInCompleted' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_OnSetCompleted, bInPlayCompleteAnim) == 0x000001, "Member 'BP_BountyBoard_BountyNote_C_OnSetCompleted::bInPlayCompleteAnim' has a wrong offset!");

// Function BP_BountyBoard_BountyNote.BP_BountyBoard_BountyNote_C.OnSetAccepted
// 0x0001 (0x0001 - 0x0000)
struct BP_BountyBoard_BountyNote_C_OnSetAccepted final
{
public:
	bool                                          bInAccepted;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BountyBoard_BountyNote_C_OnSetAccepted) == 0x000001, "Wrong alignment on BP_BountyBoard_BountyNote_C_OnSetAccepted");
static_assert(sizeof(BP_BountyBoard_BountyNote_C_OnSetAccepted) == 0x000001, "Wrong size on BP_BountyBoard_BountyNote_C_OnSetAccepted");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_OnSetAccepted, bInAccepted) == 0x000000, "Member 'BP_BountyBoard_BountyNote_C_OnSetAccepted::bInAccepted' has a wrong offset!");

// Function BP_BountyBoard_BountyNote.BP_BountyBoard_BountyNote_C.OnUnfocused
// 0x0001 (0x0001 - 0x0000)
struct BP_BountyBoard_BountyNote_C_OnUnfocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BountyBoard_BountyNote_C_OnUnfocused) == 0x000001, "Wrong alignment on BP_BountyBoard_BountyNote_C_OnUnfocused");
static_assert(sizeof(BP_BountyBoard_BountyNote_C_OnUnfocused) == 0x000001, "Wrong size on BP_BountyBoard_BountyNote_C_OnUnfocused");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_OnUnfocused, bAnimate) == 0x000000, "Member 'BP_BountyBoard_BountyNote_C_OnUnfocused::bAnimate' has a wrong offset!");

// Function BP_BountyBoard_BountyNote.BP_BountyBoard_BountyNote_C.OnFocused
// 0x0001 (0x0001 - 0x0000)
struct BP_BountyBoard_BountyNote_C_OnFocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BountyBoard_BountyNote_C_OnFocused) == 0x000001, "Wrong alignment on BP_BountyBoard_BountyNote_C_OnFocused");
static_assert(sizeof(BP_BountyBoard_BountyNote_C_OnFocused) == 0x000001, "Wrong size on BP_BountyBoard_BountyNote_C_OnFocused");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_OnFocused, bAnimate) == 0x000000, "Member 'BP_BountyBoard_BountyNote_C_OnFocused::bAnimate' has a wrong offset!");

// Function BP_BountyBoard_BountyNote.BP_BountyBoard_BountyNote_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_BountyBoard_BountyNote_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BountyBoard_BountyNote_C_PreConstruct) == 0x000001, "Wrong alignment on BP_BountyBoard_BountyNote_C_PreConstruct");
static_assert(sizeof(BP_BountyBoard_BountyNote_C_PreConstruct) == 0x000001, "Wrong size on BP_BountyBoard_BountyNote_C_PreConstruct");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_BountyBoard_BountyNote_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_BountyBoard_BountyNote.BP_BountyBoard_BountyNote_C.SetTextures
// 0x0040 (0x0040 - 0x0000)
struct BP_BountyBoard_BountyNote_C_SetTextures final
{
public:
	class UImage*                                 NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BountyBoard_BountyNote_C_SetTextures) == 0x000008, "Wrong alignment on BP_BountyBoard_BountyNote_C_SetTextures");
static_assert(sizeof(BP_BountyBoard_BountyNote_C_SetTextures) == 0x000040, "Wrong size on BP_BountyBoard_BountyNote_C_SetTextures");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, NewLocalVar_0) == 0x000000, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, Temp_bool_Variable) == 0x000008, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, Temp_bool_Variable_1) == 0x000009, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, Temp_byte_Variable) == 0x00000A, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, Temp_byte_Variable_1) == 0x00000B, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, Temp_bool_Variable_2) == 0x00000C, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, Temp_bool_Variable_3) == 0x00000D, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000018, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, K2Node_Select_Default) == 0x000020, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, K2Node_Select_Default_1) == 0x000028, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, K2Node_Select_Default_2) == 0x000030, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetTextures, K2Node_Select_Default_3) == 0x000038, "Member 'BP_BountyBoard_BountyNote_C_SetTextures::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_BountyBoard_BountyNote.BP_BountyBoard_BountyNote_C.SetAccepted
// 0x0014 (0x0014 - 0x0000)
struct BP_BountyBoard_BountyNote_C_SetAccepted final
{
public:
	bool                                          InAccepted;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BountyBoard_BountyNote_C_SetAccepted) == 0x000004, "Wrong alignment on BP_BountyBoard_BountyNote_C_SetAccepted");
static_assert(sizeof(BP_BountyBoard_BountyNote_C_SetAccepted) == 0x000014, "Wrong size on BP_BountyBoard_BountyNote_C_SetAccepted");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetAccepted, InAccepted) == 0x000000, "Member 'BP_BountyBoard_BountyNote_C_SetAccepted::InAccepted' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetAccepted, Temp_bool_Variable) == 0x000001, "Member 'BP_BountyBoard_BountyNote_C_SetAccepted::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetAccepted, Temp_float_Variable) == 0x000004, "Member 'BP_BountyBoard_BountyNote_C_SetAccepted::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetAccepted, Temp_float_Variable_1) == 0x000008, "Member 'BP_BountyBoard_BountyNote_C_SetAccepted::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetAccepted, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_BountyBoard_BountyNote_C_SetAccepted::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetAccepted, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'BP_BountyBoard_BountyNote_C_SetAccepted::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_SetAccepted, K2Node_Select_Default) == 0x000010, "Member 'BP_BountyBoard_BountyNote_C_SetAccepted::K2Node_Select_Default' has a wrong offset!");

// Function BP_BountyBoard_BountyNote.BP_BountyBoard_BountyNote_C.PlayCompletedAnim
// 0x0018 (0x0018 - 0x0000)
struct BP_BountyBoard_BountyNote_C_PlayCompletedAnim final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BountyBoard_BountyNote_C_PlayCompletedAnim) == 0x000008, "Wrong alignment on BP_BountyBoard_BountyNote_C_PlayCompletedAnim");
static_assert(sizeof(BP_BountyBoard_BountyNote_C_PlayCompletedAnim) == 0x000018, "Wrong size on BP_BountyBoard_BountyNote_C_PlayCompletedAnim");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_PlayCompletedAnim, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_BountyBoard_BountyNote_C_PlayCompletedAnim::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_PlayCompletedAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_BountyBoard_BountyNote_C_PlayCompletedAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_BountyBoard_BountyNote.BP_BountyBoard_BountyNote_C.CompleteAnimFinished
// 0x0018 (0x0018 - 0x0000)
struct BP_BountyBoard_BountyNote_C_CompleteAnimFinished final
{
public:
	class UManUserWidgetBase*                     CallFunc_GetManUserWidgetBase_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBountyBoardUserWidget*                 K2Node_DynamicCast_AsBounty_Board_User_Widget;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BountyBoard_BountyNote_C_CompleteAnimFinished) == 0x000008, "Wrong alignment on BP_BountyBoard_BountyNote_C_CompleteAnimFinished");
static_assert(sizeof(BP_BountyBoard_BountyNote_C_CompleteAnimFinished) == 0x000018, "Wrong size on BP_BountyBoard_BountyNote_C_CompleteAnimFinished");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_CompleteAnimFinished, CallFunc_GetManUserWidgetBase_ReturnValue) == 0x000000, "Member 'BP_BountyBoard_BountyNote_C_CompleteAnimFinished::CallFunc_GetManUserWidgetBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_CompleteAnimFinished, K2Node_DynamicCast_AsBounty_Board_User_Widget) == 0x000008, "Member 'BP_BountyBoard_BountyNote_C_CompleteAnimFinished::K2Node_DynamicCast_AsBounty_Board_User_Widget' has a wrong offset!");
static_assert(offsetof(BP_BountyBoard_BountyNote_C_CompleteAnimFinished, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_BountyBoard_BountyNote_C_CompleteAnimFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

