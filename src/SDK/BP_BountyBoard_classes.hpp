#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BountyBoard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_BountyBoard.BP_BountyBoard_C
// 0x00C8 (0x0598 - 0x04D0)
class UBP_BountyBoard_C final : public UBountyBoardUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOutAnim;                                       // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur;                                    // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BoardFrame;                                        // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BottomScreenFrame;                                 // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote1;                                       // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote10;                                      // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote11;                                      // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote12;                                      // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote13;                                      // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote14;                                      // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote15;                                      // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote2;                                       // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote3;                                       // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote4;                                       // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote5;                                       // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote6;                                       // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote7;                                       // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote8;                                       // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BountyBoard_BountyNote_C*           BountyNote9;                                       // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CloseButton_C*                      BtnClose;                                          // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyA;                                        // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyB;                                        // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TopScreenFrame;                                    // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BountyBoard(int32 EntryPoint);
	void OnSetInputDisplay(EInputDisplay InInputDisplay, EInputDisplay InControlDisplay);
	void BndEvt__BP_BountyBoard_BtnClose_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void OnHideBountyDetails();
	void OnShowBountyDetails();
	void BndEvt__BtnHotkeyA2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void OnGamepadAEvent();
	void BndEvt__BtnHotkeyA2_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void OnInit();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnHide(float AnimDuration);
	void OnShow(float AnimDuration);
	void OnGamepadBEvent();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void BtnHotkeyBClicked();
	void BtnHotkeyAClicked();
	void SetBtnCloseVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BountyBoard_C">();
	}
	static class UBP_BountyBoard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BountyBoard_C>();
	}
};
static_assert(alignof(UBP_BountyBoard_C) == 0x000008, "Wrong alignment on UBP_BountyBoard_C");
static_assert(sizeof(UBP_BountyBoard_C) == 0x000598, "Wrong size on UBP_BountyBoard_C");
static_assert(offsetof(UBP_BountyBoard_C, UberGraphFrame) == 0x0004D0, "Member 'UBP_BountyBoard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, FadeOutAnim) == 0x0004D8, "Member 'UBP_BountyBoard_C::FadeOutAnim' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, FadeInAnim) == 0x0004E0, "Member 'UBP_BountyBoard_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BackgroundBlur) == 0x0004E8, "Member 'UBP_BountyBoard_C::BackgroundBlur' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BoardFrame) == 0x0004F0, "Member 'UBP_BountyBoard_C::BoardFrame' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BottomScreenFrame) == 0x0004F8, "Member 'UBP_BountyBoard_C::BottomScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote1) == 0x000500, "Member 'UBP_BountyBoard_C::BountyNote1' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote10) == 0x000508, "Member 'UBP_BountyBoard_C::BountyNote10' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote11) == 0x000510, "Member 'UBP_BountyBoard_C::BountyNote11' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote12) == 0x000518, "Member 'UBP_BountyBoard_C::BountyNote12' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote13) == 0x000520, "Member 'UBP_BountyBoard_C::BountyNote13' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote14) == 0x000528, "Member 'UBP_BountyBoard_C::BountyNote14' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote15) == 0x000530, "Member 'UBP_BountyBoard_C::BountyNote15' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote2) == 0x000538, "Member 'UBP_BountyBoard_C::BountyNote2' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote3) == 0x000540, "Member 'UBP_BountyBoard_C::BountyNote3' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote4) == 0x000548, "Member 'UBP_BountyBoard_C::BountyNote4' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote5) == 0x000550, "Member 'UBP_BountyBoard_C::BountyNote5' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote6) == 0x000558, "Member 'UBP_BountyBoard_C::BountyNote6' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote7) == 0x000560, "Member 'UBP_BountyBoard_C::BountyNote7' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote8) == 0x000568, "Member 'UBP_BountyBoard_C::BountyNote8' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BountyNote9) == 0x000570, "Member 'UBP_BountyBoard_C::BountyNote9' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BtnClose) == 0x000578, "Member 'UBP_BountyBoard_C::BtnClose' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BtnHotkeyA) == 0x000580, "Member 'UBP_BountyBoard_C::BtnHotkeyA' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, BtnHotkeyB) == 0x000588, "Member 'UBP_BountyBoard_C::BtnHotkeyB' has a wrong offset!");
static_assert(offsetof(UBP_BountyBoard_C, TopScreenFrame) == 0x000590, "Member 'UBP_BountyBoard_C::TopScreenFrame' has a wrong offset!");

}

