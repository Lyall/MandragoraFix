#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BoxFrame

#include "Basic.hpp"

#include "BP_BoxFrame_classes.hpp"
#include "BP_BoxFrame_parameters.hpp"


namespace SDK
{

// Function BP_BoxFrame.BP_BoxFrame_C.SetActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BoxFrame_C::SetActive(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BoxFrame_C", "SetActive");

	Params::BP_BoxFrame_C_SetActive Parms{};

	Parms.InIsActive = InIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BoxFrame.BP_BoxFrame_C.Init
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       InBoxFrameTexture                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       InBoxFrameActiveTexture                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       InBoxBgTexture                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       InDecorTexture                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAnchors                         InDecorPosition                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   InFillPadding                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BoxFrame_C::Init(class UTexture2D* InBoxFrameTexture, class UTexture2D* InBoxFrameActiveTexture, class UTexture2D* InBoxBgTexture, class UTexture2D* InDecorTexture, const struct FAnchors& InDecorPosition, float InFillPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BoxFrame_C", "Init");

	Params::BP_BoxFrame_C_Init Parms{};

	Parms.InBoxFrameTexture = InBoxFrameTexture;
	Parms.InBoxFrameActiveTexture = InBoxFrameActiveTexture;
	Parms.InBoxBgTexture = InBoxBgTexture;
	Parms.InDecorTexture = InDecorTexture;
	Parms.InDecorPosition = std::move(InDecorPosition);
	Parms.InFillPadding = InFillPadding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BoxFrame.BP_BoxFrame_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_BoxFrame_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BoxFrame_C", "PreConstruct");

	Params::BP_BoxFrame_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BoxFrame.BP_BoxFrame_C.ExecuteUbergraph_BP_BoxFrame
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BoxFrame_C::ExecuteUbergraph_BP_BoxFrame(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BoxFrame_C", "ExecuteUbergraph_BP_BoxFrame");

	Params::BP_BoxFrame_C_ExecuteUbergraph_BP_BoxFrame Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

