#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BoxFrame

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_BoxFrame.BP_BoxFrame_C.SetActive
// 0x0010 (0x0010 - 0x0000)
struct BP_BoxFrame_C_SetActive final
{
public:
	bool                                          InIsActive;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BoxFrame_C_SetActive) == 0x000004, "Wrong alignment on BP_BoxFrame_C_SetActive");
static_assert(sizeof(BP_BoxFrame_C_SetActive) == 0x000010, "Wrong size on BP_BoxFrame_C_SetActive");
static_assert(offsetof(BP_BoxFrame_C_SetActive, InIsActive) == 0x000000, "Member 'BP_BoxFrame_C_SetActive::InIsActive' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_SetActive, Temp_bool_Variable) == 0x000001, "Member 'BP_BoxFrame_C_SetActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_SetActive, Temp_float_Variable) == 0x000004, "Member 'BP_BoxFrame_C_SetActive::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_SetActive, Temp_float_Variable_1) == 0x000008, "Member 'BP_BoxFrame_C_SetActive::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_SetActive, K2Node_Select_Default) == 0x00000C, "Member 'BP_BoxFrame_C_SetActive::K2Node_Select_Default' has a wrong offset!");

// Function BP_BoxFrame.BP_BoxFrame_C.Init
// 0x0058 (0x0058 - 0x0000)
struct BP_BoxFrame_C_Init final
{
public:
	class UTexture2D*                             InBoxFrameTexture;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             InBoxFrameActiveTexture;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             InBoxBgTexture;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             InDecorTexture;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               InDecorPosition;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         InFillPadding;                                     // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BoxFrame_C_Init) == 0x000008, "Wrong alignment on BP_BoxFrame_C_Init");
static_assert(sizeof(BP_BoxFrame_C_Init) == 0x000058, "Wrong size on BP_BoxFrame_C_Init");
static_assert(offsetof(BP_BoxFrame_C_Init, InBoxFrameTexture) == 0x000000, "Member 'BP_BoxFrame_C_Init::InBoxFrameTexture' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_Init, InBoxFrameActiveTexture) == 0x000008, "Member 'BP_BoxFrame_C_Init::InBoxFrameActiveTexture' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_Init, InBoxBgTexture) == 0x000010, "Member 'BP_BoxFrame_C_Init::InBoxBgTexture' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_Init, InDecorTexture) == 0x000018, "Member 'BP_BoxFrame_C_Init::InDecorTexture' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_Init, InDecorPosition) == 0x000020, "Member 'BP_BoxFrame_C_Init::InDecorPosition' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_Init, InFillPadding) == 0x000030, "Member 'BP_BoxFrame_C_Init::InFillPadding' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_Init, Temp_bool_Variable) == 0x000034, "Member 'BP_BoxFrame_C_Init::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_Init, Temp_byte_Variable) == 0x000035, "Member 'BP_BoxFrame_C_Init::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_Init, Temp_byte_Variable_1) == 0x000036, "Member 'BP_BoxFrame_C_Init::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_Init, K2Node_MakeStruct_Margin) == 0x000038, "Member 'BP_BoxFrame_C_Init::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_Init, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000048, "Member 'BP_BoxFrame_C_Init::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_Init, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_BoxFrame_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_Init, K2Node_Select_Default) == 0x000051, "Member 'BP_BoxFrame_C_Init::K2Node_Select_Default' has a wrong offset!");

// Function BP_BoxFrame.BP_BoxFrame_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_BoxFrame_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BoxFrame_C_PreConstruct) == 0x000001, "Wrong alignment on BP_BoxFrame_C_PreConstruct");
static_assert(sizeof(BP_BoxFrame_C_PreConstruct) == 0x000001, "Wrong size on BP_BoxFrame_C_PreConstruct");
static_assert(offsetof(BP_BoxFrame_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_BoxFrame_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_BoxFrame.BP_BoxFrame_C.ExecuteUbergraph_BP_BoxFrame
// 0x0008 (0x0008 - 0x0000)
struct BP_BoxFrame_C_ExecuteUbergraph_BP_BoxFrame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BoxFrame_C_ExecuteUbergraph_BP_BoxFrame) == 0x000004, "Wrong alignment on BP_BoxFrame_C_ExecuteUbergraph_BP_BoxFrame");
static_assert(sizeof(BP_BoxFrame_C_ExecuteUbergraph_BP_BoxFrame) == 0x000008, "Wrong size on BP_BoxFrame_C_ExecuteUbergraph_BP_BoxFrame");
static_assert(offsetof(BP_BoxFrame_C_ExecuteUbergraph_BP_BoxFrame, EntryPoint) == 0x000000, "Member 'BP_BoxFrame_C_ExecuteUbergraph_BP_BoxFrame::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BoxFrame_C_ExecuteUbergraph_BP_BoxFrame, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_BoxFrame_C_ExecuteUbergraph_BP_BoxFrame::K2Node_Event_IsDesignTime' has a wrong offset!");

}

