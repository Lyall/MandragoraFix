#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BrawlerHero

#include "Basic.hpp"

#include "BP_BrawlerHero_classes.hpp"
#include "BP_BrawlerHero_parameters.hpp"


namespace SDK
{

// Function BP_BrawlerHero.BP_BrawlerHero_C.ExecuteUbergraph_BP_BrawlerHero
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::ExecuteUbergraph_BP_BrawlerHero(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "ExecuteUbergraph_BP_BrawlerHero");

	Params::BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnHealthChangedEvent_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   preHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   postHealth                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::OnHealthChangedEvent_Event_0(float preHealth, float postHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnHealthChangedEvent_Event_0");

	Params::BP_BrawlerHero_C_OnHealthChangedEvent_Event_0 Parms{};

	Parms.preHealth = preHealth;
	Parms.postHealth = postHealth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnLifeAuraChanged_Event_0
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::OnLifeAuraChanged_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnLifeAuraChanged_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnLanternStateSwitch_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BrawlerHero_C::OnLanternStateSwitch_Event_0(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnLanternStateSwitch_Event_0");

	Params::BP_BrawlerHero_C_OnLanternStateSwitch_Event_0 Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnVfxAnimStopped
// (Event, Public, BlueprintEvent)
// Parameters:
// class UAnimID*                          AnimID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::OnVfxAnimStopped(class UAnimID* AnimID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnVfxAnimStopped");

	Params::BP_BrawlerHero_C_OnVfxAnimStopped Parms{};

	Parms.AnimID = AnimID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnVfxAnimStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class UAnimID*                          AnimID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::OnVfxAnimStarted(class UAnimID* AnimID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnVfxAnimStarted");

	Params::BP_BrawlerHero_C_OnVfxAnimStarted Parms{};

	Parms.AnimID = AnimID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.InteractStarted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOnInteractAbility*               OnInteractAbility                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::InteractStarted(class UOnInteractAbility* OnInteractAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "InteractStarted");

	Params::BP_BrawlerHero_C_InteractStarted Parms{};

	Parms.OnInteractAbility = OnInteractAbility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnStatusEffectChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EStatusEffectChange                     Change                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EStatusEffectType                       StatusType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           SourceEntity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   StackNum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::OnStatusEffectChanged(EStatusEffectChange Change, EStatusEffectType StatusType, class AActor* SourceEntity, int32 StackNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnStatusEffectChanged");

	Params::BP_BrawlerHero_C_OnStatusEffectChanged Parms{};

	Parms.Change = Change;
	Parms.StatusType = StatusType;
	Parms.SourceEntity = SourceEntity;
	Parms.StackNum = StackNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.HeroRespawnEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHeroBase*                        Hero                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::HeroRespawnEvent(class AHeroBase* Hero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "HeroRespawnEvent");

	Params::BP_BrawlerHero_C_HeroRespawnEvent Parms{};

	Parms.Hero = Hero;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.HoldInteractCancelled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::HoldInteractCancelled(class AActor* InteractedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "HoldInteractCancelled");

	Params::BP_BrawlerHero_C_HoldInteractCancelled Parms{};

	Parms.InteractedActor = InteractedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.HoldInteractStarted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::HoldInteractStarted(class AActor* InteractedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "HoldInteractStarted");

	Params::BP_BrawlerHero_C_HoldInteractStarted Parms{};

	Parms.InteractedActor = InteractedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.EntropicEssencePickup
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::EntropicEssencePickup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "EntropicEssencePickup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.BPDamageTakenEvent_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilityController*               Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilityController*               Bullet                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilityController*               Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilityBase*                     Ability                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   effectiveDamage                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDamageValue                     DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_BrawlerHero_C::BPDamageTakenEvent_Event_0(class UAbilityController* Source, class UAbilityController* Bullet, class UAbilityController* Target, class UAbilityBase* Ability, float effectiveDamage, const struct FDamageValue& DamageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "BPDamageTakenEvent_Event_0");

	Params::BP_BrawlerHero_C_BPDamageTakenEvent_Event_0 Parms{};

	Parms.Source = Source;
	Parms.Bullet = Bullet;
	Parms.Target = Target;
	Parms.Ability = Ability;
	Parms.effectiveDamage = effectiveDamage;
	Parms.DamageValue = std::move(DamageValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnHitCameraShake
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UGameCameraShake>     CameraShake                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_BrawlerHero_C::OnHitCameraShake(TSubclassOf<class UGameCameraShake> CameraShake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnHitCameraShake");

	Params::BP_BrawlerHero_C_OnHitCameraShake Parms{};

	Parms.CameraShake = CameraShake;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnOverlayBlendIn
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::OnOverlayBlendIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnOverlayBlendIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnOverlayBlendOut
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::OnOverlayBlendOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnOverlayBlendOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.ResumeLevelSequence
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::ResumeLevelSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "ResumeLevelSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.PauseLevelSequence
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::PauseLevelSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "PauseLevelSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnFinished
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::OnFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnPlayLevelSequence
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   Actors                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FMovieSceneObjectBindingID>Bindings                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   BlendInDuration                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BlendOutDuration                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::OnPlayLevelSequence(class ULevelSequence* LevelSequence, const TArray<class AActor*>& Actors, const TArray<struct FMovieSceneObjectBindingID>& Bindings, float BlendInDuration, float BlendOutDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnPlayLevelSequence");

	Params::BP_BrawlerHero_C_OnPlayLevelSequence Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.Actors = std::move(Actors);
	Parms.Bindings = std::move(Bindings);
	Parms.BlendInDuration = BlendInDuration;
	Parms.BlendOutDuration = BlendOutDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.KSHalberdierExplo
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::KSHalberdierExplo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "KSHalberdierExplo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.CharacterHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterBase*                   Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharacterBase*                   Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilityBase*                     Ability                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimID*                          Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::CharacterHit(class ACharacterBase* Source, class ACharacterBase* Target, class UAbilityBase* Ability, class UAnimID* Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "CharacterHit");

	Params::BP_BrawlerHero_C_CharacterHit Parms{};

	Parms.Source = Source;
	Parms.Target = Target;
	Parms.Ability = Ability;
	Parms.Anim = Anim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnDeathScreenFadeComplete
// (Event, Public, BlueprintEvent)

void ABP_BrawlerHero_C::OnDeathScreenFadeComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnDeathScreenFadeComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.PlayerCombatVOEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bTaunt                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BrawlerHero_C::PlayerCombatVOEvent(bool bTaunt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "PlayerCombatVOEvent");

	Params::BP_BrawlerHero_C_PlayerCombatVOEvent Parms{};

	Parms.bTaunt = bTaunt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnGrapplingHookEnd
// (Event, Public, BlueprintEvent)

void ABP_BrawlerHero_C::OnGrapplingHookEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnGrapplingHookEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnGrapplingHookStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           GrapplingHook_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::OnGrapplingHookStart(class AActor* GrapplingHook_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnGrapplingHookStart");

	Params::BP_BrawlerHero_C_OnGrapplingHookStart Parms{};

	Parms.GrapplingHook_0 = GrapplingHook_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.EssencePickup_SETUP
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::EssencePickup_SETUP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "EssencePickup_SETUP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.EssencePickup
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::EssencePickup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "EssencePickup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnTurnStarted
// (Event, Public, BlueprintEvent)

void ABP_BrawlerHero_C::OnTurnStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnTurnStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "ReceiveTick");

	Params::BP_BrawlerHero_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnFinished_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::OnFinished_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnFinished_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnLevelSequence
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       WorldTransform                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// float                                   BlendInDuration                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BlendOutDuration                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::OnLevelSequence(class ULevelSequence* LevelSequence, const struct FTransform& WorldTransform, float BlendInDuration, float BlendOutDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnLevelSequence");

	Params::BP_BrawlerHero_C_OnLevelSequence Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.WorldTransform = std::move(WorldTransform);
	Parms.BlendInDuration = BlendInDuration;
	Parms.BlendOutDuration = BlendOutDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActorSoul*                       Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActorSoul*                       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilityBase*                     Ability                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimID*                          Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   effectiveDamage                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDamageValue                     OriginalDamageValue                                    (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// struct FDamageValue                     DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_BrawlerHero_C::CustomEvent_0(class AActorSoul* Source, class AActorSoul* Target, class UAbilityBase* Ability, class UAnimID* Anim, float effectiveDamage, const struct FDamageValue& OriginalDamageValue, const struct FDamageValue& DamageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "CustomEvent_0");

	Params::BP_BrawlerHero_C_CustomEvent_0 Parms{};

	Parms.Source = Source;
	Parms.Target = Target;
	Parms.Ability = Ability;
	Parms.Anim = Anim;
	Parms.effectiveDamage = effectiveDamage;
	Parms.OriginalDamageValue = std::move(OriginalDamageValue);
	Parms.DamageValue = std::move(DamageValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.LocalHitEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterBase*                   Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharacterBase*                   Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilityBase*                     Ability                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimID*                          Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::LocalHitEvent(class ACharacterBase* Source, class ACharacterBase* Target, class UAbilityBase* Ability, class UAnimID* Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "LocalHitEvent");

	Params::BP_BrawlerHero_C_LocalHitEvent Parms{};

	Parms.Source = Source;
	Parms.Target = Target;
	Parms.Ability = Ability;
	Parms.Anim = Anim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnVfxEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             VfxEventType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::OnVfxEvent(class FName VfxEventType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnVfxEvent");

	Params::BP_BrawlerHero_C_OnVfxEvent Parms{};

	Parms.VfxEventType = VfxEventType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BrawlerHero_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.DT_FireMelt
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::DT_FireMelt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "DT_FireMelt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.EVFXGraph
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             VfxEventType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::EVFXGraph(class FName VfxEventType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "EVFXGraph");

	Params::BP_BrawlerHero_C_EVFXGraph Parms{};

	Parms.VfxEventType = VfxEventType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnKilled_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilityController*               KillerAbilityController                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::OnKilled_Event(class UObject* Killer, class UAbilityController* KillerAbilityController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnKilled_Event");

	Params::BP_BrawlerHero_C_OnKilled_Event Parms{};

	Parms.Killer = Killer;
	Parms.KillerAbilityController = KillerAbilityController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.BeginDeathGraph
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::BeginDeathGraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "BeginDeathGraph");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.GlideWingEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::GlideWingEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "GlideWingEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.BPPostBeginPlay
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::BPPostBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "BPPostBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnStunnedEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::OnStunnedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnStunnedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.OnStaggeredEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::OnStaggeredEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "OnStaggeredEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.InpActEvt_ResetFreeCamera_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_BrawlerHero_C::InpActEvt_ResetFreeCamera_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "InpActEvt_ResetFreeCamera_K2Node_InputActionEvent_0");

	Params::BP_BrawlerHero_C_InpActEvt_ResetFreeCamera_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.InpActEvt_ToggleFreeCamera_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_BrawlerHero_C::InpActEvt_ToggleFreeCamera_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "InpActEvt_ToggleFreeCamera_K2Node_InputActionEvent_1");

	Params::BP_BrawlerHero_C_InpActEvt_ToggleFreeCamera_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.DamageFlash__UpdateFunc
// (BlueprintEvent)

void ABP_BrawlerHero_C::DamageFlash__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "DamageFlash__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.DamageFlash__FinishedFunc
// (BlueprintEvent)

void ABP_BrawlerHero_C::DamageFlash__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "DamageFlash__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_BrawlerHero_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_BrawlerHero_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.GlideWingDissolve__UpdateFunc
// (BlueprintEvent)

void ABP_BrawlerHero_C::GlideWingDissolve__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "GlideWingDissolve__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.GlideWingDissolve__FinishedFunc
// (BlueprintEvent)

void ABP_BrawlerHero_C::GlideWingDissolve__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "GlideWingDissolve__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.Force Feedback
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SourceRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::Force_Feedback(const struct FVector& SourceLocation, float SourceRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "Force Feedback");

	Params::BP_BrawlerHero_C_Force_Feedback Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.SourceRotation = SourceRotation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.Force_Feedback_Thrall
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SourceRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::Force_Feedback_Thrall(const struct FVector& SourceLocation, float SourceRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "Force_Feedback_Thrall");

	Params::BP_BrawlerHero_C_Force_Feedback_Thrall Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.SourceRotation = SourceRotation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.Force_Feedback_Thrall_Steps
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SourceRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::Force_Feedback_Thrall_Steps(const struct FVector& SourceLocation, float SourceRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "Force_Feedback_Thrall_Steps");

	Params::BP_BrawlerHero_C_Force_Feedback_Thrall_Steps Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.SourceRotation = SourceRotation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.StatusEffectVO
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EStatusEffectType                       StatusEffectType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::StatusEffectVO(EStatusEffectType StatusEffectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "StatusEffectVO");

	Params::BP_BrawlerHero_C_StatusEffectVO Parms{};

	Parms.StatusEffectType = StatusEffectType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.TrapVOs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TrapType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::TrapVOs(class FName TrapType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "TrapVOs");

	Params::BP_BrawlerHero_C_TrapVOs Parms{};

	Parms.TrapType = TrapType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.Force_Feedback_Explosion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SourceRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::Force_Feedback_Explosion(const struct FVector& SourceLocation, float SourceRotation, float Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "Force_Feedback_Explosion");

	Params::BP_BrawlerHero_C_Force_Feedback_Explosion Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.SourceRotation = SourceRotation;
	Parms.Intensity = Intensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.SoundOnDamageReceived
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDamageValue                     Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_BrawlerHero_C::SoundOnDamageReceived(const struct FDamageValue& Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "SoundOnDamageReceived");

	Params::BP_BrawlerHero_C_SoundOnDamageReceived Parms{};

	Parms.Damage = std::move(Damage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.SoundOnAnimationEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimEventParam                  Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_BrawlerHero_C::SoundOnAnimationEvent(const struct FAnimEventParam& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "SoundOnAnimationEvent");

	Params::BP_BrawlerHero_C_SoundOnAnimationEvent Parms{};

	Parms.Param = std::move(Param);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.Force_Feedback_Vertical
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SourceRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UForceFeedbackEffect*             ForceFeedbackRight                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UForceFeedbackEffect*             ForceFeedbackLeft                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           CameraShake                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   XOffset_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UForceFeedbackComponent*          FF1                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UForceFeedbackComponent*          FF2                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UForceFeedbackComponent*          FF3                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UForceFeedbackComponent*          FF4                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::Force_Feedback_Vertical(const struct FVector& SourceLocation, float SourceRotation, float Intensity, class UForceFeedbackEffect* ForceFeedbackRight, class UForceFeedbackEffect* ForceFeedbackLeft, class UClass* CameraShake, float XOffset_0, class UForceFeedbackComponent** FF1, class UForceFeedbackComponent** FF2, class UForceFeedbackComponent** FF3, class UForceFeedbackComponent** FF4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "Force_Feedback_Vertical");

	Params::BP_BrawlerHero_C_Force_Feedback_Vertical Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.SourceRotation = SourceRotation;
	Parms.Intensity = Intensity;
	Parms.ForceFeedbackRight = ForceFeedbackRight;
	Parms.ForceFeedbackLeft = ForceFeedbackLeft;
	Parms.CameraShake = CameraShake;
	Parms.XOffset_0 = XOffset_0;

	UObject::ProcessEvent(Func, &Parms);

	if (FF1 != nullptr)
		*FF1 = Parms.FF1;

	if (FF2 != nullptr)
		*FF2 = Parms.FF2;

	if (FF3 != nullptr)
		*FF3 = Parms.FF3;

	if (FF4 != nullptr)
		*FF4 = Parms.FF4;
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.AddPostProcessMaterialsToGameCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::AddPostProcessMaterialsToGameCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "AddPostProcessMaterialsToGameCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.PrintCameraSettings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::PrintCameraSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "PrintCameraSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.InvokeAOEHitFlashEffect
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDamageSubType                          DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrawlerHero_C::InvokeAOEHitFlashEffect(EDamageSubType DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "InvokeAOEHitFlashEffect");

	Params::BP_BrawlerHero_C_InvokeAOEHitFlashEffect Parms{};

	Parms.DamageType = DamageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrawlerHero.BP_BrawlerHero_C.AOEHitFlashReset
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_BrawlerHero_C::AOEHitFlashReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrawlerHero_C", "AOEHitFlashReset");

	UObject::ProcessEvent(Func, nullptr);
}

}

