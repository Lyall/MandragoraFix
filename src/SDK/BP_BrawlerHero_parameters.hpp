#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BrawlerHero

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "man_structs.hpp"
#include "MovieScene_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CinematicCamera_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_BrawlerHero.BP_BrawlerHero_C.ExecuteUbergraph_BP_BrawlerHero
// 0x0F30 (0x0F30 - 0x0000)
struct BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Killer;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     K2Node_CustomEvent_KillerAbilityController;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_VfxEventType;                   // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPHasEntityTag_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetSlotMeshComponents_ReturnValue;        // 0x0038(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetSlotMeshComponents_ReturnValue_1;      // 0x0048(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_VfxEventType;                         // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActorSoul* Source, class AActorSoul* Target, class UAbilityBase* Ability, class UAnimID* Anim, float effectiveDamage, const struct FDamageValue& OriginalDamageValue, const struct FDamageValue& DamageValue)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	class ACharacterBase*                         K2Node_CustomEvent_Source_3;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBase*                         K2Node_CustomEvent_Target_3;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           K2Node_CustomEvent_Ability_3;                      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimID*                                K2Node_CustomEvent_Anim_2;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActorSoul*                             K2Node_CustomEvent_Source_2;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActorSoul*                             K2Node_CustomEvent_Target_2;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           K2Node_CustomEvent_Ability_2;                      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimID*                                K2Node_CustomEvent_Anim_1;                         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_effectiveDamage_1;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageValue                           K2Node_CustomEvent_OriginalDamageValue;            // 0x00E0(0x0138)(ContainsInstancedReference)
	struct FDamageValue                           K2Node_CustomEvent_DamageValue_1;                  // 0x0218(0x0138)(ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362[0xE];                                      // 0x0362(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0370(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x03E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_415[0x3];                                      // 0x0415(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacterBase* Source, class ACharacterBase* Target, class UAbilityBase* Ability, class UAnimID* Anim)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0440(0x0010)(ZeroConstructor, NoDestructor)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0450(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_Event_LevelSequence_1;                      // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_Event_WorldTransform;                       // 0x0460(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_BlendInDuration_1;                    // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_BlendOutDuration_1;                   // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneObjectBindingID             CallFunc_FindBindingByTag_ReturnValue;             // 0x04A0(0x0018)(NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x04D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDefaultLevelSequenceInstanceData*      K2Node_DynamicCast_AsDefault_Level_Sequence_Instance_Data; // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMandragoraGameMode*                    CallFunc_GetManGameMode_ReturnValue;               // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVisualEntity*                          CallFunc_SpawnVisualEntity_ReturnValue;            // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_OpenEntropyRiftPortal_VisualEntity_C* K2Node_DynamicCast_AsBP_Open_Entropy_Rift_Portal_Visual_Entity; // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x054C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0558(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564[0xC];                                      // 0x0564(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0570(0x0030)(IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSurfaceTypeSystemAtLocation_ReturnValue; // 0x05A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SpawnSurfaceTypeSystemAtLocation_bSuccess; // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x05B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D1[0x3];                                      // 0x05D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x05D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x05DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x05EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x05FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0608(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_GrapplingHook;                        // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_621[0x3];                                      // 0x0621(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0624(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0630(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x063C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D[0x3];                                      // 0x063D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTaunt;                               // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x064D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64E[0x2];                                      // 0x064E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0650(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0668(0x0018)(HasGetValueTypeHash)
	class AGameCamera*                            CallFunc_GetGameCamera_ReturnValue;                // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0688(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameCamera*                            CallFunc_GetGameCamera_ReturnValue_1;              // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraLensSettings                    K2Node_MakeStruct_CameraLensSettings;              // 0x0698(0x0018)(NoDestructor)
	class AGameCamera*                            CallFunc_GetGameCamera_ReturnValue_2;              // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameCamera*                            CallFunc_GetGameCamera_ReturnValue_3;              // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C1[0x7];                                      // 0x06C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterBase*                         K2Node_CustomEvent_Source_1;                       // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBase*                         K2Node_CustomEvent_Target_1;                       // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           K2Node_CustomEvent_Ability_1;                      // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimID*                                K2Node_CustomEvent_Anim;                           // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetSlotMeshComponents_ReturnValue_2;      // 0x06F0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_701[0x3];                                      // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float preHealth, float postHealth)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0708(0x0010)(ZeroConstructor, NoDestructor)
	class ULevelSequence*                         K2Node_Event_LevelSequence;                        // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_Event_Actors;                               // 0x0720(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FMovieSceneObjectBindingID>     K2Node_Event_Bindings;                             // 0x0730(0x0010)(ConstParm, ReferenceParm)
	float                                         K2Node_Event_BlendInDuration;                      // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_BlendOutDuration;                     // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneObjectBindingID             CallFunc_FindBindingByTag_ReturnValue_1;           // 0x0754(0x0018)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76C[0x4];                                      // 0x076C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor_1;     // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue_1;  // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0788(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bActive)>                 K2Node_CreateDelegate_OutputDelegate_5;            // 0x0798(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x07A8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x07B8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x07C8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x07D8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4;                          // 0x07E8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_5;                          // 0x07F8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class AGameCamera*                            CallFunc_GetGameCamera_ReturnValue_4;              // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_6;                          // 0x0810(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_821[0x3];                                      // 0x0821(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_7;                          // 0x0824(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Killer, class UAbilityController* KillerAbilityController)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0834(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_8;                          // 0x0844(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_9;                          // 0x0854(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_10;                         // 0x0864(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_11;                         // 0x0874(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_12;                         // 0x0884(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_13;                         // 0x0894(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_8A4[0x4];                                      // 0x08A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameCamera*                            CallFunc_GetGameCamera_ReturnValue_5;              // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x08B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B4[0x4];                                      // 0x08B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x08B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x08C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9[0x3];                                      // 0x08C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EStatusEffectChange Change, EStatusEffectType StatusType, class AActor* SourceEntity, int32 StackNum)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x08CC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AHeroBase* Hero)>        K2Node_CreateDelegate_OutputDelegate_8;            // 0x08DC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAbilityController* Source, class UAbilityController* Bullet, class UAbilityController* Target, class UAbilityBase* Ability, float effectiveDamage, const struct FDamageValue& DamageValue)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x08EC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x08FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x08FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8FE[0x2];                                      // 0x08FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameCamera*                            CallFunc_GetGameCamera_ReturnValue_6;              // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameCameraShake>           K2Node_Event_CameraShake;                          // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_911[0x7];                                      // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0918(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0928(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0931(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_932[0x2];                                      // 0x0932(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0934(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BPGetAxisXFacing_ReturnValue;             // 0x0940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0944(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_7;        // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0958(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x095C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x095D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95E[0x2];                                      // 0x095E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityBase*                           CallFunc_BPGetAbilityByClass_ReturnValue;          // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHeavyAttackAbility*                    K2Node_DynamicCast_AsHeavy_Attack_Ability;         // 0x0968(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_971[0x3];                                      // 0x0971(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetChargePercent_ReturnValue;             // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     K2Node_CustomEvent_Source;                         // 0x0978(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     K2Node_CustomEvent_Bullet;                         // 0x0980(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     K2Node_CustomEvent_Target;                         // 0x0988(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           K2Node_CustomEvent_Ability;                        // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_effectiveDamage;                // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C[0x4];                                      // 0x099C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageValue                           K2Node_CustomEvent_DamageValue;                    // 0x09A0(0x0138)(ContainsInstancedReference)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ADC[0x4];                                      // 0x0ADC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_Force_Feedback_Vertical_FF1;              // 0x0AE0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_Force_Feedback_Vertical_FF2;              // 0x0AE8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_Force_Feedback_Vertical_FF3;              // 0x0AF0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_Force_Feedback_Vertical_FF4;              // 0x0AF8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue_1;       // 0x0B00(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0B08(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0B1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0B20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B24[0x4];                                      // 0x0B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_InteractedActor_1;              // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B31[0x7];                                      // 0x0B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_OfferingShrine_C*                   K2Node_DynamicCast_AsBP_Offering_Shrine;           // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B41[0x3];                                      // 0x0B41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* InteractedActor)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0B44(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_B54[0x4];                                      // 0x0B54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_InteractedActor;                // 0x0B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_OfferingShrine_C*                   K2Node_DynamicCast_AsBP_Offering_Shrine_1;         // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B69[0x3];                                      // 0x0B69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* InteractedActor)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0B6C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_B7C[0x4];                                      // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMandragoraGameMode*                    CallFunc_GetManGameMode_ReturnValue_1;             // 0x0B80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHeroBase*                              K2Node_CustomEvent_Hero;                           // 0x0B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x0B94(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0BA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA5[0x3];                                      // 0x0BA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BAC[0x4];                                      // 0x0BAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatusEffectController*                CallFunc_GetStatusEffectController_ReturnValue;    // 0x0BB0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStatusEffectChange                           K2Node_CustomEvent_Change;                         // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStatusEffectType                             K2Node_CustomEvent_StatusType;                     // 0x0BB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BBA[0x6];                                      // 0x0BBA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_SourceEntity;                   // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_StackNum;                       // 0x0BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0BCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0BCD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0BCE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0BCF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCameraUpsideDown_ReturnValue;           // 0x0BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD1[0x3];                                      // 0x0BD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0BD4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0C5C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x0CE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE5[0x3];                                      // 0x0CE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetListenerPosition_ReturnValue;          // 0x0CE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetListenerPosition_ReturnValue_1;        // 0x0CF4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0D00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0D04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacterBase* Source, class ACharacterBase* Target, class UAbilityBase* Ability, class UAnimID* Anim)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x0D0C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0D1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0D20(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UOnInteractAbility* OnInteractAbility)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x0D2C(0x0010)(ZeroConstructor, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0D3C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_DC4[0x4];                                      // 0x0DC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnInteractAbility*                     K2Node_CustomEvent_OnInteractAbility;              // 0x0DC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x0DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD1[0x7];                                      // 0x0DD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue_2;       // 0x0DD8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0DE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0DF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF4[0x4];                                      // 0x0DF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_2;                         // 0x0DF8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E01[0x3];                                      // 0x0E01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0E04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x0E08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue_3;       // 0x0E10(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHitReactionPassive*                    CallFunc_GetHitReactionPassive_ReturnValue;        // 0x0E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0E20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0E24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E25[0x3];                                      // 0x0E25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2C[0x4];                                      // 0x0E2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSlotMeshComponent_ReturnValue;         // 0x0E30(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimID*                                K2Node_Event_AnimID_1;                             // 0x0E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimID*                                K2Node_Event_AnimID;                               // 0x0E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0E48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0E4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0E50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E51[0x3];                                      // 0x0E51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0E54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E59[0x3];                                      // 0x0E59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0E5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x0E60(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x0E70(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0E80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0E84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x0E88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x0E8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_4;                // 0x0E90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_5;                // 0x0E94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_6;                // 0x0E98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_7;                // 0x0E9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_8;                // 0x0EA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_9;                // 0x0EA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_10;               // 0x0EA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_11;               // 0x0EAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_12;               // 0x0EB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_13;               // 0x0EB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_1;     // 0x0EB8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPIsFalling_ReturnValue;                  // 0x0EC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EC1[0x3];                                      // 0x0EC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0EC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_4;                         // 0x0EC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0ED0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED1[0x7];                                      // 0x0ED1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_1;        // 0x0ED8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bActive;                        // 0x0EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE1[0x7];                                      // 0x0EE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEntropyLantern*                        CallFunc_BPGetEntropyLantern_ReturnValue;          // 0x0EE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLifeAuraValue_ReturnValue;             // 0x0EF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxLifeAuraValue_ReturnValue;          // 0x0EF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0EF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0EFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0F00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F04[0x4];                                      // 0x0F04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEntropyLantern*                        CallFunc_BPGetEntropyLantern_ReturnValue_1;        // 0x0F08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_preHealth;                      // 0x0F10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_postHealth;                     // 0x0F14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0F18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F19[0x3];                                      // 0x0F19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BPGetMaxHealth_ReturnValue;               // 0x0F1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0F20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0F24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero) == 0x000010, "Wrong alignment on BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero");
static_assert(sizeof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero) == 0x000F30, "Wrong size on BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, EntryPoint) == 0x000000, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Killer) == 0x000008, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_KillerAbilityController) == 0x000010, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_KillerAbilityController' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetAbilityController_ReturnValue) == 0x000018, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_int_Variable) == 0x000020, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_VfxEventType) == 0x000024, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_VfxEventType' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_SwitchName_CmpSuccess) == 0x00002C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002D, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BPHasEntityTag_ReturnValue) == 0x000034, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BPHasEntityTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetSlotMeshComponents_ReturnValue) == 0x000038, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetSlotMeshComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetSlotMeshComponents_ReturnValue_1) == 0x000048, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetSlotMeshComponents_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_bool_Has_Been_Initd_Variable) == 0x000078, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_VfxEventType) == 0x00007C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_VfxEventType' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_SwitchName_CmpSuccess_1) == 0x000084, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_bool_IsClosed_Variable) == 0x000085, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Source_3) == 0x000098, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Source_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Target_3) == 0x0000A0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Target_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Ability_3) == 0x0000A8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Ability_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Anim_2) == 0x0000B0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Anim_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Source_2) == 0x0000B8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Source_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Target_2) == 0x0000C0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Target_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Ability_2) == 0x0000C8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Ability_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Anim_1) == 0x0000D0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Anim_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_effectiveDamage_1) == 0x0000D8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_effectiveDamage_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_OriginalDamageValue) == 0x0000E0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_OriginalDamageValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_DamageValue_1) == 0x000218, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_DamageValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000350, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetPlayerController_ReturnValue_1) == 0x000358, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Not_PreBool_ReturnValue) == 0x000360, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BooleanAND_ReturnValue) == 0x000361, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetSocketTransform_ReturnValue) == 0x000370, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakTransform_Location) == 0x0003A0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakTransform_Rotation) == 0x0003AC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakTransform_Scale) == 0x0003B8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakVector_X) == 0x0003C4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakVector_Y) == 0x0003C8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakVector_Z) == 0x0003CC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_bool_Has_Been_Initd_Variable_1) == 0x0003D0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_MakeVector_ReturnValue) == 0x0003D4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0003E0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0003E4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_MakeVector_ReturnValue_1) == 0x0003E8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_RandomFloatInRange_ReturnValue) == 0x0003F4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0003F8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0003FC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_MakeRotator_ReturnValue) == 0x000408, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_bool_IsClosed_Variable_1) == 0x000414, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000418, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Add_FloatFloat_ReturnValue) == 0x00041C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000420, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000424, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_MakeVector_ReturnValue_2) == 0x000428, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Add_VectorVector_ReturnValue) == 0x000434, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_2) == 0x000440, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000450, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_LevelSequence_1) == 0x000458, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_LevelSequence_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_WorldTransform) == 0x000460, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_WorldTransform' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_BlendInDuration_1) == 0x000490, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_BlendInDuration_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_BlendOutDuration_1) == 0x000494, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_BlendOutDuration_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetPlayerController_ReturnValue_2) == 0x000498, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_FindBindingByTag_ReturnValue) == 0x0004A0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_FindBindingByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x0004B8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x0004C0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_MakeTransform_ReturnValue) == 0x0004D0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000500, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_FinishSpawningActor_ReturnValue) == 0x000508, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetPlayerController_ReturnValue_3) == 0x000510, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_DynamicCast_AsDefault_Level_Sequence_Instance_Data) == 0x000518, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_DynamicCast_AsDefault_Level_Sequence_Instance_Data' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_DynamicCast_bSuccess) == 0x000520, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetManGameMode_ReturnValue) == 0x000528, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetManGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000530, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_SpawnVisualEntity_ReturnValue) == 0x000538, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_SpawnVisualEntity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_DynamicCast_AsBP_Open_Entropy_Rift_Portal_Visual_Entity) == 0x000540, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_DynamicCast_AsBP_Open_Entropy_Rift_Portal_Visual_Entity' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_DynamicCast_bSuccess_1) == 0x000548, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00054C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000558, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_MakeTransform_ReturnValue_1) == 0x000570, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_SpawnSurfaceTypeSystemAtLocation_ReturnValue) == 0x0005A0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_SpawnSurfaceTypeSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_SpawnSurfaceTypeSystemAtLocation_bSuccess) == 0x0005A8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_SpawnSurfaceTypeSystemAtLocation_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_DeltaSeconds) == 0x0005AC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0005B0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetPlayerController_ReturnValue_4) == 0x0005C0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x0005C8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x0005D0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetViewportSize_ReturnValue) == 0x0005D4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0005DC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakVector2D_X) == 0x0005E4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakVector2D_Y) == 0x0005E8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_MakeStruct_LinearColor) == 0x0005EC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0005FC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000608, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_GrapplingHook) == 0x000618, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_GrapplingHook' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_bool_Has_Been_Initd_Variable_2) == 0x000620, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000624, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetSocketLocation_ReturnValue) == 0x000630, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsValid_ReturnValue) == 0x00063C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Vector_Distance_ReturnValue) == 0x000640, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000644, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000648, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_bTaunt) == 0x00064C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_bTaunt' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_bool_IsClosed_Variable_2) == 0x00064D, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_InputActionEvent_Key) == 0x000650, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_InputActionEvent_Key_1) == 0x000668, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetGameCamera_ReturnValue) == 0x000680, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetGameCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000688, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetGameCamera_ReturnValue_1) == 0x000690, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetGameCamera_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_MakeStruct_CameraLensSettings) == 0x000698, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_MakeStruct_CameraLensSettings' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetGameCamera_ReturnValue_2) == 0x0006B0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetGameCamera_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetGameCamera_ReturnValue_3) == 0x0006B8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetGameCamera_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsValid_ReturnValue_1) == 0x0006C0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Source_1) == 0x0006C8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Source_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Target_1) == 0x0006D0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Target_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Ability_1) == 0x0006D8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Ability_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Anim) == 0x0006E0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Anim' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetObjectClass_ReturnValue) == 0x0006E8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetSlotMeshComponents_ReturnValue_2) == 0x0006F0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetSlotMeshComponents_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000700, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Array_Length_ReturnValue_2) == 0x000704, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_3) == 0x000708, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_LevelSequence) == 0x000718, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_LevelSequence' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_Actors) == 0x000720, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_Actors' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_Bindings) == 0x000730, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_Bindings' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_BlendInDuration) == 0x000740, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_BlendInDuration' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_BlendOutDuration) == 0x000744, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_BlendOutDuration' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetPlayerController_ReturnValue_5) == 0x000748, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Array_Length_ReturnValue_3) == 0x000750, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_FindBindingByTag_ReturnValue_1) == 0x000754, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_FindBindingByTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_CreateLevelSequencePlayer_OutActor_1) == 0x000770, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_CreateLevelSequencePlayer_OutActor_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_CreateLevelSequencePlayer_ReturnValue_1) == 0x000778, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_CreateLevelSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetPlayerController_ReturnValue_6) == 0x000780, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_4) == 0x000788, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_5) == 0x000798, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable) == 0x0007A8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_1) == 0x0007B8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_2) == 0x0007C8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_3) == 0x0007D8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_4) == 0x0007E8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_5) == 0x0007F8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetGameCamera_ReturnValue_4) == 0x000808, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetGameCamera_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_6) == 0x000810, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsValid_ReturnValue_2) == 0x000820, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_7) == 0x000824, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_6) == 0x000834, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_8) == 0x000844, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_9) == 0x000854, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_10) == 0x000864, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_11) == 0x000874, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_12) == 0x000884, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_delegate_Variable_13) == 0x000894, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_delegate_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetGameCamera_ReturnValue_5) == 0x0008A8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetGameCamera_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_int_Array_Index_Variable) == 0x0008B0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Array_Get_Item) == 0x0008B8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0008C0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsValid_ReturnValue_3) == 0x0008C8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_7) == 0x0008CC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_8) == 0x0008DC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_9) == 0x0008EC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsValid_ReturnValue_4) == 0x0008FC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_bool_Has_Been_Initd_Variable_3) == 0x0008FD, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetGameCamera_ReturnValue_6) == 0x000900, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetGameCamera_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_CameraShake) == 0x000908, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_CameraShake' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsValid_ReturnValue_5) == 0x000910, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetComponentsByTag_ReturnValue) == 0x000918, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Array_Get_Item_1) == 0x000928, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_bool_IsClosed_Variable_3) == 0x000930, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsValid_ReturnValue_6) == 0x000931, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000934, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BPGetAxisXFacing_ReturnValue) == 0x000940, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BPGetAxisXFacing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000944, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetPlayerController_ReturnValue_7) == 0x000950, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000958, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00095C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsValid_ReturnValue_7) == 0x00095D, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BPGetAbilityByClass_ReturnValue) == 0x000960, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BPGetAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_DynamicCast_AsHeavy_Attack_Ability) == 0x000968, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_DynamicCast_AsHeavy_Attack_Ability' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_DynamicCast_bSuccess_2) == 0x000970, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetChargePercent_ReturnValue) == 0x000974, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetChargePercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Source) == 0x000978, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Source' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Bullet) == 0x000980, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Bullet' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Target) == 0x000988, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Ability) == 0x000990, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Ability' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_effectiveDamage) == 0x000998, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_effectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_DamageValue) == 0x0009A0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_DamageValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000AD8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Force_Feedback_Vertical_FF1) == 0x000AE0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Force_Feedback_Vertical_FF1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Force_Feedback_Vertical_FF2) == 0x000AE8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Force_Feedback_Vertical_FF2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Force_Feedback_Vertical_FF3) == 0x000AF0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Force_Feedback_Vertical_FF3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Force_Feedback_Vertical_FF4) == 0x000AF8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Force_Feedback_Vertical_FF4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetAbilityController_ReturnValue_1) == 0x000B00, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetAbilityController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000B08, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakVector_X_1) == 0x000B14, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakVector_Y_1) == 0x000B18, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakVector_Z_1) == 0x000B1C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000B20, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_InteractedActor_1) == 0x000B28, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_InteractedActor_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsValid_ReturnValue_8) == 0x000B30, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_DynamicCast_AsBP_Offering_Shrine) == 0x000B38, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_DynamicCast_AsBP_Offering_Shrine' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_DynamicCast_bSuccess_3) == 0x000B40, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_10) == 0x000B44, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_InteractedActor) == 0x000B58, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_InteractedActor' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_DynamicCast_AsBP_Offering_Shrine_1) == 0x000B60, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_DynamicCast_AsBP_Offering_Shrine_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_DynamicCast_bSuccess_4) == 0x000B68, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_11) == 0x000B6C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetManGameMode_ReturnValue_1) == 0x000B80, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetManGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Hero) == 0x000B88, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Hero' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_int_Loop_Counter_Variable) == 0x000B90, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_12) == 0x000B94, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Less_IntInt_ReturnValue) == 0x000BA4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Add_IntInt_ReturnValue_1) == 0x000BA8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetStatusEffectController_ReturnValue) == 0x000BB0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetStatusEffectController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_Change) == 0x000BB8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_Change' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_StatusType) == 0x000BB9, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_StatusType' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_SourceEntity) == 0x000BC0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_SourceEntity' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_StackNum) == 0x000BC8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_StackNum' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000BCC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_SwitchEnum_CmpSuccess) == 0x000BCD, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_SwitchEnum_CmpSuccess_1) == 0x000BCE, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_SwitchEnum_CmpSuccess_2) == 0x000BCF, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsCameraUpsideDown_ReturnValue) == 0x000BD0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsCameraUpsideDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000BD4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000C5C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_bool_Has_Been_Initd_Variable_4) == 0x000CE4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetListenerPosition_ReturnValue) == 0x000CE8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetListenerPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetListenerPosition_ReturnValue_1) == 0x000CF4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetListenerPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakVector_X_2) == 0x000D00, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakVector_Y_2) == 0x000D04, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BreakVector_Z_2) == 0x000D08, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_13) == 0x000D0C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000D1C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_MakeVector_ReturnValue_3) == 0x000D20, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_14) == 0x000D2C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000D3C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_OnInteractAbility) == 0x000DC8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_OnInteractAbility' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_bool_IsClosed_Variable_4) == 0x000DD0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetAbilityController_ReturnValue_2) == 0x000DD8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetAbilityController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetOwner_ReturnValue) == 0x000DE0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetObjectClass_ReturnValue_1) == 0x000DE8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_int_Array_Index_Variable_1) == 0x000DF0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Array_Get_Item_2) == 0x000DF8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsValid_ReturnValue_9) == 0x000E00, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_int_Array_Index_Variable_2) == 0x000E04, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Array_Get_Item_3) == 0x000E08, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetAbilityController_ReturnValue_3) == 0x000E10, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetAbilityController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetHitReactionPassive_ReturnValue) == 0x000E18, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetHitReactionPassive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_int_Loop_Counter_Variable_1) == 0x000E20, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Less_IntInt_ReturnValue_1) == 0x000E24, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Add_IntInt_ReturnValue_2) == 0x000E28, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetSlotMeshComponent_ReturnValue) == 0x000E30, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetSlotMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_AnimID_1) == 0x000E38, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_AnimID_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_Event_AnimID) == 0x000E40, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_Event_AnimID' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_int_Loop_Counter_Variable_2) == 0x000E48, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_int_Loop_Counter_Variable_3) == 0x000E4C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Less_IntInt_ReturnValue_2) == 0x000E50, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Add_IntInt_ReturnValue_3) == 0x000E54, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Less_IntInt_ReturnValue_3) == 0x000E58, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Add_IntInt_ReturnValue_4) == 0x000E5C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_15) == 0x000E60, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CreateDelegate_OutputDelegate_16) == 0x000E70, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue) == 0x000E80, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_1) == 0x000E84, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_2) == 0x000E88, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_3) == 0x000E8C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_4) == 0x000E90, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_5) == 0x000E94, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_6) == 0x000E98, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_7) == 0x000E9C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_8) == 0x000EA0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_9) == 0x000EA4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_10) == 0x000EA8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_11) == 0x000EAC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_12) == 0x000EB0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_PostAkEvent_ReturnValue_13) == 0x000EB4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_PostAkEvent_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetCineCameraComponent_ReturnValue_1) == 0x000EB8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetCineCameraComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BPIsFalling_ReturnValue) == 0x000EC0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BPIsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, Temp_int_Array_Index_Variable_3) == 0x000EC4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Array_Get_Item_4) == 0x000EC8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsValid_ReturnValue_10) == 0x000ED0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_SpawnSystemAttached_ReturnValue_1) == 0x000ED8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_SpawnSystemAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_bActive) == 0x000EE0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_bActive' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BPGetEntropyLantern_ReturnValue) == 0x000EE8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BPGetEntropyLantern_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetLifeAuraValue_ReturnValue) == 0x000EF0, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetLifeAuraValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_GetMaxLifeAuraValue_ReturnValue) == 0x000EF4, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_GetMaxLifeAuraValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_SafeDivide_ReturnValue) == 0x000EF8, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000EFC, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_FClamp_ReturnValue) == 0x000F00, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BPGetEntropyLantern_ReturnValue_1) == 0x000F08, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BPGetEntropyLantern_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_preHealth) == 0x000F10, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_preHealth' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, K2Node_CustomEvent_postHealth) == 0x000F14, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::K2Node_CustomEvent_postHealth' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_IsValid_ReturnValue_11) == 0x000F18, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_BPGetMaxHealth_ReturnValue) == 0x000F1C, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_BPGetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000F20, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000F24, "Member 'BP_BrawlerHero_C_ExecuteUbergraph_BP_BrawlerHero::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.OnHealthChangedEvent_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_BrawlerHero_C_OnHealthChangedEvent_Event_0 final
{
public:
	float                                         preHealth;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         postHealth;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_OnHealthChangedEvent_Event_0) == 0x000004, "Wrong alignment on BP_BrawlerHero_C_OnHealthChangedEvent_Event_0");
static_assert(sizeof(BP_BrawlerHero_C_OnHealthChangedEvent_Event_0) == 0x000008, "Wrong size on BP_BrawlerHero_C_OnHealthChangedEvent_Event_0");
static_assert(offsetof(BP_BrawlerHero_C_OnHealthChangedEvent_Event_0, preHealth) == 0x000000, "Member 'BP_BrawlerHero_C_OnHealthChangedEvent_Event_0::preHealth' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_OnHealthChangedEvent_Event_0, postHealth) == 0x000004, "Member 'BP_BrawlerHero_C_OnHealthChangedEvent_Event_0::postHealth' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.OnLanternStateSwitch_Event_0
// 0x0001 (0x0001 - 0x0000)
struct BP_BrawlerHero_C_OnLanternStateSwitch_Event_0 final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrawlerHero_C_OnLanternStateSwitch_Event_0) == 0x000001, "Wrong alignment on BP_BrawlerHero_C_OnLanternStateSwitch_Event_0");
static_assert(sizeof(BP_BrawlerHero_C_OnLanternStateSwitch_Event_0) == 0x000001, "Wrong size on BP_BrawlerHero_C_OnLanternStateSwitch_Event_0");
static_assert(offsetof(BP_BrawlerHero_C_OnLanternStateSwitch_Event_0, bActive) == 0x000000, "Member 'BP_BrawlerHero_C_OnLanternStateSwitch_Event_0::bActive' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.OnVfxAnimStopped
// 0x0008 (0x0008 - 0x0000)
struct BP_BrawlerHero_C_OnVfxAnimStopped final
{
public:
	class UAnimID*                                AnimID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_OnVfxAnimStopped) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_OnVfxAnimStopped");
static_assert(sizeof(BP_BrawlerHero_C_OnVfxAnimStopped) == 0x000008, "Wrong size on BP_BrawlerHero_C_OnVfxAnimStopped");
static_assert(offsetof(BP_BrawlerHero_C_OnVfxAnimStopped, AnimID) == 0x000000, "Member 'BP_BrawlerHero_C_OnVfxAnimStopped::AnimID' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.OnVfxAnimStarted
// 0x0008 (0x0008 - 0x0000)
struct BP_BrawlerHero_C_OnVfxAnimStarted final
{
public:
	class UAnimID*                                AnimID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_OnVfxAnimStarted) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_OnVfxAnimStarted");
static_assert(sizeof(BP_BrawlerHero_C_OnVfxAnimStarted) == 0x000008, "Wrong size on BP_BrawlerHero_C_OnVfxAnimStarted");
static_assert(offsetof(BP_BrawlerHero_C_OnVfxAnimStarted, AnimID) == 0x000000, "Member 'BP_BrawlerHero_C_OnVfxAnimStarted::AnimID' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.InteractStarted
// 0x0008 (0x0008 - 0x0000)
struct BP_BrawlerHero_C_InteractStarted final
{
public:
	class UOnInteractAbility*                     OnInteractAbility;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_InteractStarted) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_InteractStarted");
static_assert(sizeof(BP_BrawlerHero_C_InteractStarted) == 0x000008, "Wrong size on BP_BrawlerHero_C_InteractStarted");
static_assert(offsetof(BP_BrawlerHero_C_InteractStarted, OnInteractAbility) == 0x000000, "Member 'BP_BrawlerHero_C_InteractStarted::OnInteractAbility' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.OnStatusEffectChanged
// 0x0018 (0x0018 - 0x0000)
struct BP_BrawlerHero_C_OnStatusEffectChanged final
{
public:
	EStatusEffectChange                           Change;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStatusEffectType                             StatusType;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SourceEntity;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StackNum;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_OnStatusEffectChanged) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_OnStatusEffectChanged");
static_assert(sizeof(BP_BrawlerHero_C_OnStatusEffectChanged) == 0x000018, "Wrong size on BP_BrawlerHero_C_OnStatusEffectChanged");
static_assert(offsetof(BP_BrawlerHero_C_OnStatusEffectChanged, Change) == 0x000000, "Member 'BP_BrawlerHero_C_OnStatusEffectChanged::Change' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_OnStatusEffectChanged, StatusType) == 0x000001, "Member 'BP_BrawlerHero_C_OnStatusEffectChanged::StatusType' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_OnStatusEffectChanged, SourceEntity) == 0x000008, "Member 'BP_BrawlerHero_C_OnStatusEffectChanged::SourceEntity' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_OnStatusEffectChanged, StackNum) == 0x000010, "Member 'BP_BrawlerHero_C_OnStatusEffectChanged::StackNum' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.HeroRespawnEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_BrawlerHero_C_HeroRespawnEvent final
{
public:
	class AHeroBase*                              Hero;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_HeroRespawnEvent) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_HeroRespawnEvent");
static_assert(sizeof(BP_BrawlerHero_C_HeroRespawnEvent) == 0x000008, "Wrong size on BP_BrawlerHero_C_HeroRespawnEvent");
static_assert(offsetof(BP_BrawlerHero_C_HeroRespawnEvent, Hero) == 0x000000, "Member 'BP_BrawlerHero_C_HeroRespawnEvent::Hero' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.HoldInteractCancelled
// 0x0008 (0x0008 - 0x0000)
struct BP_BrawlerHero_C_HoldInteractCancelled final
{
public:
	class AActor*                                 InteractedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_HoldInteractCancelled) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_HoldInteractCancelled");
static_assert(sizeof(BP_BrawlerHero_C_HoldInteractCancelled) == 0x000008, "Wrong size on BP_BrawlerHero_C_HoldInteractCancelled");
static_assert(offsetof(BP_BrawlerHero_C_HoldInteractCancelled, InteractedActor) == 0x000000, "Member 'BP_BrawlerHero_C_HoldInteractCancelled::InteractedActor' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.HoldInteractStarted
// 0x0008 (0x0008 - 0x0000)
struct BP_BrawlerHero_C_HoldInteractStarted final
{
public:
	class AActor*                                 InteractedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_HoldInteractStarted) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_HoldInteractStarted");
static_assert(sizeof(BP_BrawlerHero_C_HoldInteractStarted) == 0x000008, "Wrong size on BP_BrawlerHero_C_HoldInteractStarted");
static_assert(offsetof(BP_BrawlerHero_C_HoldInteractStarted, InteractedActor) == 0x000000, "Member 'BP_BrawlerHero_C_HoldInteractStarted::InteractedActor' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.BPDamageTakenEvent_Event_0
// 0x0160 (0x0160 - 0x0000)
struct BP_BrawlerHero_C_BPDamageTakenEvent_Event_0 final
{
public:
	class UAbilityController*                     Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     Bullet;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     Target;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           Ability;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         effectiveDamage;                                   // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageValue                           DamageValue;                                       // 0x0028(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BP_BrawlerHero_C_BPDamageTakenEvent_Event_0) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_BPDamageTakenEvent_Event_0");
static_assert(sizeof(BP_BrawlerHero_C_BPDamageTakenEvent_Event_0) == 0x000160, "Wrong size on BP_BrawlerHero_C_BPDamageTakenEvent_Event_0");
static_assert(offsetof(BP_BrawlerHero_C_BPDamageTakenEvent_Event_0, Source) == 0x000000, "Member 'BP_BrawlerHero_C_BPDamageTakenEvent_Event_0::Source' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_BPDamageTakenEvent_Event_0, Bullet) == 0x000008, "Member 'BP_BrawlerHero_C_BPDamageTakenEvent_Event_0::Bullet' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_BPDamageTakenEvent_Event_0, Target) == 0x000010, "Member 'BP_BrawlerHero_C_BPDamageTakenEvent_Event_0::Target' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_BPDamageTakenEvent_Event_0, Ability) == 0x000018, "Member 'BP_BrawlerHero_C_BPDamageTakenEvent_Event_0::Ability' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_BPDamageTakenEvent_Event_0, effectiveDamage) == 0x000020, "Member 'BP_BrawlerHero_C_BPDamageTakenEvent_Event_0::effectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_BPDamageTakenEvent_Event_0, DamageValue) == 0x000028, "Member 'BP_BrawlerHero_C_BPDamageTakenEvent_Event_0::DamageValue' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.OnHitCameraShake
// 0x0008 (0x0008 - 0x0000)
struct BP_BrawlerHero_C_OnHitCameraShake final
{
public:
	TSubclassOf<class UGameCameraShake>           CameraShake;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_OnHitCameraShake) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_OnHitCameraShake");
static_assert(sizeof(BP_BrawlerHero_C_OnHitCameraShake) == 0x000008, "Wrong size on BP_BrawlerHero_C_OnHitCameraShake");
static_assert(offsetof(BP_BrawlerHero_C_OnHitCameraShake, CameraShake) == 0x000000, "Member 'BP_BrawlerHero_C_OnHitCameraShake::CameraShake' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.OnPlayLevelSequence
// 0x0030 (0x0030 - 0x0000)
struct BP_BrawlerHero_C_OnPlayLevelSequence final
{
public:
	class ULevelSequence*                         LevelSequence;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Actors;                                            // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FMovieSceneObjectBindingID>     Bindings;                                          // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         BlendInDuration;                                   // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutDuration;                                  // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_OnPlayLevelSequence) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_OnPlayLevelSequence");
static_assert(sizeof(BP_BrawlerHero_C_OnPlayLevelSequence) == 0x000030, "Wrong size on BP_BrawlerHero_C_OnPlayLevelSequence");
static_assert(offsetof(BP_BrawlerHero_C_OnPlayLevelSequence, LevelSequence) == 0x000000, "Member 'BP_BrawlerHero_C_OnPlayLevelSequence::LevelSequence' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_OnPlayLevelSequence, Actors) == 0x000008, "Member 'BP_BrawlerHero_C_OnPlayLevelSequence::Actors' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_OnPlayLevelSequence, Bindings) == 0x000018, "Member 'BP_BrawlerHero_C_OnPlayLevelSequence::Bindings' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_OnPlayLevelSequence, BlendInDuration) == 0x000028, "Member 'BP_BrawlerHero_C_OnPlayLevelSequence::BlendInDuration' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_OnPlayLevelSequence, BlendOutDuration) == 0x00002C, "Member 'BP_BrawlerHero_C_OnPlayLevelSequence::BlendOutDuration' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.CharacterHit
// 0x0020 (0x0020 - 0x0000)
struct BP_BrawlerHero_C_CharacterHit final
{
public:
	class ACharacterBase*                         Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBase*                         Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           Ability;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimID*                                Anim;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_CharacterHit) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_CharacterHit");
static_assert(sizeof(BP_BrawlerHero_C_CharacterHit) == 0x000020, "Wrong size on BP_BrawlerHero_C_CharacterHit");
static_assert(offsetof(BP_BrawlerHero_C_CharacterHit, Source) == 0x000000, "Member 'BP_BrawlerHero_C_CharacterHit::Source' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_CharacterHit, Target) == 0x000008, "Member 'BP_BrawlerHero_C_CharacterHit::Target' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_CharacterHit, Ability) == 0x000010, "Member 'BP_BrawlerHero_C_CharacterHit::Ability' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_CharacterHit, Anim) == 0x000018, "Member 'BP_BrawlerHero_C_CharacterHit::Anim' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.PlayerCombatVOEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_BrawlerHero_C_PlayerCombatVOEvent final
{
public:
	bool                                          bTaunt;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrawlerHero_C_PlayerCombatVOEvent) == 0x000001, "Wrong alignment on BP_BrawlerHero_C_PlayerCombatVOEvent");
static_assert(sizeof(BP_BrawlerHero_C_PlayerCombatVOEvent) == 0x000001, "Wrong size on BP_BrawlerHero_C_PlayerCombatVOEvent");
static_assert(offsetof(BP_BrawlerHero_C_PlayerCombatVOEvent, bTaunt) == 0x000000, "Member 'BP_BrawlerHero_C_PlayerCombatVOEvent::bTaunt' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.OnGrapplingHookStart
// 0x0008 (0x0008 - 0x0000)
struct BP_BrawlerHero_C_OnGrapplingHookStart final
{
public:
	class AActor*                                 GrapplingHook_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_OnGrapplingHookStart) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_OnGrapplingHookStart");
static_assert(sizeof(BP_BrawlerHero_C_OnGrapplingHookStart) == 0x000008, "Wrong size on BP_BrawlerHero_C_OnGrapplingHookStart");
static_assert(offsetof(BP_BrawlerHero_C_OnGrapplingHookStart, GrapplingHook_0) == 0x000000, "Member 'BP_BrawlerHero_C_OnGrapplingHookStart::GrapplingHook_0' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BrawlerHero_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BrawlerHero_C_ReceiveTick");
static_assert(sizeof(BP_BrawlerHero_C_ReceiveTick) == 0x000004, "Wrong size on BP_BrawlerHero_C_ReceiveTick");
static_assert(offsetof(BP_BrawlerHero_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BrawlerHero_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.OnLevelSequence
// 0x0050 (0x0050 - 0x0000)
struct BP_BrawlerHero_C_OnLevelSequence final
{
public:
	class ULevelSequence*                         LevelSequence;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             WorldTransform;                                    // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                         BlendInDuration;                                   // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutDuration;                                  // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_OnLevelSequence) == 0x000010, "Wrong alignment on BP_BrawlerHero_C_OnLevelSequence");
static_assert(sizeof(BP_BrawlerHero_C_OnLevelSequence) == 0x000050, "Wrong size on BP_BrawlerHero_C_OnLevelSequence");
static_assert(offsetof(BP_BrawlerHero_C_OnLevelSequence, LevelSequence) == 0x000000, "Member 'BP_BrawlerHero_C_OnLevelSequence::LevelSequence' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_OnLevelSequence, WorldTransform) == 0x000010, "Member 'BP_BrawlerHero_C_OnLevelSequence::WorldTransform' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_OnLevelSequence, BlendInDuration) == 0x000040, "Member 'BP_BrawlerHero_C_OnLevelSequence::BlendInDuration' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_OnLevelSequence, BlendOutDuration) == 0x000044, "Member 'BP_BrawlerHero_C_OnLevelSequence::BlendOutDuration' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.CustomEvent_0
// 0x0298 (0x0298 - 0x0000)
struct BP_BrawlerHero_C_CustomEvent_0 final
{
public:
	class AActorSoul*                             Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActorSoul*                             Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           Ability;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimID*                                Anim;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         effectiveDamage;                                   // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageValue                           OriginalDamageValue;                               // 0x0028(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FDamageValue                           DamageValue;                                       // 0x0160(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BP_BrawlerHero_C_CustomEvent_0) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_CustomEvent_0");
static_assert(sizeof(BP_BrawlerHero_C_CustomEvent_0) == 0x000298, "Wrong size on BP_BrawlerHero_C_CustomEvent_0");
static_assert(offsetof(BP_BrawlerHero_C_CustomEvent_0, Source) == 0x000000, "Member 'BP_BrawlerHero_C_CustomEvent_0::Source' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_CustomEvent_0, Target) == 0x000008, "Member 'BP_BrawlerHero_C_CustomEvent_0::Target' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_CustomEvent_0, Ability) == 0x000010, "Member 'BP_BrawlerHero_C_CustomEvent_0::Ability' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_CustomEvent_0, Anim) == 0x000018, "Member 'BP_BrawlerHero_C_CustomEvent_0::Anim' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_CustomEvent_0, effectiveDamage) == 0x000020, "Member 'BP_BrawlerHero_C_CustomEvent_0::effectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_CustomEvent_0, OriginalDamageValue) == 0x000028, "Member 'BP_BrawlerHero_C_CustomEvent_0::OriginalDamageValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_CustomEvent_0, DamageValue) == 0x000160, "Member 'BP_BrawlerHero_C_CustomEvent_0::DamageValue' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.LocalHitEvent
// 0x0020 (0x0020 - 0x0000)
struct BP_BrawlerHero_C_LocalHitEvent final
{
public:
	class ACharacterBase*                         Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBase*                         Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           Ability;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimID*                                Anim;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_LocalHitEvent) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_LocalHitEvent");
static_assert(sizeof(BP_BrawlerHero_C_LocalHitEvent) == 0x000020, "Wrong size on BP_BrawlerHero_C_LocalHitEvent");
static_assert(offsetof(BP_BrawlerHero_C_LocalHitEvent, Source) == 0x000000, "Member 'BP_BrawlerHero_C_LocalHitEvent::Source' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_LocalHitEvent, Target) == 0x000008, "Member 'BP_BrawlerHero_C_LocalHitEvent::Target' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_LocalHitEvent, Ability) == 0x000010, "Member 'BP_BrawlerHero_C_LocalHitEvent::Ability' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_LocalHitEvent, Anim) == 0x000018, "Member 'BP_BrawlerHero_C_LocalHitEvent::Anim' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.OnVfxEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_BrawlerHero_C_OnVfxEvent final
{
public:
	class FName                                   VfxEventType;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_OnVfxEvent) == 0x000004, "Wrong alignment on BP_BrawlerHero_C_OnVfxEvent");
static_assert(sizeof(BP_BrawlerHero_C_OnVfxEvent) == 0x000008, "Wrong size on BP_BrawlerHero_C_OnVfxEvent");
static_assert(offsetof(BP_BrawlerHero_C_OnVfxEvent, VfxEventType) == 0x000000, "Member 'BP_BrawlerHero_C_OnVfxEvent::VfxEventType' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.EVFXGraph
// 0x0008 (0x0008 - 0x0000)
struct BP_BrawlerHero_C_EVFXGraph final
{
public:
	class FName                                   VfxEventType;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_EVFXGraph) == 0x000004, "Wrong alignment on BP_BrawlerHero_C_EVFXGraph");
static_assert(sizeof(BP_BrawlerHero_C_EVFXGraph) == 0x000008, "Wrong size on BP_BrawlerHero_C_EVFXGraph");
static_assert(offsetof(BP_BrawlerHero_C_EVFXGraph, VfxEventType) == 0x000000, "Member 'BP_BrawlerHero_C_EVFXGraph::VfxEventType' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.OnKilled_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_BrawlerHero_C_OnKilled_Event final
{
public:
	class UObject*                                Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     KillerAbilityController;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_OnKilled_Event) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_OnKilled_Event");
static_assert(sizeof(BP_BrawlerHero_C_OnKilled_Event) == 0x000010, "Wrong size on BP_BrawlerHero_C_OnKilled_Event");
static_assert(offsetof(BP_BrawlerHero_C_OnKilled_Event, Killer) == 0x000000, "Member 'BP_BrawlerHero_C_OnKilled_Event::Killer' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_OnKilled_Event, KillerAbilityController) == 0x000008, "Member 'BP_BrawlerHero_C_OnKilled_Event::KillerAbilityController' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.InpActEvt_ResetFreeCamera_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_BrawlerHero_C_InpActEvt_ResetFreeCamera_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_InpActEvt_ResetFreeCamera_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_InpActEvt_ResetFreeCamera_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_BrawlerHero_C_InpActEvt_ResetFreeCamera_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_BrawlerHero_C_InpActEvt_ResetFreeCamera_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_BrawlerHero_C_InpActEvt_ResetFreeCamera_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_BrawlerHero_C_InpActEvt_ResetFreeCamera_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.InpActEvt_ToggleFreeCamera_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_BrawlerHero_C_InpActEvt_ToggleFreeCamera_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_InpActEvt_ToggleFreeCamera_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_InpActEvt_ToggleFreeCamera_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_BrawlerHero_C_InpActEvt_ToggleFreeCamera_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_BrawlerHero_C_InpActEvt_ToggleFreeCamera_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_BrawlerHero_C_InpActEvt_ToggleFreeCamera_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_BrawlerHero_C_InpActEvt_ToggleFreeCamera_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.Force Feedback
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BrawlerHero_C_Force_Feedback final
{
public:
	struct FVector                                SourceLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SourceRotation;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetChildComponent_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_1; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_2; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_3; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrawlerHero_C_Force_Feedback) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_Force_Feedback");
static_assert(sizeof(BP_BrawlerHero_C_Force_Feedback) == 0x0000A8, "Wrong size on BP_BrawlerHero_C_Force_Feedback");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, SourceLocation) == 0x000000, "Member 'BP_BrawlerHero_C_Force_Feedback::SourceLocation' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, SourceRotation) == 0x00000C, "Member 'BP_BrawlerHero_C_Force_Feedback::SourceRotation' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_SpawnForceFeedbackAttached_ReturnValue) == 0x000020, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_SpawnForceFeedbackAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_GetAbilityController_ReturnValue) == 0x000038, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000040, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_GetChildComponent_ReturnValue) == 0x000050, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_GetChildComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_SpawnForceFeedbackAttached_ReturnValue_1) == 0x000058, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_SpawnForceFeedbackAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_SpawnForceFeedbackAttached_ReturnValue_2) == 0x000060, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_SpawnForceFeedbackAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_SpawnForceFeedbackAttached_ReturnValue_3) == 0x000068, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_SpawnForceFeedbackAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_BreakVector_X_1) == 0x00007C, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_BreakVector_Y_1) == 0x000080, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_BreakVector_Z_1) == 0x000084, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000094, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_Abs_ReturnValue) == 0x000098, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_Add_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_BrawlerHero_C_Force_Feedback::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.Force_Feedback_Thrall
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BrawlerHero_C_Force_Feedback_Thrall final
{
public:
	struct FVector                                SourceLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SourceRotation;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetChildComponent_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_1; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_2; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_3; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrawlerHero_C_Force_Feedback_Thrall) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_Force_Feedback_Thrall");
static_assert(sizeof(BP_BrawlerHero_C_Force_Feedback_Thrall) == 0x0000A8, "Wrong size on BP_BrawlerHero_C_Force_Feedback_Thrall");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, SourceLocation) == 0x000000, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::SourceLocation' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, SourceRotation) == 0x00000C, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::SourceRotation' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_SpawnForceFeedbackAttached_ReturnValue) == 0x000020, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_SpawnForceFeedbackAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_GetAbilityController_ReturnValue) == 0x000038, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000040, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_GetChildComponent_ReturnValue) == 0x000050, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_GetChildComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_SpawnForceFeedbackAttached_ReturnValue_1) == 0x000058, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_SpawnForceFeedbackAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_SpawnForceFeedbackAttached_ReturnValue_2) == 0x000060, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_SpawnForceFeedbackAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_SpawnForceFeedbackAttached_ReturnValue_3) == 0x000068, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_SpawnForceFeedbackAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_BreakVector_X_1) == 0x00007C, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_BreakVector_Y_1) == 0x000080, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_BreakVector_Z_1) == 0x000084, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000094, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_Abs_ReturnValue) == 0x000098, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_Add_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.Force_Feedback_Thrall_Steps
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BrawlerHero_C_Force_Feedback_Thrall_Steps final
{
public:
	struct FVector                                SourceLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SourceRotation;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetChildComponent_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_1; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_2; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_3; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_Force_Feedback_Thrall_Steps");
static_assert(sizeof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps) == 0x0000B0, "Wrong size on BP_BrawlerHero_C_Force_Feedback_Thrall_Steps");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, SourceLocation) == 0x000000, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::SourceLocation' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, SourceRotation) == 0x00000C, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::SourceRotation' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000014, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000018, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_SpawnForceFeedbackAttached_ReturnValue) == 0x000020, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_SpawnForceFeedbackAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_GetAbilityController_ReturnValue) == 0x000030, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_BreakVector_Y) == 0x00003C, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000050, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_GetChildComponent_ReturnValue) == 0x000058, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_GetChildComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_SpawnForceFeedbackAttached_ReturnValue_1) == 0x000070, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_SpawnForceFeedbackAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_BreakVector_X_1) == 0x000078, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_BreakVector_Y_1) == 0x00007C, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_BreakVector_Z_1) == 0x000080, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_SpawnForceFeedbackAttached_ReturnValue_2) == 0x000088, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_SpawnForceFeedbackAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_SpawnForceFeedbackAttached_ReturnValue_3) == 0x000098, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_SpawnForceFeedbackAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_Abs_ReturnValue) == 0x0000A0, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000A4, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Thrall_Steps, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BP_BrawlerHero_C_Force_Feedback_Thrall_Steps::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.StatusEffectVO
// 0x0007 (0x0007 - 0x0000)
struct BP_BrawlerHero_C_StatusEffectVO final
{
public:
	EStatusEffectType                             StatusEffectType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrawlerHero_C_StatusEffectVO) == 0x000001, "Wrong alignment on BP_BrawlerHero_C_StatusEffectVO");
static_assert(sizeof(BP_BrawlerHero_C_StatusEffectVO) == 0x000007, "Wrong size on BP_BrawlerHero_C_StatusEffectVO");
static_assert(offsetof(BP_BrawlerHero_C_StatusEffectVO, StatusEffectType) == 0x000000, "Member 'BP_BrawlerHero_C_StatusEffectVO::StatusEffectType' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_StatusEffectVO, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_BrawlerHero_C_StatusEffectVO::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_StatusEffectVO, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BP_BrawlerHero_C_StatusEffectVO::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_StatusEffectVO, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000003, "Member 'BP_BrawlerHero_C_StatusEffectVO::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_StatusEffectVO, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000004, "Member 'BP_BrawlerHero_C_StatusEffectVO::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_StatusEffectVO, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000005, "Member 'BP_BrawlerHero_C_StatusEffectVO::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_StatusEffectVO, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000006, "Member 'BP_BrawlerHero_C_StatusEffectVO::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.TrapVOs
// 0x000C (0x000C - 0x0000)
struct BP_BrawlerHero_C_TrapVOs final
{
public:
	class FName                                   TrapType;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrawlerHero_C_TrapVOs) == 0x000004, "Wrong alignment on BP_BrawlerHero_C_TrapVOs");
static_assert(sizeof(BP_BrawlerHero_C_TrapVOs) == 0x00000C, "Wrong size on BP_BrawlerHero_C_TrapVOs");
static_assert(offsetof(BP_BrawlerHero_C_TrapVOs, TrapType) == 0x000000, "Member 'BP_BrawlerHero_C_TrapVOs::TrapType' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_TrapVOs, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000008, "Member 'BP_BrawlerHero_C_TrapVOs::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_TrapVOs, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000009, "Member 'BP_BrawlerHero_C_TrapVOs::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_TrapVOs, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x00000A, "Member 'BP_BrawlerHero_C_TrapVOs::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.Force_Feedback_Explosion
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BrawlerHero_C_Force_Feedback_Explosion final
{
public:
	struct FVector                                SourceLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SourceRotation;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Intensity;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue;   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetChildComponent_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_2; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_3; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrawlerHero_C_Force_Feedback_Explosion) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_Force_Feedback_Explosion");
static_assert(sizeof(BP_BrawlerHero_C_Force_Feedback_Explosion) == 0x0000B0, "Wrong size on BP_BrawlerHero_C_Force_Feedback_Explosion");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, SourceLocation) == 0x000000, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::SourceLocation' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, SourceRotation) == 0x00000C, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::SourceRotation' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, Intensity) == 0x000010, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::Intensity' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_SpawnForceFeedbackAttached_ReturnValue) == 0x000028, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_SpawnForceFeedbackAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_GetAbilityController_ReturnValue) == 0x000038, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_BreakVector_Y) == 0x000044, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_GetPlayerController_ReturnValue) == 0x000050, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000058, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_GetChildComponent_ReturnValue) == 0x000060, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_GetChildComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_SpawnForceFeedbackAttached_ReturnValue_1) == 0x000078, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_SpawnForceFeedbackAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_BreakVector_X_1) == 0x000080, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_BreakVector_Y_1) == 0x000084, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_BreakVector_Z_1) == 0x000088, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_SpawnForceFeedbackAttached_ReturnValue_2) == 0x000090, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_SpawnForceFeedbackAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_SpawnForceFeedbackAttached_ReturnValue_3) == 0x0000A0, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_SpawnForceFeedbackAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_Abs_ReturnValue) == 0x0000A8, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Explosion, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000AD, "Member 'BP_BrawlerHero_C_Force_Feedback_Explosion::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.SoundOnDamageReceived
// 0x01A0 (0x01A0 - 0x0000)
struct BP_BrawlerHero_C_SoundOnDamageReceived final
{
public:
	struct FDamageValue                           Damage;                                            // 0x0000(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x013C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0154(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x016C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_2;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttributeContainer*                    CallFunc_GetAttributeContainer_ReturnValue;        // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrawlerHero_C_SoundOnDamageReceived) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_SoundOnDamageReceived");
static_assert(sizeof(BP_BrawlerHero_C_SoundOnDamageReceived) == 0x0001A0, "Wrong size on BP_BrawlerHero_C_SoundOnDamageReceived");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, Damage) == 0x000000, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::Damage' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000138, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, Temp_delegate_Variable) == 0x00013C, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_IsValid_ReturnValue) == 0x00014C, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_PostEvent_ReturnValue) == 0x000150, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, Temp_delegate_Variable_1) == 0x000154, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_IsValid_ReturnValue_1) == 0x000164, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_PostEvent_ReturnValue_1) == 0x000168, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, Temp_delegate_Variable_2) == 0x00016C, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_IsValid_ReturnValue_2) == 0x00017C, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_PostEvent_ReturnValue_2) == 0x000180, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_PostEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_GetAttributeContainer_ReturnValue) == 0x000188, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_GetAttributeContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_IsValid_ReturnValue_3) == 0x000190, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000194, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000198, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00019C, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00019D, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnDamageReceived, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x00019E, "Member 'BP_BrawlerHero_C_SoundOnDamageReceived::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.SoundOnAnimationEvent
// 0x0048 (0x0048 - 0x0000)
struct BP_BrawlerHero_C_SoundOnAnimationEvent final
{
public:
	struct FAnimEventParam                        Param;                                             // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0030(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_SoundOnAnimationEvent) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_SoundOnAnimationEvent");
static_assert(sizeof(BP_BrawlerHero_C_SoundOnAnimationEvent) == 0x000048, "Wrong size on BP_BrawlerHero_C_SoundOnAnimationEvent");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnAnimationEvent, Param) == 0x000000, "Member 'BP_BrawlerHero_C_SoundOnAnimationEvent::Param' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnAnimationEvent, Temp_delegate_Variable) == 0x000030, "Member 'BP_BrawlerHero_C_SoundOnAnimationEvent::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnAnimationEvent, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000040, "Member 'BP_BrawlerHero_C_SoundOnAnimationEvent::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_SoundOnAnimationEvent, CallFunc_PostEvent_ReturnValue) == 0x000044, "Member 'BP_BrawlerHero_C_SoundOnAnimationEvent::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.Force_Feedback_Vertical
// 0x0110 (0x0110 - 0x0000)
struct BP_BrawlerHero_C_Force_Feedback_Vertical final
{
public:
	struct FVector                                SourceLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SourceRotation;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Intensity;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   ForceFeedbackRight;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   ForceFeedbackLeft;                                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CameraShake;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XOffset_0;                                         // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                FF1;                                               // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                FF2;                                               // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                FF3;                                               // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                FF4;                                               // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetChildComponent_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue;   // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_1; // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_2; // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_3; // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_Force_Feedback_Vertical) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_Force_Feedback_Vertical");
static_assert(sizeof(BP_BrawlerHero_C_Force_Feedback_Vertical) == 0x000110, "Wrong size on BP_BrawlerHero_C_Force_Feedback_Vertical");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, SourceLocation) == 0x000000, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::SourceLocation' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, SourceRotation) == 0x00000C, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::SourceRotation' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, Intensity) == 0x000010, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::Intensity' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, ForceFeedbackRight) == 0x000018, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::ForceFeedbackRight' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, ForceFeedbackLeft) == 0x000020, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::ForceFeedbackLeft' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CameraShake) == 0x000028, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CameraShake' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, XOffset_0) == 0x000030, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::XOffset_0' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, FF1) == 0x000038, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::FF1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, FF2) == 0x000040, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::FF2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, FF3) == 0x000048, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::FF3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, FF4) == 0x000050, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::FF4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000060, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000068, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000070, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_GetAbilityController_ReturnValue) == 0x000078, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_BreakVector_X) == 0x000080, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_BreakVector_Y) == 0x000084, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_BreakVector_Z) == 0x000088, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_GetPlayerController_ReturnValue) == 0x000090, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Add_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000A0, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A8, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_GetChildComponent_ReturnValue) == 0x0000B8, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_GetChildComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_BreakVector_X_1) == 0x0000C0, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_BreakVector_Y_1) == 0x0000C4, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_BreakVector_Z_1) == 0x0000C8, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_SpawnForceFeedbackAttached_ReturnValue) == 0x0000D0, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_SpawnForceFeedbackAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000DC, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Abs_ReturnValue) == 0x0000E0, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000E4, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000E9, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_Abs_ReturnValue_1) == 0x0000EC, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x0000F0, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0000F1, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_SpawnForceFeedbackAttached_ReturnValue_1) == 0x0000F8, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_SpawnForceFeedbackAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_SpawnForceFeedbackAttached_ReturnValue_2) == 0x000100, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_SpawnForceFeedbackAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_Force_Feedback_Vertical, CallFunc_SpawnForceFeedbackAttached_ReturnValue_3) == 0x000108, "Member 'BP_BrawlerHero_C_Force_Feedback_Vertical::CallFunc_SpawnForceFeedbackAttached_ReturnValue_3' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.AddPostProcessMaterialsToGameCamera
// 0x05D0 (0x05D0 - 0x0000)
struct BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera final
{
public:
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0000(0x0010)(NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	class AGameCamera*                            CallFunc_GetGameCamera_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0058(0x0010)()
	class UPostProcessComponent*                  CallFunc_AddComponent_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0070(0x0560)()
};
static_assert(alignof(BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera) == 0x000010, "Wrong alignment on BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera");
static_assert(sizeof(BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera) == 0x0005D0, "Wrong size on BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera");
static_assert(offsetof(BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera, K2Node_MakeStruct_WeightedBlendable) == 0x000000, "Member 'BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera, CallFunc_GetGameCamera_ReturnValue) == 0x000050, "Member 'BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera::CallFunc_GetGameCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera, K2Node_MakeStruct_WeightedBlendables) == 0x000058, "Member 'BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera, CallFunc_AddComponent_ReturnValue) == 0x000068, "Member 'BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera, K2Node_MakeStruct_PostProcessSettings) == 0x000070, "Member 'BP_BrawlerHero_C_AddPostProcessMaterialsToGameCamera::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.PrintCameraSettings
// 0x0260 (0x0260 - 0x0000)
struct BP_BrawlerHero_C_PrintCameraSettings final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameCamera*                            CallFunc_GetGameCamera_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0xC];                                       // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TransformToString_ReturnValue;       // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_3;         // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_4;         // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_5;         // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_6;         // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrawlerHero_C_PrintCameraSettings) == 0x000010, "Wrong alignment on BP_BrawlerHero_C_PrintCameraSettings");
static_assert(sizeof(BP_BrawlerHero_C_PrintCameraSettings) == 0x000260, "Wrong size on BP_BrawlerHero_C_PrintCameraSettings");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_GetGameCamera_ReturnValue) == 0x000010, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_GetGameCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000018, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Conv_FloatToString_ReturnValue) == 0x000050, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000090, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C0, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Conv_TransformToString_ReturnValue) == 0x0000D0, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Conv_TransformToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Conv_VectorToString_ReturnValue) == 0x0000E0, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x0000F0, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x000100, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Conv_FloatToString_ReturnValue_3) == 0x000110, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Conv_FloatToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue) == 0x000120, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Conv_FloatToString_ReturnValue_4) == 0x000130, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Conv_FloatToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000140, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Conv_FloatToString_ReturnValue_5) == 0x000150, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Conv_FloatToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Conv_FloatToString_ReturnValue_6) == 0x000160, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Conv_FloatToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000170, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000180, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000190, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0001A0, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001B0, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0001C0, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001D0, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001E0, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001F0, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000200, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000210, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000220, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000230, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000240, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_PrintCameraSettings, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000250, "Member 'BP_BrawlerHero_C_PrintCameraSettings::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");

// Function BP_BrawlerHero.BP_BrawlerHero_C.InvokeAOEHitFlashEffect
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BrawlerHero_C_InvokeAOEHitFlashEffect final
{
public:
	EDamageSubType                                DamageType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageSubType                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BPGetAxisXFacing_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_Force_Feedback_Vertical_FF1;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_Force_Feedback_Vertical_FF2;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_Force_Feedback_Vertical_FF3;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_Force_Feedback_Vertical_FF4;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetSlotMeshComponents_ReturnValue;        // 0x0088(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect) == 0x000008, "Wrong alignment on BP_BrawlerHero_C_InvokeAOEHitFlashEffect");
static_assert(sizeof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect) == 0x0000B0, "Wrong size on BP_BrawlerHero_C_InvokeAOEHitFlashEffect");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, DamageType) == 0x000000, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::DamageType' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, Temp_byte_Variable) == 0x000001, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, Temp_struct_Variable) == 0x000004, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_BPGetAxisXFacing_ReturnValue) == 0x000024, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_BPGetAxisXFacing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_Force_Feedback_Vertical_FF1) == 0x000038, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_Force_Feedback_Vertical_FF1' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_Force_Feedback_Vertical_FF2) == 0x000040, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_Force_Feedback_Vertical_FF2' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_Force_Feedback_Vertical_FF3) == 0x000048, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_Force_Feedback_Vertical_FF3' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_Force_Feedback_Vertical_FF4) == 0x000050, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_Force_Feedback_Vertical_FF4' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_BooleanOR_ReturnValue) == 0x000058, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_K2_SetTimer_ReturnValue) == 0x000060, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, K2Node_Select_Default) == 0x000068, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000078, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_GetSlotMeshComponents_ReturnValue) == 0x000088, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_GetSlotMeshComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrawlerHero_C_InvokeAOEHitFlashEffect, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_BrawlerHero_C_InvokeAOEHitFlashEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

