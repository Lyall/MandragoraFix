#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BreakableWall

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "S_DestructibleWalls_structs.hpp"
#include "man_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_BreakableWall.BP_BreakableWall_C.ExecuteUbergraph_BP_BreakableWall
// 0x0440 (0x0440 - 0x0000)
struct BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActorSoul*                             K2Node_CustomEvent_Source;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActorSoul*                             K2Node_CustomEvent_Target;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           K2Node_CustomEvent_Ability;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimID*                                K2Node_CustomEvent_Anim;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_effectiveDamage;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageValue                           K2Node_CustomEvent_OriginalDamageValue;            // 0x0060(0x0138)(ContainsInstancedReference)
	struct FDamageValue                           K2Node_CustomEvent_DamageValue;                    // 0x0198(0x0138)(ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_Instant;                        // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x02D4(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x02E4(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Killer;                         // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     K2Node_CustomEvent_KillerAbilityController;        // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Killer, class UAbilityController* KillerAbilityController)> K2Node_CreateDelegate_OutputDelegate;              // 0x0308(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_GetHurtLocationAndRadius_Location;        // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHurtLocationAndRadius_Radius;          // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHurtLocationAndRadius_Location_1;      // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHurtLocationAndRadius_Radius_1;        // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHurtLocationAndRadius_Location_2;      // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHurtLocationAndRadius_Radius_2;        // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A[0x2];                                      // 0x034A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStaticMeshActor*                       CallFunc_Array_Get_Item;                           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0360(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHiddenWallMaterialParameters_Success;  // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHiddenWallMaterialParameters_Success_1; // 0x036B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActorSoul* Source, class AActorSoul* Target, class UAbilityBase* Ability, class UAnimID* Anim, float effectiveDamage, const struct FDamageValue& OriginalDamageValue, const struct FDamageValue& DamageValue)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0374(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0388(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x03A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03F0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHiddenWallMaterialParameters_Success_2; // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStaticMeshActor*                       CallFunc_Array_Get_Item_1;                         // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x042D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42E[0x2];                                      // 0x042E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_fog_fx_C*                           CallFunc_Array_Get_Item_2;                         // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall) == 0x000008, "Wrong alignment on BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall");
static_assert(sizeof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall) == 0x000440, "Wrong size on BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, EntryPoint) == 0x000000, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_bool_Has_Been_Initd_Variable) == 0x000010, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_bool_IsClosed_Variable) == 0x000020, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_bool_Has_Been_Initd_Variable_1) == 0x000021, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_int_Array_Index_Variable_2) == 0x00002C, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_bool_IsClosed_Variable_1) == 0x000030, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_CustomEvent_Source) == 0x000038, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_CustomEvent_Source' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_CustomEvent_Target) == 0x000040, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_CustomEvent_Ability) == 0x000048, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_CustomEvent_Ability' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_CustomEvent_Anim) == 0x000050, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_CustomEvent_Anim' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_CustomEvent_effectiveDamage) == 0x000058, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_CustomEvent_effectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_CustomEvent_OriginalDamageValue) == 0x000060, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_CustomEvent_OriginalDamageValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_CustomEvent_DamageValue) == 0x000198, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_CustomEvent_DamageValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_CustomEvent_Instant) == 0x0002D0, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_CustomEvent_Instant' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0002D1, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0002D2, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0002D3, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_delegate_Variable) == 0x0002D4, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_delegate_Variable_1) == 0x0002E4, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_CustomEvent_Killer) == 0x0002F8, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_CustomEvent_KillerAbilityController) == 0x000300, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_CustomEvent_KillerAbilityController' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_CreateDelegate_OutputDelegate) == 0x000308, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_GetHurtLocationAndRadius_Location) == 0x000318, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_GetHurtLocationAndRadius_Location' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_GetHurtLocationAndRadius_Radius) == 0x000324, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_GetHurtLocationAndRadius_Radius' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_GetHurtLocationAndRadius_Location_1) == 0x000328, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_GetHurtLocationAndRadius_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_GetHurtLocationAndRadius_Radius_1) == 0x000334, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_GetHurtLocationAndRadius_Radius_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_GetHurtLocationAndRadius_Location_2) == 0x000338, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_GetHurtLocationAndRadius_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_GetHurtLocationAndRadius_Radius_2) == 0x000344, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_GetHurtLocationAndRadius_Radius_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_IsValid_ReturnValue) == 0x000348, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Not_PreBool_ReturnValue) == 0x000349, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00034C, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Array_Get_Item) == 0x000350, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Array_Length_ReturnValue) == 0x000358, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000360, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Less_IntInt_ReturnValue) == 0x000368, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_bool_Has_Been_Initd_Variable_2) == 0x000369, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_SetHiddenWallMaterialParameters_Success) == 0x00036A, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_SetHiddenWallMaterialParameters_Success' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_SetHiddenWallMaterialParameters_Success_1) == 0x00036B, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_SetHiddenWallMaterialParameters_Success_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_PostAkEvent_ReturnValue) == 0x00036C, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_PostAkEvent_ReturnValue_1) == 0x000370, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_CreateDelegate_OutputDelegate_1) == 0x000374, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000388, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_MakeStruct_FormatArgumentData) == 0x0003A0, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, K2Node_MakeArray_Array) == 0x0003E0, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Format_ReturnValue) == 0x0003F0, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Conv_TextToString_ReturnValue) == 0x000408, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_SetHiddenWallMaterialParameters_Success_2) == 0x000418, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_SetHiddenWallMaterialParameters_Success_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Array_Get_Item_1) == 0x000420, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Array_Length_ReturnValue_1) == 0x000428, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Less_IntInt_ReturnValue_1) == 0x00042C, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, Temp_bool_IsClosed_Variable_2) == 0x00042D, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Array_Get_Item_2) == 0x000430, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Array_Length_ReturnValue_2) == 0x000438, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall, CallFunc_Less_IntInt_ReturnValue_2) == 0x00043C, "Member 'BP_BreakableWall_C_ExecuteUbergraph_BP_BreakableWall::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.OnKilled
// 0x0010 (0x0010 - 0x0000)
struct BP_BreakableWall_C_OnKilled final
{
public:
	class UObject*                                Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     KillerAbilityController;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreakableWall_C_OnKilled) == 0x000008, "Wrong alignment on BP_BreakableWall_C_OnKilled");
static_assert(sizeof(BP_BreakableWall_C_OnKilled) == 0x000010, "Wrong size on BP_BreakableWall_C_OnKilled");
static_assert(offsetof(BP_BreakableWall_C_OnKilled, Killer) == 0x000000, "Member 'BP_BreakableWall_C_OnKilled::Killer' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_OnKilled, KillerAbilityController) == 0x000008, "Member 'BP_BreakableWall_C_OnKilled::KillerAbilityController' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.Fade
// 0x0001 (0x0001 - 0x0000)
struct BP_BreakableWall_C_Fade final
{
public:
	bool                                          Instant;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BreakableWall_C_Fade) == 0x000001, "Wrong alignment on BP_BreakableWall_C_Fade");
static_assert(sizeof(BP_BreakableWall_C_Fade) == 0x000001, "Wrong size on BP_BreakableWall_C_Fade");
static_assert(offsetof(BP_BreakableWall_C_Fade, Instant) == 0x000000, "Member 'BP_BreakableWall_C_Fade::Instant' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.DamageTaken
// 0x0298 (0x0298 - 0x0000)
struct BP_BreakableWall_C_DamageTaken final
{
public:
	class AActorSoul*                             Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActorSoul*                             Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           Ability;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimID*                                Anim;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         effectiveDamage;                                   // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageValue                           OriginalDamageValue;                               // 0x0028(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FDamageValue                           DamageValue;                                       // 0x0160(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BP_BreakableWall_C_DamageTaken) == 0x000008, "Wrong alignment on BP_BreakableWall_C_DamageTaken");
static_assert(sizeof(BP_BreakableWall_C_DamageTaken) == 0x000298, "Wrong size on BP_BreakableWall_C_DamageTaken");
static_assert(offsetof(BP_BreakableWall_C_DamageTaken, Source) == 0x000000, "Member 'BP_BreakableWall_C_DamageTaken::Source' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_DamageTaken, Target) == 0x000008, "Member 'BP_BreakableWall_C_DamageTaken::Target' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_DamageTaken, Ability) == 0x000010, "Member 'BP_BreakableWall_C_DamageTaken::Ability' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_DamageTaken, Anim) == 0x000018, "Member 'BP_BreakableWall_C_DamageTaken::Anim' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_DamageTaken, effectiveDamage) == 0x000020, "Member 'BP_BreakableWall_C_DamageTaken::effectiveDamage' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_DamageTaken, OriginalDamageValue) == 0x000028, "Member 'BP_BreakableWall_C_DamageTaken::OriginalDamageValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_DamageTaken, DamageValue) == 0x000160, "Member 'BP_BreakableWall_C_DamageTaken::DamageValue' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.UserConstructionScript
// 0x0040 (0x0040 - 0x0000)
struct BP_BreakableWall_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetHurtLocationAndRadius_Location;        // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHurtLocationAndRadius_Radius;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHurtLocationAndRadius_Location_1;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHurtLocationAndRadius_Radius_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetHurtLocationAndRadius_Location_2;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHurtLocationAndRadius_Radius_2;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreakableWall_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_BreakableWall_C_UserConstructionScript");
static_assert(sizeof(BP_BreakableWall_C_UserConstructionScript) == 0x000040, "Wrong size on BP_BreakableWall_C_UserConstructionScript");
static_assert(offsetof(BP_BreakableWall_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'BP_BreakableWall_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UserConstructionScript, CallFunc_GetHurtLocationAndRadius_Location) == 0x000004, "Member 'BP_BreakableWall_C_UserConstructionScript::CallFunc_GetHurtLocationAndRadius_Location' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UserConstructionScript, CallFunc_GetHurtLocationAndRadius_Radius) == 0x000010, "Member 'BP_BreakableWall_C_UserConstructionScript::CallFunc_GetHurtLocationAndRadius_Radius' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UserConstructionScript, CallFunc_GetHurtLocationAndRadius_Location_1) == 0x000014, "Member 'BP_BreakableWall_C_UserConstructionScript::CallFunc_GetHurtLocationAndRadius_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UserConstructionScript, CallFunc_GetHurtLocationAndRadius_Radius_1) == 0x000020, "Member 'BP_BreakableWall_C_UserConstructionScript::CallFunc_GetHurtLocationAndRadius_Radius_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue_1) == 0x000024, "Member 'BP_BreakableWall_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UserConstructionScript, CallFunc_GetHurtLocationAndRadius_Location_2) == 0x000028, "Member 'BP_BreakableWall_C_UserConstructionScript::CallFunc_GetHurtLocationAndRadius_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UserConstructionScript, CallFunc_GetHurtLocationAndRadius_Radius_2) == 0x000034, "Member 'BP_BreakableWall_C_UserConstructionScript::CallFunc_GetHurtLocationAndRadius_Radius_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UserConstructionScript, CallFunc_K2_SetTimer_ReturnValue) == 0x000038, "Member 'BP_BreakableWall_C_UserConstructionScript::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.SetSupportOffsets
// 0x0140 (0x0140 - 0x0000)
struct BP_BreakableWall_C_SetSupportOffsets final
{
public:
	class UStaticMeshComponent*                   Support;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x002C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BreakableWall_C_SetSupportOffsets) == 0x000008, "Wrong alignment on BP_BreakableWall_C_SetSupportOffsets");
static_assert(sizeof(BP_BreakableWall_C_SetSupportOffsets) == 0x000140, "Wrong size on BP_BreakableWall_C_SetSupportOffsets");
static_assert(offsetof(BP_BreakableWall_C_SetSupportOffsets, Support) == 0x000000, "Member 'BP_BreakableWall_C_SetSupportOffsets::Support' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetSupportOffsets, Location) == 0x000008, "Member 'BP_BreakableWall_C_SetSupportOffsets::Location' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetSupportOffsets, Scale) == 0x000014, "Member 'BP_BreakableWall_C_SetSupportOffsets::Scale' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetSupportOffsets, Rotation) == 0x000020, "Member 'BP_BreakableWall_C_SetSupportOffsets::Rotation' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetSupportOffsets, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00002C, "Member 'BP_BreakableWall_C_SetSupportOffsets::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetSupportOffsets, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000B4, "Member 'BP_BreakableWall_C_SetSupportOffsets::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.GetHurtLocationAndRadius
// 0x0148 (0x0148 - 0x0000)
struct BP_BreakableWall_C_GetHurtLocationAndRadius final
{
public:
	int32                                         N;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHurtLocationRelative_ReturnValue;      // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHurtLocationRelative_ReturnValue_1;    // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_2;                           // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreakableWall_C_GetHurtLocationAndRadius) == 0x000008, "Wrong alignment on BP_BreakableWall_C_GetHurtLocationAndRadius");
static_assert(sizeof(BP_BreakableWall_C_GetHurtLocationAndRadius) == 0x000148, "Wrong size on BP_BreakableWall_C_GetHurtLocationAndRadius");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, N) == 0x000000, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::N' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, Location) == 0x000004, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::Location' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, Radius) == 0x000010, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::Radius' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, Temp_bool_Variable) == 0x000014, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, Temp_bool_Variable_1) == 0x000015, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, Temp_int_Variable) == 0x000018, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, Temp_struct_Variable) == 0x00001C, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, Temp_struct_Variable_1) == 0x00002C, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, Temp_struct_Variable_2) == 0x00003C, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, Temp_struct_Variable_3) == 0x00004C, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000068, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_GetPlayerPawn_ReturnValue) == 0x000078, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_GetHurtLocationRelative_ReturnValue) == 0x000080, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_GetHurtLocationRelative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_IsValid_ReturnValue) == 0x00008C, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000090, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_BooleanAND_ReturnValue) == 0x000098, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_IsValid_ReturnValue_1) == 0x000099, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_BooleanAND_ReturnValue_1) == 0x00009A, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x00009C, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_BreakVector_X) == 0x0000A8, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_BreakVector_Y) == 0x0000AC, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_BreakVector_X_1) == 0x0000B4, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_BreakVector_Y_1) == 0x0000B8, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_BreakVector_Z_1) == 0x0000BC, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x0000C0, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0000C8, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_BreakVector_X_2) == 0x0000D4, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_BreakVector_Y_2) == 0x0000D8, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_BreakVector_Z_2) == 0x0000DC, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_SelectFloat_ReturnValue) == 0x0000E4, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_GetHurtLocationRelative_ReturnValue_1) == 0x0000E8, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_GetHurtLocationRelative_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_MakeVector_ReturnValue) == 0x0000F8, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, K2Node_Select_Default) == 0x000104, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, K2Node_Select_Default_1) == 0x000110, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, K2Node_Select_Default_2) == 0x00012C, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationAndRadius, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000138, "Member 'BP_BreakableWall_C_GetHurtLocationAndRadius::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.SetHurtLocationAndRadius
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BreakableWall_C_SetHurtLocationAndRadius final
{
public:
	int32                                         N;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0020(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BreakableWall_C_SetHurtLocationAndRadius) == 0x000008, "Wrong alignment on BP_BreakableWall_C_SetHurtLocationAndRadius");
static_assert(sizeof(BP_BreakableWall_C_SetHurtLocationAndRadius) == 0x0000A8, "Wrong size on BP_BreakableWall_C_SetHurtLocationAndRadius");
static_assert(offsetof(BP_BreakableWall_C_SetHurtLocationAndRadius, N) == 0x000000, "Member 'BP_BreakableWall_C_SetHurtLocationAndRadius::N' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHurtLocationAndRadius, Location) == 0x000004, "Member 'BP_BreakableWall_C_SetHurtLocationAndRadius::Location' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHurtLocationAndRadius, Radius) == 0x000010, "Member 'BP_BreakableWall_C_SetHurtLocationAndRadius::Radius' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHurtLocationAndRadius, Temp_int_Variable) == 0x000014, "Member 'BP_BreakableWall_C_SetHurtLocationAndRadius::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHurtLocationAndRadius, K2Node_Select_Default) == 0x000018, "Member 'BP_BreakableWall_C_SetHurtLocationAndRadius::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHurtLocationAndRadius, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000020, "Member 'BP_BreakableWall_C_SetHurtLocationAndRadius::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.GetHurtLocationRelative
// 0x0040 (0x0040 - 0x0000)
struct BP_BreakableWall_C_GetHurtLocationRelative final
{
public:
	int32                                         N;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreakableWall_C_GetHurtLocationRelative) == 0x000008, "Wrong alignment on BP_BreakableWall_C_GetHurtLocationRelative");
static_assert(sizeof(BP_BreakableWall_C_GetHurtLocationRelative) == 0x000040, "Wrong size on BP_BreakableWall_C_GetHurtLocationRelative");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationRelative, N) == 0x000000, "Member 'BP_BreakableWall_C_GetHurtLocationRelative::N' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationRelative, ReturnValue) == 0x000004, "Member 'BP_BreakableWall_C_GetHurtLocationRelative::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationRelative, Temp_int_Variable) == 0x000010, "Member 'BP_BreakableWall_C_GetHurtLocationRelative::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationRelative, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_BreakableWall_C_GetHurtLocationRelative::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationRelative, K2Node_Select_Default) == 0x000020, "Member 'BP_BreakableWall_C_GetHurtLocationRelative::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationRelative, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'BP_BreakableWall_C_GetHurtLocationRelative::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_GetHurtLocationRelative, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'BP_BreakableWall_C_GetHurtLocationRelative::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.SetHintVFXParameters
// 0x0120 (0x0120 - 0x0000)
struct BP_BreakableWall_C_SetHintVFXParameters final
{
public:
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BreakableWall_C_SetHintVFXParameters) == 0x000010, "Wrong alignment on BP_BreakableWall_C_SetHintVFXParameters");
static_assert(sizeof(BP_BreakableWall_C_SetHintVFXParameters) == 0x000120, "Wrong size on BP_BreakableWall_C_SetHintVFXParameters");
static_assert(offsetof(BP_BreakableWall_C_SetHintVFXParameters, CallFunc_BreakTransform_Location) == 0x000000, "Member 'BP_BreakableWall_C_SetHintVFXParameters::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHintVFXParameters, CallFunc_BreakTransform_Rotation) == 0x00000C, "Member 'BP_BreakableWall_C_SetHintVFXParameters::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHintVFXParameters, CallFunc_BreakTransform_Scale) == 0x000018, "Member 'BP_BreakableWall_C_SetHintVFXParameters::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHintVFXParameters, CallFunc_BreakRotator_Roll) == 0x000024, "Member 'BP_BreakableWall_C_SetHintVFXParameters::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHintVFXParameters, CallFunc_BreakRotator_Pitch) == 0x000028, "Member 'BP_BreakableWall_C_SetHintVFXParameters::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHintVFXParameters, CallFunc_BreakRotator_Yaw) == 0x00002C, "Member 'BP_BreakableWall_C_SetHintVFXParameters::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHintVFXParameters, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000030, "Member 'BP_BreakableWall_C_SetHintVFXParameters::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHintVFXParameters, CallFunc_MakeRotator_ReturnValue) == 0x00003C, "Member 'BP_BreakableWall_C_SetHintVFXParameters::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHintVFXParameters, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'BP_BreakableWall_C_SetHintVFXParameters::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHintVFXParameters, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_BreakableWall_C_SetHintVFXParameters::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHintVFXParameters, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000090, "Member 'BP_BreakableWall_C_SetHintVFXParameters::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.SetHiddenWallMaterialParameters
// 0x01D0 (0x01D0 - 0x0000)
struct BP_BreakableWall_C_SetHiddenWallMaterialParameters final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsValid;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x00A8(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0110(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0128(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AStaticMeshActor*                       CallFunc_Array_Get_Item;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AStaticMeshActor*                       CallFunc_Array_Get_Item_1;                         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BreakableWall_C_SetHiddenWallMaterialParameters) == 0x000008, "Wrong alignment on BP_BreakableWall_C_SetHiddenWallMaterialParameters");
static_assert(sizeof(BP_BreakableWall_C_SetHiddenWallMaterialParameters) == 0x0001D0, "Wrong size on BP_BreakableWall_C_SetHiddenWallMaterialParameters");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, Success) == 0x000000, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::Success' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, IsValid) == 0x000001, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::IsValid' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000018, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Conv_TextToString_ReturnValue) == 0x000098, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0000A8, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000108, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, K2Node_MakeArray_Array_1) == 0x000110, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Not_PreBool_ReturnValue) == 0x000120, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Format_ReturnValue_1) == 0x000128, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000140, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, Temp_int_Loop_Counter_Variable_1) == 0x000150, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Array_Get_Item) == 0x000158, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Array_Length_ReturnValue_1) == 0x000160, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Less_IntInt_ReturnValue) == 0x000164, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_GetMaterial_ReturnValue) == 0x000168, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000170, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Add_IntInt_ReturnValue_1) == 0x00017C, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Array_Add_ReturnValue) == 0x000180, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_GetForwardVector_ReturnValue) == 0x000184, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000190, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00019C, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0001A8, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Vector_Distance_ReturnValue) == 0x0001B4, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Array_Length_ReturnValue_2) == 0x0001B8, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Array_Get_Item_1) == 0x0001C0, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001C8, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SetHiddenWallMaterialParameters, CallFunc_IsValid_ReturnValue) == 0x0001C9, "Member 'BP_BreakableWall_C_SetHiddenWallMaterialParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.UpdateDTEntry
// 0x0290 (0x0290 - 0x0000)
struct BP_BreakableWall_C_UpdateDTEntry final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0004(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DestructibleWalls                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B0(0x0150)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          K2Node_DynamicCast_AsAk_Audio_Event;               // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          K2Node_DynamicCast_AsAk_Audio_Event_1;             // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDamageTakenVFXDataAsset*               K2Node_DynamicCast_AsDamage_Taken_VFXData_Asset;   // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_4;         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      K2Node_DynamicCast_AsDestructible_Mesh;            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BreakableWall_C_UpdateDTEntry) == 0x000010, "Wrong alignment on BP_BreakableWall_C_UpdateDTEntry");
static_assert(sizeof(BP_BreakableWall_C_UpdateDTEntry) == 0x000290, "Wrong size on BP_BreakableWall_C_UpdateDTEntry");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000004, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, Temp_bool_Variable) == 0x00008C, "Member 'BP_BreakableWall_C_UpdateDTEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000090, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A0, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B0, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000200, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000201, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000208, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, K2Node_DynamicCast_AsAk_Audio_Event) == 0x000210, "Member 'BP_BreakableWall_C_UpdateDTEntry::K2Node_DynamicCast_AsAk_Audio_Event' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'BP_BreakableWall_C_UpdateDTEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000220, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, K2Node_DynamicCast_AsAk_Audio_Event_1) == 0x000228, "Member 'BP_BreakableWall_C_UpdateDTEntry::K2Node_DynamicCast_AsAk_Audio_Event_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, K2Node_DynamicCast_bSuccess_1) == 0x000230, "Member 'BP_BreakableWall_C_UpdateDTEntry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000238, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x000240, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, K2Node_DynamicCast_AsNiagara_System) == 0x000248, "Member 'BP_BreakableWall_C_UpdateDTEntry::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, K2Node_DynamicCast_bSuccess_2) == 0x000250, "Member 'BP_BreakableWall_C_UpdateDTEntry::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, K2Node_DynamicCast_AsDamage_Taken_VFXData_Asset) == 0x000258, "Member 'BP_BreakableWall_C_UpdateDTEntry::K2Node_DynamicCast_AsDamage_Taken_VFXData_Asset' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, K2Node_DynamicCast_bSuccess_3) == 0x000260, "Member 'BP_BreakableWall_C_UpdateDTEntry::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, K2Node_Select_Default) == 0x000268, "Member 'BP_BreakableWall_C_UpdateDTEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_LoadAsset_Blocking_ReturnValue_4) == 0x000270, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_LoadAsset_Blocking_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000278, "Member 'BP_BreakableWall_C_UpdateDTEntry::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, K2Node_DynamicCast_AsDestructible_Mesh) == 0x000280, "Member 'BP_BreakableWall_C_UpdateDTEntry::K2Node_DynamicCast_AsDestructible_Mesh' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_UpdateDTEntry, K2Node_DynamicCast_bSuccess_4) == 0x000288, "Member 'BP_BreakableWall_C_UpdateDTEntry::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.FadeOutFogFXActors
// 0x0040 (0x0040 - 0x0000)
struct BP_BreakableWall_C_FadeOutFogFXActors final
{
public:
	float                                         Fade;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_fog_fx_C*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFogParameters_FogDensity;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetFogParameters_FogColor;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFogParameters_FogGlow;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BreakableWall_C_FadeOutFogFXActors) == 0x000008, "Wrong alignment on BP_BreakableWall_C_FadeOutFogFXActors");
static_assert(sizeof(BP_BreakableWall_C_FadeOutFogFXActors) == 0x000040, "Wrong size on BP_BreakableWall_C_FadeOutFogFXActors");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, Fade) == 0x000000, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::Fade' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, CallFunc_GetFogParameters_FogDensity) == 0x000024, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::CallFunc_GetFogParameters_FogDensity' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, CallFunc_GetFogParameters_FogColor) == 0x000028, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::CallFunc_GetFogParameters_FogColor' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, CallFunc_GetFogParameters_FogGlow) == 0x00002C, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::CallFunc_GetFogParameters_FogGlow' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, CallFunc_Lerp_ReturnValue) == 0x000034, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutFogFXActors, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_BreakableWall_C_FadeOutFogFXActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.FadeOutMeshes
// 0x0028 (0x0028 - 0x0000)
struct BP_BreakableWall_C_FadeOutMeshes final
{
public:
	float                                         Fade;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BreakableWall_C_FadeOutMeshes) == 0x000008, "Wrong alignment on BP_BreakableWall_C_FadeOutMeshes");
static_assert(sizeof(BP_BreakableWall_C_FadeOutMeshes) == 0x000028, "Wrong size on BP_BreakableWall_C_FadeOutMeshes");
static_assert(offsetof(BP_BreakableWall_C_FadeOutMeshes, Fade) == 0x000000, "Member 'BP_BreakableWall_C_FadeOutMeshes::Fade' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutMeshes, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BreakableWall_C_FadeOutMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutMeshes, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BreakableWall_C_FadeOutMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BreakableWall_C_FadeOutMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutMeshes, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_BreakableWall_C_FadeOutMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutMeshes, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BreakableWall_C_FadeOutMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_FadeOutMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_BreakableWall_C_FadeOutMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.SomeWarnings
// 0x0140 (0x0140 - 0x0000)
struct BP_BreakableWall_C_SomeWarnings final
{
public:
	const class AStaticMeshActor*                 Temp_object_Variable;                              // 0x0000(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ABP_fog_fx_C*                     Temp_object_Variable_1;                            // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0010(0x0018)()
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x00B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0108(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0118(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BreakableWall_C_SomeWarnings) == 0x000008, "Wrong alignment on BP_BreakableWall_C_SomeWarnings");
static_assert(sizeof(BP_BreakableWall_C_SomeWarnings) == 0x000140, "Wrong size on BP_BreakableWall_C_SomeWarnings");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, Temp_object_Variable) == 0x000000, "Member 'BP_BreakableWall_C_SomeWarnings::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, Temp_object_Variable_1) == 0x000008, "Member 'BP_BreakableWall_C_SomeWarnings::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000010, "Member 'BP_BreakableWall_C_SomeWarnings::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, CallFunc_Array_Contains_ReturnValue) == 0x000028, "Member 'BP_BreakableWall_C_SomeWarnings::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_BreakableWall_C_SomeWarnings::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_BreakableWall_C_SomeWarnings::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BP_BreakableWall_C_SomeWarnings::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, CallFunc_Array_Contains_ReturnValue_1) == 0x000098, "Member 'BP_BreakableWall_C_SomeWarnings::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, CallFunc_Conv_TextToString_ReturnValue) == 0x0000A0, "Member 'BP_BreakableWall_C_SomeWarnings::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0000B0, "Member 'BP_BreakableWall_C_SomeWarnings::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'BP_BreakableWall_C_SomeWarnings::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, K2Node_MakeArray_Array_1) == 0x000108, "Member 'BP_BreakableWall_C_SomeWarnings::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, CallFunc_Format_ReturnValue_1) == 0x000118, "Member 'BP_BreakableWall_C_SomeWarnings::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_SomeWarnings, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000130, "Member 'BP_BreakableWall_C_SomeWarnings::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");

// Function BP_BreakableWall.BP_BreakableWall_C.CheckVisualizers
// 0x03D0 (0x03D0 - 0x0000)
struct BP_BreakableWall_C_CheckVisualizers final
{
public:
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x008C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0114(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x019C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_2;     // 0x0224(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x02AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0340(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BreakableWall_C_CheckVisualizers) == 0x000004, "Wrong alignment on BP_BreakableWall_C_CheckVisualizers");
static_assert(sizeof(BP_BreakableWall_C_CheckVisualizers) == 0x0003D0, "Wrong size on BP_BreakableWall_C_CheckVisualizers");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_GetForwardVector_ReturnValue) == 0x000000, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00000C, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_GetForwardVector_ReturnValue_1) == 0x000018, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000024, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000030, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x00003C, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_Vector_Distance_ReturnValue) == 0x000048, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x00005C, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x000068, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_VLerp_ReturnValue) == 0x000074, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_FindLookAtRotation_ReturnValue) == 0x000080, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00008C, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000114, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x00019C, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_K2_SetWorldRotation_SweepHitResult_2) == 0x000224, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_K2_SetWorldRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0002AC, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_Add_VectorVector_ReturnValue) == 0x000334, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000340, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_Array_Length_ReturnValue) == 0x0003C8, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0003CC, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BreakableWall_C_CheckVisualizers, CallFunc_Not_PreBool_ReturnValue) == 0x0003CD, "Member 'BP_BreakableWall_C_CheckVisualizers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

