#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChaosStormActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ChaosStormActor.BP_ChaosStormActor_C
// 0x0040 (0x1FE0 - 0x1FA0)
class ABP_ChaosStormActor_C final : public AGroundMovingAbilityActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1FA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        TempArrow;                                         // 0x1FA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitBox*                                HitBox_Slow;                                       // 0x1FB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitBox*                                HitBox;                                            // 0x1FB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DmgStartPos;                                       // 0x1FC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        VEAttachPoint;                                     // 0x1FC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AVisualEntity*                          ChaosStormVE;                                      // 0x1FD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           StormPassive;                                      // 0x1FD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ChaosStormActor(int32 EntryPoint);
	void VFXEnd();
	void ReceiveTick(float DeltaSeconds);
	void BPPostBeginPlay();
	void OnDamage(class AActor* Target, class USceneComponent* DamageCenterComponent, const struct FVector& StartPoint, const struct FVector& EndPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChaosStormActor_C">();
	}
	static class ABP_ChaosStormActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ChaosStormActor_C>();
	}
};
static_assert(alignof(ABP_ChaosStormActor_C) == 0x000010, "Wrong alignment on ABP_ChaosStormActor_C");
static_assert(sizeof(ABP_ChaosStormActor_C) == 0x001FE0, "Wrong size on ABP_ChaosStormActor_C");
static_assert(offsetof(ABP_ChaosStormActor_C, UberGraphFrame) == 0x001FA0, "Member 'ABP_ChaosStormActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStormActor_C, TempArrow) == 0x001FA8, "Member 'ABP_ChaosStormActor_C::TempArrow' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStormActor_C, HitBox_Slow) == 0x001FB0, "Member 'ABP_ChaosStormActor_C::HitBox_Slow' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStormActor_C, HitBox) == 0x001FB8, "Member 'ABP_ChaosStormActor_C::HitBox' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStormActor_C, DmgStartPos) == 0x001FC0, "Member 'ABP_ChaosStormActor_C::DmgStartPos' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStormActor_C, VEAttachPoint) == 0x001FC8, "Member 'ABP_ChaosStormActor_C::VEAttachPoint' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStormActor_C, ChaosStormVE) == 0x001FD0, "Member 'ABP_ChaosStormActor_C::ChaosStormVE' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStormActor_C, StormPassive) == 0x001FD8, "Member 'ABP_ChaosStormActor_C::StormPassive' has a wrong offset!");

}

