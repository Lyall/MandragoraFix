#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChaosStormLightning_VisualEntity

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ChaosStormLightning_VisualEntity.BP_ChaosStormLightning_VisualEntity_C.ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity
// 0x0018 (0x0018 - 0x0000)
struct BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity) == 0x000004, "Wrong alignment on BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity");
static_assert(sizeof(BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity) == 0x000018, "Wrong size on BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity");
static_assert(offsetof(BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity, EntryPoint) == 0x000000, "Member 'BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity, CallFunc_IsActive_ReturnValue) == 0x000008, "Member 'BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_ChaosStormLightning_VisualEntity_C_ExecuteUbergraph_BP_ChaosStormLightning_VisualEntity::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_ChaosStormLightning_VisualEntity.BP_ChaosStormLightning_VisualEntity_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ChaosStormLightning_VisualEntity_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChaosStormLightning_VisualEntity_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ChaosStormLightning_VisualEntity_C_ReceiveTick");
static_assert(sizeof(BP_ChaosStormLightning_VisualEntity_C_ReceiveTick) == 0x000004, "Wrong size on BP_ChaosStormLightning_VisualEntity_C_ReceiveTick");
static_assert(offsetof(BP_ChaosStormLightning_VisualEntity_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ChaosStormLightning_VisualEntity_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ChaosStormLightning_VisualEntity.BP_ChaosStormLightning_VisualEntity_C.ActivateLightning
// 0x0018 (0x0018 - 0x0000)
struct BP_ChaosStormLightning_VisualEntity_C_ActivateLightning final
{
public:
	class USceneComponent*                        StartPointComp;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPoint;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChaosFactorActive;                                 // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChaosStormLightning_VisualEntity_C_ActivateLightning) == 0x000008, "Wrong alignment on BP_ChaosStormLightning_VisualEntity_C_ActivateLightning");
static_assert(sizeof(BP_ChaosStormLightning_VisualEntity_C_ActivateLightning) == 0x000018, "Wrong size on BP_ChaosStormLightning_VisualEntity_C_ActivateLightning");
static_assert(offsetof(BP_ChaosStormLightning_VisualEntity_C_ActivateLightning, StartPointComp) == 0x000000, "Member 'BP_ChaosStormLightning_VisualEntity_C_ActivateLightning::StartPointComp' has a wrong offset!");
static_assert(offsetof(BP_ChaosStormLightning_VisualEntity_C_ActivateLightning, EndPoint) == 0x000008, "Member 'BP_ChaosStormLightning_VisualEntity_C_ActivateLightning::EndPoint' has a wrong offset!");
static_assert(offsetof(BP_ChaosStormLightning_VisualEntity_C_ActivateLightning, ChaosFactorActive) == 0x000014, "Member 'BP_ChaosStormLightning_VisualEntity_C_ActivateLightning::ChaosFactorActive' has a wrong offset!");
static_assert(offsetof(BP_ChaosStormLightning_VisualEntity_C_ActivateLightning, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'BP_ChaosStormLightning_VisualEntity_C_ActivateLightning::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

