#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChaosStorm_VisualEntity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ChaosStorm_VisualEntity.BP_ChaosStorm_VisualEntity_C
// 0x0048 (0x0398 - 0x0350)
class ABP_ChaosStorm_VisualEntity_C final : public AVisualEntity
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NSChaosStorm;                                      // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentDirDistortion;                              // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGroundMovingAbilityActor*              ChaosStormRef;                                     // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetDistortion;                                  // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloorNormalTarget;                                 // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloorNormalCurrent;                                // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NormalDelayCounter;                                // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloorTiltAddition;                                 // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastPos;                                           // 0x0384(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TornadoBottomTiltSpeed;                            // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ChaosStorm_VisualEntity(int32 EntryPoint);
	void VisualEntityConstructionFinished();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChaosStorm_VisualEntity_C">();
	}
	static class ABP_ChaosStorm_VisualEntity_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ChaosStorm_VisualEntity_C>();
	}
};
static_assert(alignof(ABP_ChaosStorm_VisualEntity_C) == 0x000008, "Wrong alignment on ABP_ChaosStorm_VisualEntity_C");
static_assert(sizeof(ABP_ChaosStorm_VisualEntity_C) == 0x000398, "Wrong size on ABP_ChaosStorm_VisualEntity_C");
static_assert(offsetof(ABP_ChaosStorm_VisualEntity_C, UberGraphFrame) == 0x000350, "Member 'ABP_ChaosStorm_VisualEntity_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStorm_VisualEntity_C, NSChaosStorm) == 0x000358, "Member 'ABP_ChaosStorm_VisualEntity_C::NSChaosStorm' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStorm_VisualEntity_C, CurrentDirDistortion) == 0x000360, "Member 'ABP_ChaosStorm_VisualEntity_C::CurrentDirDistortion' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStorm_VisualEntity_C, ChaosStormRef) == 0x000368, "Member 'ABP_ChaosStorm_VisualEntity_C::ChaosStormRef' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStorm_VisualEntity_C, TargetDistortion) == 0x000370, "Member 'ABP_ChaosStorm_VisualEntity_C::TargetDistortion' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStorm_VisualEntity_C, FloorNormalTarget) == 0x000374, "Member 'ABP_ChaosStorm_VisualEntity_C::FloorNormalTarget' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStorm_VisualEntity_C, FloorNormalCurrent) == 0x000378, "Member 'ABP_ChaosStorm_VisualEntity_C::FloorNormalCurrent' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStorm_VisualEntity_C, NormalDelayCounter) == 0x00037C, "Member 'ABP_ChaosStorm_VisualEntity_C::NormalDelayCounter' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStorm_VisualEntity_C, FloorTiltAddition) == 0x000380, "Member 'ABP_ChaosStorm_VisualEntity_C::FloorTiltAddition' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStorm_VisualEntity_C, LastPos) == 0x000384, "Member 'ABP_ChaosStorm_VisualEntity_C::LastPos' has a wrong offset!");
static_assert(offsetof(ABP_ChaosStorm_VisualEntity_C, TornadoBottomTiltSpeed) == 0x000390, "Member 'ABP_ChaosStorm_VisualEntity_C::TornadoBottomTiltSpeed' has a wrong offset!");

}

