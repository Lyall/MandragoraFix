#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChaosVortexPulling

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ChaosVortexPulling.BP_ChaosVortexPulling_C
// 0x0058 (0x03A8 - 0x0350)
class ABP_ChaosVortexPulling_C final : public AVisualEntity
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sphere;                                            // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 PoseableMesh;                                      // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         EffectTimer_Value_50403FE648E57C6CEE5CD8843B49D2A4; // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            EffectTimer__Direction_50403FE648E57C6CEE5CD8843B49D2A4; // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     EffectTimer;                                       // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBase*                         Character;                                         // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ChaosVortexPosition;                               // 0x0388(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 VortexSourceActor;                                 // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WPOStrength;                                       // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EffectOpacity;                                     // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ChaosVortexPulling(int32 EntryPoint);
	void OnKill();
	void VisualEntityConstructionFinished();
	void ReceiveTick(float DeltaSeconds);
	void EffectTimer__UpdateFunc();
	void EffectTimer__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChaosVortexPulling_C">();
	}
	static class ABP_ChaosVortexPulling_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ChaosVortexPulling_C>();
	}
};
static_assert(alignof(ABP_ChaosVortexPulling_C) == 0x000008, "Wrong alignment on ABP_ChaosVortexPulling_C");
static_assert(sizeof(ABP_ChaosVortexPulling_C) == 0x0003A8, "Wrong size on ABP_ChaosVortexPulling_C");
static_assert(offsetof(ABP_ChaosVortexPulling_C, UberGraphFrame) == 0x000350, "Member 'ABP_ChaosVortexPulling_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexPulling_C, Sphere) == 0x000358, "Member 'ABP_ChaosVortexPulling_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexPulling_C, PoseableMesh) == 0x000360, "Member 'ABP_ChaosVortexPulling_C::PoseableMesh' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexPulling_C, EffectTimer_Value_50403FE648E57C6CEE5CD8843B49D2A4) == 0x000368, "Member 'ABP_ChaosVortexPulling_C::EffectTimer_Value_50403FE648E57C6CEE5CD8843B49D2A4' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexPulling_C, EffectTimer__Direction_50403FE648E57C6CEE5CD8843B49D2A4) == 0x00036C, "Member 'ABP_ChaosVortexPulling_C::EffectTimer__Direction_50403FE648E57C6CEE5CD8843B49D2A4' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexPulling_C, EffectTimer) == 0x000370, "Member 'ABP_ChaosVortexPulling_C::EffectTimer' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexPulling_C, Character) == 0x000378, "Member 'ABP_ChaosVortexPulling_C::Character' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexPulling_C, DynamicMaterial) == 0x000380, "Member 'ABP_ChaosVortexPulling_C::DynamicMaterial' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexPulling_C, ChaosVortexPosition) == 0x000388, "Member 'ABP_ChaosVortexPulling_C::ChaosVortexPosition' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexPulling_C, VortexSourceActor) == 0x000398, "Member 'ABP_ChaosVortexPulling_C::VortexSourceActor' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexPulling_C, WPOStrength) == 0x0003A0, "Member 'ABP_ChaosVortexPulling_C::WPOStrength' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexPulling_C, EffectOpacity) == 0x0003A4, "Member 'ABP_ChaosVortexPulling_C::EffectOpacity' has a wrong offset!");

}

