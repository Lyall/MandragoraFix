#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChaosVortexReward_VisualEntity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ChaosVortexReward_VisualEntity.BP_ChaosVortexReward_VisualEntity_C
// 0x0030 (0x0380 - 0x0350)
class ABP_ChaosVortexReward_VisualEntity_C final : public AVisualEntity
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Pickup;                                            // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Loop;                                              // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AManLootActor*                          CachedLootActor;                                   // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FManLootData>                   Looted_Items_0;                                    // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_ChaosVortexReward_VisualEntity(int32 EntryPoint);
	void VisualEntityConstructionFinished();
	void OnKill();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChaosVortexReward_VisualEntity_C">();
	}
	static class ABP_ChaosVortexReward_VisualEntity_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ChaosVortexReward_VisualEntity_C>();
	}
};
static_assert(alignof(ABP_ChaosVortexReward_VisualEntity_C) == 0x000008, "Wrong alignment on ABP_ChaosVortexReward_VisualEntity_C");
static_assert(sizeof(ABP_ChaosVortexReward_VisualEntity_C) == 0x000380, "Wrong size on ABP_ChaosVortexReward_VisualEntity_C");
static_assert(offsetof(ABP_ChaosVortexReward_VisualEntity_C, UberGraphFrame) == 0x000350, "Member 'ABP_ChaosVortexReward_VisualEntity_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexReward_VisualEntity_C, Pickup) == 0x000358, "Member 'ABP_ChaosVortexReward_VisualEntity_C::Pickup' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexReward_VisualEntity_C, Loop) == 0x000360, "Member 'ABP_ChaosVortexReward_VisualEntity_C::Loop' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexReward_VisualEntity_C, CachedLootActor) == 0x000368, "Member 'ABP_ChaosVortexReward_VisualEntity_C::CachedLootActor' has a wrong offset!");
static_assert(offsetof(ABP_ChaosVortexReward_VisualEntity_C, Looted_Items_0) == 0x000370, "Member 'ABP_ChaosVortexReward_VisualEntity_C::Looted_Items_0' has a wrong offset!");

}

