#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterWindow_CarryWeight

#include "Basic.hpp"

#include "BP_CharacterWindow_CarryWeight_classes.hpp"
#include "BP_CharacterWindow_CarryWeight_parameters.hpp"


namespace SDK
{

// Function BP_CharacterWindow_CarryWeight.BP_CharacterWindow_CarryWeight_C.ExecuteUbergraph_BP_CharacterWindow_CarryWeight
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_CarryWeight_C::ExecuteUbergraph_BP_CharacterWindow_CarryWeight(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_CarryWeight_C", "ExecuteUbergraph_BP_CharacterWindow_CarryWeight");

	Params::BP_CharacterWindow_CarryWeight_C_ExecuteUbergraph_BP_CharacterWindow_CarryWeight Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_CarryWeight.BP_CharacterWindow_CarryWeight_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_CarryWeight_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_CarryWeight_C", "PreConstruct");

	Params::BP_CharacterWindow_CarryWeight_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_CarryWeight.BP_CharacterWindow_CarryWeight_C.SetCurrentValue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEquipLoadIndicator                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_CarryWeight_C::SetCurrentValue(float Value, EEquipLoadIndicator Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_CarryWeight_C", "SetCurrentValue");

	Params::BP_CharacterWindow_CarryWeight_C_SetCurrentValue Parms{};

	Parms.Value = Value;
	Parms.Color = Color;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_CarryWeight.BP_CharacterWindow_CarryWeight_C.SetMaxValue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEquipLoadIndicator                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_CarryWeight_C::SetMaxValue(float Value, EEquipLoadIndicator Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_CarryWeight_C", "SetMaxValue");

	Params::BP_CharacterWindow_CarryWeight_C_SetMaxValue Parms{};

	Parms.Value = Value;
	Parms.Color = Color;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_CarryWeight.BP_CharacterWindow_CarryWeight_C.SetColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEquipLoadIndicator                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_CarryWeight_C::SetColor(EEquipLoadIndicator Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_CarryWeight_C", "SetColor");

	Params::BP_CharacterWindow_CarryWeight_C_SetColor Parms{};

	Parms.Color = Color;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_CarryWeight.BP_CharacterWindow_CarryWeight_C.SetPercent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_CarryWeight_C::SetPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_CarryWeight_C", "SetPercent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow_CarryWeight.BP_CharacterWindow_CarryWeight_C.SetText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_CarryWeight_C::SetText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_CarryWeight_C", "SetText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow_CarryWeight.BP_CharacterWindow_CarryWeight_C.ToggleSmallScreen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsSmallScreen                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_CarryWeight_C::ToggleSmallScreen(bool InIsSmallScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_CarryWeight_C", "ToggleSmallScreen");

	Params::BP_CharacterWindow_CarryWeight_C_ToggleSmallScreen Parms{};

	Parms.InIsSmallScreen = InIsSmallScreen;

	UObject::ProcessEvent(Func, &Parms);
}

}

