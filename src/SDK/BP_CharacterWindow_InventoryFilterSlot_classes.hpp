#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterWindow_InventoryFilterSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C
// 0x0228 (0x05B0 - 0x0388)
class UBP_CharacterWindow_InventoryFilterSlot_C final : public UCharacterWinFilterSlotUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HideNewItemIcon;                                   // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnlockAnim;                                        // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       QuickUseAnim;                                      // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ActiveFilterHiglightAnim;                          // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoverAnim;                                         // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SelectedAnim;                                      // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 TwoHandedLockIcon;                                 // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bg;                                                // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BreaklockVFX;                                      // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ButtonFrame;                                       // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CaptionQuantity;                                   // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         CountBox;                                          // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Countdown;                                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CountdownBar;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CountdownCaption;                                  // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Darkening;                                         // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquippedModeVFX;                                   // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquipSlot;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExplosionVFX1;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExplosionVFX2;                                     // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExplosionVFX3;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExplosionVFX4;                                     // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Disabled1;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Normal;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Over1;                                       // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Sel1;                                        // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Disabled;                                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Normal;                                       // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Over;                                         // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Sel;                                          // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconImage;                                         // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               IconOverlay;                                       // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InnerShadow;                                       // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NewItemIcon;                                       // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_19;                                        // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TransmogIndicator;                                 // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnlockVFX;                                         // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             FilterIcon_Up;                                     // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   SlotName;                                          // 0x04C8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UTexture2D*                             FilterIcon_Sel;                                    // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             FilterIcon_Over;                                   // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UWidget* WidgetReference)> OnHovered;                                         // 0x04F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UWidget* WidgetReference)> OnUnhovered;                                       // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UWidget* WidgetReference)> OnClicked;                                         // 0x0510(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UWidget* WidgetReference)> OnFocus;                                           // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UWidget* WidgetReference)> OnPressed;                                         // 0x0530(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UWidget* WidgetReference)> OnReleased;                                        // 0x0540(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         SlotType;                                          // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsFilterEnabled;                                   // 0x0554(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_555[0x3];                                      // 0x0555(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             FilterIcon_Disabled;                               // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             FilterIcon_Locked;                                 // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             Frame_Bg;                                          // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             Frame_up;                                          // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             Frame_sel;                                         // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             Frame_over;                                        // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             Frame_Disabled;                                    // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             EquipSlotGfx;                                      // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             ItemIcon;                                          // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemIconVisible;                                   // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLocked;                                          // 0x05A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUnavailable;                                     // 0x05A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShadowMode;                                      // 0x05A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             InnerShadowTexture;                                // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CharacterWindow_InventoryFilterSlot(int32 EntryPoint);
	void OnSetTransmogSlot(bool bInTransmogSlot);
	void OnSetUnavailable(bool bInUnavailable);
	void OnSetTwoHandedLocked(bool bInTwoHandedLocked);
	void OnSetEquippedItemMode(bool bInEquippedItemMode);
	void OnPlayUnlockAnim();
	void OnSetLocked(bool bInLocked);
	void OnStackNumChanged(int32 InStackNum, bool bInIsStackable, bool bShadowMode);
	void BndEvt__BP_CharacterWindow_InventoryFilterSlot_ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void OnTemporaryEnchantIconsChanged(const TArray<class UTexture2D*>& InTemporaryEnchantIcons);
	void OnPermanentEnchantIconsChanged(const TArray<class UTexture2D*>& InPermanentEnchantIcons);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnInit();
	void OnSetCountdown(float ElapsedCooldownPercent, const class FText& TimeLeft);
	void OnToggleNewItemWarning(bool bInVisible);
	void OnSetSlotNameText(const class FText& SlotNameText);
	void OnSetSelected(bool bInSelected);
	void OnSetItemIcon(class UTexture2D* ItemIcon_0);
	void OnSetVisible(bool bInVisible);
	void OnSetEnabled(bool bInEnabled);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void SetVisible(bool InVisible);
	void SetSlotName(const class FText& InSlotName);
	void Init();
	void SetSelected(bool InSelected);
	void SetEnabled(bool InIsEnabled);
	void SetItemIcon(class UTexture2D* InItemIcon);
	void Show_Item_Icon(bool InItemIconVisible);
	void ToggleNewItemWarning(bool InVisible, bool InAnimate);
	void SetCountdown(float PercentLeft, const class FText& TimeLeft);
	void ToggleActiveFilterHighlight(bool inEnabled);
	void SetCount(int32 Quantity, bool Stackable, bool ShadowMode);
	void PlayQuickUseAnim();
	void Set_Locked(bool InIsLocked);
	void PlayUnlockAnim();
	void Toggle2HandedLock(bool InVisible);
	void SetUnavailable(bool InUnavailable);
	void UnlockAnimFinished();
	void ToggleShadowMode(bool InIsShadowMode);
	void ToggleTransmogIndicator(bool InTransmogSlot);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharacterWindow_InventoryFilterSlot_C">();
	}
	static class UBP_CharacterWindow_InventoryFilterSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CharacterWindow_InventoryFilterSlot_C>();
	}
};
static_assert(alignof(UBP_CharacterWindow_InventoryFilterSlot_C) == 0x000008, "Wrong alignment on UBP_CharacterWindow_InventoryFilterSlot_C");
static_assert(sizeof(UBP_CharacterWindow_InventoryFilterSlot_C) == 0x0005B0, "Wrong size on UBP_CharacterWindow_InventoryFilterSlot_C");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, UberGraphFrame) == 0x000388, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, HideNewItemIcon) == 0x000390, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::HideNewItemIcon' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, UnlockAnim) == 0x000398, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::UnlockAnim' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, QuickUseAnim) == 0x0003A0, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::QuickUseAnim' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, ActiveFilterHiglightAnim) == 0x0003A8, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::ActiveFilterHiglightAnim' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, HoverAnim) == 0x0003B0, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::HoverAnim' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, SelectedAnim) == 0x0003B8, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::SelectedAnim' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, TwoHandedLockIcon) == 0x0003C0, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::TwoHandedLockIcon' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Bg) == 0x0003C8, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Bg' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, BreaklockVFX) == 0x0003D0, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::BreaklockVFX' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, ButtonFrame) == 0x0003D8, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::ButtonFrame' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, CaptionQuantity) == 0x0003E0, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::CaptionQuantity' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, CountBox) == 0x0003E8, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::CountBox' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Countdown) == 0x0003F0, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Countdown' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, CountdownBar) == 0x0003F8, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::CountdownBar' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, CountdownCaption) == 0x000400, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::CountdownCaption' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Darkening) == 0x000408, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Darkening' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, EquippedModeVFX) == 0x000410, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::EquippedModeVFX' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, EquipSlot) == 0x000418, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::EquipSlot' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, ExplosionVFX1) == 0x000420, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::ExplosionVFX1' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, ExplosionVFX2) == 0x000428, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::ExplosionVFX2' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, ExplosionVFX3) == 0x000430, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::ExplosionVFX3' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, ExplosionVFX4) == 0x000438, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::ExplosionVFX4' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Frame_Disabled1) == 0x000440, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Frame_Disabled1' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Frame_Normal) == 0x000448, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Frame_Normal' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Frame_Over1) == 0x000450, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Frame_Over1' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Frame_Sel1) == 0x000458, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Frame_Sel1' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Icon_Disabled) == 0x000460, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Icon_Disabled' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Icon_Normal) == 0x000468, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Icon_Normal' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Icon_Over) == 0x000470, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Icon_Over' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Icon_Sel) == 0x000478, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Icon_Sel' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, IconImage) == 0x000480, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::IconImage' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, IconOverlay) == 0x000488, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::IconOverlay' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, InnerShadow) == 0x000490, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::InnerShadow' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, NewItemIcon) == 0x000498, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::NewItemIcon' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Overlay_19) == 0x0004A0, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Overlay_19' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, TransmogIndicator) == 0x0004A8, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::TransmogIndicator' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, UnlockVFX) == 0x0004B0, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::UnlockVFX' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Visible) == 0x0004B8, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Visible' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, FilterIcon_Up) == 0x0004C0, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::FilterIcon_Up' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, SlotName) == 0x0004C8, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::SlotName' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, FilterIcon_Sel) == 0x0004E0, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::FilterIcon_Sel' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, FilterIcon_Over) == 0x0004E8, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::FilterIcon_Over' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, OnHovered) == 0x0004F0, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, OnUnhovered) == 0x000500, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, OnClicked) == 0x000510, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, OnFocus) == 0x000520, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::OnFocus' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, OnPressed) == 0x000530, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, OnReleased) == 0x000540, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::OnReleased' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, SlotType) == 0x000550, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::SlotType' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, IsFilterEnabled) == 0x000554, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::IsFilterEnabled' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, FilterIcon_Disabled) == 0x000558, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::FilterIcon_Disabled' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, FilterIcon_Locked) == 0x000560, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::FilterIcon_Locked' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Frame_Bg) == 0x000568, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Frame_Bg' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Frame_up) == 0x000570, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Frame_up' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Frame_sel) == 0x000578, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Frame_sel' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Frame_over) == 0x000580, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Frame_over' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, Frame_Disabled) == 0x000588, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::Frame_Disabled' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, EquipSlotGfx) == 0x000590, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::EquipSlotGfx' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, ItemIcon) == 0x000598, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::ItemIcon' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, ItemIconVisible) == 0x0005A0, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::ItemIconVisible' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, IsLocked) == 0x0005A1, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::IsLocked' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, IsUnavailable) == 0x0005A2, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::IsUnavailable' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, IsShadowMode) == 0x0005A3, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::IsShadowMode' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_InventoryFilterSlot_C, InnerShadowTexture) == 0x0005A8, "Member 'UBP_CharacterWindow_InventoryFilterSlot_C::InnerShadowTexture' has a wrong offset!");

}

