#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterWindow_InventoryFilterSlot

#include "Basic.hpp"

#include "BP_CharacterWindow_InventoryFilterSlot_classes.hpp"
#include "BP_CharacterWindow_InventoryFilterSlot_parameters.hpp"


namespace SDK
{

// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.ExecuteUbergraph_BP_CharacterWindow_InventoryFilterSlot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_InventoryFilterSlot_C::ExecuteUbergraph_BP_CharacterWindow_InventoryFilterSlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "ExecuteUbergraph_BP_CharacterWindow_InventoryFilterSlot");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_ExecuteUbergraph_BP_CharacterWindow_InventoryFilterSlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnSetTransmogSlot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInTransmogSlot                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnSetTransmogSlot(bool bInTransmogSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnSetTransmogSlot");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnSetTransmogSlot Parms{};

	Parms.bInTransmogSlot = bInTransmogSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnSetUnavailable
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInUnavailable                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnSetUnavailable(bool bInUnavailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnSetUnavailable");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnSetUnavailable Parms{};

	Parms.bInUnavailable = bInUnavailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnSetTwoHandedLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInTwoHandedLocked                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnSetTwoHandedLocked(bool bInTwoHandedLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnSetTwoHandedLocked");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnSetTwoHandedLocked Parms{};

	Parms.bInTwoHandedLocked = bInTwoHandedLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnSetEquippedItemMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInEquippedItemMode                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnSetEquippedItemMode(bool bInEquippedItemMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnSetEquippedItemMode");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnSetEquippedItemMode Parms{};

	Parms.bInEquippedItemMode = bInEquippedItemMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnPlayUnlockAnim
// (Event, Protected, BlueprintEvent)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnPlayUnlockAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnPlayUnlockAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnSetLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInLocked                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnSetLocked(bool bInLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnSetLocked");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnSetLocked Parms{};

	Parms.bInLocked = bInLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnStackNumChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InStackNum                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInIsStackable                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bShadowMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnStackNumChanged(int32 InStackNum, bool bInIsStackable, bool bShadowMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnStackNumChanged");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnStackNumChanged Parms{};

	Parms.InStackNum = InStackNum;
	Parms.bInIsStackable = bInIsStackable;
	Parms.bShadowMode = bShadowMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.BndEvt__BP_CharacterWindow_InventoryFilterSlot_ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_InventoryFilterSlot_C::BndEvt__BP_CharacterWindow_InventoryFilterSlot_ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "BndEvt__BP_CharacterWindow_InventoryFilterSlot_ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnTemporaryEnchantIconsChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UTexture2D*>               InTemporaryEnchantIcons                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnTemporaryEnchantIconsChanged(const TArray<class UTexture2D*>& InTemporaryEnchantIcons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnTemporaryEnchantIconsChanged");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnTemporaryEnchantIconsChanged Parms{};

	Parms.InTemporaryEnchantIcons = std::move(InTemporaryEnchantIcons);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnPermanentEnchantIconsChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UTexture2D*>               InPermanentEnchantIcons                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnPermanentEnchantIconsChanged(const TArray<class UTexture2D*>& InPermanentEnchantIcons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnPermanentEnchantIconsChanged");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnPermanentEnchantIconsChanged Parms{};

	Parms.InPermanentEnchantIcons = std::move(InPermanentEnchantIcons);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnMouseLeave");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnMouseEnter");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnInit
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnSetCountdown
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   ElapsedCooldownPercent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TimeLeft                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnSetCountdown(float ElapsedCooldownPercent, const class FText& TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnSetCountdown");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnSetCountdown Parms{};

	Parms.ElapsedCooldownPercent = ElapsedCooldownPercent;
	Parms.TimeLeft = std::move(TimeLeft);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnToggleNewItemWarning
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnToggleNewItemWarning(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnToggleNewItemWarning");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnToggleNewItemWarning Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnSetSlotNameText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             SlotNameText                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnSetSlotNameText(const class FText& SlotNameText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnSetSlotNameText");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnSetSlotNameText Parms{};

	Parms.SlotNameText = std::move(SlotNameText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnSetSelected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnSetSelected(bool bInSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnSetSelected");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnSetSelected Parms{};

	Parms.bInSelected = bInSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnSetItemIcon
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*                       ItemIcon_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnSetItemIcon(class UTexture2D* ItemIcon_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnSetItemIcon");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnSetItemIcon Parms{};

	Parms.ItemIcon_0 = ItemIcon_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnSetVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnSetVisible(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnSetVisible");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnSetVisible Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.OnSetEnabled
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::OnSetEnabled(bool bInEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "OnSetEnabled");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_OnSetEnabled Parms{};

	Parms.bInEnabled = bInEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_InventoryFilterSlot_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "Tick");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_CharacterWindow_InventoryFilterSlot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "PreConstruct");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.SetVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::SetVisible(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "SetVisible");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_SetVisible Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.SetSlotName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InSlotName                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_CharacterWindow_InventoryFilterSlot_C::SetSlotName(const class FText& InSlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "SetSlotName");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_SetSlotName Parms{};

	Parms.InSlotName = std::move(InSlotName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.Init
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_InventoryFilterSlot_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.SetSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InSelected                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::SetSelected(bool InSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "SetSelected");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_SetSelected Parms{};

	Parms.InSelected = InSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.SetEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsEnabled                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::SetEnabled(bool InIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "SetEnabled");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_SetEnabled Parms{};

	Parms.InIsEnabled = InIsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.SetItemIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       InItemIcon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_InventoryFilterSlot_C::SetItemIcon(class UTexture2D* InItemIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "SetItemIcon");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_SetItemIcon Parms{};

	Parms.InItemIcon = InItemIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.Show Item Icon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InItemIconVisible                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::Show_Item_Icon(bool InItemIconVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "Show Item Icon");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_Show_Item_Icon Parms{};

	Parms.InItemIconVisible = InItemIconVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.ToggleNewItemWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InAnimate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::ToggleNewItemWarning(bool InVisible, bool InAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "ToggleNewItemWarning");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_ToggleNewItemWarning Parms{};

	Parms.InVisible = InVisible;
	Parms.InAnimate = InAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.SetCountdown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PercentLeft                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TimeLeft                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_CharacterWindow_InventoryFilterSlot_C::SetCountdown(float PercentLeft, const class FText& TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "SetCountdown");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_SetCountdown Parms{};

	Parms.PercentLeft = PercentLeft;
	Parms.TimeLeft = std::move(TimeLeft);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.ToggleActiveFilterHighlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    inEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::ToggleActiveFilterHighlight(bool inEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "ToggleActiveFilterHighlight");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_ToggleActiveFilterHighlight Parms{};

	Parms.inEnabled = inEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.SetCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Stackable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ShadowMode                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::SetCount(int32 Quantity, bool Stackable, bool ShadowMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "SetCount");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_SetCount Parms{};

	Parms.Quantity = Quantity;
	Parms.Stackable = Stackable;
	Parms.ShadowMode = ShadowMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.PlayQuickUseAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_InventoryFilterSlot_C::PlayQuickUseAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "PlayQuickUseAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.Set Locked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsLocked                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::Set_Locked(bool InIsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "Set Locked");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_Set_Locked Parms{};

	Parms.InIsLocked = InIsLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.PlayUnlockAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_InventoryFilterSlot_C::PlayUnlockAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "PlayUnlockAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.Toggle2HandedLock
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::Toggle2HandedLock(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "Toggle2HandedLock");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_Toggle2HandedLock Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.SetUnavailable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InUnavailable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::SetUnavailable(bool InUnavailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "SetUnavailable");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_SetUnavailable Parms{};

	Parms.InUnavailable = InUnavailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.UnlockAnimFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_InventoryFilterSlot_C::UnlockAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "UnlockAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.ToggleShadowMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsShadowMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::ToggleShadowMode(bool InIsShadowMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "ToggleShadowMode");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_ToggleShadowMode Parms{};

	Parms.InIsShadowMode = InIsShadowMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow_InventoryFilterSlot.BP_CharacterWindow_InventoryFilterSlot_C.ToggleTransmogIndicator
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InTransmogSlot                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_InventoryFilterSlot_C::ToggleTransmogIndicator(bool InTransmogSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_InventoryFilterSlot_C", "ToggleTransmogIndicator");

	Params::BP_CharacterWindow_InventoryFilterSlot_C_ToggleTransmogIndicator Parms{};

	Parms.InTransmogSlot = InTransmogSlot;

	UObject::ProcessEvent(Func, &Parms);
}

}

