#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterWindow_ItemsHandler

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_CharacterWindow_ItemsHandler.BP_CharacterWindow_ItemsHandler_C
// 0x0090 (0x03A0 - 0x0310)
class UBP_CharacterWindow_ItemsHandler_C final : public UItemsHandlerUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0310(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TooltipHighlightAnim;                              // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_Character_ItemDetails2_C*           BP_Character_ItemDetails2;                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             EquippedLabel;                                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GridTop;                                           // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ItemDetails;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ItemInfo;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ItemLore;                                          // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      ItemLoreRichText;                                  // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManScrollBox*                          Items;                                             // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemsCanvasPanel*                      ItemsCanvasPanel;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ItemsSizeBox;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_6;                                         // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ScrollBoxSize;                                     // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Tooltip_Bg;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Tooltip_Bg_Highlight;                              // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             WindowTitle;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsSmallScreen;                                     // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_CharacterWindow_ItemsHandler(int32 EntryPoint);
	void UpdateDetailsPanel(const class FText& ItemRequirementText, class UItemAbility* Item, class UItemAbility* ComparedItem, bool bEquipped, bool bAnimate, bool bHighlightTooltip);
	void PreConstruct(bool IsDesignTime);
	void HighlightTooltip();
	void ToggleSmallScreen(bool InIsSmallScreen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharacterWindow_ItemsHandler_C">();
	}
	static class UBP_CharacterWindow_ItemsHandler_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CharacterWindow_ItemsHandler_C>();
	}
};
static_assert(alignof(UBP_CharacterWindow_ItemsHandler_C) == 0x000008, "Wrong alignment on UBP_CharacterWindow_ItemsHandler_C");
static_assert(sizeof(UBP_CharacterWindow_ItemsHandler_C) == 0x0003A0, "Wrong size on UBP_CharacterWindow_ItemsHandler_C");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, UberGraphFrame) == 0x000310, "Member 'UBP_CharacterWindow_ItemsHandler_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, TooltipHighlightAnim) == 0x000318, "Member 'UBP_CharacterWindow_ItemsHandler_C::TooltipHighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, BP_Character_ItemDetails2) == 0x000320, "Member 'UBP_CharacterWindow_ItemsHandler_C::BP_Character_ItemDetails2' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, EquippedLabel) == 0x000328, "Member 'UBP_CharacterWindow_ItemsHandler_C::EquippedLabel' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, GridTop) == 0x000330, "Member 'UBP_CharacterWindow_ItemsHandler_C::GridTop' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, ItemDetails) == 0x000338, "Member 'UBP_CharacterWindow_ItemsHandler_C::ItemDetails' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, ItemInfo) == 0x000340, "Member 'UBP_CharacterWindow_ItemsHandler_C::ItemInfo' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, ItemLore) == 0x000348, "Member 'UBP_CharacterWindow_ItemsHandler_C::ItemLore' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, ItemLoreRichText) == 0x000350, "Member 'UBP_CharacterWindow_ItemsHandler_C::ItemLoreRichText' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, Items) == 0x000358, "Member 'UBP_CharacterWindow_ItemsHandler_C::Items' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, ItemsCanvasPanel) == 0x000360, "Member 'UBP_CharacterWindow_ItemsHandler_C::ItemsCanvasPanel' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, ItemsSizeBox) == 0x000368, "Member 'UBP_CharacterWindow_ItemsHandler_C::ItemsSizeBox' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, Overlay_6) == 0x000370, "Member 'UBP_CharacterWindow_ItemsHandler_C::Overlay_6' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, ScrollBoxSize) == 0x000378, "Member 'UBP_CharacterWindow_ItemsHandler_C::ScrollBoxSize' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, Tooltip_Bg) == 0x000380, "Member 'UBP_CharacterWindow_ItemsHandler_C::Tooltip_Bg' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, Tooltip_Bg_Highlight) == 0x000388, "Member 'UBP_CharacterWindow_ItemsHandler_C::Tooltip_Bg_Highlight' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, WindowTitle) == 0x000390, "Member 'UBP_CharacterWindow_ItemsHandler_C::WindowTitle' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_ItemsHandler_C, IsSmallScreen) == 0x000398, "Member 'UBP_CharacterWindow_ItemsHandler_C::IsSmallScreen' has a wrong offset!");

}

