#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterWindow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_CharacterWindow.BP_CharacterWindow_C
// 0x03C0 (0x0968 - 0x05A8)
class UBP_CharacterWindow_C final : public UCharacterWindowUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Set2Highlight;                                     // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Set1Highlight;                                     // 0x05B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TooltipHighlightAnim;                              // 0x05C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RingRemoveAnimation;                               // 0x05C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       QuickUseAnimation;                                 // 0x05D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOutAnim;                                       // 0x05D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x05E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Attack;                                            // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Armor;                                   // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Bleed;                                   // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_CarryWeight_C*      Attribute_CarryWeight;                             // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_ComboPoints;                             // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Constitution;                            // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_CriticalChance;                          // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_CriticalDamage;                          // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Defense;                                 // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Dexterity;                               // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Endurance;                               // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Energy;                                  // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Fire;                                    // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Frost;                                   // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Hitpoint;                                // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Knowledge;                               // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Physical;                                // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Poise;                                   // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Poison;                                  // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Power;                                   // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Rage;                                    // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Recovery;                                // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_SpellCriticalChance;                     // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_SpellPower;                              // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Spirit;                                  // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_SpiritForce;                             // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Stagger;                                 // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Stamina;                                 // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Strength;                                // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Void;                                    // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_WeaponDamage;                            // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Wild;                                    // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Attributes;                                        // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_0;                                  // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BasicStats;                                        // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BottomScreenFrame;                                 // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CloseButton_C*                      BtnClose;                                          // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Double_C*            BtnHotkeyA;                                        // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyB;                                        // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Double_C*            BtnHotkeyLS_Press;                                 // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyRS_Left_Right;                            // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Double_C*            BtnHotkeyRS_Press;                                 // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyRS_Up_Down;                               // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyX;                                        // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyY;                                        // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnNextTab;                                        // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnPreviousTab;                                    // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Character_BuffBar_C*                BuffBar;                                           // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               CharacterView;                                     // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ContentFrame;                                      // 0x0770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Character_ItemDetails2_C*           EquippedItemDetails;                               // 0x0778(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               EquippedItemLore;                                  // 0x0780(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      EquippedItemLoreRichText;                          // 0x0788(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             EquippedLabel;                                     // 0x0790(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_Back;                                   // 0x0798(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_Chest;                                  // 0x07A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_Fingers;                                // 0x07A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_Fingers2;                               // 0x07B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_Fingers3;                               // 0x07B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_Fingers4;                               // 0x07C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_Hands;                                  // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_Head;                                   // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_Legs;                                   // 0x07D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_MainHand1;                              // 0x07E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_MainHand2;                              // 0x07E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_OffHand1;                               // 0x07F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_OffHand2;                               // 0x07F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_QuickUseItem0;                          // 0x0800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_QuickUseItem1;                          // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_QuickUseItem2;                          // 0x0810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_QuickUseItem3;                          // 0x0818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_QuickUseItem4;                          // 0x0820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_QuickUseItem5;                          // 0x0828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_QuickUseItem6;                          // 0x0830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_QuickUseItem7;                          // 0x0838(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_QuickUseItem8;                          // 0x0840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* FilterSlot_QuickUseItem9;                          // 0x0848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           FiltersView;                                       // 0x0850(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Set1Highlight;                               // 0x0858(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Set1VFX;                                     // 0x0860(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Set2Highlight;                               // 0x0868(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Set2VFX;                                     // 0x0870(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InventoryFrame;                                    // 0x0878(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_ItemsHandler_C*     InventoryItemsHandler;                             // 0x0880(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           InventoryView;                                     // 0x0888(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label_CharacterLevel;                              // 0x0890(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label_CharacterName;                               // 0x0898(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label_CharacterName_1;                             // 0x08A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockedSlot;                                        // 0x08A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               MouseRotateSizeBox;                                // 0x08B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NormalFrame;                                       // 0x08B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* QuickUseAnimationSlot;                             // 0x08C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RenderPlaceholder;                                 // 0x08C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Resistences;                                       // 0x08D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterWindow_InventoryFilterSlot_C* RingRemoveAnimationSlot;                           // 0x08D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ScreenBg2;                                         // 0x08E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StatsFrame;                                        // 0x08E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                StatsView;                                         // 0x08F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Attributes;                                    // 0x08F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Character;                                     // 0x0900(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Inventory;                                     // 0x0908(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Map;                                           // 0x0910(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Quests;                                        // 0x0918(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Skills;                                        // 0x0920(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_WitchLantern;                                  // 0x0928(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Tabs;                                              // 0x0930(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TooltipEquipped;                                   // 0x0938(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TooltipHighlight;                                  // 0x0940(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TopScreenFrame;                                    // 0x0948(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              BtnCloseClickedEvent;                              // 0x0950(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         SelectionIndicatorAngle;                           // 0x0960(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsItemLoreVisible;                                 // 0x0964(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStatsVisible;                                    // 0x0965(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFiltersVisible;                                  // 0x0966(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_CharacterWindow(int32 EntryPoint);
	void OnToggleStats(bool bInStatsVisible);
	void OnSetInputDisplay(EInputDisplay InInputDisplay, EInputDisplay InControlDisplay);
	void BndEvt__BP_CharacterWindow_BtnClose_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature();
	void OnCultureChanged();
	void OnGamepadRightStickDownEvent();
	void OnGamepadRightStickUpEvent();
	void OnHighlightRequirement();
	void OnIngameMenuEvent();
	void OnInventoryEvent();
	void OnSetRequestEquippedItem(class UItemAbility* InItemAbility);
	void OnRemovedRingItem(class UWidget* Widget, class UItemAbility* Item);
	void OnUpdateEquippedItemDetailsPanel(const class FText& ItemRequirementText, class UItemAbility* InItem, class UItemAbility* InComparedItem, bool bEquipped, bool bAnimate);
	void OnSortChanged(const class FText& SortName);
	void BndEvt__BP_Vendor_Buy_BtnHotkeyDPadUp_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void OnGamepadXEvent();
	void OnToggleSetIndex();
	void BndEvt__BP_CharacterWindow_BtnHotkeyDUpDownRight_K2Node_ComponentBoundEvent_12_OnClicked__DelegateSignature();
	void OnSetFilterSlot(EItemSlot ItemSlot, const class FText& FilterName);
	void OnSetFilterView(bool bInFilterView);
	void BndEvt__BP_InventoryWindow_Tab_Inventory_K2Node_ComponentBoundEvent_13_OnClicked__DelegateSignature();
	void OnGamepadLeftStickBtnEvent();
	void BndEvt__BP_CharacterWindow_BtnHotkeyLS_Press_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature();
	void BndEvt__BP_MapWindow_Tab_WitchLantern_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature();
	void OnStartEquipState();
	void OnUseItem(class UWidget* Widget, class UItemAbility* Item);
	void OnEndSpecialSlotEquipState();
	void OnStartSpecialSlotEquipState();
	void OnGamepadRightStickBtnEvent();
	void BndEvt__BtnHotkeyA_1_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature();
	void OnGamepadYEvent();
	void BndEvt__BtnHotkeyY_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature();
	void BndEvt__Tab_Map_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature();
	void BndEvt__Tab_Quests_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature();
	void BndEvt__Tab_Attributes_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature();
	void BndEvt__Tab_Skills_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void BndEvt__Tab_Character_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void OnPropertyChanged(EHeroProperty PropertyType, float Value, float RoundedFloatValue, int32 RoundedIntValue, bool bAnimate);
	void BndEvt__BtnHotkeyA2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void OnInitialized();
	void OnGamepadRBEvent();
	void OnGamepadLBEvent();
	void OnInit();
	void OnHide(float AnimDuration);
	void OnShow(float AnimDuration);
	void OnGamepadAEvent();
	void BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature();
	void BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature();
	void Construct();
	void BndEvt__BtnClose_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void OnGamepadBEvent();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void BtnHotkeyBClicked(bool OpenPauseMenu, bool OnlyClose);
	void ShowItemLore();
	void HideItemLore();
	void BtnHotkeyAClicked();
	void BtnHotkeyLS_PressClicked();
	void BP_PropertyChanged(EHeroProperty HeroProperty, float Value, float RoundedFloatValue, int32 RoundedIntValue, bool Animate);
	void BtnHotkeyYClicked();
	void BtnHotkeyRS_PressClicked();
	void ToggleStats(bool InStatsVisible);
	void Play_Quick_Use_Animation(class UWidget* InWidget, class UItemAbility* InItem);
	void BP_SetFilterView(bool InFilterView);
	void BtnHotkeyXClicked();
	void SetSetIndexFrames(bool Highlight);
	void BtnHotkeyRSUpClicked();
	void BtnHotkeyRSDownClicked();
	void SetRequestEquippedItem(class UItemAbility* InItemAbility);
	void PlayRingRemoveAnimation(class UWidget* InWidget, class UItemAbility* InItem);
	void PlayRightTooltipHighlight();
	void SetBtnCloseVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharacterWindow_C">();
	}
	static class UBP_CharacterWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CharacterWindow_C>();
	}
};
static_assert(alignof(UBP_CharacterWindow_C) == 0x000008, "Wrong alignment on UBP_CharacterWindow_C");
static_assert(sizeof(UBP_CharacterWindow_C) == 0x000968, "Wrong size on UBP_CharacterWindow_C");
static_assert(offsetof(UBP_CharacterWindow_C, UberGraphFrame) == 0x0005A8, "Member 'UBP_CharacterWindow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Set2Highlight) == 0x0005B0, "Member 'UBP_CharacterWindow_C::Set2Highlight' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Set1Highlight) == 0x0005B8, "Member 'UBP_CharacterWindow_C::Set1Highlight' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, TooltipHighlightAnim) == 0x0005C0, "Member 'UBP_CharacterWindow_C::TooltipHighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, RingRemoveAnimation) == 0x0005C8, "Member 'UBP_CharacterWindow_C::RingRemoveAnimation' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, QuickUseAnimation) == 0x0005D0, "Member 'UBP_CharacterWindow_C::QuickUseAnimation' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FadeOutAnim) == 0x0005D8, "Member 'UBP_CharacterWindow_C::FadeOutAnim' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FadeInAnim) == 0x0005E0, "Member 'UBP_CharacterWindow_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attack) == 0x0005E8, "Member 'UBP_CharacterWindow_C::Attack' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Armor) == 0x0005F0, "Member 'UBP_CharacterWindow_C::Attribute_Armor' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Bleed) == 0x0005F8, "Member 'UBP_CharacterWindow_C::Attribute_Bleed' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_CarryWeight) == 0x000600, "Member 'UBP_CharacterWindow_C::Attribute_CarryWeight' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_ComboPoints) == 0x000608, "Member 'UBP_CharacterWindow_C::Attribute_ComboPoints' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Constitution) == 0x000610, "Member 'UBP_CharacterWindow_C::Attribute_Constitution' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_CriticalChance) == 0x000618, "Member 'UBP_CharacterWindow_C::Attribute_CriticalChance' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_CriticalDamage) == 0x000620, "Member 'UBP_CharacterWindow_C::Attribute_CriticalDamage' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Defense) == 0x000628, "Member 'UBP_CharacterWindow_C::Attribute_Defense' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Dexterity) == 0x000630, "Member 'UBP_CharacterWindow_C::Attribute_Dexterity' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Endurance) == 0x000638, "Member 'UBP_CharacterWindow_C::Attribute_Endurance' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Energy) == 0x000640, "Member 'UBP_CharacterWindow_C::Attribute_Energy' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Fire) == 0x000648, "Member 'UBP_CharacterWindow_C::Attribute_Fire' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Frost) == 0x000650, "Member 'UBP_CharacterWindow_C::Attribute_Frost' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Hitpoint) == 0x000658, "Member 'UBP_CharacterWindow_C::Attribute_Hitpoint' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Knowledge) == 0x000660, "Member 'UBP_CharacterWindow_C::Attribute_Knowledge' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Physical) == 0x000668, "Member 'UBP_CharacterWindow_C::Attribute_Physical' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Poise) == 0x000670, "Member 'UBP_CharacterWindow_C::Attribute_Poise' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Poison) == 0x000678, "Member 'UBP_CharacterWindow_C::Attribute_Poison' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Power) == 0x000680, "Member 'UBP_CharacterWindow_C::Attribute_Power' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Rage) == 0x000688, "Member 'UBP_CharacterWindow_C::Attribute_Rage' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Recovery) == 0x000690, "Member 'UBP_CharacterWindow_C::Attribute_Recovery' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_SpellCriticalChance) == 0x000698, "Member 'UBP_CharacterWindow_C::Attribute_SpellCriticalChance' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_SpellPower) == 0x0006A0, "Member 'UBP_CharacterWindow_C::Attribute_SpellPower' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Spirit) == 0x0006A8, "Member 'UBP_CharacterWindow_C::Attribute_Spirit' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_SpiritForce) == 0x0006B0, "Member 'UBP_CharacterWindow_C::Attribute_SpiritForce' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Stagger) == 0x0006B8, "Member 'UBP_CharacterWindow_C::Attribute_Stagger' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Stamina) == 0x0006C0, "Member 'UBP_CharacterWindow_C::Attribute_Stamina' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Strength) == 0x0006C8, "Member 'UBP_CharacterWindow_C::Attribute_Strength' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Void) == 0x0006D0, "Member 'UBP_CharacterWindow_C::Attribute_Void' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_WeaponDamage) == 0x0006D8, "Member 'UBP_CharacterWindow_C::Attribute_WeaponDamage' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attribute_Wild) == 0x0006E0, "Member 'UBP_CharacterWindow_C::Attribute_Wild' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Attributes) == 0x0006E8, "Member 'UBP_CharacterWindow_C::Attributes' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BackgroundBlur_0) == 0x0006F0, "Member 'UBP_CharacterWindow_C::BackgroundBlur_0' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BasicStats) == 0x0006F8, "Member 'UBP_CharacterWindow_C::BasicStats' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BottomScreenFrame) == 0x000700, "Member 'UBP_CharacterWindow_C::BottomScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BtnClose) == 0x000708, "Member 'UBP_CharacterWindow_C::BtnClose' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BtnHotkeyA) == 0x000710, "Member 'UBP_CharacterWindow_C::BtnHotkeyA' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BtnHotkeyB) == 0x000718, "Member 'UBP_CharacterWindow_C::BtnHotkeyB' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BtnHotkeyLS_Press) == 0x000720, "Member 'UBP_CharacterWindow_C::BtnHotkeyLS_Press' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BtnHotkeyRS_Left_Right) == 0x000728, "Member 'UBP_CharacterWindow_C::BtnHotkeyRS_Left_Right' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BtnHotkeyRS_Press) == 0x000730, "Member 'UBP_CharacterWindow_C::BtnHotkeyRS_Press' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BtnHotkeyRS_Up_Down) == 0x000738, "Member 'UBP_CharacterWindow_C::BtnHotkeyRS_Up_Down' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BtnHotkeyX) == 0x000740, "Member 'UBP_CharacterWindow_C::BtnHotkeyX' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BtnHotkeyY) == 0x000748, "Member 'UBP_CharacterWindow_C::BtnHotkeyY' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BtnNextTab) == 0x000750, "Member 'UBP_CharacterWindow_C::BtnNextTab' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BtnPreviousTab) == 0x000758, "Member 'UBP_CharacterWindow_C::BtnPreviousTab' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BuffBar) == 0x000760, "Member 'UBP_CharacterWindow_C::BuffBar' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, CharacterView) == 0x000768, "Member 'UBP_CharacterWindow_C::CharacterView' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, ContentFrame) == 0x000770, "Member 'UBP_CharacterWindow_C::ContentFrame' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, EquippedItemDetails) == 0x000778, "Member 'UBP_CharacterWindow_C::EquippedItemDetails' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, EquippedItemLore) == 0x000780, "Member 'UBP_CharacterWindow_C::EquippedItemLore' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, EquippedItemLoreRichText) == 0x000788, "Member 'UBP_CharacterWindow_C::EquippedItemLoreRichText' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, EquippedLabel) == 0x000790, "Member 'UBP_CharacterWindow_C::EquippedLabel' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_Back) == 0x000798, "Member 'UBP_CharacterWindow_C::FilterSlot_Back' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_Chest) == 0x0007A0, "Member 'UBP_CharacterWindow_C::FilterSlot_Chest' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_Fingers) == 0x0007A8, "Member 'UBP_CharacterWindow_C::FilterSlot_Fingers' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_Fingers2) == 0x0007B0, "Member 'UBP_CharacterWindow_C::FilterSlot_Fingers2' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_Fingers3) == 0x0007B8, "Member 'UBP_CharacterWindow_C::FilterSlot_Fingers3' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_Fingers4) == 0x0007C0, "Member 'UBP_CharacterWindow_C::FilterSlot_Fingers4' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_Hands) == 0x0007C8, "Member 'UBP_CharacterWindow_C::FilterSlot_Hands' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_Head) == 0x0007D0, "Member 'UBP_CharacterWindow_C::FilterSlot_Head' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_Legs) == 0x0007D8, "Member 'UBP_CharacterWindow_C::FilterSlot_Legs' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_MainHand1) == 0x0007E0, "Member 'UBP_CharacterWindow_C::FilterSlot_MainHand1' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_MainHand2) == 0x0007E8, "Member 'UBP_CharacterWindow_C::FilterSlot_MainHand2' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_OffHand1) == 0x0007F0, "Member 'UBP_CharacterWindow_C::FilterSlot_OffHand1' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_OffHand2) == 0x0007F8, "Member 'UBP_CharacterWindow_C::FilterSlot_OffHand2' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_QuickUseItem0) == 0x000800, "Member 'UBP_CharacterWindow_C::FilterSlot_QuickUseItem0' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_QuickUseItem1) == 0x000808, "Member 'UBP_CharacterWindow_C::FilterSlot_QuickUseItem1' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_QuickUseItem2) == 0x000810, "Member 'UBP_CharacterWindow_C::FilterSlot_QuickUseItem2' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_QuickUseItem3) == 0x000818, "Member 'UBP_CharacterWindow_C::FilterSlot_QuickUseItem3' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_QuickUseItem4) == 0x000820, "Member 'UBP_CharacterWindow_C::FilterSlot_QuickUseItem4' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_QuickUseItem5) == 0x000828, "Member 'UBP_CharacterWindow_C::FilterSlot_QuickUseItem5' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_QuickUseItem6) == 0x000830, "Member 'UBP_CharacterWindow_C::FilterSlot_QuickUseItem6' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_QuickUseItem7) == 0x000838, "Member 'UBP_CharacterWindow_C::FilterSlot_QuickUseItem7' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_QuickUseItem8) == 0x000840, "Member 'UBP_CharacterWindow_C::FilterSlot_QuickUseItem8' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FilterSlot_QuickUseItem9) == 0x000848, "Member 'UBP_CharacterWindow_C::FilterSlot_QuickUseItem9' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, FiltersView) == 0x000850, "Member 'UBP_CharacterWindow_C::FiltersView' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Frame_Set1Highlight) == 0x000858, "Member 'UBP_CharacterWindow_C::Frame_Set1Highlight' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Frame_Set1VFX) == 0x000860, "Member 'UBP_CharacterWindow_C::Frame_Set1VFX' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Frame_Set2Highlight) == 0x000868, "Member 'UBP_CharacterWindow_C::Frame_Set2Highlight' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Frame_Set2VFX) == 0x000870, "Member 'UBP_CharacterWindow_C::Frame_Set2VFX' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, InventoryFrame) == 0x000878, "Member 'UBP_CharacterWindow_C::InventoryFrame' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, InventoryItemsHandler) == 0x000880, "Member 'UBP_CharacterWindow_C::InventoryItemsHandler' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, InventoryView) == 0x000888, "Member 'UBP_CharacterWindow_C::InventoryView' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Label_CharacterLevel) == 0x000890, "Member 'UBP_CharacterWindow_C::Label_CharacterLevel' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Label_CharacterName) == 0x000898, "Member 'UBP_CharacterWindow_C::Label_CharacterName' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Label_CharacterName_1) == 0x0008A0, "Member 'UBP_CharacterWindow_C::Label_CharacterName_1' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, LockedSlot) == 0x0008A8, "Member 'UBP_CharacterWindow_C::LockedSlot' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, MouseRotateSizeBox) == 0x0008B0, "Member 'UBP_CharacterWindow_C::MouseRotateSizeBox' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, NormalFrame) == 0x0008B8, "Member 'UBP_CharacterWindow_C::NormalFrame' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, QuickUseAnimationSlot) == 0x0008C0, "Member 'UBP_CharacterWindow_C::QuickUseAnimationSlot' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, RenderPlaceholder) == 0x0008C8, "Member 'UBP_CharacterWindow_C::RenderPlaceholder' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Resistences) == 0x0008D0, "Member 'UBP_CharacterWindow_C::Resistences' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, RingRemoveAnimationSlot) == 0x0008D8, "Member 'UBP_CharacterWindow_C::RingRemoveAnimationSlot' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, ScreenBg2) == 0x0008E0, "Member 'UBP_CharacterWindow_C::ScreenBg2' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, StatsFrame) == 0x0008E8, "Member 'UBP_CharacterWindow_C::StatsFrame' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, StatsView) == 0x0008F0, "Member 'UBP_CharacterWindow_C::StatsView' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Tab_Attributes) == 0x0008F8, "Member 'UBP_CharacterWindow_C::Tab_Attributes' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Tab_Character) == 0x000900, "Member 'UBP_CharacterWindow_C::Tab_Character' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Tab_Inventory) == 0x000908, "Member 'UBP_CharacterWindow_C::Tab_Inventory' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Tab_Map) == 0x000910, "Member 'UBP_CharacterWindow_C::Tab_Map' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Tab_Quests) == 0x000918, "Member 'UBP_CharacterWindow_C::Tab_Quests' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Tab_Skills) == 0x000920, "Member 'UBP_CharacterWindow_C::Tab_Skills' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Tab_WitchLantern) == 0x000928, "Member 'UBP_CharacterWindow_C::Tab_WitchLantern' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, Tabs) == 0x000930, "Member 'UBP_CharacterWindow_C::Tabs' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, TooltipEquipped) == 0x000938, "Member 'UBP_CharacterWindow_C::TooltipEquipped' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, TooltipHighlight) == 0x000940, "Member 'UBP_CharacterWindow_C::TooltipHighlight' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, TopScreenFrame) == 0x000948, "Member 'UBP_CharacterWindow_C::TopScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, BtnCloseClickedEvent) == 0x000950, "Member 'UBP_CharacterWindow_C::BtnCloseClickedEvent' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, SelectionIndicatorAngle) == 0x000960, "Member 'UBP_CharacterWindow_C::SelectionIndicatorAngle' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, IsItemLoreVisible) == 0x000964, "Member 'UBP_CharacterWindow_C::IsItemLoreVisible' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, IsStatsVisible) == 0x000965, "Member 'UBP_CharacterWindow_C::IsStatsVisible' has a wrong offset!");
static_assert(offsetof(UBP_CharacterWindow_C, IsFiltersVisible) == 0x000966, "Member 'UBP_CharacterWindow_C::IsFiltersVisible' has a wrong offset!");

}

