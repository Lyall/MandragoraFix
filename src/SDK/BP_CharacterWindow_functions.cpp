#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterWindow

#include "Basic.hpp"

#include "BP_CharacterWindow_classes.hpp"
#include "BP_CharacterWindow_parameters.hpp"


namespace SDK
{

// Function BP_CharacterWindow.BP_CharacterWindow_C.ExecuteUbergraph_BP_CharacterWindow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_C::ExecuteUbergraph_BP_CharacterWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "ExecuteUbergraph_BP_CharacterWindow");

	Params::BP_CharacterWindow_C_ExecuteUbergraph_BP_CharacterWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnToggleStats
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInStatsVisible                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_C::OnToggleStats(bool bInStatsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnToggleStats");

	Params::BP_CharacterWindow_C_OnToggleStats Parms{};

	Parms.bInStatsVisible = bInStatsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnSetInputDisplay
// (Event, Public, BlueprintEvent)
// Parameters:
// EInputDisplay                           InInputDisplay                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInputDisplay                           InControlDisplay                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_C::OnSetInputDisplay(EInputDisplay InInputDisplay, EInputDisplay InControlDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnSetInputDisplay");

	Params::BP_CharacterWindow_C_OnSetInputDisplay Parms{};

	Parms.InInputDisplay = InInputDisplay;
	Parms.InControlDisplay = InControlDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__BP_CharacterWindow_BtnClose_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__BP_CharacterWindow_BtnClose_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__BP_CharacterWindow_BtnClose_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnCultureChanged
// (Event, Protected, BlueprintEvent)

void UBP_CharacterWindow_C::OnCultureChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnCultureChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnGamepadRightStickDownEvent
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnGamepadRightStickDownEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnGamepadRightStickDownEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnGamepadRightStickUpEvent
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnGamepadRightStickUpEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnGamepadRightStickUpEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnHighlightRequirement
// (Event, Protected, BlueprintEvent)

void UBP_CharacterWindow_C::OnHighlightRequirement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnHighlightRequirement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnIngameMenuEvent
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnIngameMenuEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnIngameMenuEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnInventoryEvent
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnInventoryEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnInventoryEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnSetRequestEquippedItem
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UItemAbility*                     InItemAbility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_C::OnSetRequestEquippedItem(class UItemAbility* InItemAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnSetRequestEquippedItem");

	Params::BP_CharacterWindow_C_OnSetRequestEquippedItem Parms{};

	Parms.InItemAbility = InItemAbility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnRemovedRingItem
// (Event, Public, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UItemAbility*                     Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_C::OnRemovedRingItem(class UWidget* Widget, class UItemAbility* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnRemovedRingItem");

	Params::BP_CharacterWindow_C_OnRemovedRingItem Parms{};

	Parms.Widget = Widget;
	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnUpdateEquippedItemDetailsPanel
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ItemRequirementText                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UItemAbility*                     InItem                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UItemAbility*                     InComparedItem                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEquipped                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_C::OnUpdateEquippedItemDetailsPanel(const class FText& ItemRequirementText, class UItemAbility* InItem, class UItemAbility* InComparedItem, bool bEquipped, bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnUpdateEquippedItemDetailsPanel");

	Params::BP_CharacterWindow_C_OnUpdateEquippedItemDetailsPanel Parms{};

	Parms.ItemRequirementText = std::move(ItemRequirementText);
	Parms.InItem = InItem;
	Parms.InComparedItem = InComparedItem;
	Parms.bEquipped = bEquipped;
	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnSortChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             SortName                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CharacterWindow_C::OnSortChanged(const class FText& SortName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnSortChanged");

	Params::BP_CharacterWindow_C_OnSortChanged Parms{};

	Parms.SortName = std::move(SortName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__BP_Vendor_Buy_BtnHotkeyDPadUp_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__BP_Vendor_Buy_BtnHotkeyDPadUp_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__BP_Vendor_Buy_BtnHotkeyDPadUp_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnGamepadXEvent
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnGamepadXEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnGamepadXEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnToggleSetIndex
// (Event, Protected, BlueprintEvent)

void UBP_CharacterWindow_C::OnToggleSetIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnToggleSetIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__BP_CharacterWindow_BtnHotkeyDUpDownRight_K2Node_ComponentBoundEvent_12_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__BP_CharacterWindow_BtnHotkeyDUpDownRight_K2Node_ComponentBoundEvent_12_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__BP_CharacterWindow_BtnHotkeyDUpDownRight_K2Node_ComponentBoundEvent_12_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnSetFilterSlot
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EItemSlot                               ItemSlot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             FilterName                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CharacterWindow_C::OnSetFilterSlot(EItemSlot ItemSlot, const class FText& FilterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnSetFilterSlot");

	Params::BP_CharacterWindow_C_OnSetFilterSlot Parms{};

	Parms.ItemSlot = ItemSlot;
	Parms.FilterName = std::move(FilterName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnSetFilterView
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInFilterView                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_C::OnSetFilterView(bool bInFilterView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnSetFilterView");

	Params::BP_CharacterWindow_C_OnSetFilterView Parms{};

	Parms.bInFilterView = bInFilterView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__BP_InventoryWindow_Tab_Inventory_K2Node_ComponentBoundEvent_13_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__BP_InventoryWindow_Tab_Inventory_K2Node_ComponentBoundEvent_13_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__BP_InventoryWindow_Tab_Inventory_K2Node_ComponentBoundEvent_13_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnGamepadLeftStickBtnEvent
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnGamepadLeftStickBtnEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnGamepadLeftStickBtnEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__BP_CharacterWindow_BtnHotkeyLS_Press_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__BP_CharacterWindow_BtnHotkeyLS_Press_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__BP_CharacterWindow_BtnHotkeyLS_Press_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__BP_MapWindow_Tab_WitchLantern_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__BP_MapWindow_Tab_WitchLantern_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__BP_MapWindow_Tab_WitchLantern_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnStartEquipState
// (BlueprintEvent)

void UBP_CharacterWindow_C::OnStartEquipState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnStartEquipState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnUseItem
// (Event, Public, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UItemAbility*                     Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_C::OnUseItem(class UWidget* Widget, class UItemAbility* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnUseItem");

	Params::BP_CharacterWindow_C_OnUseItem Parms{};

	Parms.Widget = Widget;
	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnEndSpecialSlotEquipState
// (BlueprintEvent)

void UBP_CharacterWindow_C::OnEndSpecialSlotEquipState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnEndSpecialSlotEquipState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnStartSpecialSlotEquipState
// (BlueprintEvent)

void UBP_CharacterWindow_C::OnStartSpecialSlotEquipState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnStartSpecialSlotEquipState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnGamepadRightStickBtnEvent
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnGamepadRightStickBtnEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnGamepadRightStickBtnEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__BtnHotkeyA_1_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__BtnHotkeyA_1_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__BtnHotkeyA_1_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnGamepadYEvent
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnGamepadYEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnGamepadYEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__BtnHotkeyY_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__BtnHotkeyY_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__BtnHotkeyY_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__Tab_Map_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__Tab_Map_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__Tab_Map_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__Tab_Quests_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__Tab_Quests_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__Tab_Quests_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__Tab_Attributes_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__Tab_Attributes_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__Tab_Attributes_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__Tab_Skills_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__Tab_Skills_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__Tab_Skills_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__Tab_Character_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__Tab_Character_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__Tab_Character_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnPropertyChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EHeroProperty                           PropertyType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RoundedFloatValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RoundedIntValue                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_C::OnPropertyChanged(EHeroProperty PropertyType, float Value, float RoundedFloatValue, int32 RoundedIntValue, bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnPropertyChanged");

	Params::BP_CharacterWindow_C_OnPropertyChanged Parms{};

	Parms.PropertyType = PropertyType;
	Parms.Value = Value;
	Parms.RoundedFloatValue = RoundedFloatValue;
	Parms.RoundedIntValue = RoundedIntValue;
	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__BtnHotkeyA2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__BtnHotkeyA2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__BtnHotkeyA2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnGamepadRBEvent
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnGamepadRBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnGamepadRBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnGamepadLBEvent
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnGamepadLBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnGamepadLBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnInit
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnHide
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_C::OnHide(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnHide");

	Params::BP_CharacterWindow_C_OnHide Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnShow
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_C::OnShow(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnShow");

	Params::BP_CharacterWindow_C_OnShow Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnGamepadAEvent
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnGamepadAEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnGamepadAEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BndEvt__BtnClose_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_CharacterWindow_C::BndEvt__BtnClose_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BndEvt__BtnClose_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.OnGamepadBEvent
// (Event, Public, BlueprintEvent)

void UBP_CharacterWindow_C::OnGamepadBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "OnGamepadBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "Tick");

	Params::BP_CharacterWindow_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "PreConstruct");

	Params::BP_CharacterWindow_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BtnHotkeyBClicked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OpenPauseMenu                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OnlyClose                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_C::BtnHotkeyBClicked(bool OpenPauseMenu, bool OnlyClose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BtnHotkeyBClicked");

	Params::BP_CharacterWindow_C_BtnHotkeyBClicked Parms{};

	Parms.OpenPauseMenu = OpenPauseMenu;
	Parms.OnlyClose = OnlyClose;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.ShowItemLore
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_C::ShowItemLore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "ShowItemLore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.HideItemLore
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_C::HideItemLore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "HideItemLore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BtnHotkeyAClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_C::BtnHotkeyAClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BtnHotkeyAClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BtnHotkeyLS_PressClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_C::BtnHotkeyLS_PressClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BtnHotkeyLS_PressClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BP_PropertyChanged
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHeroProperty                           HeroProperty                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RoundedFloatValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RoundedIntValue                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Animate                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_C::BP_PropertyChanged(EHeroProperty HeroProperty, float Value, float RoundedFloatValue, int32 RoundedIntValue, bool Animate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BP_PropertyChanged");

	Params::BP_CharacterWindow_C_BP_PropertyChanged Parms{};

	Parms.HeroProperty = HeroProperty;
	Parms.Value = Value;
	Parms.RoundedFloatValue = RoundedFloatValue;
	Parms.RoundedIntValue = RoundedIntValue;
	Parms.Animate = Animate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BtnHotkeyYClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_C::BtnHotkeyYClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BtnHotkeyYClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BtnHotkeyRS_PressClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_C::BtnHotkeyRS_PressClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BtnHotkeyRS_PressClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.ToggleStats
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InStatsVisible                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_C::ToggleStats(bool InStatsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "ToggleStats");

	Params::BP_CharacterWindow_C_ToggleStats Parms{};

	Parms.InStatsVisible = InStatsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.Play Quick Use Animation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          InWidget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UItemAbility*                     InItem                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_C::Play_Quick_Use_Animation(class UWidget* InWidget, class UItemAbility* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "Play Quick Use Animation");

	Params::BP_CharacterWindow_C_Play_Quick_Use_Animation Parms{};

	Parms.InWidget = InWidget;
	Parms.InItem = InItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BP_SetFilterView
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InFilterView                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_C::BP_SetFilterView(bool InFilterView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BP_SetFilterView");

	Params::BP_CharacterWindow_C_BP_SetFilterView Parms{};

	Parms.InFilterView = InFilterView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BtnHotkeyXClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_C::BtnHotkeyXClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BtnHotkeyXClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.SetSetIndexFrames
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Highlight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CharacterWindow_C::SetSetIndexFrames(bool Highlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "SetSetIndexFrames");

	Params::BP_CharacterWindow_C_SetSetIndexFrames Parms{};

	Parms.Highlight = Highlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BtnHotkeyRSUpClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_C::BtnHotkeyRSUpClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BtnHotkeyRSUpClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.BtnHotkeyRSDownClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_C::BtnHotkeyRSDownClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "BtnHotkeyRSDownClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.SetRequestEquippedItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UItemAbility*                     InItemAbility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_C::SetRequestEquippedItem(class UItemAbility* InItemAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "SetRequestEquippedItem");

	Params::BP_CharacterWindow_C_SetRequestEquippedItem Parms{};

	Parms.InItemAbility = InItemAbility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.PlayRingRemoveAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          InWidget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UItemAbility*                     InItem                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterWindow_C::PlayRingRemoveAnimation(class UWidget* InWidget, class UItemAbility* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "PlayRingRemoveAnimation");

	Params::BP_CharacterWindow_C_PlayRingRemoveAnimation Parms{};

	Parms.InWidget = InWidget;
	Parms.InItem = InItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.PlayRightTooltipHighlight
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_C::PlayRightTooltipHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "PlayRightTooltipHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterWindow.BP_CharacterWindow_C.SetBtnCloseVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterWindow_C::SetBtnCloseVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterWindow_C", "SetBtnCloseVisibility");

	UObject::ProcessEvent(Func, nullptr);
}

}

