#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CheckboxButton

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_CheckboxButton.BP_CheckboxButton_C.ToggleChecked
// 0x0005 (0x0005 - 0x0000)
struct BP_CheckboxButton_C_ToggleChecked final
{
public:
	bool                                          InIsChecked;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CheckboxButton_C_ToggleChecked) == 0x000001, "Wrong alignment on BP_CheckboxButton_C_ToggleChecked");
static_assert(sizeof(BP_CheckboxButton_C_ToggleChecked) == 0x000005, "Wrong size on BP_CheckboxButton_C_ToggleChecked");
static_assert(offsetof(BP_CheckboxButton_C_ToggleChecked, InIsChecked) == 0x000000, "Member 'BP_CheckboxButton_C_ToggleChecked::InIsChecked' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ToggleChecked, Temp_bool_Variable) == 0x000001, "Member 'BP_CheckboxButton_C_ToggleChecked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ToggleChecked, Temp_byte_Variable) == 0x000002, "Member 'BP_CheckboxButton_C_ToggleChecked::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ToggleChecked, Temp_byte_Variable_1) == 0x000003, "Member 'BP_CheckboxButton_C_ToggleChecked::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ToggleChecked, K2Node_Select_Default) == 0x000004, "Member 'BP_CheckboxButton_C_ToggleChecked::K2Node_Select_Default' has a wrong offset!");

// Function BP_CheckboxButton.BP_CheckboxButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_CheckboxButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CheckboxButton_C_PreConstruct) == 0x000001, "Wrong alignment on BP_CheckboxButton_C_PreConstruct");
static_assert(sizeof(BP_CheckboxButton_C_PreConstruct) == 0x000001, "Wrong size on BP_CheckboxButton_C_PreConstruct");
static_assert(offsetof(BP_CheckboxButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_CheckboxButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_CheckboxButton.BP_CheckboxButton_C.OnFocused
// 0x0001 (0x0001 - 0x0000)
struct BP_CheckboxButton_C_OnFocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CheckboxButton_C_OnFocused) == 0x000001, "Wrong alignment on BP_CheckboxButton_C_OnFocused");
static_assert(sizeof(BP_CheckboxButton_C_OnFocused) == 0x000001, "Wrong size on BP_CheckboxButton_C_OnFocused");
static_assert(offsetof(BP_CheckboxButton_C_OnFocused, bAnimate) == 0x000000, "Member 'BP_CheckboxButton_C_OnFocused::bAnimate' has a wrong offset!");

// Function BP_CheckboxButton.BP_CheckboxButton_C.OnUnfocused
// 0x0001 (0x0001 - 0x0000)
struct BP_CheckboxButton_C_OnUnfocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CheckboxButton_C_OnUnfocused) == 0x000001, "Wrong alignment on BP_CheckboxButton_C_OnUnfocused");
static_assert(sizeof(BP_CheckboxButton_C_OnUnfocused) == 0x000001, "Wrong size on BP_CheckboxButton_C_OnUnfocused");
static_assert(offsetof(BP_CheckboxButton_C_OnUnfocused, bAnimate) == 0x000000, "Member 'BP_CheckboxButton_C_OnUnfocused::bAnimate' has a wrong offset!");

// Function BP_CheckboxButton.BP_CheckboxButton_C.OnSetDisplayName
// 0x0018 (0x0018 - 0x0000)
struct BP_CheckboxButton_C_OnSetDisplayName final
{
public:
	class FText                                   InDisplayName;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CheckboxButton_C_OnSetDisplayName) == 0x000008, "Wrong alignment on BP_CheckboxButton_C_OnSetDisplayName");
static_assert(sizeof(BP_CheckboxButton_C_OnSetDisplayName) == 0x000018, "Wrong size on BP_CheckboxButton_C_OnSetDisplayName");
static_assert(offsetof(BP_CheckboxButton_C_OnSetDisplayName, InDisplayName) == 0x000000, "Member 'BP_CheckboxButton_C_OnSetDisplayName::InDisplayName' has a wrong offset!");

// Function BP_CheckboxButton.BP_CheckboxButton_C.ExecuteUbergraph_BP_CheckboxButton
// 0x0070 (0x0070 - 0x0000)
struct BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAnimate_1;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InDisplayName;                        // 0x0050(0x0018)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton) == 0x000008, "Wrong alignment on BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton");
static_assert(sizeof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton) == 0x000070, "Wrong size on BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, EntryPoint) == 0x000000, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, Temp_bool_Variable) == 0x000014, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, Temp_float_Variable) == 0x000018, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, Temp_bool_Variable_1) == 0x00001C, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, Temp_float_Variable_1) == 0x000020, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, K2Node_Event_IsDesignTime) == 0x000024, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, CallFunc_GetEndTime_ReturnValue) == 0x000028, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, CallFunc_GetEndTime_ReturnValue_1) == 0x00002C, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, K2Node_Event_bAnimate_1) == 0x000030, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::K2Node_Event_bAnimate_1' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, K2Node_Event_bAnimate) == 0x000031, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, K2Node_Select_Default) == 0x000034, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, K2Node_Select_Default_1) == 0x000038, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, CallFunc_PlayAnimation_ReturnValue_1) == 0x000048, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, K2Node_Event_InDisplayName) == 0x000050, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::K2Node_Event_InDisplayName' has a wrong offset!");
static_assert(offsetof(BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton, CallFunc_PlayAnimation_ReturnValue_2) == 0x000068, "Member 'BP_CheckboxButton_C_ExecuteUbergraph_BP_CheckboxButton::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");

}

