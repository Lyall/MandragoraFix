#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChestBaseActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ChestBaseActor.BP_ChestBaseActor_C
// 0x0060 (0x0868 - 0x0808)
class ABP_ChestBaseActor_C : public AChestBaseActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0808(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           AkSound;                                           // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_Open;                                          // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GlowPlane;                                         // 0x0820(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMiniMapActorComponent*                 MiniMapActor;                                      // 0x0828(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LootSpawnPos;                                      // 0x0830(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractPrompWidgetComponent_C*     BP_InteractPrompWidgetComponent;                   // 0x0838(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoundingBoxComponent*                  BoundingBox;                                       // 0x0840(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0848(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           GlowPlaneColor;                                    // 0x0850(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BeenOpened;                                        // 0x0860(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_ChestBaseActor(int32 EntryPoint);
	void BPPostBeginPlay();
	void ChestOpenEvent();
	void OnAbilityStarted(class UAbilityBase* pAbility, bool bDesired);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChestBaseActor_C">();
	}
	static class ABP_ChestBaseActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ChestBaseActor_C>();
	}
};
static_assert(alignof(ABP_ChestBaseActor_C) == 0x000008, "Wrong alignment on ABP_ChestBaseActor_C");
static_assert(sizeof(ABP_ChestBaseActor_C) == 0x000868, "Wrong size on ABP_ChestBaseActor_C");
static_assert(offsetof(ABP_ChestBaseActor_C, UberGraphFrame) == 0x000808, "Member 'ABP_ChestBaseActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ChestBaseActor_C, AkSound) == 0x000810, "Member 'ABP_ChestBaseActor_C::AkSound' has a wrong offset!");
static_assert(offsetof(ABP_ChestBaseActor_C, VFX_Open) == 0x000818, "Member 'ABP_ChestBaseActor_C::VFX_Open' has a wrong offset!");
static_assert(offsetof(ABP_ChestBaseActor_C, GlowPlane) == 0x000820, "Member 'ABP_ChestBaseActor_C::GlowPlane' has a wrong offset!");
static_assert(offsetof(ABP_ChestBaseActor_C, MiniMapActor) == 0x000828, "Member 'ABP_ChestBaseActor_C::MiniMapActor' has a wrong offset!");
static_assert(offsetof(ABP_ChestBaseActor_C, LootSpawnPos) == 0x000830, "Member 'ABP_ChestBaseActor_C::LootSpawnPos' has a wrong offset!");
static_assert(offsetof(ABP_ChestBaseActor_C, BP_InteractPrompWidgetComponent) == 0x000838, "Member 'ABP_ChestBaseActor_C::BP_InteractPrompWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_ChestBaseActor_C, BoundingBox) == 0x000840, "Member 'ABP_ChestBaseActor_C::BoundingBox' has a wrong offset!");
static_assert(offsetof(ABP_ChestBaseActor_C, SkeletalMesh) == 0x000848, "Member 'ABP_ChestBaseActor_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_ChestBaseActor_C, GlowPlaneColor) == 0x000850, "Member 'ABP_ChestBaseActor_C::GlowPlaneColor' has a wrong offset!");
static_assert(offsetof(ABP_ChestBaseActor_C, BeenOpened) == 0x000860, "Member 'ABP_ChestBaseActor_C::BeenOpened' has a wrong offset!");

}

