#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CinematicGhost

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CinematicGhost.BP_CinematicGhost_C
// 0x0090 (0x0140 - 0x00B0)
class UBP_CinematicGhost_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         CutsceneMaterialCounter;                           // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CutsceneMaterial;                                  // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CutscenePreviousMaterials;                         // 0x00C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_BrawlerHero_C*                      Brawler;                                           // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 NPCSkeletalMesh;                                   // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     GhostMaterial;                                     // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceConstant*>      CutscenePreviousMaterialsConstant;                 // 0x00F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       CutscenePreviousWeaponMaterialsRight;              // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       CutscenePreviousWeaponMaterialsLeft;               // 0x0110(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_ModelActor_C*                       RWeapon;                                           // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ModelActor_C*                       LWeapon;                                           // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugPrint;                                        // 0x0130(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CinematicGhost(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OverrideMaterials(bool On);
	void ToggleMaterials(bool On);
	void StoreDynamicMaterials(class UMeshComponent* MeshComp, const TArray<class UMaterialInstanceDynamic*>& StoreInto);
	void StoreConstantMaterials(class UMeshComponent* MeshComp, const TArray<class UMaterialInstanceConstant*>& StoreInto);
	void RevertMaterials();
	void PrintDebug();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CinematicGhost_C">();
	}
	static class UBP_CinematicGhost_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CinematicGhost_C>();
	}
};
static_assert(alignof(UBP_CinematicGhost_C) == 0x000008, "Wrong alignment on UBP_CinematicGhost_C");
static_assert(sizeof(UBP_CinematicGhost_C) == 0x000140, "Wrong size on UBP_CinematicGhost_C");
static_assert(offsetof(UBP_CinematicGhost_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_CinematicGhost_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CinematicGhost_C, CutsceneMaterialCounter) == 0x0000B8, "Member 'UBP_CinematicGhost_C::CutsceneMaterialCounter' has a wrong offset!");
static_assert(offsetof(UBP_CinematicGhost_C, CutsceneMaterial) == 0x0000C0, "Member 'UBP_CinematicGhost_C::CutsceneMaterial' has a wrong offset!");
static_assert(offsetof(UBP_CinematicGhost_C, CutscenePreviousMaterials) == 0x0000C8, "Member 'UBP_CinematicGhost_C::CutscenePreviousMaterials' has a wrong offset!");
static_assert(offsetof(UBP_CinematicGhost_C, Brawler) == 0x0000D8, "Member 'UBP_CinematicGhost_C::Brawler' has a wrong offset!");
static_assert(offsetof(UBP_CinematicGhost_C, NPCSkeletalMesh) == 0x0000E0, "Member 'UBP_CinematicGhost_C::NPCSkeletalMesh' has a wrong offset!");
static_assert(offsetof(UBP_CinematicGhost_C, GhostMaterial) == 0x0000E8, "Member 'UBP_CinematicGhost_C::GhostMaterial' has a wrong offset!");
static_assert(offsetof(UBP_CinematicGhost_C, CutscenePreviousMaterialsConstant) == 0x0000F0, "Member 'UBP_CinematicGhost_C::CutscenePreviousMaterialsConstant' has a wrong offset!");
static_assert(offsetof(UBP_CinematicGhost_C, CutscenePreviousWeaponMaterialsRight) == 0x000100, "Member 'UBP_CinematicGhost_C::CutscenePreviousWeaponMaterialsRight' has a wrong offset!");
static_assert(offsetof(UBP_CinematicGhost_C, CutscenePreviousWeaponMaterialsLeft) == 0x000110, "Member 'UBP_CinematicGhost_C::CutscenePreviousWeaponMaterialsLeft' has a wrong offset!");
static_assert(offsetof(UBP_CinematicGhost_C, RWeapon) == 0x000120, "Member 'UBP_CinematicGhost_C::RWeapon' has a wrong offset!");
static_assert(offsetof(UBP_CinematicGhost_C, LWeapon) == 0x000128, "Member 'UBP_CinematicGhost_C::LWeapon' has a wrong offset!");
static_assert(offsetof(UBP_CinematicGhost_C, DebugPrint) == 0x000130, "Member 'UBP_CinematicGhost_C::DebugPrint' has a wrong offset!");

}

