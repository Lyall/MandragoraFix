#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CinematicGhost

#include "Basic.hpp"

#include "BP_CinematicGhost_classes.hpp"
#include "BP_CinematicGhost_parameters.hpp"


namespace SDK
{

// Function BP_CinematicGhost.BP_CinematicGhost_C.ExecuteUbergraph_BP_CinematicGhost
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CinematicGhost_C::ExecuteUbergraph_BP_CinematicGhost(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicGhost_C", "ExecuteUbergraph_BP_CinematicGhost");

	Params::BP_CinematicGhost_C_ExecuteUbergraph_BP_CinematicGhost Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CinematicGhost.BP_CinematicGhost_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_CinematicGhost_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicGhost_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CinematicGhost.BP_CinematicGhost_C.OverrideMaterials
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CinematicGhost_C::OverrideMaterials(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicGhost_C", "OverrideMaterials");

	Params::BP_CinematicGhost_C_OverrideMaterials Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CinematicGhost.BP_CinematicGhost_C.ToggleMaterials
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_CinematicGhost_C::ToggleMaterials(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicGhost_C", "ToggleMaterials");

	Params::BP_CinematicGhost_C_ToggleMaterials Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CinematicGhost.BP_CinematicGhost_C.StoreDynamicMaterials
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   MeshComp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInstanceDynamic*> StoreInto                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CinematicGhost_C::StoreDynamicMaterials(class UMeshComponent* MeshComp, const TArray<class UMaterialInstanceDynamic*>& StoreInto)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicGhost_C", "StoreDynamicMaterials");

	Params::BP_CinematicGhost_C_StoreDynamicMaterials Parms{};

	Parms.MeshComp = MeshComp;
	Parms.StoreInto = std::move(StoreInto);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CinematicGhost.BP_CinematicGhost_C.StoreConstantMaterials
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   MeshComp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInstanceConstant*>StoreInto                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CinematicGhost_C::StoreConstantMaterials(class UMeshComponent* MeshComp, const TArray<class UMaterialInstanceConstant*>& StoreInto)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicGhost_C", "StoreConstantMaterials");

	Params::BP_CinematicGhost_C_StoreConstantMaterials Parms{};

	Parms.MeshComp = MeshComp;
	Parms.StoreInto = std::move(StoreInto);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CinematicGhost.BP_CinematicGhost_C.RevertMaterials
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_CinematicGhost_C::RevertMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicGhost_C", "RevertMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CinematicGhost.BP_CinematicGhost_C.PrintDebug
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_CinematicGhost_C::PrintDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicGhost_C", "PrintDebug");

	UObject::ProcessEvent(Func, nullptr);
}

}

