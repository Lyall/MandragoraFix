#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Collection_ItemsHandler

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Collection_ItemsHandler.BP_Collection_ItemsHandler_C.ExecuteUbergraph_BP_Collection_ItemsHandler
// 0x0038 (0x0038 - 0x0000)
struct BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_ItemRequirementText;                  // 0x0008(0x0018)(ConstParm)
	class UItemAbility*                           K2Node_Event_Item;                                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemAbility*                           K2Node_Event_ComparedItem;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEquipped;                            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHighlightTooltip;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler) == 0x000008, "Wrong alignment on BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler");
static_assert(sizeof(BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler) == 0x000038, "Wrong size on BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler, EntryPoint) == 0x000000, "Member 'BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler, K2Node_Event_ItemRequirementText) == 0x000008, "Member 'BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler::K2Node_Event_ItemRequirementText' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler, K2Node_Event_Item) == 0x000020, "Member 'BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler::K2Node_Event_Item' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler, K2Node_Event_ComparedItem) == 0x000028, "Member 'BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler::K2Node_Event_ComparedItem' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler, K2Node_Event_bEquipped) == 0x000030, "Member 'BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler::K2Node_Event_bEquipped' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler, K2Node_Event_bAnimate) == 0x000031, "Member 'BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler, K2Node_Event_bHighlightTooltip) == 0x000032, "Member 'BP_Collection_ItemsHandler_C_ExecuteUbergraph_BP_Collection_ItemsHandler::K2Node_Event_bHighlightTooltip' has a wrong offset!");

// Function BP_Collection_ItemsHandler.BP_Collection_ItemsHandler_C.UpdateDetailsPanel
// 0x0030 (0x0030 - 0x0000)
struct BP_Collection_ItemsHandler_C_UpdateDetailsPanel final
{
public:
	class FText                                   ItemRequirementText;                               // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UItemAbility*                           Item;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemAbility*                           ComparedItem;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEquipped;                                         // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAnimate;                                          // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHighlightTooltip;                                 // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Collection_ItemsHandler_C_UpdateDetailsPanel) == 0x000008, "Wrong alignment on BP_Collection_ItemsHandler_C_UpdateDetailsPanel");
static_assert(sizeof(BP_Collection_ItemsHandler_C_UpdateDetailsPanel) == 0x000030, "Wrong size on BP_Collection_ItemsHandler_C_UpdateDetailsPanel");
static_assert(offsetof(BP_Collection_ItemsHandler_C_UpdateDetailsPanel, ItemRequirementText) == 0x000000, "Member 'BP_Collection_ItemsHandler_C_UpdateDetailsPanel::ItemRequirementText' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_UpdateDetailsPanel, Item) == 0x000018, "Member 'BP_Collection_ItemsHandler_C_UpdateDetailsPanel::Item' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_UpdateDetailsPanel, ComparedItem) == 0x000020, "Member 'BP_Collection_ItemsHandler_C_UpdateDetailsPanel::ComparedItem' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_UpdateDetailsPanel, bEquipped) == 0x000028, "Member 'BP_Collection_ItemsHandler_C_UpdateDetailsPanel::bEquipped' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_UpdateDetailsPanel, bAnimate) == 0x000029, "Member 'BP_Collection_ItemsHandler_C_UpdateDetailsPanel::bAnimate' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_UpdateDetailsPanel, bHighlightTooltip) == 0x00002A, "Member 'BP_Collection_ItemsHandler_C_UpdateDetailsPanel::bHighlightTooltip' has a wrong offset!");

// Function BP_Collection_ItemsHandler.BP_Collection_ItemsHandler_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Collection_ItemsHandler_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Collection_ItemsHandler_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Collection_ItemsHandler_C_PreConstruct");
static_assert(sizeof(BP_Collection_ItemsHandler_C_PreConstruct) == 0x000001, "Wrong size on BP_Collection_ItemsHandler_C_PreConstruct");
static_assert(offsetof(BP_Collection_ItemsHandler_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Collection_ItemsHandler_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_Collection_ItemsHandler.BP_Collection_ItemsHandler_C.ToggleSmallScreen
// 0x0100 (0x0100 - 0x0000)
struct BP_Collection_ItemsHandler_C_ToggleSmallScreen final
{
public:
	bool                                          InIsSmallScreen;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default_1;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0098(0x0058)(HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default_3;                           // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Collection_ItemsHandler_C_ToggleSmallScreen) == 0x000008, "Wrong alignment on BP_Collection_ItemsHandler_C_ToggleSmallScreen");
static_assert(sizeof(BP_Collection_ItemsHandler_C_ToggleSmallScreen) == 0x000100, "Wrong size on BP_Collection_ItemsHandler_C_ToggleSmallScreen");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, InIsSmallScreen) == 0x000000, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::InIsSmallScreen' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, Temp_bool_Variable) == 0x000001, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, K2Node_MakeStruct_Margin) == 0x000004, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, K2Node_MakeStruct_Margin_1) == 0x000014, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, Temp_bool_Variable_1) == 0x000024, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, Temp_object_Variable) == 0x000028, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, Temp_object_Variable_1) == 0x000030, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, Temp_bool_Variable_2) == 0x000038, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, Temp_int_Variable) == 0x00003C, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, Temp_int_Variable_1) == 0x000040, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, Temp_bool_Variable_3) == 0x000044, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, K2Node_MakeStruct_Margin_2) == 0x000048, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, K2Node_MakeStruct_Margin_3) == 0x000058, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000068, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, K2Node_Select_Default) == 0x000070, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x000080, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, K2Node_Select_Default_1) == 0x000088, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, K2Node_Select_Default_2) == 0x000090, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, K2Node_MakeStruct_SlateFontInfo) == 0x000098, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(BP_Collection_ItemsHandler_C_ToggleSmallScreen, K2Node_Select_Default_3) == 0x0000F0, "Member 'BP_Collection_ItemsHandler_C_ToggleSmallScreen::K2Node_Select_Default_3' has a wrong offset!");

}

