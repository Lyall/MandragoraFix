#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ComboPoint

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_ComboPoint.BP_ComboPoint_C.ExecuteUbergraph_BP_ComboPoint
// 0x0008 (0x0008 - 0x0000)
struct BP_ComboPoint_C_ExecuteUbergraph_BP_ComboPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ComboPoint_C_ExecuteUbergraph_BP_ComboPoint) == 0x000004, "Wrong alignment on BP_ComboPoint_C_ExecuteUbergraph_BP_ComboPoint");
static_assert(sizeof(BP_ComboPoint_C_ExecuteUbergraph_BP_ComboPoint) == 0x000008, "Wrong size on BP_ComboPoint_C_ExecuteUbergraph_BP_ComboPoint");
static_assert(offsetof(BP_ComboPoint_C_ExecuteUbergraph_BP_ComboPoint, EntryPoint) == 0x000000, "Member 'BP_ComboPoint_C_ExecuteUbergraph_BP_ComboPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_ExecuteUbergraph_BP_ComboPoint, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_ComboPoint_C_ExecuteUbergraph_BP_ComboPoint::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_ComboPoint.BP_ComboPoint_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_ComboPoint_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ComboPoint_C_PreConstruct) == 0x000001, "Wrong alignment on BP_ComboPoint_C_PreConstruct");
static_assert(sizeof(BP_ComboPoint_C_PreConstruct) == 0x000001, "Wrong size on BP_ComboPoint_C_PreConstruct");
static_assert(offsetof(BP_ComboPoint_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_ComboPoint_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_ComboPoint.BP_ComboPoint_C.SetComboPoint
// 0x0048 (0x0048 - 0x0000)
struct BP_ComboPoint_C_SetComboPoint final
{
public:
	int32                                         InFraction;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ComboPoint_C_SetComboPoint) == 0x000008, "Wrong alignment on BP_ComboPoint_C_SetComboPoint");
static_assert(sizeof(BP_ComboPoint_C_SetComboPoint) == 0x000048, "Wrong size on BP_ComboPoint_C_SetComboPoint");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, InFraction) == 0x000000, "Member 'BP_ComboPoint_C_SetComboPoint::InFraction' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, Temp_bool_Variable) == 0x000004, "Member 'BP_ComboPoint_C_SetComboPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_ComboPoint_C_SetComboPoint::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, CallFunc_InRange_IntInt_ReturnValue) == 0x000006, "Member 'BP_ComboPoint_C_SetComboPoint::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, Temp_int_Variable) == 0x000008, "Member 'BP_ComboPoint_C_SetComboPoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, Temp_int_Variable_1) == 0x00000C, "Member 'BP_ComboPoint_C_SetComboPoint::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, K2Node_Select_Default) == 0x000010, "Member 'BP_ComboPoint_C_SetComboPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, Temp_object_Variable) == 0x000018, "Member 'BP_ComboPoint_C_SetComboPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, Temp_object_Variable_1) == 0x000020, "Member 'BP_ComboPoint_C_SetComboPoint::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, Temp_object_Variable_2) == 0x000028, "Member 'BP_ComboPoint_C_SetComboPoint::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, Temp_object_Variable_3) == 0x000030, "Member 'BP_ComboPoint_C_SetComboPoint::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, K2Node_Select_Default_1) == 0x000038, "Member 'BP_ComboPoint_C_SetComboPoint::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_ComboPoint_C_SetComboPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ComboPoint_C_SetComboPoint, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BP_ComboPoint_C_SetComboPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_ComboPoint.BP_ComboPoint_C.PlayFullAnim
// 0x0008 (0x0008 - 0x0000)
struct BP_ComboPoint_C_PlayFullAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ComboPoint_C_PlayFullAnim) == 0x000008, "Wrong alignment on BP_ComboPoint_C_PlayFullAnim");
static_assert(sizeof(BP_ComboPoint_C_PlayFullAnim) == 0x000008, "Wrong size on BP_ComboPoint_C_PlayFullAnim");
static_assert(offsetof(BP_ComboPoint_C_PlayFullAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_ComboPoint_C_PlayFullAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

