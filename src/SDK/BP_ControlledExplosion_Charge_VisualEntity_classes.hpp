#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ControlledExplosion_Charge_VisualEntity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ControlledExplosion_Charge_VisualEntity.BP_ControlledExplosion_Charge_VisualEntity_C
// 0x0050 (0x03E0 - 0x0390)
class ABP_ControlledExplosion_Charge_VisualEntity_C final : public AMeshSamplingVisualEntity
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0390(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_ControlledExplosion_ChargeSingleInstance;       // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Color_76CCE1384AF1C905D80FBCB5D7078F44; // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Lerp_76CCE1384AF1C905D80FBCB5D7078F44;  // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_76CCE1384AF1C905D80FBCB5D7078F44; // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrawlerHero_C*                      Brawler;                                           // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorA;                                            // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorB;                                            // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ControlledExplosion_Charge_VisualEntity(int32 EntryPoint);
	void VisualEntityConstructionFinished();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ControlledExplosion_Charge_VisualEntity_C">();
	}
	static class ABP_ControlledExplosion_Charge_VisualEntity_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ControlledExplosion_Charge_VisualEntity_C>();
	}
};
static_assert(alignof(ABP_ControlledExplosion_Charge_VisualEntity_C) == 0x000008, "Wrong alignment on ABP_ControlledExplosion_Charge_VisualEntity_C");
static_assert(sizeof(ABP_ControlledExplosion_Charge_VisualEntity_C) == 0x0003E0, "Wrong size on ABP_ControlledExplosion_Charge_VisualEntity_C");
static_assert(offsetof(ABP_ControlledExplosion_Charge_VisualEntity_C, UberGraphFrame) == 0x000390, "Member 'ABP_ControlledExplosion_Charge_VisualEntity_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ControlledExplosion_Charge_VisualEntity_C, NS_ControlledExplosion_ChargeSingleInstance) == 0x000398, "Member 'ABP_ControlledExplosion_Charge_VisualEntity_C::NS_ControlledExplosion_ChargeSingleInstance' has a wrong offset!");
static_assert(offsetof(ABP_ControlledExplosion_Charge_VisualEntity_C, Timeline_0_Color_76CCE1384AF1C905D80FBCB5D7078F44) == 0x0003A0, "Member 'ABP_ControlledExplosion_Charge_VisualEntity_C::Timeline_0_Color_76CCE1384AF1C905D80FBCB5D7078F44' has a wrong offset!");
static_assert(offsetof(ABP_ControlledExplosion_Charge_VisualEntity_C, Timeline_0_Lerp_76CCE1384AF1C905D80FBCB5D7078F44) == 0x0003A4, "Member 'ABP_ControlledExplosion_Charge_VisualEntity_C::Timeline_0_Lerp_76CCE1384AF1C905D80FBCB5D7078F44' has a wrong offset!");
static_assert(offsetof(ABP_ControlledExplosion_Charge_VisualEntity_C, Timeline_0__Direction_76CCE1384AF1C905D80FBCB5D7078F44) == 0x0003A8, "Member 'ABP_ControlledExplosion_Charge_VisualEntity_C::Timeline_0__Direction_76CCE1384AF1C905D80FBCB5D7078F44' has a wrong offset!");
static_assert(offsetof(ABP_ControlledExplosion_Charge_VisualEntity_C, Timeline_0) == 0x0003B0, "Member 'ABP_ControlledExplosion_Charge_VisualEntity_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_ControlledExplosion_Charge_VisualEntity_C, Brawler) == 0x0003B8, "Member 'ABP_ControlledExplosion_Charge_VisualEntity_C::Brawler' has a wrong offset!");
static_assert(offsetof(ABP_ControlledExplosion_Charge_VisualEntity_C, ColorA) == 0x0003C0, "Member 'ABP_ControlledExplosion_Charge_VisualEntity_C::ColorA' has a wrong offset!");
static_assert(offsetof(ABP_ControlledExplosion_Charge_VisualEntity_C, ColorB) == 0x0003D0, "Member 'ABP_ControlledExplosion_Charge_VisualEntity_C::ColorB' has a wrong offset!");

}

