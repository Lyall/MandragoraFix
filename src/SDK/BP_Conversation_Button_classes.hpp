#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Conversation_Button

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PrimalConversation_structs.hpp"
#include "SlateCore_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Conversation_Button.BP_Conversation_Button_C
// 0x0678 (0x0990 - 0x0318)
class UBP_Conversation_Button_C final : public UConversationBtnUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HighlightLoopAnim;                                 // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HighlightAnim;                                     // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                ButtonFrame;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Caption;                                           // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CaptionHighlight;                                  // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DebugLineID;                                       // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EnchantHighlight;                                  // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_1;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SelectionHighlight;                                // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SeparatorBottom;                                   // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TypeIcon;                                          // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TypeIconHighlight;                                 // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   CaptionText;                                       // 0x0380(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(int32 ButtonIndex)> OnClicked;                                         // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnHovered;                                         // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnUnhovered;                                       // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnPressed;                                         // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnReleased;                                        // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FButtonStyle                           ButtonStyleUnfocused;                              // 0x03E8(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           ButtonStyleFocused;                                // 0x0660(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class UWidget* Widget)> OnFocus;                                           // 0x08D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsGrayedOut;                                       // 0x08E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDisabled;                                        // 0x08E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HideRequest;                                       // 0x08EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8EB[0x5];                                      // 0x08EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPrimalConversationResponseButtonType, class UTexture2D*> Icons;                                             // 0x08F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EPrimalConversationResponseButtonType, class UTexture2D*> HighlightIcons;                                    // 0x0940(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_Conversation_Button(int32 EntryPoint);
	void OnClear();
	void OnSetBtnState(bool bDisabled);
	void OnFocused(bool bAnimate);
	void OnUnfocused(bool bAnimate);
	void OnInitialized();
	void OnClickedButton(int32 ButtonIndex);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_4_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void Setup(const class FText& Caption_0, const class FText& LineID_0, bool GrayedOut, bool Disabled);
	void SetGrayedOut(bool GrayedOut);
	void PlayHighlightAnim(bool Forward, bool Animate);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void SetDisabled(bool Disabled);
	void ToggleEnchantHighlight(bool EnchantHighlightOn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Conversation_Button_C">();
	}
	static class UBP_Conversation_Button_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Conversation_Button_C>();
	}
};
static_assert(alignof(UBP_Conversation_Button_C) == 0x000008, "Wrong alignment on UBP_Conversation_Button_C");
static_assert(sizeof(UBP_Conversation_Button_C) == 0x000990, "Wrong size on UBP_Conversation_Button_C");
static_assert(offsetof(UBP_Conversation_Button_C, UberGraphFrame) == 0x000318, "Member 'UBP_Conversation_Button_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, HighlightLoopAnim) == 0x000320, "Member 'UBP_Conversation_Button_C::HighlightLoopAnim' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, HighlightAnim) == 0x000328, "Member 'UBP_Conversation_Button_C::HighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, ButtonFrame) == 0x000330, "Member 'UBP_Conversation_Button_C::ButtonFrame' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, Caption) == 0x000338, "Member 'UBP_Conversation_Button_C::Caption' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, CaptionHighlight) == 0x000340, "Member 'UBP_Conversation_Button_C::CaptionHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, DebugLineID) == 0x000348, "Member 'UBP_Conversation_Button_C::DebugLineID' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, EnchantHighlight) == 0x000350, "Member 'UBP_Conversation_Button_C::EnchantHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, Overlay_1) == 0x000358, "Member 'UBP_Conversation_Button_C::Overlay_1' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, SelectionHighlight) == 0x000360, "Member 'UBP_Conversation_Button_C::SelectionHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, SeparatorBottom) == 0x000368, "Member 'UBP_Conversation_Button_C::SeparatorBottom' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, TypeIcon) == 0x000370, "Member 'UBP_Conversation_Button_C::TypeIcon' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, TypeIconHighlight) == 0x000378, "Member 'UBP_Conversation_Button_C::TypeIconHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, CaptionText) == 0x000380, "Member 'UBP_Conversation_Button_C::CaptionText' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, OnClicked) == 0x000398, "Member 'UBP_Conversation_Button_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, OnHovered) == 0x0003A8, "Member 'UBP_Conversation_Button_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, OnUnhovered) == 0x0003B8, "Member 'UBP_Conversation_Button_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, OnPressed) == 0x0003C8, "Member 'UBP_Conversation_Button_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, OnReleased) == 0x0003D8, "Member 'UBP_Conversation_Button_C::OnReleased' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, ButtonStyleUnfocused) == 0x0003E8, "Member 'UBP_Conversation_Button_C::ButtonStyleUnfocused' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, ButtonStyleFocused) == 0x000660, "Member 'UBP_Conversation_Button_C::ButtonStyleFocused' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, OnFocus) == 0x0008D8, "Member 'UBP_Conversation_Button_C::OnFocus' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, IsGrayedOut) == 0x0008E8, "Member 'UBP_Conversation_Button_C::IsGrayedOut' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, IsDisabled) == 0x0008E9, "Member 'UBP_Conversation_Button_C::IsDisabled' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, HideRequest) == 0x0008EA, "Member 'UBP_Conversation_Button_C::HideRequest' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, Icons) == 0x0008F0, "Member 'UBP_Conversation_Button_C::Icons' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Button_C, HighlightIcons) == 0x000940, "Member 'UBP_Conversation_Button_C::HighlightIcons' has a wrong offset!");

}

