#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Conversation_Portrait

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Conversation_Portrait.BP_Conversation_Portrait_C
// 0x0050 (0x0360 - 0x0310)
class UBP_Conversation_Portrait_C final : public UConversationPortraitUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0310(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HideHighlight;                                     // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowHighlight;                                     // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideAnim;                                          // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowAnim;                                          // 0x0330(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 PortraitVideo;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PortraitVideoIdleBridge;                           // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PortraitVideoSecond;                               // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsSlotVisible;                                     // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSlotHighlighted;                                 // 0x0359(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLeftSide;                                        // 0x035A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IsCentered;                                        // 0x035B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_Conversation_Portrait(int32 EntryPoint);
	void OnHideSlot();
	void OnShowSlot(const struct FConversationSpeakerInfo& InSpeakerInfo);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void ShowSlot(bool Animate);
	void HideSlot();
	void SetSlot(const struct FConversationSpeakerInfo& SpeakerInfo_0);
	void SetHighlight(bool InHighlighted);
	void SetSide(bool InIsLeftSide);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Conversation_Portrait_C">();
	}
	static class UBP_Conversation_Portrait_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Conversation_Portrait_C>();
	}
};
static_assert(alignof(UBP_Conversation_Portrait_C) == 0x000008, "Wrong alignment on UBP_Conversation_Portrait_C");
static_assert(sizeof(UBP_Conversation_Portrait_C) == 0x000360, "Wrong size on UBP_Conversation_Portrait_C");
static_assert(offsetof(UBP_Conversation_Portrait_C, UberGraphFrame) == 0x000310, "Member 'UBP_Conversation_Portrait_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Portrait_C, HideHighlight) == 0x000318, "Member 'UBP_Conversation_Portrait_C::HideHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Portrait_C, ShowHighlight) == 0x000320, "Member 'UBP_Conversation_Portrait_C::ShowHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Portrait_C, HideAnim) == 0x000328, "Member 'UBP_Conversation_Portrait_C::HideAnim' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Portrait_C, ShowAnim) == 0x000330, "Member 'UBP_Conversation_Portrait_C::ShowAnim' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Portrait_C, PortraitVideo) == 0x000338, "Member 'UBP_Conversation_Portrait_C::PortraitVideo' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Portrait_C, PortraitVideoIdleBridge) == 0x000340, "Member 'UBP_Conversation_Portrait_C::PortraitVideoIdleBridge' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Portrait_C, PortraitVideoSecond) == 0x000348, "Member 'UBP_Conversation_Portrait_C::PortraitVideoSecond' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Portrait_C, SizeBox) == 0x000350, "Member 'UBP_Conversation_Portrait_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Portrait_C, IsSlotVisible) == 0x000358, "Member 'UBP_Conversation_Portrait_C::IsSlotVisible' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Portrait_C, IsSlotHighlighted) == 0x000359, "Member 'UBP_Conversation_Portrait_C::IsSlotHighlighted' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Portrait_C, IsLeftSide) == 0x00035A, "Member 'UBP_Conversation_Portrait_C::IsLeftSide' has a wrong offset!");
static_assert(offsetof(UBP_Conversation_Portrait_C, IsCentered) == 0x00035B, "Member 'UBP_Conversation_Portrait_C::IsCentered' has a wrong offset!");

}

