#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Conversation

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_Conversation.BP_Conversation_C.ExecuteUbergraph_BP_Conversation
// 0x0120 (0x0120 - 0x0000)
struct BP_Conversation_C_ExecuteUbergraph_BP_Conversation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x001C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Opacity;                              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_SpeakerText;                          // 0x0080(0x0018)(ConstParm)
	class FText                                   K2Node_Event_FormattedSpeakerText;                 // 0x0098(0x0018)(ConstParm)
	class FText                                   K2Node_Event_LineIDText;                           // 0x00B0(0x0018)(ConstParm)
	bool                                          K2Node_Event_bSkippable;                           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_ResponseIndex;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDialogOptionsVisible_ReturnValue;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x00D8(0x0018)()
	int32                                         K2Node_Event_InVisibleTabButtonNum;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetEmptyText_ReturnValue_1;               // 0x00F8(0x0018)()
	class UManUserWidgetBase*                     CallFunc_GetManUserWidgetBase_ReturnValue;         // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPIsVisible_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInEnabled;                           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_3;                           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation) == 0x000008, "Wrong alignment on BP_Conversation_C_ExecuteUbergraph_BP_Conversation");
static_assert(sizeof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation) == 0x000120, "Wrong size on BP_Conversation_C_ExecuteUbergraph_BP_Conversation");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, EntryPoint) == 0x000000, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, Temp_bool_Variable) == 0x000004, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, Temp_byte_Variable) == 0x000005, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, Temp_byte_Variable_1) == 0x000006, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, Temp_bool_Variable_1) == 0x000007, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, Temp_byte_Variable_2) == 0x000008, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, Temp_byte_Variable_3) == 0x000009, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, Temp_bool_Variable_2) == 0x00000A, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, Temp_byte_Variable_4) == 0x00000B, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, Temp_byte_Variable_5) == 0x00000C, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, Temp_bool_Variable_3) == 0x00000D, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, Temp_float_Variable) == 0x000010, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, Temp_float_Variable_1) == 0x000014, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_IsDesignTime) == 0x000018, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_MyGeometry) == 0x00001C, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_InDeltaTime) == 0x000054, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_AnimDuration_1) == 0x000058, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_AnimDuration) == 0x00005C, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x000060, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000064, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, CallFunc_PlayAnimation_ReturnValue_1) == 0x000070, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_Opacity) == 0x000078, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_Opacity' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_SpeakerText) == 0x000080, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_SpeakerText' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_FormattedSpeakerText) == 0x000098, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_FormattedSpeakerText' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_LineIDText) == 0x0000B0, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_LineIDText' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_bSkippable) == 0x0000C8, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_bSkippable' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_ResponseIndex) == 0x0000CC, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_ResponseIndex' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, CallFunc_IsDialogOptionsVisible_ReturnValue) == 0x0000D0, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::CallFunc_IsDialogOptionsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, CallFunc_GetEmptyText_ReturnValue) == 0x0000D8, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_InVisibleTabButtonNum) == 0x0000F0, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_InVisibleTabButtonNum' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Select_Default) == 0x0000F5, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Select_Default_1) == 0x0000F6, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, CallFunc_IsVisible_ReturnValue) == 0x0000F7, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, CallFunc_GetEmptyText_ReturnValue_1) == 0x0000F8, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::CallFunc_GetEmptyText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, CallFunc_GetManUserWidgetBase_ReturnValue) == 0x000110, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::CallFunc_GetManUserWidgetBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, CallFunc_BPIsVisible_ReturnValue) == 0x000118, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::CallFunc_BPIsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Event_bInEnabled) == 0x000119, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Event_bInEnabled' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Select_Default_2) == 0x00011A, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ExecuteUbergraph_BP_Conversation, K2Node_Select_Default_3) == 0x00011C, "Member 'BP_Conversation_C_ExecuteUbergraph_BP_Conversation::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.OnSubtitleEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_Conversation_C_OnSubtitleEnable final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Conversation_C_OnSubtitleEnable) == 0x000001, "Wrong alignment on BP_Conversation_C_OnSubtitleEnable");
static_assert(sizeof(BP_Conversation_C_OnSubtitleEnable) == 0x000001, "Wrong size on BP_Conversation_C_OnSubtitleEnable");
static_assert(offsetof(BP_Conversation_C_OnSubtitleEnable, bInEnabled) == 0x000000, "Member 'BP_Conversation_C_OnSubtitleEnable::bInEnabled' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.OnSetTabButtonsVisbility
// 0x0004 (0x0004 - 0x0000)
struct BP_Conversation_C_OnSetTabButtonsVisbility final
{
public:
	int32                                         InVisibleTabButtonNum;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Conversation_C_OnSetTabButtonsVisbility) == 0x000004, "Wrong alignment on BP_Conversation_C_OnSetTabButtonsVisbility");
static_assert(sizeof(BP_Conversation_C_OnSetTabButtonsVisbility) == 0x000004, "Wrong size on BP_Conversation_C_OnSetTabButtonsVisbility");
static_assert(offsetof(BP_Conversation_C_OnSetTabButtonsVisbility, InVisibleTabButtonNum) == 0x000000, "Member 'BP_Conversation_C_OnSetTabButtonsVisbility::InVisibleTabButtonNum' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.OnConversationResponseClicked
// 0x0004 (0x0004 - 0x0000)
struct BP_Conversation_C_OnConversationResponseClicked final
{
public:
	int32                                         ResponseIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Conversation_C_OnConversationResponseClicked) == 0x000004, "Wrong alignment on BP_Conversation_C_OnConversationResponseClicked");
static_assert(sizeof(BP_Conversation_C_OnConversationResponseClicked) == 0x000004, "Wrong size on BP_Conversation_C_OnConversationResponseClicked");
static_assert(offsetof(BP_Conversation_C_OnConversationResponseClicked, ResponseIndex) == 0x000000, "Member 'BP_Conversation_C_OnConversationResponseClicked::ResponseIndex' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.OnSetConversation
// 0x0050 (0x0050 - 0x0000)
struct BP_Conversation_C_OnSetConversation final
{
public:
	class FText                                   SpeakerText_0;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   FormattedSpeakerText;                              // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   LineIDText;                                        // 0x0030(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bSkippable;                                        // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Conversation_C_OnSetConversation) == 0x000008, "Wrong alignment on BP_Conversation_C_OnSetConversation");
static_assert(sizeof(BP_Conversation_C_OnSetConversation) == 0x000050, "Wrong size on BP_Conversation_C_OnSetConversation");
static_assert(offsetof(BP_Conversation_C_OnSetConversation, SpeakerText_0) == 0x000000, "Member 'BP_Conversation_C_OnSetConversation::SpeakerText_0' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_OnSetConversation, FormattedSpeakerText) == 0x000018, "Member 'BP_Conversation_C_OnSetConversation::FormattedSpeakerText' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_OnSetConversation, LineIDText) == 0x000030, "Member 'BP_Conversation_C_OnSetConversation::LineIDText' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_OnSetConversation, bSkippable) == 0x000048, "Member 'BP_Conversation_C_OnSetConversation::bSkippable' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.OnSetOpacity
// 0x0004 (0x0004 - 0x0000)
struct BP_Conversation_C_OnSetOpacity final
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Conversation_C_OnSetOpacity) == 0x000004, "Wrong alignment on BP_Conversation_C_OnSetOpacity");
static_assert(sizeof(BP_Conversation_C_OnSetOpacity) == 0x000004, "Wrong size on BP_Conversation_C_OnSetOpacity");
static_assert(offsetof(BP_Conversation_C_OnSetOpacity, Opacity) == 0x000000, "Member 'BP_Conversation_C_OnSetOpacity::Opacity' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_Conversation_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Conversation_C_OnHide) == 0x000004, "Wrong alignment on BP_Conversation_C_OnHide");
static_assert(sizeof(BP_Conversation_C_OnHide) == 0x000004, "Wrong size on BP_Conversation_C_OnHide");
static_assert(offsetof(BP_Conversation_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_Conversation_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_Conversation_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Conversation_C_OnShow) == 0x000004, "Wrong alignment on BP_Conversation_C_OnShow");
static_assert(sizeof(BP_Conversation_C_OnShow) == 0x000004, "Wrong size on BP_Conversation_C_OnShow");
static_assert(offsetof(BP_Conversation_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_Conversation_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_Conversation_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Conversation_C_Tick) == 0x000004, "Wrong alignment on BP_Conversation_C_Tick");
static_assert(sizeof(BP_Conversation_C_Tick) == 0x00003C, "Wrong size on BP_Conversation_C_Tick");
static_assert(offsetof(BP_Conversation_C_Tick, MyGeometry) == 0x000000, "Member 'BP_Conversation_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_Conversation_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Conversation_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Conversation_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Conversation_C_PreConstruct");
static_assert(sizeof(BP_Conversation_C_PreConstruct) == 0x000001, "Wrong size on BP_Conversation_C_PreConstruct");
static_assert(offsetof(BP_Conversation_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Conversation_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.ShowDialog
// 0x0080 (0x0080 - 0x0000)
struct BP_Conversation_C_ShowDialog final
{
public:
	class FText                                   InSpeakerText;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InFormattedSpeakerText;                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InLineIDText;                                      // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          InSkippable;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Conversation_Portrait_C*            SlotReference;                                     // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Conversation_C_ShowDialog) == 0x000008, "Wrong alignment on BP_Conversation_C_ShowDialog");
static_assert(sizeof(BP_Conversation_C_ShowDialog) == 0x000080, "Wrong size on BP_Conversation_C_ShowDialog");
static_assert(offsetof(BP_Conversation_C_ShowDialog, InSpeakerText) == 0x000000, "Member 'BP_Conversation_C_ShowDialog::InSpeakerText' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialog, InFormattedSpeakerText) == 0x000018, "Member 'BP_Conversation_C_ShowDialog::InFormattedSpeakerText' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialog, InLineIDText) == 0x000030, "Member 'BP_Conversation_C_ShowDialog::InLineIDText' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialog, InSkippable) == 0x000048, "Member 'BP_Conversation_C_ShowDialog::InSkippable' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialog, SlotReference) == 0x000050, "Member 'BP_Conversation_C_ShowDialog::SlotReference' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialog, Temp_bool_Variable) == 0x000058, "Member 'BP_Conversation_C_ShowDialog::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialog, Temp_float_Variable) == 0x00005C, "Member 'BP_Conversation_C_ShowDialog::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialog, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'BP_Conversation_C_ShowDialog::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialog, CallFunc_GetEndTime_ReturnValue) == 0x000070, "Member 'BP_Conversation_C_ShowDialog::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialog, K2Node_Select_Default) == 0x000074, "Member 'BP_Conversation_C_ShowDialog::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialog, CallFunc_PlayAnimation_ReturnValue) == 0x000078, "Member 'BP_Conversation_C_ShowDialog::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.ShowDialogSelector
// 0x0058 (0x0058 - 0x0000)
struct BP_Conversation_C_ShowDialogSelector final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UConversationBtnUserWidget*>     CallFunc_GetResponseButtons_ReturnValue;           // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UConversationBtnUserWidget*             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Conversation_Button_C*              K2Node_DynamicCast_AsBP_Conversation_Button;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Conversation_C_ShowDialogSelector) == 0x000008, "Wrong alignment on BP_Conversation_C_ShowDialogSelector");
static_assert(sizeof(BP_Conversation_C_ShowDialogSelector) == 0x000058, "Wrong size on BP_Conversation_C_ShowDialogSelector");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, Temp_bool_Variable) == 0x000000, "Member 'BP_Conversation_C_ShowDialogSelector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, Temp_float_Variable) == 0x000004, "Member 'BP_Conversation_C_ShowDialogSelector::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_Conversation_C_ShowDialogSelector::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_Conversation_C_ShowDialogSelector::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_Conversation_C_ShowDialogSelector::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, CallFunc_GetResponseButtons_ReturnValue) == 0x000018, "Member 'BP_Conversation_C_ShowDialogSelector::CallFunc_GetResponseButtons_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Conversation_C_ShowDialogSelector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, CallFunc_GetEndTime_ReturnValue) == 0x000030, "Member 'BP_Conversation_C_ShowDialogSelector::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, K2Node_Select_Default) == 0x000034, "Member 'BP_Conversation_C_ShowDialogSelector::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'BP_Conversation_C_ShowDialogSelector::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, K2Node_DynamicCast_AsBP_Conversation_Button) == 0x000040, "Member 'BP_Conversation_C_ShowDialogSelector::K2Node_DynamicCast_AsBP_Conversation_Button' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Conversation_C_ShowDialogSelector::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_Conversation_C_ShowDialogSelector::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_ShowDialogSelector, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_Conversation_C_ShowDialogSelector::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.HideDialogSelector
// 0x0018 (0x0018 - 0x0000)
struct BP_Conversation_C_HideDialogSelector final
{
public:
	bool                                          CallFunc_IsDialogOptionsVisible_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Conversation_C_HideDialogSelector) == 0x000008, "Wrong alignment on BP_Conversation_C_HideDialogSelector");
static_assert(sizeof(BP_Conversation_C_HideDialogSelector) == 0x000018, "Wrong size on BP_Conversation_C_HideDialogSelector");
static_assert(offsetof(BP_Conversation_C_HideDialogSelector, CallFunc_IsDialogOptionsVisible_ReturnValue) == 0x000000, "Member 'BP_Conversation_C_HideDialogSelector::CallFunc_IsDialogOptionsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_HideDialogSelector, CallFunc_GetEndTime_ReturnValue) == 0x000004, "Member 'BP_Conversation_C_HideDialogSelector::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_HideDialogSelector, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_Conversation_C_HideDialogSelector::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_HideDialogSelector, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'BP_Conversation_C_HideDialogSelector::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.SetCurrentText
// 0x0100 (0x0100 - 0x0000)
struct BP_Conversation_C_SetCurrentText final
{
public:
	int32                                         AnimSpeed;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UConversationBtnUserWidget*>     CallFunc_GetResponseButtons_ReturnValue;           // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterAsNumber_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_2;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
	int32                                         CallFunc_Len_ReturnValue_3;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue_1;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_4;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00E0(0x0018)()
	int32                                         CallFunc_Len_ReturnValue_5;                        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Conversation_C_SetCurrentText) == 0x000008, "Wrong alignment on BP_Conversation_C_SetCurrentText");
static_assert(sizeof(BP_Conversation_C_SetCurrentText) == 0x000100, "Wrong size on BP_Conversation_C_SetCurrentText");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, AnimSpeed) == 0x000000, "Member 'BP_Conversation_C_SetCurrentText::AnimSpeed' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, Temp_bool_Variable) == 0x000004, "Member 'BP_Conversation_C_SetCurrentText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Conv_TextToString_ReturnValue) == 0x000008, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_GetResponseButtons_ReturnValue) == 0x000018, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_GetResponseButtons_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Len_ReturnValue) == 0x000038, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Len_ReturnValue_1) == 0x00003C, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_GetCharacterAsNumber_ReturnValue) == 0x000044, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_GetCharacterAsNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Len_ReturnValue_2) == 0x000048, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Len_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, K2Node_Select_Default) == 0x000054, "Member 'BP_Conversation_C_SetCurrentText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Len_ReturnValue_3) == 0x000070, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Len_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Add_IntInt_ReturnValue_2) == 0x000074, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_GetSubstring_ReturnValue) == 0x000078, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Replace_ReturnValue) == 0x000088, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_GetSubstring_ReturnValue_1) == 0x000098, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_GetSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A8, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Len_ReturnValue_4) == 0x0000B8, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Len_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D0, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000E0, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_Len_ReturnValue_5) == 0x0000F8, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_Len_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_SetCurrentText, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_Conversation_C_SetCurrentText::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.SetOpacity
// 0x0004 (0x0004 - 0x0000)
struct BP_Conversation_C_SetOpacity final
{
public:
	float                                         InOpacity;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Conversation_C_SetOpacity) == 0x000004, "Wrong alignment on BP_Conversation_C_SetOpacity");
static_assert(sizeof(BP_Conversation_C_SetOpacity) == 0x000004, "Wrong size on BP_Conversation_C_SetOpacity");
static_assert(offsetof(BP_Conversation_C_SetOpacity, InOpacity) == 0x000000, "Member 'BP_Conversation_C_SetOpacity::InOpacity' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.BtnHotkeyLBClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_Conversation_C_BtnHotkeyLBClicked final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Conversation_C_BtnHotkeyLBClicked) == 0x000001, "Wrong alignment on BP_Conversation_C_BtnHotkeyLBClicked");
static_assert(sizeof(BP_Conversation_C_BtnHotkeyLBClicked) == 0x000001, "Wrong size on BP_Conversation_C_BtnHotkeyLBClicked");
static_assert(offsetof(BP_Conversation_C_BtnHotkeyLBClicked, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'BP_Conversation_C_BtnHotkeyLBClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.BtnHotkeyRBClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_Conversation_C_BtnHotkeyRBClicked final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Conversation_C_BtnHotkeyRBClicked) == 0x000001, "Wrong alignment on BP_Conversation_C_BtnHotkeyRBClicked");
static_assert(sizeof(BP_Conversation_C_BtnHotkeyRBClicked) == 0x000001, "Wrong size on BP_Conversation_C_BtnHotkeyRBClicked");
static_assert(offsetof(BP_Conversation_C_BtnHotkeyRBClicked, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'BP_Conversation_C_BtnHotkeyRBClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_Conversation.BP_Conversation_C.BtnHotkeyXClicked
// 0x0002 (0x0002 - 0x0000)
struct BP_Conversation_C_BtnHotkeyXClicked final
{
public:
	bool                                          CallFunc_IsDialogOptionsVisible_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Conversation_C_BtnHotkeyXClicked) == 0x000001, "Wrong alignment on BP_Conversation_C_BtnHotkeyXClicked");
static_assert(sizeof(BP_Conversation_C_BtnHotkeyXClicked) == 0x000002, "Wrong size on BP_Conversation_C_BtnHotkeyXClicked");
static_assert(offsetof(BP_Conversation_C_BtnHotkeyXClicked, CallFunc_IsDialogOptionsVisible_ReturnValue) == 0x000000, "Member 'BP_Conversation_C_BtnHotkeyXClicked::CallFunc_IsDialogOptionsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Conversation_C_BtnHotkeyXClicked, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Conversation_C_BtnHotkeyXClicked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

