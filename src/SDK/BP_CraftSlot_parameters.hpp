#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CraftSlot

#include "Basic.hpp"

#include "man_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_CraftSlot.BP_CraftSlot_C.ExecuteUbergraph_BP_CraftSlot
// 0x0308 (0x0308 - 0x0000)
struct BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry_1;                         // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0050(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0088(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00F8(0x0070)(ConstParm)
	bool                                          K2Node_Event_bSelected;                            // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UManItemSlotBase*                       K2Node_Event_InManItemSlotBase;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemAbility*                           K2Node_Event_InItemAbility;                        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bUnavailable;                         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bUnavailableByResource;               // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlayingForward_ReturnValue;    // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bEquipState;                          // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInVisible;                           // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInAnimate;                           // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x2];                                      // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_ElapsedCooldownPercent;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_TimeLeft;                             // 0x01B8(0x0018)(ConstParm)
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x01D0(0x0018)()
	bool                                          K2Node_Event_bInIsEquipped;                        // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InStackNum;                           // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InMaxStackNum;                        // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsStackable;                       // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInSoldItem;                          // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate_2;                           // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate_1;                           // 0x01F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UTexture2D*>                     K2Node_Event_InPermanentEnchantIcons;              // 0x01F8(0x0010)(ConstParm, ReferenceParm)
	TArray<class UTexture2D*>                     K2Node_Event_InTemporaryEnchantIcons;              // 0x0208(0x0010)(ConstParm, ReferenceParm)
	float                                         K2Node_Select_Default_1;                           // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInEmptySlot;                         // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemSlot                                     K2Node_Event_InSlotType;                           // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21E[0x2];                                      // 0x021E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InItemRequirements;                   // 0x0228(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InItemType;                           // 0x0240(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InMaxCraftableNum;                    // 0x0258(0x0018)(ConstParm)
	bool                                          K2Node_Event_bInIsUnavailable;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0278(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x02A0(0x0028)()
	bool                                          K2Node_Event_bHighlighted;                         // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_2;                           // 0x02D0(0x0028)()
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot) == 0x000008, "Wrong alignment on BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot");
static_assert(sizeof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot) == 0x000308, "Wrong size on BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, EntryPoint) == 0x000000, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, Temp_bool_Variable) == 0x000004, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, Temp_byte_Variable) == 0x000005, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, Temp_byte_Variable_1) == 0x000006, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, Temp_bool_Variable_1) == 0x000007, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, Temp_float_Variable) == 0x000008, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, Temp_bool_Variable_2) == 0x00000C, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_IsDesignTime) == 0x00000D, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_MyGeometry_1) == 0x000010, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_MyGeometry_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_InDeltaTime) == 0x000048, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_GetEndTime_ReturnValue) == 0x00004C, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_MyGeometry) == 0x000050, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_MouseEvent_1) == 0x000088, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_MouseEvent) == 0x0000F8, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bSelected) == 0x000168, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bSelected' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_InManItemSlotBase) == 0x000170, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_InManItemSlotBase' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_InItemAbility) == 0x000178, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_InItemAbility' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bUnavailable) == 0x000180, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bUnavailable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bUnavailableByResource) == 0x000181, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bUnavailableByResource' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_PlayAnimation_ReturnValue) == 0x000188, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_GetEndTime_ReturnValue_1) == 0x000190, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_IsAnimationPlayingForward_ReturnValue) == 0x000194, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_IsAnimationPlayingForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_PlayAnimation_ReturnValue_1) == 0x000198, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0001A0, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bEquipState) == 0x0001A1, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bEquipState' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_BooleanAND_ReturnValue) == 0x0001A2, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Select_Default) == 0x0001A3, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_PlayAnimation_ReturnValue_2) == 0x0001A8, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bInVisible) == 0x0001B0, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bInVisible' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bInAnimate) == 0x0001B1, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bInAnimate' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_ElapsedCooldownPercent) == 0x0001B4, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_ElapsedCooldownPercent' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_TimeLeft) == 0x0001B8, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_TimeLeft' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_GetEmptyText_ReturnValue) == 0x0001D0, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bInIsEquipped) == 0x0001E8, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bInIsEquipped' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_InStackNum) == 0x0001EC, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_InStackNum' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_InMaxStackNum) == 0x0001F0, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_InMaxStackNum' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bInIsStackable) == 0x0001F4, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bInIsStackable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bInSoldItem) == 0x0001F5, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bInSoldItem' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bAnimate_2) == 0x0001F6, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bAnimate_2' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bAnimate_1) == 0x0001F7, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bAnimate_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_InPermanentEnchantIcons) == 0x0001F8, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_InPermanentEnchantIcons' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_InTemporaryEnchantIcons) == 0x000208, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_InTemporaryEnchantIcons' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Select_Default_1) == 0x000218, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bInEmptySlot) == 0x00021C, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bInEmptySlot' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_InSlotType) == 0x00021D, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_InSlotType' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_PlayAnimation_ReturnValue_3) == 0x000220, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_InItemRequirements) == 0x000228, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_InItemRequirements' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_InItemType) == 0x000240, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_InItemType' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_InMaxCraftableNum) == 0x000258, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_InMaxCraftableNum' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bInIsUnavailable) == 0x000270, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bInIsUnavailable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_MakeStruct_SlateColor) == 0x000278, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_MakeStruct_SlateColor_1) == 0x0002A0, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bHighlighted) == 0x0002C8, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bHighlighted' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Event_bAnimate) == 0x0002C9, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, K2Node_Select_Default_2) == 0x0002D0, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_GetRenderOpacity_ReturnValue) == 0x0002F8, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0002FC, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot, CallFunc_PlayAnimation_ReturnValue_4) == 0x000300, "Member 'BP_CraftSlot_C_ExecuteUbergraph_BP_CraftSlot::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnHighlighted
// 0x0002 (0x0002 - 0x0000)
struct BP_CraftSlot_C_OnHighlighted final
{
public:
	bool                                          bHighlighted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAnimate;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_OnHighlighted) == 0x000001, "Wrong alignment on BP_CraftSlot_C_OnHighlighted");
static_assert(sizeof(BP_CraftSlot_C_OnHighlighted) == 0x000002, "Wrong size on BP_CraftSlot_C_OnHighlighted");
static_assert(offsetof(BP_CraftSlot_C_OnHighlighted, bHighlighted) == 0x000000, "Member 'BP_CraftSlot_C_OnHighlighted::bHighlighted' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_OnHighlighted, bAnimate) == 0x000001, "Member 'BP_CraftSlot_C_OnHighlighted::bAnimate' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnSetMaxCraftableNum
// 0x0020 (0x0020 - 0x0000)
struct BP_CraftSlot_C_OnSetMaxCraftableNum final
{
public:
	class FText                                   InMaxCraftableNum;                                 // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bInIsUnavailable;                                  // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_OnSetMaxCraftableNum) == 0x000008, "Wrong alignment on BP_CraftSlot_C_OnSetMaxCraftableNum");
static_assert(sizeof(BP_CraftSlot_C_OnSetMaxCraftableNum) == 0x000020, "Wrong size on BP_CraftSlot_C_OnSetMaxCraftableNum");
static_assert(offsetof(BP_CraftSlot_C_OnSetMaxCraftableNum, InMaxCraftableNum) == 0x000000, "Member 'BP_CraftSlot_C_OnSetMaxCraftableNum::InMaxCraftableNum' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_OnSetMaxCraftableNum, bInIsUnavailable) == 0x000018, "Member 'BP_CraftSlot_C_OnSetMaxCraftableNum::bInIsUnavailable' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnSetItemType
// 0x0018 (0x0018 - 0x0000)
struct BP_CraftSlot_C_OnSetItemType final
{
public:
	class FText                                   InItemType;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CraftSlot_C_OnSetItemType) == 0x000008, "Wrong alignment on BP_CraftSlot_C_OnSetItemType");
static_assert(sizeof(BP_CraftSlot_C_OnSetItemType) == 0x000018, "Wrong size on BP_CraftSlot_C_OnSetItemType");
static_assert(offsetof(BP_CraftSlot_C_OnSetItemType, InItemType) == 0x000000, "Member 'BP_CraftSlot_C_OnSetItemType::InItemType' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnSetItemRequirements
// 0x0018 (0x0018 - 0x0000)
struct BP_CraftSlot_C_OnSetItemRequirements final
{
public:
	class FText                                   InItemRequirements;                                // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CraftSlot_C_OnSetItemRequirements) == 0x000008, "Wrong alignment on BP_CraftSlot_C_OnSetItemRequirements");
static_assert(sizeof(BP_CraftSlot_C_OnSetItemRequirements) == 0x000018, "Wrong size on BP_CraftSlot_C_OnSetItemRequirements");
static_assert(offsetof(BP_CraftSlot_C_OnSetItemRequirements, InItemRequirements) == 0x000000, "Member 'BP_CraftSlot_C_OnSetItemRequirements::InItemRequirements' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnToggleEmptySlot
// 0x0002 (0x0002 - 0x0000)
struct BP_CraftSlot_C_OnToggleEmptySlot final
{
public:
	bool                                          bInEmptySlot;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemSlot                                     InSlotType;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftSlot_C_OnToggleEmptySlot) == 0x000001, "Wrong alignment on BP_CraftSlot_C_OnToggleEmptySlot");
static_assert(sizeof(BP_CraftSlot_C_OnToggleEmptySlot) == 0x000002, "Wrong size on BP_CraftSlot_C_OnToggleEmptySlot");
static_assert(offsetof(BP_CraftSlot_C_OnToggleEmptySlot, bInEmptySlot) == 0x000000, "Member 'BP_CraftSlot_C_OnToggleEmptySlot::bInEmptySlot' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_OnToggleEmptySlot, InSlotType) == 0x000001, "Member 'BP_CraftSlot_C_OnToggleEmptySlot::InSlotType' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnTemporaryEnchantIconsChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_CraftSlot_C_OnTemporaryEnchantIconsChanged final
{
public:
	TArray<class UTexture2D*>                     InTemporaryEnchantIcons;                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CraftSlot_C_OnTemporaryEnchantIconsChanged) == 0x000008, "Wrong alignment on BP_CraftSlot_C_OnTemporaryEnchantIconsChanged");
static_assert(sizeof(BP_CraftSlot_C_OnTemporaryEnchantIconsChanged) == 0x000010, "Wrong size on BP_CraftSlot_C_OnTemporaryEnchantIconsChanged");
static_assert(offsetof(BP_CraftSlot_C_OnTemporaryEnchantIconsChanged, InTemporaryEnchantIcons) == 0x000000, "Member 'BP_CraftSlot_C_OnTemporaryEnchantIconsChanged::InTemporaryEnchantIcons' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnPermanentEnchantIconsChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_CraftSlot_C_OnPermanentEnchantIconsChanged final
{
public:
	TArray<class UTexture2D*>                     InPermanentEnchantIcons;                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CraftSlot_C_OnPermanentEnchantIconsChanged) == 0x000008, "Wrong alignment on BP_CraftSlot_C_OnPermanentEnchantIconsChanged");
static_assert(sizeof(BP_CraftSlot_C_OnPermanentEnchantIconsChanged) == 0x000010, "Wrong size on BP_CraftSlot_C_OnPermanentEnchantIconsChanged");
static_assert(offsetof(BP_CraftSlot_C_OnPermanentEnchantIconsChanged, InPermanentEnchantIcons) == 0x000000, "Member 'BP_CraftSlot_C_OnPermanentEnchantIconsChanged::InPermanentEnchantIcons' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnUnfocused
// 0x0001 (0x0001 - 0x0000)
struct BP_CraftSlot_C_OnUnfocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_OnUnfocused) == 0x000001, "Wrong alignment on BP_CraftSlot_C_OnUnfocused");
static_assert(sizeof(BP_CraftSlot_C_OnUnfocused) == 0x000001, "Wrong size on BP_CraftSlot_C_OnUnfocused");
static_assert(offsetof(BP_CraftSlot_C_OnUnfocused, bAnimate) == 0x000000, "Member 'BP_CraftSlot_C_OnUnfocused::bAnimate' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnFocused
// 0x0001 (0x0001 - 0x0000)
struct BP_CraftSlot_C_OnFocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_OnFocused) == 0x000001, "Wrong alignment on BP_CraftSlot_C_OnFocused");
static_assert(sizeof(BP_CraftSlot_C_OnFocused) == 0x000001, "Wrong size on BP_CraftSlot_C_OnFocused");
static_assert(offsetof(BP_CraftSlot_C_OnFocused, bAnimate) == 0x000000, "Member 'BP_CraftSlot_C_OnFocused::bAnimate' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnToggleSoldItem
// 0x0001 (0x0001 - 0x0000)
struct BP_CraftSlot_C_OnToggleSoldItem final
{
public:
	bool                                          bInSoldItem;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_OnToggleSoldItem) == 0x000001, "Wrong alignment on BP_CraftSlot_C_OnToggleSoldItem");
static_assert(sizeof(BP_CraftSlot_C_OnToggleSoldItem) == 0x000001, "Wrong size on BP_CraftSlot_C_OnToggleSoldItem");
static_assert(offsetof(BP_CraftSlot_C_OnToggleSoldItem, bInSoldItem) == 0x000000, "Member 'BP_CraftSlot_C_OnToggleSoldItem::bInSoldItem' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnStackNumChanged
// 0x000C (0x000C - 0x0000)
struct BP_CraftSlot_C_OnStackNumChanged final
{
public:
	int32                                         InStackNum;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InMaxStackNum;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInIsStackable;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_OnStackNumChanged) == 0x000004, "Wrong alignment on BP_CraftSlot_C_OnStackNumChanged");
static_assert(sizeof(BP_CraftSlot_C_OnStackNumChanged) == 0x00000C, "Wrong size on BP_CraftSlot_C_OnStackNumChanged");
static_assert(offsetof(BP_CraftSlot_C_OnStackNumChanged, InStackNum) == 0x000000, "Member 'BP_CraftSlot_C_OnStackNumChanged::InStackNum' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_OnStackNumChanged, InMaxStackNum) == 0x000004, "Member 'BP_CraftSlot_C_OnStackNumChanged::InMaxStackNum' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_OnStackNumChanged, bInIsStackable) == 0x000008, "Member 'BP_CraftSlot_C_OnStackNumChanged::bInIsStackable' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnToggleEquipped
// 0x0001 (0x0001 - 0x0000)
struct BP_CraftSlot_C_OnToggleEquipped final
{
public:
	bool                                          bInIsEquipped;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_OnToggleEquipped) == 0x000001, "Wrong alignment on BP_CraftSlot_C_OnToggleEquipped");
static_assert(sizeof(BP_CraftSlot_C_OnToggleEquipped) == 0x000001, "Wrong size on BP_CraftSlot_C_OnToggleEquipped");
static_assert(offsetof(BP_CraftSlot_C_OnToggleEquipped, bInIsEquipped) == 0x000000, "Member 'BP_CraftSlot_C_OnToggleEquipped::bInIsEquipped' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnSetCountdown
// 0x0020 (0x0020 - 0x0000)
struct BP_CraftSlot_C_OnSetCountdown final
{
public:
	float                                         ElapsedCooldownPercent;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TimeLeft;                                          // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CraftSlot_C_OnSetCountdown) == 0x000008, "Wrong alignment on BP_CraftSlot_C_OnSetCountdown");
static_assert(sizeof(BP_CraftSlot_C_OnSetCountdown) == 0x000020, "Wrong size on BP_CraftSlot_C_OnSetCountdown");
static_assert(offsetof(BP_CraftSlot_C_OnSetCountdown, ElapsedCooldownPercent) == 0x000000, "Member 'BP_CraftSlot_C_OnSetCountdown::ElapsedCooldownPercent' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_OnSetCountdown, TimeLeft) == 0x000008, "Member 'BP_CraftSlot_C_OnSetCountdown::TimeLeft' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnToggleNewItemWarning
// 0x0002 (0x0002 - 0x0000)
struct BP_CraftSlot_C_OnToggleNewItemWarning final
{
public:
	bool                                          bInVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInAnimate;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_OnToggleNewItemWarning) == 0x000001, "Wrong alignment on BP_CraftSlot_C_OnToggleNewItemWarning");
static_assert(sizeof(BP_CraftSlot_C_OnToggleNewItemWarning) == 0x000002, "Wrong size on BP_CraftSlot_C_OnToggleNewItemWarning");
static_assert(offsetof(BP_CraftSlot_C_OnToggleNewItemWarning, bInVisible) == 0x000000, "Member 'BP_CraftSlot_C_OnToggleNewItemWarning::bInVisible' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_OnToggleNewItemWarning, bInAnimate) == 0x000001, "Member 'BP_CraftSlot_C_OnToggleNewItemWarning::bInAnimate' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnSetEquipState
// 0x0001 (0x0001 - 0x0000)
struct BP_CraftSlot_C_OnSetEquipState final
{
public:
	bool                                          bEquipState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_OnSetEquipState) == 0x000001, "Wrong alignment on BP_CraftSlot_C_OnSetEquipState");
static_assert(sizeof(BP_CraftSlot_C_OnSetEquipState) == 0x000001, "Wrong size on BP_CraftSlot_C_OnSetEquipState");
static_assert(offsetof(BP_CraftSlot_C_OnSetEquipState, bEquipState) == 0x000000, "Member 'BP_CraftSlot_C_OnSetEquipState::bEquipState' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnToggleUnavailable
// 0x0002 (0x0002 - 0x0000)
struct BP_CraftSlot_C_OnToggleUnavailable final
{
public:
	bool                                          bUnavailable;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUnavailableByResource;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_OnToggleUnavailable) == 0x000001, "Wrong alignment on BP_CraftSlot_C_OnToggleUnavailable");
static_assert(sizeof(BP_CraftSlot_C_OnToggleUnavailable) == 0x000002, "Wrong size on BP_CraftSlot_C_OnToggleUnavailable");
static_assert(offsetof(BP_CraftSlot_C_OnToggleUnavailable, bUnavailable) == 0x000000, "Member 'BP_CraftSlot_C_OnToggleUnavailable::bUnavailable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_OnToggleUnavailable, bUnavailableByResource) == 0x000001, "Member 'BP_CraftSlot_C_OnToggleUnavailable::bUnavailableByResource' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnSetSlot
// 0x0010 (0x0010 - 0x0000)
struct BP_CraftSlot_C_OnSetSlot final
{
public:
	class UManItemSlotBase*                       InManItemSlotBase;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemAbility*                           InItemAbility;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftSlot_C_OnSetSlot) == 0x000008, "Wrong alignment on BP_CraftSlot_C_OnSetSlot");
static_assert(sizeof(BP_CraftSlot_C_OnSetSlot) == 0x000010, "Wrong size on BP_CraftSlot_C_OnSetSlot");
static_assert(offsetof(BP_CraftSlot_C_OnSetSlot, InManItemSlotBase) == 0x000000, "Member 'BP_CraftSlot_C_OnSetSlot::InManItemSlotBase' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_OnSetSlot, InItemAbility) == 0x000008, "Member 'BP_CraftSlot_C_OnSetSlot::InItemAbility' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnToggleSelected
// 0x0001 (0x0001 - 0x0000)
struct BP_CraftSlot_C_OnToggleSelected final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_OnToggleSelected) == 0x000001, "Wrong alignment on BP_CraftSlot_C_OnToggleSelected");
static_assert(sizeof(BP_CraftSlot_C_OnToggleSelected) == 0x000001, "Wrong size on BP_CraftSlot_C_OnToggleSelected");
static_assert(offsetof(BP_CraftSlot_C_OnToggleSelected, bSelected) == 0x000000, "Member 'BP_CraftSlot_C_OnToggleSelected::bSelected' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct BP_CraftSlot_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CraftSlot_C_OnMouseLeave) == 0x000008, "Wrong alignment on BP_CraftSlot_C_OnMouseLeave");
static_assert(sizeof(BP_CraftSlot_C_OnMouseLeave) == 0x000070, "Wrong size on BP_CraftSlot_C_OnMouseLeave");
static_assert(offsetof(BP_CraftSlot_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'BP_CraftSlot_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct BP_CraftSlot_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CraftSlot_C_OnMouseEnter) == 0x000008, "Wrong alignment on BP_CraftSlot_C_OnMouseEnter");
static_assert(sizeof(BP_CraftSlot_C_OnMouseEnter) == 0x0000A8, "Wrong size on BP_CraftSlot_C_OnMouseEnter");
static_assert(offsetof(BP_CraftSlot_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'BP_CraftSlot_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'BP_CraftSlot_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_CraftSlot_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftSlot_C_Tick) == 0x000004, "Wrong alignment on BP_CraftSlot_C_Tick");
static_assert(sizeof(BP_CraftSlot_C_Tick) == 0x00003C, "Wrong size on BP_CraftSlot_C_Tick");
static_assert(offsetof(BP_CraftSlot_C_Tick, MyGeometry) == 0x000000, "Member 'BP_CraftSlot_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_CraftSlot_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_CraftSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_PreConstruct) == 0x000001, "Wrong alignment on BP_CraftSlot_C_PreConstruct");
static_assert(sizeof(BP_CraftSlot_C_PreConstruct) == 0x000001, "Wrong size on BP_CraftSlot_C_PreConstruct");
static_assert(offsetof(BP_CraftSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_CraftSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.Set Slot
// 0x0038 (0x0038 - 0x0000)
struct BP_CraftSlot_C_Set_Slot final
{
public:
	class UItemAbility*                           InItemAbility;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_BPGetIcon_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_BPGetItemName_ReturnValue;                // 0x0018(0x0018)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftSlot_C_Set_Slot) == 0x000008, "Wrong alignment on BP_CraftSlot_C_Set_Slot");
static_assert(sizeof(BP_CraftSlot_C_Set_Slot) == 0x000038, "Wrong size on BP_CraftSlot_C_Set_Slot");
static_assert(offsetof(BP_CraftSlot_C_Set_Slot, InItemAbility) == 0x000000, "Member 'BP_CraftSlot_C_Set_Slot::InItemAbility' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_Set_Slot, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_CraftSlot_C_Set_Slot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_Set_Slot, CallFunc_BPGetIcon_ReturnValue) == 0x000010, "Member 'BP_CraftSlot_C_Set_Slot::CallFunc_BPGetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_Set_Slot, CallFunc_BPGetItemName_ReturnValue) == 0x000018, "Member 'BP_CraftSlot_C_Set_Slot::CallFunc_BPGetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_Set_Slot, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000030, "Member 'BP_CraftSlot_C_Set_Slot::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.SetCount
// 0x0088 (0x0088 - 0x0000)
struct BP_CraftSlot_C_SetCount final
{
public:
	int32                                         Quantity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CAPACITY;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stackable;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInfiniteAmount_ReturnValue;             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0030(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue_1;                  // 0x0050(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0070(0x0018)()
};
static_assert(alignof(BP_CraftSlot_C_SetCount) == 0x000008, "Wrong alignment on BP_CraftSlot_C_SetCount");
static_assert(sizeof(BP_CraftSlot_C_SetCount) == 0x000088, "Wrong size on BP_CraftSlot_C_SetCount");
static_assert(offsetof(BP_CraftSlot_C_SetCount, Quantity) == 0x000000, "Member 'BP_CraftSlot_C_SetCount::Quantity' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, CAPACITY) == 0x000004, "Member 'BP_CraftSlot_C_SetCount::CAPACITY' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, Stackable) == 0x000008, "Member 'BP_CraftSlot_C_SetCount::Stackable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, Temp_bool_Variable) == 0x000009, "Member 'BP_CraftSlot_C_SetCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, Temp_text_Variable) == 0x000010, "Member 'BP_CraftSlot_C_SetCount::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, Temp_bool_Variable_1) == 0x000028, "Member 'BP_CraftSlot_C_SetCount::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, Temp_byte_Variable) == 0x000029, "Member 'BP_CraftSlot_C_SetCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, Temp_byte_Variable_1) == 0x00002A, "Member 'BP_CraftSlot_C_SetCount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, Temp_bool_Variable_2) == 0x00002B, "Member 'BP_CraftSlot_C_SetCount::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, Temp_byte_Variable_2) == 0x00002C, "Member 'BP_CraftSlot_C_SetCount::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, Temp_byte_Variable_3) == 0x00002D, "Member 'BP_CraftSlot_C_SetCount::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, CallFunc_IsInfiniteAmount_ReturnValue) == 0x00002E, "Member 'BP_CraftSlot_C_SetCount::CallFunc_IsInfiniteAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, K2Node_Select_Default) == 0x00002F, "Member 'BP_CraftSlot_C_SetCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, CallFunc_IntToText_ReturnValue) == 0x000030, "Member 'BP_CraftSlot_C_SetCount::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BP_CraftSlot_C_SetCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, CallFunc_IntToText_ReturnValue_1) == 0x000050, "Member 'BP_CraftSlot_C_SetCount::CallFunc_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, K2Node_Select_Default_1) == 0x000068, "Member 'BP_CraftSlot_C_SetCount::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCount, K2Node_Select_Default_2) == 0x000070, "Member 'BP_CraftSlot_C_SetCount::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.ToggleEquipped
// 0x0005 (0x0005 - 0x0000)
struct BP_CraftSlot_C_ToggleEquipped final
{
public:
	bool                                          Equipped;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftSlot_C_ToggleEquipped) == 0x000001, "Wrong alignment on BP_CraftSlot_C_ToggleEquipped");
static_assert(sizeof(BP_CraftSlot_C_ToggleEquipped) == 0x000005, "Wrong size on BP_CraftSlot_C_ToggleEquipped");
static_assert(offsetof(BP_CraftSlot_C_ToggleEquipped, Equipped) == 0x000000, "Member 'BP_CraftSlot_C_ToggleEquipped::Equipped' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleEquipped, Temp_bool_Variable) == 0x000001, "Member 'BP_CraftSlot_C_ToggleEquipped::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleEquipped, Temp_byte_Variable) == 0x000002, "Member 'BP_CraftSlot_C_ToggleEquipped::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleEquipped, Temp_byte_Variable_1) == 0x000003, "Member 'BP_CraftSlot_C_ToggleEquipped::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleEquipped, K2Node_Select_Default) == 0x000004, "Member 'BP_CraftSlot_C_ToggleEquipped::K2Node_Select_Default' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.ToggleSelected
// 0x0005 (0x0005 - 0x0000)
struct BP_CraftSlot_C_ToggleSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftSlot_C_ToggleSelected) == 0x000001, "Wrong alignment on BP_CraftSlot_C_ToggleSelected");
static_assert(sizeof(BP_CraftSlot_C_ToggleSelected) == 0x000005, "Wrong size on BP_CraftSlot_C_ToggleSelected");
static_assert(offsetof(BP_CraftSlot_C_ToggleSelected, Selected) == 0x000000, "Member 'BP_CraftSlot_C_ToggleSelected::Selected' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleSelected, Temp_bool_Variable) == 0x000001, "Member 'BP_CraftSlot_C_ToggleSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleSelected, Temp_byte_Variable) == 0x000002, "Member 'BP_CraftSlot_C_ToggleSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleSelected, Temp_byte_Variable_1) == 0x000003, "Member 'BP_CraftSlot_C_ToggleSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleSelected, K2Node_Select_Default) == 0x000004, "Member 'BP_CraftSlot_C_ToggleSelected::K2Node_Select_Default' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.ToggleCanEquipped
// 0x0001 (0x0001 - 0x0000)
struct BP_CraftSlot_C_ToggleCanEquipped final
{
public:
	bool                                          CanEquipped;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_ToggleCanEquipped) == 0x000001, "Wrong alignment on BP_CraftSlot_C_ToggleCanEquipped");
static_assert(sizeof(BP_CraftSlot_C_ToggleCanEquipped) == 0x000001, "Wrong size on BP_CraftSlot_C_ToggleCanEquipped");
static_assert(offsetof(BP_CraftSlot_C_ToggleCanEquipped, CanEquipped) == 0x000000, "Member 'BP_CraftSlot_C_ToggleCanEquipped::CanEquipped' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.ToggleUnavailable
// 0x0090 (0x0090 - 0x0000)
struct BP_CraftSlot_C_ToggleUnavailable final
{
public:
	bool                                          Unavailable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UnavailableByResource;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0050(0x0028)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftSlot_C_ToggleUnavailable) == 0x000008, "Wrong alignment on BP_CraftSlot_C_ToggleUnavailable");
static_assert(sizeof(BP_CraftSlot_C_ToggleUnavailable) == 0x000090, "Wrong size on BP_CraftSlot_C_ToggleUnavailable");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, Unavailable) == 0x000000, "Member 'BP_CraftSlot_C_ToggleUnavailable::Unavailable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, UnavailableByResource) == 0x000001, "Member 'BP_CraftSlot_C_ToggleUnavailable::UnavailableByResource' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, Temp_bool_Variable) == 0x000002, "Member 'BP_CraftSlot_C_ToggleUnavailable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, Temp_float_Variable) == 0x000004, "Member 'BP_CraftSlot_C_ToggleUnavailable::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, Temp_float_Variable_1) == 0x000008, "Member 'BP_CraftSlot_C_ToggleUnavailable::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_CraftSlot_C_ToggleUnavailable::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, Temp_struct_Variable) == 0x000010, "Member 'BP_CraftSlot_C_ToggleUnavailable::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, Temp_struct_Variable_1) == 0x000020, "Member 'BP_CraftSlot_C_ToggleUnavailable::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, Temp_bool_Variable_2) == 0x000030, "Member 'BP_CraftSlot_C_ToggleUnavailable::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, Temp_byte_Variable) == 0x000031, "Member 'BP_CraftSlot_C_ToggleUnavailable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, Temp_byte_Variable_1) == 0x000032, "Member 'BP_CraftSlot_C_ToggleUnavailable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, CallFunc_Not_PreBool_ReturnValue) == 0x000033, "Member 'BP_CraftSlot_C_ToggleUnavailable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, CallFunc_BooleanAND_ReturnValue) == 0x000034, "Member 'BP_CraftSlot_C_ToggleUnavailable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, CallFunc_Not_PreBool_ReturnValue_1) == 0x000035, "Member 'BP_CraftSlot_C_ToggleUnavailable::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, K2Node_Select_Default) == 0x000038, "Member 'BP_CraftSlot_C_ToggleUnavailable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, CallFunc_BooleanAND_ReturnValue_1) == 0x000048, "Member 'BP_CraftSlot_C_ToggleUnavailable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, K2Node_MakeStruct_SlateColor) == 0x000050, "Member 'BP_CraftSlot_C_ToggleUnavailable::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, K2Node_Select_Default_1) == 0x000078, "Member 'BP_CraftSlot_C_ToggleUnavailable::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, CallFunc_Not_PreBool_ReturnValue_2) == 0x000079, "Member 'BP_CraftSlot_C_ToggleUnavailable::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, CallFunc_BooleanAND_ReturnValue_2) == 0x00007A, "Member 'BP_CraftSlot_C_ToggleUnavailable::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000080, "Member 'BP_CraftSlot_C_ToggleUnavailable::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleUnavailable, K2Node_Select_Default_2) == 0x000088, "Member 'BP_CraftSlot_C_ToggleUnavailable::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.ToggleNewItemWarning
// 0x0018 (0x0018 - 0x0000)
struct BP_CraftSlot_C_ToggleNewItemWarning final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InAnimate;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftSlot_C_ToggleNewItemWarning) == 0x000008, "Wrong alignment on BP_CraftSlot_C_ToggleNewItemWarning");
static_assert(sizeof(BP_CraftSlot_C_ToggleNewItemWarning) == 0x000018, "Wrong size on BP_CraftSlot_C_ToggleNewItemWarning");
static_assert(offsetof(BP_CraftSlot_C_ToggleNewItemWarning, InVisible) == 0x000000, "Member 'BP_CraftSlot_C_ToggleNewItemWarning::InVisible' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleNewItemWarning, InAnimate) == 0x000001, "Member 'BP_CraftSlot_C_ToggleNewItemWarning::InAnimate' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleNewItemWarning, Temp_bool_Variable) == 0x000002, "Member 'BP_CraftSlot_C_ToggleNewItemWarning::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleNewItemWarning, Temp_float_Variable) == 0x000004, "Member 'BP_CraftSlot_C_ToggleNewItemWarning::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleNewItemWarning, CallFunc_GetEndTime_ReturnValue) == 0x000008, "Member 'BP_CraftSlot_C_ToggleNewItemWarning::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleNewItemWarning, K2Node_Select_Default) == 0x00000C, "Member 'BP_CraftSlot_C_ToggleNewItemWarning::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_ToggleNewItemWarning, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_CraftSlot_C_ToggleNewItemWarning::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.SetCountdown
// 0x0020 (0x0020 - 0x0000)
struct BP_CraftSlot_C_SetCountdown final
{
public:
	float                                         PercentLeft;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TimeLeft;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_CraftSlot_C_SetCountdown) == 0x000008, "Wrong alignment on BP_CraftSlot_C_SetCountdown");
static_assert(sizeof(BP_CraftSlot_C_SetCountdown) == 0x000020, "Wrong size on BP_CraftSlot_C_SetCountdown");
static_assert(offsetof(BP_CraftSlot_C_SetCountdown, PercentLeft) == 0x000000, "Member 'BP_CraftSlot_C_SetCountdown::PercentLeft' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_SetCountdown, TimeLeft) == 0x000008, "Member 'BP_CraftSlot_C_SetCountdown::TimeLeft' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.ToggleSoldItem
// 0x0001 (0x0001 - 0x0000)
struct BP_CraftSlot_C_ToggleSoldItem final
{
public:
	bool                                          InSoldItem;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftSlot_C_ToggleSoldItem) == 0x000001, "Wrong alignment on BP_CraftSlot_C_ToggleSoldItem");
static_assert(sizeof(BP_CraftSlot_C_ToggleSoldItem) == 0x000001, "Wrong size on BP_CraftSlot_C_ToggleSoldItem");
static_assert(offsetof(BP_CraftSlot_C_ToggleSoldItem, InSoldItem) == 0x000000, "Member 'BP_CraftSlot_C_ToggleSoldItem::InSoldItem' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.Toggle Empty
// 0x0002 (0x0002 - 0x0000)
struct BP_CraftSlot_C_Toggle_Empty final
{
public:
	bool                                          InIsEmpty;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemSlot                                     InItemSlotType;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftSlot_C_Toggle_Empty) == 0x000001, "Wrong alignment on BP_CraftSlot_C_Toggle_Empty");
static_assert(sizeof(BP_CraftSlot_C_Toggle_Empty) == 0x000002, "Wrong size on BP_CraftSlot_C_Toggle_Empty");
static_assert(offsetof(BP_CraftSlot_C_Toggle_Empty, InIsEmpty) == 0x000000, "Member 'BP_CraftSlot_C_Toggle_Empty::InIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_CraftSlot_C_Toggle_Empty, InItemSlotType) == 0x000001, "Member 'BP_CraftSlot_C_Toggle_Empty::InItemSlotType' has a wrong offset!");

// Function BP_CraftSlot.BP_CraftSlot_C.ErrorHighlight
// 0x0008 (0x0008 - 0x0000)
struct BP_CraftSlot_C_ErrorHighlight final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftSlot_C_ErrorHighlight) == 0x000008, "Wrong alignment on BP_CraftSlot_C_ErrorHighlight");
static_assert(sizeof(BP_CraftSlot_C_ErrorHighlight) == 0x000008, "Wrong size on BP_CraftSlot_C_ErrorHighlight");
static_assert(offsetof(BP_CraftSlot_C_ErrorHighlight, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_CraftSlot_C_ErrorHighlight::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

