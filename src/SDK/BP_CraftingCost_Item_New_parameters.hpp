#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CraftingCost_Item_New

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.ExecuteUbergraph_BP_CraftingCost_Item_New
// 0x0090 (0x0090 - 0x0000)
struct BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCost;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InAvailable;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture2D*>                     K2Node_Event_InPermanentEnchantIcons;              // 0x0050(0x0010)(ConstParm, ReferenceParm)
	TArray<class UTexture2D*>                     K2Node_Event_InTemporaryEnchantIcons;              // 0x0060(0x0010)(ConstParm, ReferenceParm)
	const class UTexture2D*                       K2Node_Event_InIcon;                               // 0x0070(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InName;                               // 0x0078(0x0018)(ConstParm)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New) == 0x000008, "Wrong alignment on BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New");
static_assert(sizeof(BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New) == 0x000090, "Wrong size on BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New, EntryPoint) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New, K2Node_Event_MyGeometry) == 0x000008, "Member 'BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New, K2Node_Event_InDeltaTime) == 0x000040, "Member 'BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New, K2Node_Event_InCost) == 0x000044, "Member 'BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New::K2Node_Event_InCost' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New, K2Node_Event_InAvailable) == 0x000048, "Member 'BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New::K2Node_Event_InAvailable' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New, K2Node_Event_InPermanentEnchantIcons) == 0x000050, "Member 'BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New::K2Node_Event_InPermanentEnchantIcons' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New, K2Node_Event_InTemporaryEnchantIcons) == 0x000060, "Member 'BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New::K2Node_Event_InTemporaryEnchantIcons' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New, K2Node_Event_InIcon) == 0x000070, "Member 'BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New::K2Node_Event_InIcon' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New, K2Node_Event_InName) == 0x000078, "Member 'BP_CraftingCost_Item_New_C_ExecuteUbergraph_BP_CraftingCost_Item_New::K2Node_Event_InName' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.OnSetSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_CraftingCost_Item_New_C_OnSetSlot final
{
public:
	const class UTexture2D*                       InIcon;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   InName;                                            // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_OnSetSlot) == 0x000008, "Wrong alignment on BP_CraftingCost_Item_New_C_OnSetSlot");
static_assert(sizeof(BP_CraftingCost_Item_New_C_OnSetSlot) == 0x000020, "Wrong size on BP_CraftingCost_Item_New_C_OnSetSlot");
static_assert(offsetof(BP_CraftingCost_Item_New_C_OnSetSlot, InIcon) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_OnSetSlot::InIcon' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_OnSetSlot, InName) == 0x000008, "Member 'BP_CraftingCost_Item_New_C_OnSetSlot::InName' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.OnTemporaryEnchantIconsChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_CraftingCost_Item_New_C_OnTemporaryEnchantIconsChanged final
{
public:
	TArray<class UTexture2D*>                     InTemporaryEnchantIcons;                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_OnTemporaryEnchantIconsChanged) == 0x000008, "Wrong alignment on BP_CraftingCost_Item_New_C_OnTemporaryEnchantIconsChanged");
static_assert(sizeof(BP_CraftingCost_Item_New_C_OnTemporaryEnchantIconsChanged) == 0x000010, "Wrong size on BP_CraftingCost_Item_New_C_OnTemporaryEnchantIconsChanged");
static_assert(offsetof(BP_CraftingCost_Item_New_C_OnTemporaryEnchantIconsChanged, InTemporaryEnchantIcons) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_OnTemporaryEnchantIconsChanged::InTemporaryEnchantIcons' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.OnPermanentEnchantIconsChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_CraftingCost_Item_New_C_OnPermanentEnchantIconsChanged final
{
public:
	TArray<class UTexture2D*>                     InPermanentEnchantIcons;                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_OnPermanentEnchantIconsChanged) == 0x000008, "Wrong alignment on BP_CraftingCost_Item_New_C_OnPermanentEnchantIconsChanged");
static_assert(sizeof(BP_CraftingCost_Item_New_C_OnPermanentEnchantIconsChanged) == 0x000010, "Wrong size on BP_CraftingCost_Item_New_C_OnPermanentEnchantIconsChanged");
static_assert(offsetof(BP_CraftingCost_Item_New_C_OnPermanentEnchantIconsChanged, InPermanentEnchantIcons) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_OnPermanentEnchantIconsChanged::InPermanentEnchantIcons' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.OnSetSlotCost
// 0x0008 (0x0008 - 0x0000)
struct BP_CraftingCost_Item_New_C_OnSetSlotCost final
{
public:
	int32                                         InCost;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InAvailable;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_OnSetSlotCost) == 0x000004, "Wrong alignment on BP_CraftingCost_Item_New_C_OnSetSlotCost");
static_assert(sizeof(BP_CraftingCost_Item_New_C_OnSetSlotCost) == 0x000008, "Wrong size on BP_CraftingCost_Item_New_C_OnSetSlotCost");
static_assert(offsetof(BP_CraftingCost_Item_New_C_OnSetSlotCost, InCost) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_OnSetSlotCost::InCost' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_OnSetSlotCost, InAvailable) == 0x000004, "Member 'BP_CraftingCost_Item_New_C_OnSetSlotCost::InAvailable' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_CraftingCost_Item_New_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_Tick) == 0x000004, "Wrong alignment on BP_CraftingCost_Item_New_C_Tick");
static_assert(sizeof(BP_CraftingCost_Item_New_C_Tick) == 0x00003C, "Wrong size on BP_CraftingCost_Item_New_C_Tick");
static_assert(offsetof(BP_CraftingCost_Item_New_C_Tick, MyGeometry) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_CraftingCost_Item_New_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_CraftingCost_Item_New_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_PreConstruct) == 0x000001, "Wrong alignment on BP_CraftingCost_Item_New_C_PreConstruct");
static_assert(sizeof(BP_CraftingCost_Item_New_C_PreConstruct) == 0x000001, "Wrong size on BP_CraftingCost_Item_New_C_PreConstruct");
static_assert(offsetof(BP_CraftingCost_Item_New_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.SetSlotIcon
// 0x0018 (0x0018 - 0x0000)
struct BP_CraftingCost_Item_New_C_SetSlotIcon final
{
public:
	class UTexture2D*                             InIcon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_SetSlotIcon) == 0x000008, "Wrong alignment on BP_CraftingCost_Item_New_C_SetSlotIcon");
static_assert(sizeof(BP_CraftingCost_Item_New_C_SetSlotIcon) == 0x000018, "Wrong size on BP_CraftingCost_Item_New_C_SetSlotIcon");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotIcon, InIcon) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_SetSlotIcon::InIcon' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotIcon, Temp_bool_Variable) == 0x000008, "Member 'BP_CraftingCost_Item_New_C_SetSlotIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotIcon, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_CraftingCost_Item_New_C_SetSlotIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotIcon, Temp_byte_Variable) == 0x00000A, "Member 'BP_CraftingCost_Item_New_C_SetSlotIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotIcon, Temp_byte_Variable_1) == 0x00000B, "Member 'BP_CraftingCost_Item_New_C_SetSlotIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotIcon, CallFunc_IsValid_ReturnValue_1) == 0x00000C, "Member 'BP_CraftingCost_Item_New_C_SetSlotIcon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotIcon, K2Node_Select_Default) == 0x00000D, "Member 'BP_CraftingCost_Item_New_C_SetSlotIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'BP_CraftingCost_Item_New_C_SetSlotIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.ToggleSelected
// 0x0001 (0x0001 - 0x0000)
struct BP_CraftingCost_Item_New_C_ToggleSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_ToggleSelected) == 0x000001, "Wrong alignment on BP_CraftingCost_Item_New_C_ToggleSelected");
static_assert(sizeof(BP_CraftingCost_Item_New_C_ToggleSelected) == 0x000001, "Wrong size on BP_CraftingCost_Item_New_C_ToggleSelected");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ToggleSelected, Selected) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_ToggleSelected::Selected' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.SetSlotCost
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CraftingCost_Item_New_C_SetSlotCost final
{
public:
	int32                                         InCost;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InAvailable;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0030(0x0018)()
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0060(0x0028)()
	class FText                                   CallFunc_IntToText_ReturnValue_1;                  // 0x0088(0x0018)()
};
static_assert(alignof(BP_CraftingCost_Item_New_C_SetSlotCost) == 0x000008, "Wrong alignment on BP_CraftingCost_Item_New_C_SetSlotCost");
static_assert(sizeof(BP_CraftingCost_Item_New_C_SetSlotCost) == 0x0000A0, "Wrong size on BP_CraftingCost_Item_New_C_SetSlotCost");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, InCost) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::InCost' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, InAvailable) == 0x000004, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::InAvailable' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, Temp_bool_Variable) == 0x000008, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, Temp_byte_Variable) == 0x000009, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, Temp_byte_Variable_1) == 0x00000A, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, Temp_bool_Variable_1) == 0x00000B, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, Temp_struct_Variable) == 0x00000C, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, Temp_struct_Variable_1) == 0x00001C, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, K2Node_Select_Default) == 0x00002D, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002E, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, CallFunc_IntToText_ReturnValue) == 0x000030, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, K2Node_Select_Default_1) == 0x000048, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, K2Node_MakeStruct_SlateColor) == 0x000060, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotCost, CallFunc_IntToText_ReturnValue_1) == 0x000088, "Member 'BP_CraftingCost_Item_New_C_SetSlotCost::CallFunc_IntToText_ReturnValue_1' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.SetSlotName
// 0x0018 (0x0018 - 0x0000)
struct BP_CraftingCost_Item_New_C_SetSlotName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_SetSlotName) == 0x000008, "Wrong alignment on BP_CraftingCost_Item_New_C_SetSlotName");
static_assert(sizeof(BP_CraftingCost_Item_New_C_SetSlotName) == 0x000018, "Wrong size on BP_CraftingCost_Item_New_C_SetSlotName");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetSlotName, InName) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_SetSlotName::InName' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.SetUnavailable
// 0x0010 (0x0010 - 0x0000)
struct BP_CraftingCost_Item_New_C_SetUnavailable final
{
public:
	bool                                          IsUnavailable;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_SetUnavailable) == 0x000004, "Wrong alignment on BP_CraftingCost_Item_New_C_SetUnavailable");
static_assert(sizeof(BP_CraftingCost_Item_New_C_SetUnavailable) == 0x000010, "Wrong size on BP_CraftingCost_Item_New_C_SetUnavailable");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetUnavailable, IsUnavailable) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_SetUnavailable::IsUnavailable' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetUnavailable, Temp_bool_Variable) == 0x000001, "Member 'BP_CraftingCost_Item_New_C_SetUnavailable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetUnavailable, Temp_float_Variable) == 0x000004, "Member 'BP_CraftingCost_Item_New_C_SetUnavailable::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetUnavailable, Temp_float_Variable_1) == 0x000008, "Member 'BP_CraftingCost_Item_New_C_SetUnavailable::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_SetUnavailable, K2Node_Select_Default) == 0x00000C, "Member 'BP_CraftingCost_Item_New_C_SetUnavailable::K2Node_Select_Default' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.ErrorHighlight
// 0x0008 (0x0008 - 0x0000)
struct BP_CraftingCost_Item_New_C_ErrorHighlight final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_ErrorHighlight) == 0x000008, "Wrong alignment on BP_CraftingCost_Item_New_C_ErrorHighlight");
static_assert(sizeof(BP_CraftingCost_Item_New_C_ErrorHighlight) == 0x000008, "Wrong size on BP_CraftingCost_Item_New_C_ErrorHighlight");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ErrorHighlight, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_ErrorHighlight::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_CraftingCost_Item_New.BP_CraftingCost_Item_New_C.ToggleSmallScreen
// 0x00D0 (0x00D0 - 0x0000)
struct BP_CraftingCost_Item_New_C_ToggleSmallScreen final
{
public:
	bool                                          InIsSmallScreen;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0020(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x0078(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(BP_CraftingCost_Item_New_C_ToggleSmallScreen) == 0x000008, "Wrong alignment on BP_CraftingCost_Item_New_C_ToggleSmallScreen");
static_assert(sizeof(BP_CraftingCost_Item_New_C_ToggleSmallScreen) == 0x0000D0, "Wrong size on BP_CraftingCost_Item_New_C_ToggleSmallScreen");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ToggleSmallScreen, InIsSmallScreen) == 0x000000, "Member 'BP_CraftingCost_Item_New_C_ToggleSmallScreen::InIsSmallScreen' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ToggleSmallScreen, Temp_bool_Variable) == 0x000001, "Member 'BP_CraftingCost_Item_New_C_ToggleSmallScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ToggleSmallScreen, Temp_int_Variable) == 0x000004, "Member 'BP_CraftingCost_Item_New_C_ToggleSmallScreen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ToggleSmallScreen, Temp_int_Variable_1) == 0x000008, "Member 'BP_CraftingCost_Item_New_C_ToggleSmallScreen::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ToggleSmallScreen, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_CraftingCost_Item_New_C_ToggleSmallScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ToggleSmallScreen, Temp_int_Variable_2) == 0x000010, "Member 'BP_CraftingCost_Item_New_C_ToggleSmallScreen::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ToggleSmallScreen, Temp_int_Variable_3) == 0x000014, "Member 'BP_CraftingCost_Item_New_C_ToggleSmallScreen::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ToggleSmallScreen, K2Node_Select_Default) == 0x000018, "Member 'BP_CraftingCost_Item_New_C_ToggleSmallScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ToggleSmallScreen, K2Node_Select_Default_1) == 0x00001C, "Member 'BP_CraftingCost_Item_New_C_ToggleSmallScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ToggleSmallScreen, K2Node_MakeStruct_SlateFontInfo) == 0x000020, "Member 'BP_CraftingCost_Item_New_C_ToggleSmallScreen::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(BP_CraftingCost_Item_New_C_ToggleSmallScreen, K2Node_MakeStruct_SlateFontInfo_1) == 0x000078, "Member 'BP_CraftingCost_Item_New_C_ToggleSmallScreen::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");

}

