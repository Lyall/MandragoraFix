#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CreateCharacter_Accessibility

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_CreateCharacter_Accessibility.BP_CreateCharacter_Accessibility_C
// 0x00C8 (0x0650 - 0x0588)
class UBP_CreateCharacter_Accessibility_C final : public UOptionsAccessibilityUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0588(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOutAnim;                                       // 0x0590(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x0598(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur;                                    // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BottomScreenFrame;                                 // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CloseButton_C*                      BtnClose;                                          // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyB;                                        // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DescriptionText;                                   // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Heading_C*                  Heading_Accessibility;                             // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Heading_C*                  Heading_Difficulty;                                // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NormalFrame;                                       // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Slider_C*                   Option_CameraShake;                                // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Selector_C*                 Option_ColorBlindMode;                             // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Selector_C*                 Option_ColorBlindStrength;                         // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Selector_C*                 Option_EnemyDamage;                                // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Selector_C*                 Option_EnemyHealth;                                // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Selector_C*                 Option_MotionBlur;                                 // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Selector_C*                 Option_SingleClickToBuySell;                       // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Selector_C*                 Option_SkillStaminaCost;                           // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Selector_C*                 Option_SprintMode;                                 // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Selector_C*                 Option_SubtitleEnable;                             // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Selector_C*                 Option_UserInterfaceScale;                         // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Options_Slider_C*                   Option_VibrationIntensity;                         // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              ClickedOutside;                                    // 0x0640(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void SetBtnCloseVisibility();
	void BtnHotkeyBClicked();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnGamepadBEvent();
	void OnShow(float AnimDuration);
	void OnHide(float AnimDuration);
	void BndEvt__BP_Options_Video_BtnHotkeyB_K2Node_ComponentBoundEvent_23_OnClicked__DelegateSignature();
	void OnSetDescription(const class FText& InDescription);
	void BndEvt__BP_Options_General_Option_EdgeScreenLowResourceFeedback_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature(int32 Index_0);
	void BndEvt__BP_Options_General_BtnClose_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature();
	void OnSetInputDisplay(EInputDisplay InInputDisplay, EInputDisplay InControlDisplay);
	void BndEvt__BP_Options_Accessibility_Option_EnemyDamage_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature(int32 Index_0);
	void BndEvt__BP_Options_Accessibility_Option_SkillStaminaCost_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature(int32 Index_0);
	void BndEvt__BP_Options_Accessibility_Option_ColorBlindMode_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature(int32 Index_0);
	void BndEvt__BP_Options_Accessibility_Option_ColorBlindStrength_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature(int32 Index_0);
	void BndEvt__BP_Options_Accessibility_Option_MotionBlur_K2Node_ComponentBoundEvent_9_OnValueChanged__DelegateSignature(int32 Index_0);
	void BndEvt__BP_Options_Accessibility_Option_SprintMode_K2Node_ComponentBoundEvent_10_OnValueChanged__DelegateSignature(int32 Index_0);
	void BndEvt__BP_Options_Accessibility_Option_SingleClickToBuySell_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature(int32 Index_0);
	void BndEvt__BP_Options_Accessibility_Option_CameraShake_K2Node_ComponentBoundEvent_12_OnValueChanged__DelegateSignature(float Value);
	void BndEvt__BP_Options_Accessibility_Option_VibrationIntensity_K2Node_ComponentBoundEvent_13_OnValueChanged__DelegateSignature(float Value);
	void BndEvt__BP_CreateCharacter_Accessibility_Option_SubtitleEnable_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature(int32 Index_0);
	void ExecuteUbergraph_BP_CreateCharacter_Accessibility(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CreateCharacter_Accessibility_C">();
	}
	static class UBP_CreateCharacter_Accessibility_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CreateCharacter_Accessibility_C>();
	}
};
static_assert(alignof(UBP_CreateCharacter_Accessibility_C) == 0x000008, "Wrong alignment on UBP_CreateCharacter_Accessibility_C");
static_assert(sizeof(UBP_CreateCharacter_Accessibility_C) == 0x000650, "Wrong size on UBP_CreateCharacter_Accessibility_C");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, UberGraphFrame) == 0x000588, "Member 'UBP_CreateCharacter_Accessibility_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, FadeOutAnim) == 0x000590, "Member 'UBP_CreateCharacter_Accessibility_C::FadeOutAnim' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, FadeInAnim) == 0x000598, "Member 'UBP_CreateCharacter_Accessibility_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, BackgroundBlur) == 0x0005A0, "Member 'UBP_CreateCharacter_Accessibility_C::BackgroundBlur' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, BottomScreenFrame) == 0x0005A8, "Member 'UBP_CreateCharacter_Accessibility_C::BottomScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, BtnClose) == 0x0005B0, "Member 'UBP_CreateCharacter_Accessibility_C::BtnClose' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, BtnHotkeyB) == 0x0005B8, "Member 'UBP_CreateCharacter_Accessibility_C::BtnHotkeyB' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, DescriptionText) == 0x0005C0, "Member 'UBP_CreateCharacter_Accessibility_C::DescriptionText' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Heading_Accessibility) == 0x0005C8, "Member 'UBP_CreateCharacter_Accessibility_C::Heading_Accessibility' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Heading_Difficulty) == 0x0005D0, "Member 'UBP_CreateCharacter_Accessibility_C::Heading_Difficulty' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, NormalFrame) == 0x0005D8, "Member 'UBP_CreateCharacter_Accessibility_C::NormalFrame' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Option_CameraShake) == 0x0005E0, "Member 'UBP_CreateCharacter_Accessibility_C::Option_CameraShake' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Option_ColorBlindMode) == 0x0005E8, "Member 'UBP_CreateCharacter_Accessibility_C::Option_ColorBlindMode' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Option_ColorBlindStrength) == 0x0005F0, "Member 'UBP_CreateCharacter_Accessibility_C::Option_ColorBlindStrength' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Option_EnemyDamage) == 0x0005F8, "Member 'UBP_CreateCharacter_Accessibility_C::Option_EnemyDamage' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Option_EnemyHealth) == 0x000600, "Member 'UBP_CreateCharacter_Accessibility_C::Option_EnemyHealth' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Option_MotionBlur) == 0x000608, "Member 'UBP_CreateCharacter_Accessibility_C::Option_MotionBlur' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Option_SingleClickToBuySell) == 0x000610, "Member 'UBP_CreateCharacter_Accessibility_C::Option_SingleClickToBuySell' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Option_SkillStaminaCost) == 0x000618, "Member 'UBP_CreateCharacter_Accessibility_C::Option_SkillStaminaCost' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Option_SprintMode) == 0x000620, "Member 'UBP_CreateCharacter_Accessibility_C::Option_SprintMode' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Option_SubtitleEnable) == 0x000628, "Member 'UBP_CreateCharacter_Accessibility_C::Option_SubtitleEnable' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Option_UserInterfaceScale) == 0x000630, "Member 'UBP_CreateCharacter_Accessibility_C::Option_UserInterfaceScale' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, Option_VibrationIntensity) == 0x000638, "Member 'UBP_CreateCharacter_Accessibility_C::Option_VibrationIntensity' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_Accessibility_C, ClickedOutside) == 0x000640, "Member 'UBP_CreateCharacter_Accessibility_C::ClickedOutside' has a wrong offset!");

}

