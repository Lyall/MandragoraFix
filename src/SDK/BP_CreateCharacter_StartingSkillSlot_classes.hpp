#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CreateCharacter_StartingSkillSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_CreateCharacter_StartingSkillSlot.BP_CreateCharacter_StartingSkillSlot_C
// 0x0068 (0x0330 - 0x02C8)
class UBP_CreateCharacter_StartingSkillSlot_C final : public UCreateCharacterSkillSlotWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HighlightAnim;                                     // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Bg;                                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ButtonFrame;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Focused;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Normal;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconImage;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             BPIcon;                                            // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnUpdate;                                          // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UBP_CreateCharacter_StartingSkillSlot_C* ItemReference)> OnFocus;                                           // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsHighlighted;                                     // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SetUnhighlighted(bool PlayAnim);
	void SetHighlighted(bool PlayAnim);
	void BPSetSlot(class UTexture2D* InIcon);
	void SetIcon(class UTexture2D* InIcon);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__BP_CreateCharacter_StartingSkillSlot_ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__BP_CreateCharacter_StartingSkillSlot_ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void ExecuteUbergraph_BP_CreateCharacter_StartingSkillSlot(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CreateCharacter_StartingSkillSlot_C">();
	}
	static class UBP_CreateCharacter_StartingSkillSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CreateCharacter_StartingSkillSlot_C>();
	}
};
static_assert(alignof(UBP_CreateCharacter_StartingSkillSlot_C) == 0x000008, "Wrong alignment on UBP_CreateCharacter_StartingSkillSlot_C");
static_assert(sizeof(UBP_CreateCharacter_StartingSkillSlot_C) == 0x000330, "Wrong size on UBP_CreateCharacter_StartingSkillSlot_C");
static_assert(offsetof(UBP_CreateCharacter_StartingSkillSlot_C, UberGraphFrame) == 0x0002C8, "Member 'UBP_CreateCharacter_StartingSkillSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_StartingSkillSlot_C, HighlightAnim) == 0x0002D0, "Member 'UBP_CreateCharacter_StartingSkillSlot_C::HighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_StartingSkillSlot_C, Bg) == 0x0002D8, "Member 'UBP_CreateCharacter_StartingSkillSlot_C::Bg' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_StartingSkillSlot_C, ButtonFrame) == 0x0002E0, "Member 'UBP_CreateCharacter_StartingSkillSlot_C::ButtonFrame' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_StartingSkillSlot_C, Frame_Focused) == 0x0002E8, "Member 'UBP_CreateCharacter_StartingSkillSlot_C::Frame_Focused' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_StartingSkillSlot_C, Frame_Normal) == 0x0002F0, "Member 'UBP_CreateCharacter_StartingSkillSlot_C::Frame_Normal' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_StartingSkillSlot_C, IconImage) == 0x0002F8, "Member 'UBP_CreateCharacter_StartingSkillSlot_C::IconImage' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_StartingSkillSlot_C, BPIcon) == 0x000300, "Member 'UBP_CreateCharacter_StartingSkillSlot_C::BPIcon' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_StartingSkillSlot_C, OnUpdate) == 0x000308, "Member 'UBP_CreateCharacter_StartingSkillSlot_C::OnUpdate' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_StartingSkillSlot_C, OnFocus) == 0x000318, "Member 'UBP_CreateCharacter_StartingSkillSlot_C::OnFocus' has a wrong offset!");
static_assert(offsetof(UBP_CreateCharacter_StartingSkillSlot_C, IsHighlighted) == 0x000328, "Member 'UBP_CreateCharacter_StartingSkillSlot_C::IsHighlighted' has a wrong offset!");

}

