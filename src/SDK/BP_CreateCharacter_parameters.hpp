#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CreateCharacter

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "man_structs.hpp"


namespace SDK::Params
{

// Function BP_CreateCharacter.BP_CreateCharacter_C.BP_SetFinalView
// 0x0058 (0x0058 - 0x0000)
struct BP_CreateCharacter_C_BP_SetFinalView final
{
public:
	bool                                          InFinalView;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_BP_SetFinalView) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_BP_SetFinalView");
static_assert(sizeof(BP_CreateCharacter_C_BP_SetFinalView) == 0x000058, "Wrong size on BP_CreateCharacter_C_BP_SetFinalView");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, InFinalView) == 0x000000, "Member 'BP_CreateCharacter_C_BP_SetFinalView::InFinalView' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_bool_Variable) == 0x000001, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_float_Variable) == 0x000004, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_float_Variable_1) == 0x000008, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_float_Variable_2) == 0x000010, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_float_Variable_3) == 0x000014, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_bool_Variable_2) == 0x000018, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_byte_Variable) == 0x000019, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_byte_Variable_1) == 0x00001A, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_bool_Variable_3) == 0x00001B, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_byte_Variable_2) == 0x00001C, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_byte_Variable_3) == 0x00001D, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_bool_Variable_4) == 0x00001E, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_byte_Variable_4) == 0x00001F, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_byte_Variable_5) == 0x000020, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_bool_Variable_5) == 0x000021, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_byte_Variable_6) == 0x000022, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, Temp_byte_Variable_7) == 0x000023, "Member 'BP_CreateCharacter_C_BP_SetFinalView::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000028, "Member 'BP_CreateCharacter_C_BP_SetFinalView::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, K2Node_Select_Default) == 0x000030, "Member 'BP_CreateCharacter_C_BP_SetFinalView::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, CallFunc_MakeVector2D_ReturnValue) == 0x000034, "Member 'BP_CreateCharacter_C_BP_SetFinalView::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, K2Node_Select_Default_1) == 0x00003C, "Member 'BP_CreateCharacter_C_BP_SetFinalView::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000040, "Member 'BP_CreateCharacter_C_BP_SetFinalView::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, CallFunc_MakeVector2D_ReturnValue_1) == 0x000048, "Member 'BP_CreateCharacter_C_BP_SetFinalView::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, K2Node_Select_Default_2) == 0x000050, "Member 'BP_CreateCharacter_C_BP_SetFinalView::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, K2Node_Select_Default_3) == 0x000051, "Member 'BP_CreateCharacter_C_BP_SetFinalView::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, K2Node_Select_Default_4) == 0x000052, "Member 'BP_CreateCharacter_C_BP_SetFinalView::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetFinalView, K2Node_Select_Default_5) == 0x000053, "Member 'BP_CreateCharacter_C_BP_SetFinalView::K2Node_Select_Default_5' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.BtnHotkeyRS_PressClicked
// 0x0003 (0x0003 - 0x0000)
struct BP_CreateCharacter_C_BtnHotkeyRS_PressClicked final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_BtnHotkeyRS_PressClicked) == 0x000001, "Wrong alignment on BP_CreateCharacter_C_BtnHotkeyRS_PressClicked");
static_assert(sizeof(BP_CreateCharacter_C_BtnHotkeyRS_PressClicked) == 0x000003, "Wrong size on BP_CreateCharacter_C_BtnHotkeyRS_PressClicked");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyRS_PressClicked, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_CreateCharacter_C_BtnHotkeyRS_PressClicked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyRS_PressClicked, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'BP_CreateCharacter_C_BtnHotkeyRS_PressClicked::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyRS_PressClicked, CallFunc_IsActive_ReturnValue) == 0x000002, "Member 'BP_CreateCharacter_C_BtnHotkeyRS_PressClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.SetSkillParams
// 0x0058 (0x0058 - 0x0000)
struct BP_CreateCharacter_C_SetSkillParams final
{
public:
	TSubclassOf<class UAbilityBase>               CallFunc_GetSkillClass_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   CallFunc_GetSkillDescription_ReturnValue;          // 0x0008(0x0018)()
	class FText                                   CallFunc_GetSkillName_ReturnValue;                 // 0x0020(0x0018)()
	class UTexture2D*                             CallFunc_GetSkillIcon_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetSkillName_ReturnValue_1;               // 0x0040(0x0018)()
};
static_assert(alignof(BP_CreateCharacter_C_SetSkillParams) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_SetSkillParams");
static_assert(sizeof(BP_CreateCharacter_C_SetSkillParams) == 0x000058, "Wrong size on BP_CreateCharacter_C_SetSkillParams");
static_assert(offsetof(BP_CreateCharacter_C_SetSkillParams, CallFunc_GetSkillClass_ReturnValue) == 0x000000, "Member 'BP_CreateCharacter_C_SetSkillParams::CallFunc_GetSkillClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetSkillParams, CallFunc_GetSkillDescription_ReturnValue) == 0x000008, "Member 'BP_CreateCharacter_C_SetSkillParams::CallFunc_GetSkillDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetSkillParams, CallFunc_GetSkillName_ReturnValue) == 0x000020, "Member 'BP_CreateCharacter_C_SetSkillParams::CallFunc_GetSkillName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetSkillParams, CallFunc_GetSkillIcon_ReturnValue) == 0x000038, "Member 'BP_CreateCharacter_C_SetSkillParams::CallFunc_GetSkillIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetSkillParams, CallFunc_GetSkillName_ReturnValue_1) == 0x000040, "Member 'BP_CreateCharacter_C_SetSkillParams::CallFunc_GetSkillName_ReturnValue_1' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.SetBars
// 0x0018 (0x0018 - 0x0000)
struct BP_CreateCharacter_C_SetBars final
{
public:
	float                                         CallFunc_GetMobility_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSustain_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetToughness_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRange_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMagicalDamage_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPhysicalDamage_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_SetBars) == 0x000004, "Wrong alignment on BP_CreateCharacter_C_SetBars");
static_assert(sizeof(BP_CreateCharacter_C_SetBars) == 0x000018, "Wrong size on BP_CreateCharacter_C_SetBars");
static_assert(offsetof(BP_CreateCharacter_C_SetBars, CallFunc_GetMobility_ReturnValue) == 0x000000, "Member 'BP_CreateCharacter_C_SetBars::CallFunc_GetMobility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetBars, CallFunc_GetSustain_ReturnValue) == 0x000004, "Member 'BP_CreateCharacter_C_SetBars::CallFunc_GetSustain_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetBars, CallFunc_GetToughness_ReturnValue) == 0x000008, "Member 'BP_CreateCharacter_C_SetBars::CallFunc_GetToughness_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetBars, CallFunc_GetRange_ReturnValue) == 0x00000C, "Member 'BP_CreateCharacter_C_SetBars::CallFunc_GetRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetBars, CallFunc_GetMagicalDamage_ReturnValue) == 0x000010, "Member 'BP_CreateCharacter_C_SetBars::CallFunc_GetMagicalDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetBars, CallFunc_GetPhysicalDamage_ReturnValue) == 0x000014, "Member 'BP_CreateCharacter_C_SetBars::CallFunc_GetPhysicalDamage_ReturnValue' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.HideStartingSkillTooltip
// 0x0010 (0x0010 - 0x0000)
struct BP_CreateCharacter_C_HideStartingSkillTooltip final
{
public:
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_HideStartingSkillTooltip) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_HideStartingSkillTooltip");
static_assert(sizeof(BP_CreateCharacter_C_HideStartingSkillTooltip) == 0x000010, "Wrong size on BP_CreateCharacter_C_HideStartingSkillTooltip");
static_assert(offsetof(BP_CreateCharacter_C_HideStartingSkillTooltip, CallFunc_GetRenderOpacity_ReturnValue) == 0x000000, "Member 'BP_CreateCharacter_C_HideStartingSkillTooltip::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_HideStartingSkillTooltip, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_CreateCharacter_C_HideStartingSkillTooltip::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.ShowStartingSkillTooltip
// 0x0010 (0x0010 - 0x0000)
struct BP_CreateCharacter_C_ShowStartingSkillTooltip final
{
public:
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_ShowStartingSkillTooltip) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_ShowStartingSkillTooltip");
static_assert(sizeof(BP_CreateCharacter_C_ShowStartingSkillTooltip) == 0x000010, "Wrong size on BP_CreateCharacter_C_ShowStartingSkillTooltip");
static_assert(offsetof(BP_CreateCharacter_C_ShowStartingSkillTooltip, CallFunc_GetRenderOpacity_ReturnValue) == 0x000000, "Member 'BP_CreateCharacter_C_ShowStartingSkillTooltip::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ShowStartingSkillTooltip, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_CreateCharacter_C_ShowStartingSkillTooltip::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.PrevTextSelectorType
// 0x0020 (0x0020 - 0x0000)
struct BP_CreateCharacter_C_PrevTextSelectorType final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CreateCharacter_TextSelector_C*     K2Node_DynamicCast_AsBP_Create_Character_Text_Selector; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_PrevTextSelectorType) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_PrevTextSelectorType");
static_assert(sizeof(BP_CreateCharacter_C_PrevTextSelectorType) == 0x000020, "Wrong size on BP_CreateCharacter_C_PrevTextSelectorType");
static_assert(offsetof(BP_CreateCharacter_C_PrevTextSelectorType, Navigation_0) == 0x000000, "Member 'BP_CreateCharacter_C_PrevTextSelectorType::Navigation_0' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_PrevTextSelectorType, ReturnValue) == 0x000008, "Member 'BP_CreateCharacter_C_PrevTextSelectorType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_PrevTextSelectorType, K2Node_DynamicCast_AsBP_Create_Character_Text_Selector) == 0x000010, "Member 'BP_CreateCharacter_C_PrevTextSelectorType::K2Node_DynamicCast_AsBP_Create_Character_Text_Selector' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_PrevTextSelectorType, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CreateCharacter_C_PrevTextSelectorType::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.NextTextSelectorType
// 0x0020 (0x0020 - 0x0000)
struct BP_CreateCharacter_C_NextTextSelectorType final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CreateCharacter_TextSelector_C*     K2Node_DynamicCast_AsBP_Create_Character_Text_Selector; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_NextTextSelectorType) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_NextTextSelectorType");
static_assert(sizeof(BP_CreateCharacter_C_NextTextSelectorType) == 0x000020, "Wrong size on BP_CreateCharacter_C_NextTextSelectorType");
static_assert(offsetof(BP_CreateCharacter_C_NextTextSelectorType, Navigation_0) == 0x000000, "Member 'BP_CreateCharacter_C_NextTextSelectorType::Navigation_0' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_NextTextSelectorType, ReturnValue) == 0x000008, "Member 'BP_CreateCharacter_C_NextTextSelectorType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_NextTextSelectorType, K2Node_DynamicCast_AsBP_Create_Character_Text_Selector) == 0x000010, "Member 'BP_CreateCharacter_C_NextTextSelectorType::K2Node_DynamicCast_AsBP_Create_Character_Text_Selector' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_NextTextSelectorType, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CreateCharacter_C_NextTextSelectorType::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.BtnHotkeyXClicked
// 0x0010 (0x0010 - 0x0000)
struct BP_CreateCharacter_C_BtnHotkeyXClicked final
{
public:
	class UManUserWidgetBase*                     CallFunc_ShowManUserWidgetByZorder_ReturnValue;    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_BtnHotkeyXClicked) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_BtnHotkeyXClicked");
static_assert(sizeof(BP_CreateCharacter_C_BtnHotkeyXClicked) == 0x000010, "Wrong size on BP_CreateCharacter_C_BtnHotkeyXClicked");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyXClicked, CallFunc_ShowManUserWidgetByZorder_ReturnValue) == 0x000000, "Member 'BP_CreateCharacter_C_BtnHotkeyXClicked::CallFunc_ShowManUserWidgetByZorder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyXClicked, CallFunc_IsActive_ReturnValue) == 0x000008, "Member 'BP_CreateCharacter_C_BtnHotkeyXClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.BtnHotkeyYClicked
// 0x0008 (0x0008 - 0x0000)
struct BP_CreateCharacter_C_BtnHotkeyYClicked final
{
public:
	class UManUserWidgetBase*                     CallFunc_ShowManUserWidgetByZorder_ReturnValue;    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_BtnHotkeyYClicked) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_BtnHotkeyYClicked");
static_assert(sizeof(BP_CreateCharacter_C_BtnHotkeyYClicked) == 0x000008, "Wrong size on BP_CreateCharacter_C_BtnHotkeyYClicked");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyYClicked, CallFunc_ShowManUserWidgetByZorder_ReturnValue) == 0x000000, "Member 'BP_CreateCharacter_C_BtnHotkeyYClicked::CallFunc_ShowManUserWidgetByZorder_ReturnValue' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.BindListeners
// 0x0060 (0x0060 - 0x0000)
struct BP_CreateCharacter_C_BindListeners final
{
public:
	TDelegate<void(int32 SelectedIndex, bool bChangeByUser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SelectedIndex, bool bChangeByUser)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SelectedIndex, bool ChangeByUser)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SelectedIndex, bool bChangeByUser)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SelectedIndex, bool ChangeByUser)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SelectedIndex, bool bChangeByUser)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_BindListeners) == 0x000004, "Wrong alignment on BP_CreateCharacter_C_BindListeners");
static_assert(sizeof(BP_CreateCharacter_C_BindListeners) == 0x000060, "Wrong size on BP_CreateCharacter_C_BindListeners");
static_assert(offsetof(BP_CreateCharacter_C_BindListeners, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_CreateCharacter_C_BindListeners::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BindListeners, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_CreateCharacter_C_BindListeners::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BindListeners, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'BP_CreateCharacter_C_BindListeners::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BindListeners, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'BP_CreateCharacter_C_BindListeners::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BindListeners, K2Node_CreateDelegate_OutputDelegate_4) == 0x000040, "Member 'BP_CreateCharacter_C_BindListeners::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BindListeners, K2Node_CreateDelegate_OutputDelegate_5) == 0x000050, "Member 'BP_CreateCharacter_C_BindListeners::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.BP_SetCustomizeView
// 0x00B0 (0x00B0 - 0x0000)
struct BP_CreateCharacter_C_BP_SetCustomizeView final
{
public:
	bool                                          InCustomizeView;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0078(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0090(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_BP_SetCustomizeView) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_BP_SetCustomizeView");
static_assert(sizeof(BP_CreateCharacter_C_BP_SetCustomizeView) == 0x0000B0, "Wrong size on BP_CreateCharacter_C_BP_SetCustomizeView");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, InCustomizeView) == 0x000000, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::InCustomizeView' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, Temp_bool_Variable) == 0x000001, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, Temp_text_Variable) == 0x000008, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, Temp_text_Variable_1) == 0x000020, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, Temp_bool_Variable_1) == 0x000038, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, Temp_text_Variable_2) == 0x000040, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, Temp_text_Variable_3) == 0x000058, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, Temp_bool_Variable_2) == 0x000070, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, Temp_byte_Variable) == 0x000071, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, Temp_byte_Variable_1) == 0x000072, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, Temp_bool_Variable_3) == 0x000073, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, Temp_byte_Variable_2) == 0x000074, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, Temp_byte_Variable_3) == 0x000075, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, K2Node_Select_Default) == 0x000078, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, K2Node_Select_Default_1) == 0x000090, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, K2Node_Select_Default_2) == 0x0000A8, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BP_SetCustomizeView, K2Node_Select_Default_3) == 0x0000A9, "Member 'BP_CreateCharacter_C_BP_SetCustomizeView::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.PrevIconSelectorType
// 0x0020 (0x0020 - 0x0000)
struct BP_CreateCharacter_C_PrevIconSelectorType final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CreateCharacter_IconSelector_C*     K2Node_DynamicCast_AsBP_Create_Character_Icon_Selector; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_PrevIconSelectorType) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_PrevIconSelectorType");
static_assert(sizeof(BP_CreateCharacter_C_PrevIconSelectorType) == 0x000020, "Wrong size on BP_CreateCharacter_C_PrevIconSelectorType");
static_assert(offsetof(BP_CreateCharacter_C_PrevIconSelectorType, Navigation_0) == 0x000000, "Member 'BP_CreateCharacter_C_PrevIconSelectorType::Navigation_0' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_PrevIconSelectorType, ReturnValue) == 0x000008, "Member 'BP_CreateCharacter_C_PrevIconSelectorType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_PrevIconSelectorType, K2Node_DynamicCast_AsBP_Create_Character_Icon_Selector) == 0x000010, "Member 'BP_CreateCharacter_C_PrevIconSelectorType::K2Node_DynamicCast_AsBP_Create_Character_Icon_Selector' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_PrevIconSelectorType, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CreateCharacter_C_PrevIconSelectorType::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.NextIconSelectorType
// 0x0020 (0x0020 - 0x0000)
struct BP_CreateCharacter_C_NextIconSelectorType final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CreateCharacter_IconSelector_C*     K2Node_DynamicCast_AsBP_Create_Character_Icon_Selector; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_NextIconSelectorType) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_NextIconSelectorType");
static_assert(sizeof(BP_CreateCharacter_C_NextIconSelectorType) == 0x000020, "Wrong size on BP_CreateCharacter_C_NextIconSelectorType");
static_assert(offsetof(BP_CreateCharacter_C_NextIconSelectorType, Navigation_0) == 0x000000, "Member 'BP_CreateCharacter_C_NextIconSelectorType::Navigation_0' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_NextIconSelectorType, ReturnValue) == 0x000008, "Member 'BP_CreateCharacter_C_NextIconSelectorType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_NextIconSelectorType, K2Node_DynamicCast_AsBP_Create_Character_Icon_Selector) == 0x000010, "Member 'BP_CreateCharacter_C_NextIconSelectorType::K2Node_DynamicCast_AsBP_Create_Character_Icon_Selector' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_NextIconSelectorType, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CreateCharacter_C_NextIconSelectorType::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.ToggleGender
// 0x0002 (0x0002 - 0x0000)
struct BP_CreateCharacter_C_ToggleGender final
{
public:
	bool                                          InIsMale;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_ToggleGender) == 0x000001, "Wrong alignment on BP_CreateCharacter_C_ToggleGender");
static_assert(sizeof(BP_CreateCharacter_C_ToggleGender) == 0x000002, "Wrong size on BP_CreateCharacter_C_ToggleGender");
static_assert(offsetof(BP_CreateCharacter_C_ToggleGender, InIsMale) == 0x000000, "Member 'BP_CreateCharacter_C_ToggleGender::InIsMale' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ToggleGender, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_CreateCharacter_C_ToggleGender::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.BtnHotkeyRTClicked
// 0x0005 (0x0005 - 0x0000)
struct BP_CreateCharacter_C_BtnHotkeyRTClicked final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_BtnHotkeyRTClicked) == 0x000001, "Wrong alignment on BP_CreateCharacter_C_BtnHotkeyRTClicked");
static_assert(sizeof(BP_CreateCharacter_C_BtnHotkeyRTClicked) == 0x000005, "Wrong size on BP_CreateCharacter_C_BtnHotkeyRTClicked");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyRTClicked, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_CreateCharacter_C_BtnHotkeyRTClicked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyRTClicked, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'BP_CreateCharacter_C_BtnHotkeyRTClicked::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyRTClicked, CallFunc_GetIsEnabled_ReturnValue) == 0x000002, "Member 'BP_CreateCharacter_C_BtnHotkeyRTClicked::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyRTClicked, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_CreateCharacter_C_BtnHotkeyRTClicked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyRTClicked, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'BP_CreateCharacter_C_BtnHotkeyRTClicked::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.BtnHotkeyLTClicked
// 0x0005 (0x0005 - 0x0000)
struct BP_CreateCharacter_C_BtnHotkeyLTClicked final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_BtnHotkeyLTClicked) == 0x000001, "Wrong alignment on BP_CreateCharacter_C_BtnHotkeyLTClicked");
static_assert(sizeof(BP_CreateCharacter_C_BtnHotkeyLTClicked) == 0x000005, "Wrong size on BP_CreateCharacter_C_BtnHotkeyLTClicked");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyLTClicked, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_CreateCharacter_C_BtnHotkeyLTClicked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyLTClicked, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'BP_CreateCharacter_C_BtnHotkeyLTClicked::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyLTClicked, CallFunc_GetIsEnabled_ReturnValue) == 0x000002, "Member 'BP_CreateCharacter_C_BtnHotkeyLTClicked::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyLTClicked, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_CreateCharacter_C_BtnHotkeyLTClicked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyLTClicked, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'BP_CreateCharacter_C_BtnHotkeyLTClicked::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.BtnHotkeyRBClicked
// 0x0018 (0x0018 - 0x0000)
struct BP_CreateCharacter_C_BtnHotkeyRBClicked final
{
public:
	bool                                          CallFunc_IsValidCharacterName_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UManUserWidgetBase*                     CallFunc_ShowManUserWidgetByZorder_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_BtnHotkeyRBClicked) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_BtnHotkeyRBClicked");
static_assert(sizeof(BP_CreateCharacter_C_BtnHotkeyRBClicked) == 0x000018, "Wrong size on BP_CreateCharacter_C_BtnHotkeyRBClicked");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyRBClicked, CallFunc_IsValidCharacterName_ReturnValue) == 0x000000, "Member 'BP_CreateCharacter_C_BtnHotkeyRBClicked::CallFunc_IsValidCharacterName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyRBClicked, CallFunc_ShowManUserWidgetByZorder_ReturnValue) == 0x000008, "Member 'BP_CreateCharacter_C_BtnHotkeyRBClicked::CallFunc_ShowManUserWidgetByZorder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_BtnHotkeyRBClicked, CallFunc_IsActive_ReturnValue) == 0x000010, "Member 'BP_CreateCharacter_C_BtnHotkeyRBClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.SetAttributes
// 0x0030 (0x0030 - 0x0000)
struct BP_CreateCharacter_C_SetAttributes final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetComboPoint_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEnergy_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRage_ReturnValue;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEquipLoad_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStamina_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_SetAttributes) == 0x000004, "Wrong alignment on BP_CreateCharacter_C_SetAttributes");
static_assert(sizeof(BP_CreateCharacter_C_SetAttributes) == 0x000030, "Wrong size on BP_CreateCharacter_C_SetAttributes");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, Temp_bool_Variable) == 0x000000, "Member 'BP_CreateCharacter_C_SetAttributes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, Temp_byte_Variable) == 0x000001, "Member 'BP_CreateCharacter_C_SetAttributes::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, Temp_byte_Variable_1) == 0x000002, "Member 'BP_CreateCharacter_C_SetAttributes::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, Temp_bool_Variable_1) == 0x000003, "Member 'BP_CreateCharacter_C_SetAttributes::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, Temp_byte_Variable_2) == 0x000004, "Member 'BP_CreateCharacter_C_SetAttributes::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, Temp_byte_Variable_3) == 0x000005, "Member 'BP_CreateCharacter_C_SetAttributes::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, Temp_bool_Variable_2) == 0x000006, "Member 'BP_CreateCharacter_C_SetAttributes::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, Temp_byte_Variable_4) == 0x000007, "Member 'BP_CreateCharacter_C_SetAttributes::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, Temp_byte_Variable_5) == 0x000008, "Member 'BP_CreateCharacter_C_SetAttributes::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, CallFunc_GetComboPoint_ReturnValue) == 0x00000C, "Member 'BP_CreateCharacter_C_SetAttributes::CallFunc_GetComboPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_CreateCharacter_C_SetAttributes::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, CallFunc_GetEnergy_ReturnValue) == 0x000014, "Member 'BP_CreateCharacter_C_SetAttributes::CallFunc_GetEnergy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, K2Node_Select_Default) == 0x000018, "Member 'BP_CreateCharacter_C_SetAttributes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000019, "Member 'BP_CreateCharacter_C_SetAttributes::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, K2Node_Select_Default_1) == 0x00001A, "Member 'BP_CreateCharacter_C_SetAttributes::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, CallFunc_GetRage_ReturnValue) == 0x00001C, "Member 'BP_CreateCharacter_C_SetAttributes::CallFunc_GetRage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000020, "Member 'BP_CreateCharacter_C_SetAttributes::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, K2Node_Select_Default_2) == 0x000021, "Member 'BP_CreateCharacter_C_SetAttributes::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, CallFunc_GetEquipLoad_ReturnValue) == 0x000024, "Member 'BP_CreateCharacter_C_SetAttributes::CallFunc_GetEquipLoad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, CallFunc_GetStamina_ReturnValue) == 0x000028, "Member 'BP_CreateCharacter_C_SetAttributes::CallFunc_GetStamina_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetAttributes, CallFunc_GetHealth_ReturnValue) == 0x00002C, "Member 'BP_CreateCharacter_C_SetAttributes::CallFunc_GetHealth_ReturnValue' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.SetClassInfo
// 0x00D0 (0x00D0 - 0x0000)
struct BP_CreateCharacter_C_SetClassInfo final
{
public:
	bool                                          ChangeClass;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetSkinColorTexts_ReturnValue;            // 0x0008(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_GetHairColorTexts_ReturnValue;            // 0x0018(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_GetTattooTexts_ReturnValue;               // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetDefaultVoiceIndex_ReturnValue;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetVoiceTexts_ReturnValue;                // 0x0040(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_GetHairStyleTexts_ReturnValue;            // 0x0050(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_GetFaceTexts_ReturnValue;                 // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetCharacterClassName_ReturnValue;        // 0x0070(0x0018)()
	int32                                         CallFunc_GetDefaultTattooIndex_ReturnValue;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDefaultHairColorIndex_ReturnValue;     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDefaultSkinColorIndex_ReturnValue;     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDefaultFaceIndex_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture2D*>                     CallFunc_GetHairColorIcons_ReturnValue;            // 0x0098(0x0010)(ReferenceParm)
	TArray<class UTexture2D*>                     CallFunc_GetSkinColorIcons_ReturnValue;            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetCharacterDescription_ReturnValue;      // 0x00B8(0x0018)()
};
static_assert(alignof(BP_CreateCharacter_C_SetClassInfo) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_SetClassInfo");
static_assert(sizeof(BP_CreateCharacter_C_SetClassInfo) == 0x0000D0, "Wrong size on BP_CreateCharacter_C_SetClassInfo");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, ChangeClass) == 0x000000, "Member 'BP_CreateCharacter_C_SetClassInfo::ChangeClass' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetSkinColorTexts_ReturnValue) == 0x000008, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetSkinColorTexts_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetHairColorTexts_ReturnValue) == 0x000018, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetHairColorTexts_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetTattooTexts_ReturnValue) == 0x000028, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetTattooTexts_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetDefaultVoiceIndex_ReturnValue) == 0x000038, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetDefaultVoiceIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetVoiceTexts_ReturnValue) == 0x000040, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetVoiceTexts_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetHairStyleTexts_ReturnValue) == 0x000050, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetHairStyleTexts_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetFaceTexts_ReturnValue) == 0x000060, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetFaceTexts_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetCharacterClassName_ReturnValue) == 0x000070, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetCharacterClassName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetDefaultTattooIndex_ReturnValue) == 0x000088, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetDefaultTattooIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetDefaultHairColorIndex_ReturnValue) == 0x00008C, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetDefaultHairColorIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetDefaultSkinColorIndex_ReturnValue) == 0x000090, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetDefaultSkinColorIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetDefaultFaceIndex_ReturnValue) == 0x000094, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetDefaultFaceIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetHairColorIcons_ReturnValue) == 0x000098, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetHairColorIcons_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetSkinColorIcons_ReturnValue) == 0x0000A8, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetSkinColorIcons_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_SetClassInfo, CallFunc_GetCharacterDescription_ReturnValue) == 0x0000B8, "Member 'BP_CreateCharacter_C_SetClassInfo::CallFunc_GetCharacterDescription_ReturnValue' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_CreateCharacter_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_Tick) == 0x000004, "Wrong alignment on BP_CreateCharacter_C_Tick");
static_assert(sizeof(BP_CreateCharacter_C_Tick) == 0x00003C, "Wrong size on BP_CreateCharacter_C_Tick");
static_assert(offsetof(BP_CreateCharacter_C_Tick, MyGeometry) == 0x000000, "Member 'BP_CreateCharacter_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_CreateCharacter_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_CreateCharacter_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_OnShow) == 0x000004, "Wrong alignment on BP_CreateCharacter_C_OnShow");
static_assert(sizeof(BP_CreateCharacter_C_OnShow) == 0x000004, "Wrong size on BP_CreateCharacter_C_OnShow");
static_assert(offsetof(BP_CreateCharacter_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_CreateCharacter_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_CreateCharacter_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_OnHide) == 0x000004, "Wrong alignment on BP_CreateCharacter_C_OnHide");
static_assert(sizeof(BP_CreateCharacter_C_OnHide) == 0x000004, "Wrong size on BP_CreateCharacter_C_OnHide");
static_assert(offsetof(BP_CreateCharacter_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_CreateCharacter_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.RefreshCharacterParams
// 0x0001 (0x0001 - 0x0000)
struct BP_CreateCharacter_C_RefreshCharacterParams final
{
public:
	bool                                          bChangeClass;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_RefreshCharacterParams) == 0x000001, "Wrong alignment on BP_CreateCharacter_C_RefreshCharacterParams");
static_assert(sizeof(BP_CreateCharacter_C_RefreshCharacterParams) == 0x000001, "Wrong size on BP_CreateCharacter_C_RefreshCharacterParams");
static_assert(offsetof(BP_CreateCharacter_C_RefreshCharacterParams, bChangeClass) == 0x000000, "Member 'BP_CreateCharacter_C_RefreshCharacterParams::bChangeClass' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnChangeFaceIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_CreateCharacter_C_OnChangeFaceIndex final
{
public:
	int32                                         InFaceIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_OnChangeFaceIndex) == 0x000004, "Wrong alignment on BP_CreateCharacter_C_OnChangeFaceIndex");
static_assert(sizeof(BP_CreateCharacter_C_OnChangeFaceIndex) == 0x000004, "Wrong size on BP_CreateCharacter_C_OnChangeFaceIndex");
static_assert(offsetof(BP_CreateCharacter_C_OnChangeFaceIndex, InFaceIndex) == 0x000000, "Member 'BP_CreateCharacter_C_OnChangeFaceIndex::InFaceIndex' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnChangeSkinColorIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_CreateCharacter_C_OnChangeSkinColorIndex final
{
public:
	int32                                         InSkinColorIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_OnChangeSkinColorIndex) == 0x000004, "Wrong alignment on BP_CreateCharacter_C_OnChangeSkinColorIndex");
static_assert(sizeof(BP_CreateCharacter_C_OnChangeSkinColorIndex) == 0x000004, "Wrong size on BP_CreateCharacter_C_OnChangeSkinColorIndex");
static_assert(offsetof(BP_CreateCharacter_C_OnChangeSkinColorIndex, InSkinColorIndex) == 0x000000, "Member 'BP_CreateCharacter_C_OnChangeSkinColorIndex::InSkinColorIndex' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnChangeHairStyleIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_CreateCharacter_C_OnChangeHairStyleIndex final
{
public:
	int32                                         InHairStyleIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_OnChangeHairStyleIndex) == 0x000004, "Wrong alignment on BP_CreateCharacter_C_OnChangeHairStyleIndex");
static_assert(sizeof(BP_CreateCharacter_C_OnChangeHairStyleIndex) == 0x000004, "Wrong size on BP_CreateCharacter_C_OnChangeHairStyleIndex");
static_assert(offsetof(BP_CreateCharacter_C_OnChangeHairStyleIndex, InHairStyleIndex) == 0x000000, "Member 'BP_CreateCharacter_C_OnChangeHairStyleIndex::InHairStyleIndex' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnChangeHairColorIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_CreateCharacter_C_OnChangeHairColorIndex final
{
public:
	int32                                         InHairColorIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_OnChangeHairColorIndex) == 0x000004, "Wrong alignment on BP_CreateCharacter_C_OnChangeHairColorIndex");
static_assert(sizeof(BP_CreateCharacter_C_OnChangeHairColorIndex) == 0x000004, "Wrong size on BP_CreateCharacter_C_OnChangeHairColorIndex");
static_assert(offsetof(BP_CreateCharacter_C_OnChangeHairColorIndex, InHairColorIndex) == 0x000000, "Member 'BP_CreateCharacter_C_OnChangeHairColorIndex::InHairColorIndex' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnChangeTattooIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_CreateCharacter_C_OnChangeTattooIndex final
{
public:
	int32                                         InTattooIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_OnChangeTattooIndex) == 0x000004, "Wrong alignment on BP_CreateCharacter_C_OnChangeTattooIndex");
static_assert(sizeof(BP_CreateCharacter_C_OnChangeTattooIndex) == 0x000004, "Wrong size on BP_CreateCharacter_C_OnChangeTattooIndex");
static_assert(offsetof(BP_CreateCharacter_C_OnChangeTattooIndex, InTattooIndex) == 0x000000, "Member 'BP_CreateCharacter_C_OnChangeTattooIndex::InTattooIndex' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnSetCustomizeView
// 0x0001 (0x0001 - 0x0000)
struct BP_CreateCharacter_C_OnSetCustomizeView final
{
public:
	bool                                          bInCustomizeView;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_OnSetCustomizeView) == 0x000001, "Wrong alignment on BP_CreateCharacter_C_OnSetCustomizeView");
static_assert(sizeof(BP_CreateCharacter_C_OnSetCustomizeView) == 0x000001, "Wrong size on BP_CreateCharacter_C_OnSetCustomizeView");
static_assert(offsetof(BP_CreateCharacter_C_OnSetCustomizeView, bInCustomizeView) == 0x000000, "Member 'BP_CreateCharacter_C_OnSetCustomizeView::bInCustomizeView' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnSetCharacterName
// 0x0018 (0x0018 - 0x0000)
struct BP_CreateCharacter_C_OnSetCharacterName final
{
public:
	class FText                                   InCharacterName;                                   // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CreateCharacter_C_OnSetCharacterName) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_OnSetCharacterName");
static_assert(sizeof(BP_CreateCharacter_C_OnSetCharacterName) == 0x000018, "Wrong size on BP_CreateCharacter_C_OnSetCharacterName");
static_assert(offsetof(BP_CreateCharacter_C_OnSetCharacterName, InCharacterName) == 0x000000, "Member 'BP_CreateCharacter_C_OnSetCharacterName::InCharacterName' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnChangeVoiceIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_CreateCharacter_C_OnChangeVoiceIndex final
{
public:
	int32                                         InVoiceIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CreateCharacter_C_OnChangeVoiceIndex) == 0x000004, "Wrong alignment on BP_CreateCharacter_C_OnChangeVoiceIndex");
static_assert(sizeof(BP_CreateCharacter_C_OnChangeVoiceIndex) == 0x000004, "Wrong size on BP_CreateCharacter_C_OnChangeVoiceIndex");
static_assert(offsetof(BP_CreateCharacter_C_OnChangeVoiceIndex, InVoiceIndex) == 0x000000, "Member 'BP_CreateCharacter_C_OnChangeVoiceIndex::InVoiceIndex' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnChangeGender
// 0x0001 (0x0001 - 0x0000)
struct BP_CreateCharacter_C_OnChangeGender final
{
public:
	bool                                          bInMale;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_OnChangeGender) == 0x000001, "Wrong alignment on BP_CreateCharacter_C_OnChangeGender");
static_assert(sizeof(BP_CreateCharacter_C_OnChangeGender) == 0x000001, "Wrong size on BP_CreateCharacter_C_OnChangeGender");
static_assert(offsetof(BP_CreateCharacter_C_OnChangeGender, bInMale) == 0x000000, "Member 'BP_CreateCharacter_C_OnChangeGender::bInMale' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnShowSkillTooltipByMouse
// 0x0001 (0x0001 - 0x0000)
struct BP_CreateCharacter_C_OnShowSkillTooltipByMouse final
{
public:
	bool                                          bInVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_OnShowSkillTooltipByMouse) == 0x000001, "Wrong alignment on BP_CreateCharacter_C_OnShowSkillTooltipByMouse");
static_assert(sizeof(BP_CreateCharacter_C_OnShowSkillTooltipByMouse) == 0x000001, "Wrong size on BP_CreateCharacter_C_OnShowSkillTooltipByMouse");
static_assert(offsetof(BP_CreateCharacter_C_OnShowSkillTooltipByMouse, bInVisible) == 0x000000, "Member 'BP_CreateCharacter_C_OnShowSkillTooltipByMouse::bInVisible' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.OnSetFinalView
// 0x0001 (0x0001 - 0x0000)
struct BP_CreateCharacter_C_OnSetFinalView final
{
public:
	bool                                          bInFinalView;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_OnSetFinalView) == 0x000001, "Wrong alignment on BP_CreateCharacter_C_OnSetFinalView");
static_assert(sizeof(BP_CreateCharacter_C_OnSetFinalView) == 0x000001, "Wrong size on BP_CreateCharacter_C_OnSetFinalView");
static_assert(offsetof(BP_CreateCharacter_C_OnSetFinalView, bInFinalView) == 0x000000, "Member 'BP_CreateCharacter_C_OnSetFinalView::bInFinalView' has a wrong offset!");

// Function BP_CreateCharacter.BP_CreateCharacter_C.ExecuteUbergraph_BP_CreateCharacter
// 0x0188 (0x0188 - 0x0000)
struct BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0028(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bChangeClass;                         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InFaceIndex;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InSkinColorIndex;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InHairStyleIndex;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InHairColorIndex;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InTattooIndex;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInCustomizeView;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InCharacterName;                      // 0x00A8(0x0018)(ConstParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00D8(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0100(0x0028)()
	class FText                                   Temp_text_Variable;                                // 0x0128(0x0018)()
	int32                                         K2Node_Event_InVoiceIndex;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDemoMode                                     CallFunc_GetDemoMode_ReturnValue;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_147[0x1];                                      // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0148(0x0018)()
	bool                                          K2Node_Event_bInMale;                              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInVisible;                           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDemoMode                                     CallFunc_GetDemoMode_ReturnValue_1;                // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInFinalView;                         // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter) == 0x000008, "Wrong alignment on BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter");
static_assert(sizeof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter) == 0x000188, "Wrong size on BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, EntryPoint) == 0x000000, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, Temp_bool_Variable) == 0x000004, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, Temp_struct_Variable) == 0x000008, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, Temp_struct_Variable_1) == 0x000018, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_MyGeometry) == 0x000028, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_InDeltaTime) == 0x000060, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_AnimDuration_1) == 0x000064, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x000068, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_AnimDuration) == 0x00006C, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_PlayAnimation_ReturnValue) == 0x000070, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000078, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_PlayAnimation_ReturnValue_1) == 0x000080, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_bChangeClass) == 0x000088, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_bChangeClass' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_InFaceIndex) == 0x00008C, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_InFaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_InSkinColorIndex) == 0x000090, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_InSkinColorIndex' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_InHairStyleIndex) == 0x000094, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_InHairStyleIndex' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_InHairColorIndex) == 0x000098, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_InHairColorIndex' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_InTattooIndex) == 0x00009C, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_InTattooIndex' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_bInCustomizeView) == 0x0000A0, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_bInCustomizeView' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_InCharacterName) == 0x0000A8, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_InCharacterName' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_TextIsEmpty_ReturnValue) == 0x0000C0, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Select_Default) == 0x0000C4, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_MakeStruct_SlateColor) == 0x0000D8, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_MakeStruct_SlateColor_1) == 0x000100, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, Temp_text_Variable) == 0x000128, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_InVoiceIndex) == 0x000140, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_InVoiceIndex' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_GetDemoMode_ReturnValue) == 0x000144, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_GetDemoMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, Temp_bool_Variable_1) == 0x000145, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000146, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Select_Default_1) == 0x000148, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_bInMale) == 0x000160, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_bInMale' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000164, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x000168, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_PlayAnimation_ReturnValue_2) == 0x000170, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_PlayAnimation_ReturnValue_3) == 0x000178, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_bInVisible) == 0x000180, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_bInVisible' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_GetDemoMode_ReturnValue_1) == 0x000181, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_GetDemoMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000182, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter, K2Node_Event_bInFinalView) == 0x000183, "Member 'BP_CreateCharacter_C_ExecuteUbergraph_BP_CreateCharacter::K2Node_Event_bInFinalView' has a wrong offset!");

}

