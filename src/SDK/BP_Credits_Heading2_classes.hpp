#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Credits_Heading2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Credits_Heading2.BP_Credits_Heading2_C
// 0x0038 (0x0298 - 0x0260)
class UBP_Credits_Heading2_C final : public UCreditsObjectUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Heading2;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   HeadingText;                                       // 0x0278(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          IsSmallScreen;                                     // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_Credits_Heading2(int32 EntryPoint);
	void OnSetText(const class FText& InLeftText, const class FText& InCenterText, const class FText& InRightText);
	void PreConstruct(bool IsDesignTime);
	void SetTexts(const class FText& InHeading2);
	void ToggleSmallScreen(bool InIsSmallScreen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Credits_Heading2_C">();
	}
	static class UBP_Credits_Heading2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Credits_Heading2_C>();
	}
};
static_assert(alignof(UBP_Credits_Heading2_C) == 0x000008, "Wrong alignment on UBP_Credits_Heading2_C");
static_assert(sizeof(UBP_Credits_Heading2_C) == 0x000298, "Wrong size on UBP_Credits_Heading2_C");
static_assert(offsetof(UBP_Credits_Heading2_C, UberGraphFrame) == 0x000260, "Member 'UBP_Credits_Heading2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Credits_Heading2_C, Heading2) == 0x000268, "Member 'UBP_Credits_Heading2_C::Heading2' has a wrong offset!");
static_assert(offsetof(UBP_Credits_Heading2_C, SizeBox_0) == 0x000270, "Member 'UBP_Credits_Heading2_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UBP_Credits_Heading2_C, HeadingText) == 0x000278, "Member 'UBP_Credits_Heading2_C::HeadingText' has a wrong offset!");
static_assert(offsetof(UBP_Credits_Heading2_C, IsSmallScreen) == 0x000290, "Member 'UBP_Credits_Heading2_C::IsSmallScreen' has a wrong offset!");

}

