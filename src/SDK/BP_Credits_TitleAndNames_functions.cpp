#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Credits_TitleAndNames

#include "Basic.hpp"

#include "BP_Credits_TitleAndNames_classes.hpp"
#include "BP_Credits_TitleAndNames_parameters.hpp"


namespace SDK
{

// Function BP_Credits_TitleAndNames.BP_Credits_TitleAndNames_C.ExecuteUbergraph_BP_Credits_TitleAndNames
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Credits_TitleAndNames_C::ExecuteUbergraph_BP_Credits_TitleAndNames(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Credits_TitleAndNames_C", "ExecuteUbergraph_BP_Credits_TitleAndNames");

	Params::BP_Credits_TitleAndNames_C_ExecuteUbergraph_BP_Credits_TitleAndNames Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Credits_TitleAndNames.BP_Credits_TitleAndNames_C.OnSetText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InLeftText                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             InCenterText                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             InRightText                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_Credits_TitleAndNames_C::OnSetText(const class FText& InLeftText, const class FText& InCenterText, const class FText& InRightText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Credits_TitleAndNames_C", "OnSetText");

	Params::BP_Credits_TitleAndNames_C_OnSetText Parms{};

	Parms.InLeftText = std::move(InLeftText);
	Parms.InCenterText = std::move(InCenterText);
	Parms.InRightText = std::move(InRightText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Credits_TitleAndNames.BP_Credits_TitleAndNames_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Credits_TitleAndNames_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Credits_TitleAndNames_C", "PreConstruct");

	Params::BP_Credits_TitleAndNames_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Credits_TitleAndNames.BP_Credits_TitleAndNames_C.SetTexts
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InTitle                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             InNames                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_Credits_TitleAndNames_C::SetTexts(const class FText& InTitle, const class FText& InNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Credits_TitleAndNames_C", "SetTexts");

	Params::BP_Credits_TitleAndNames_C_SetTexts Parms{};

	Parms.InTitle = std::move(InTitle);
	Parms.InNames = std::move(InNames);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Credits_TitleAndNames.BP_Credits_TitleAndNames_C.ToggleSmallScreen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsSmallScreen                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Credits_TitleAndNames_C::ToggleSmallScreen(bool InIsSmallScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Credits_TitleAndNames_C", "ToggleSmallScreen");

	Params::BP_Credits_TitleAndNames_C_ToggleSmallScreen Parms{};

	Parms.InIsSmallScreen = InIsSmallScreen;

	UObject::ProcessEvent(Func, &Parms);
}

}

