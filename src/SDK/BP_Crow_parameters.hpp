#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Crow

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Crow.BP_Crow_C.ExecuteUbergraph_BP_Crow
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Crow_C_ExecuteUbergraph_BP_Crow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Crow_Anim_C*                        K2Node_DynamicCast_AsBP_Crow_Anim;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Delay;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Horizontal_Spread;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Direction;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x005C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Crow_C_ExecuteUbergraph_BP_Crow) == 0x000008, "Wrong alignment on BP_Crow_C_ExecuteUbergraph_BP_Crow");
static_assert(sizeof(BP_Crow_C_ExecuteUbergraph_BP_Crow) == 0x0000E8, "Wrong size on BP_Crow_C_ExecuteUbergraph_BP_Crow");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, EntryPoint) == 0x000000, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, K2Node_DynamicCast_AsBP_Crow_Anim) == 0x000020, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::K2Node_DynamicCast_AsBP_Crow_Anim' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, K2Node_CustomEvent_Delay) == 0x00002C, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, K2Node_CustomEvent_Horizontal_Spread) == 0x000030, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::K2Node_CustomEvent_Horizontal_Spread' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, K2Node_CustomEvent_Direction) == 0x000034, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000038, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, CallFunc_BreakRotator_Roll) == 0x000044, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, CallFunc_BreakRotator_Pitch) == 0x000048, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, CallFunc_BreakRotator_Yaw) == 0x00004C, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_ExecuteUbergraph_BP_Crow, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x00005C, "Member 'BP_Crow_C_ExecuteUbergraph_BP_Crow::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BP_Crow.BP_Crow_C.FlyAway_Trigger
// 0x000C (0x000C - 0x0000)
struct BP_Crow_C_FlyAway_Trigger final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Horizontal_Spread;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Direction_0;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Crow_C_FlyAway_Trigger) == 0x000004, "Wrong alignment on BP_Crow_C_FlyAway_Trigger");
static_assert(sizeof(BP_Crow_C_FlyAway_Trigger) == 0x00000C, "Wrong size on BP_Crow_C_FlyAway_Trigger");
static_assert(offsetof(BP_Crow_C_FlyAway_Trigger, Delay) == 0x000000, "Member 'BP_Crow_C_FlyAway_Trigger::Delay' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_FlyAway_Trigger, Horizontal_Spread) == 0x000004, "Member 'BP_Crow_C_FlyAway_Trigger::Horizontal_Spread' has a wrong offset!");
static_assert(offsetof(BP_Crow_C_FlyAway_Trigger, Direction_0) == 0x000008, "Member 'BP_Crow_C_FlyAway_Trigger::Direction_0' has a wrong offset!");

}

