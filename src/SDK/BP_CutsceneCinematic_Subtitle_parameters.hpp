#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CutsceneCinematic_Subtitle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CutsceneCinematic_Subtitle.BP_CutsceneCinematic_Subtitle_C.ExecuteUbergraph_BP_CutsceneCinematic_Subtitle
// 0x0070 (0x0070 - 0x0000)
struct BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UManUserWidgetBase*                     CallFunc_GetManUserWidgetBase_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPIsVisible_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_AnimDuration;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InText;                               // 0x0020(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InLineIDText;                         // 0x0038(0x0018)(ConstParm)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle) == 0x000008, "Wrong alignment on BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle");
static_assert(sizeof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle) == 0x000070, "Wrong size on BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle, EntryPoint) == 0x000000, "Member 'BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle, CallFunc_GetManUserWidgetBase_ReturnValue) == 0x000008, "Member 'BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle::CallFunc_GetManUserWidgetBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle, K2Node_Event_AnimDuration_1) == 0x000010, "Member 'BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle, CallFunc_BPIsVisible_ReturnValue) == 0x000014, "Member 'BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle::CallFunc_BPIsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle, K2Node_Event_AnimDuration) == 0x000018, "Member 'BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle, K2Node_Event_InText) == 0x000020, "Member 'BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle::K2Node_Event_InText' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle, K2Node_Event_InLineIDText) == 0x000038, "Member 'BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle::K2Node_Event_InLineIDText' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x000050, "Member 'BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000060, "Member 'BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle, CallFunc_PlayAnimation_ReturnValue_1) == 0x000068, "Member 'BP_CutsceneCinematic_Subtitle_C_ExecuteUbergraph_BP_CutsceneCinematic_Subtitle::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_CutsceneCinematic_Subtitle.BP_CutsceneCinematic_Subtitle_C.OnShowSubtitleText
// 0x0030 (0x0030 - 0x0000)
struct BP_CutsceneCinematic_Subtitle_C_OnShowSubtitleText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   InLineIDText;                                      // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CutsceneCinematic_Subtitle_C_OnShowSubtitleText) == 0x000008, "Wrong alignment on BP_CutsceneCinematic_Subtitle_C_OnShowSubtitleText");
static_assert(sizeof(BP_CutsceneCinematic_Subtitle_C_OnShowSubtitleText) == 0x000030, "Wrong size on BP_CutsceneCinematic_Subtitle_C_OnShowSubtitleText");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_OnShowSubtitleText, InText) == 0x000000, "Member 'BP_CutsceneCinematic_Subtitle_C_OnShowSubtitleText::InText' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_OnShowSubtitleText, InLineIDText) == 0x000018, "Member 'BP_CutsceneCinematic_Subtitle_C_OnShowSubtitleText::InLineIDText' has a wrong offset!");

// Function BP_CutsceneCinematic_Subtitle.BP_CutsceneCinematic_Subtitle_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_CutsceneCinematic_Subtitle_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CutsceneCinematic_Subtitle_C_OnHide) == 0x000004, "Wrong alignment on BP_CutsceneCinematic_Subtitle_C_OnHide");
static_assert(sizeof(BP_CutsceneCinematic_Subtitle_C_OnHide) == 0x000004, "Wrong size on BP_CutsceneCinematic_Subtitle_C_OnHide");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_CutsceneCinematic_Subtitle_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_CutsceneCinematic_Subtitle.BP_CutsceneCinematic_Subtitle_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_CutsceneCinematic_Subtitle_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CutsceneCinematic_Subtitle_C_OnShow) == 0x000004, "Wrong alignment on BP_CutsceneCinematic_Subtitle_C_OnShow");
static_assert(sizeof(BP_CutsceneCinematic_Subtitle_C_OnShow) == 0x000004, "Wrong size on BP_CutsceneCinematic_Subtitle_C_OnShow");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_CutsceneCinematic_Subtitle_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_CutsceneCinematic_Subtitle.BP_CutsceneCinematic_Subtitle_C.ToggleMonologue
// 0x0018 (0x0018 - 0x0000)
struct BP_CutsceneCinematic_Subtitle_C_ToggleMonologue final
{
public:
	bool                                          InMonologue;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CutsceneCinematic_Subtitle_C_ToggleMonologue) == 0x000004, "Wrong alignment on BP_CutsceneCinematic_Subtitle_C_ToggleMonologue");
static_assert(sizeof(BP_CutsceneCinematic_Subtitle_C_ToggleMonologue) == 0x000018, "Wrong size on BP_CutsceneCinematic_Subtitle_C_ToggleMonologue");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ToggleMonologue, InMonologue) == 0x000000, "Member 'BP_CutsceneCinematic_Subtitle_C_ToggleMonologue::InMonologue' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ToggleMonologue, Temp_bool_Variable) == 0x000001, "Member 'BP_CutsceneCinematic_Subtitle_C_ToggleMonologue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ToggleMonologue, Temp_float_Variable) == 0x000004, "Member 'BP_CutsceneCinematic_Subtitle_C_ToggleMonologue::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ToggleMonologue, Temp_float_Variable_1) == 0x000008, "Member 'BP_CutsceneCinematic_Subtitle_C_ToggleMonologue::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ToggleMonologue, K2Node_Select_Default) == 0x00000C, "Member 'BP_CutsceneCinematic_Subtitle_C_ToggleMonologue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CutsceneCinematic_Subtitle_C_ToggleMonologue, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'BP_CutsceneCinematic_Subtitle_C_ToggleMonologue::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

