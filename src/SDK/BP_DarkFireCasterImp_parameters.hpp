#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DarkFireCasterImp

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_DarkFireCasterImp.BP_DarkFireCasterImp_C.ExecuteUbergraph_BP_DarkFireCasterImp
// 0x0050 (0x0050 - 0x0000)
struct BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Killer, class UAbilityController* KillerAbilityController)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPIsAlive_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Killer;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     K2Node_CustomEvent_KillerAbilityController;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp) == 0x000008, "Wrong alignment on BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp");
static_assert(sizeof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp) == 0x000050, "Wrong size on BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp");
static_assert(offsetof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp, EntryPoint) == 0x000000, "Member 'BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp, CallFunc_PostEventAtLocation_ReturnValue) == 0x000010, "Member 'BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp, CallFunc_BPIsAlive_ReturnValue) == 0x000028, "Member 'BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp::CallFunc_BPIsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp, CallFunc_GetAbilityController_ReturnValue) == 0x000038, "Member 'BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp, K2Node_CustomEvent_Killer) == 0x000040, "Member 'BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp, K2Node_CustomEvent_KillerAbilityController) == 0x000048, "Member 'BP_DarkFireCasterImp_C_ExecuteUbergraph_BP_DarkFireCasterImp::K2Node_CustomEvent_KillerAbilityController' has a wrong offset!");

// Function BP_DarkFireCasterImp.BP_DarkFireCasterImp_C.OnKilled_Event_0
// 0x0010 (0x0010 - 0x0000)
struct BP_DarkFireCasterImp_C_OnKilled_Event_0 final
{
public:
	class UObject*                                Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     KillerAbilityController;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DarkFireCasterImp_C_OnKilled_Event_0) == 0x000008, "Wrong alignment on BP_DarkFireCasterImp_C_OnKilled_Event_0");
static_assert(sizeof(BP_DarkFireCasterImp_C_OnKilled_Event_0) == 0x000010, "Wrong size on BP_DarkFireCasterImp_C_OnKilled_Event_0");
static_assert(offsetof(BP_DarkFireCasterImp_C_OnKilled_Event_0, Killer) == 0x000000, "Member 'BP_DarkFireCasterImp_C_OnKilled_Event_0::Killer' has a wrong offset!");
static_assert(offsetof(BP_DarkFireCasterImp_C_OnKilled_Event_0, KillerAbilityController) == 0x000008, "Member 'BP_DarkFireCasterImp_C_OnKilled_Event_0::KillerAbilityController' has a wrong offset!");

// Function BP_DarkFireCasterImp.BP_DarkFireCasterImp_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DarkFireCasterImp_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DarkFireCasterImp_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DarkFireCasterImp_C_ReceiveTick");
static_assert(sizeof(BP_DarkFireCasterImp_C_ReceiveTick) == 0x000004, "Wrong size on BP_DarkFireCasterImp_C_ReceiveTick");
static_assert(offsetof(BP_DarkFireCasterImp_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DarkFireCasterImp_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

