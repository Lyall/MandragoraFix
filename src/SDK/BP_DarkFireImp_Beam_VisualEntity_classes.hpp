#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DarkFireImp_Beam_VisualEntity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DarkFireImp_Beam_VisualEntity.BP_DarkFireImp_Beam_VisualEntity_C
// 0x0048 (0x0398 - 0x0350)
class ABP_DarkFireImp_Beam_VisualEntity_C final : public AVisualEntity
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           AkComponent;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_DarkFireImp_BeamEnd;                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara;                                           // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FakeTick__Direction_B5399ED24AA485110891EEA126220EB8; // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FakeTick;                                          // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAISupportedBeamAbility*                BeamAbility;                                       // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndVecInterped;                                    // 0x0388(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpRate;                                        // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DarkFireImp_Beam_VisualEntity(int32 EntryPoint);
	void OnKill();
	void VisualEntityConstructionFinished();
	void FakeTick__UpdateFunc();
	void FakeTick__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DarkFireImp_Beam_VisualEntity_C">();
	}
	static class ABP_DarkFireImp_Beam_VisualEntity_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DarkFireImp_Beam_VisualEntity_C>();
	}
};
static_assert(alignof(ABP_DarkFireImp_Beam_VisualEntity_C) == 0x000008, "Wrong alignment on ABP_DarkFireImp_Beam_VisualEntity_C");
static_assert(sizeof(ABP_DarkFireImp_Beam_VisualEntity_C) == 0x000398, "Wrong size on ABP_DarkFireImp_Beam_VisualEntity_C");
static_assert(offsetof(ABP_DarkFireImp_Beam_VisualEntity_C, UberGraphFrame) == 0x000350, "Member 'ABP_DarkFireImp_Beam_VisualEntity_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DarkFireImp_Beam_VisualEntity_C, AkComponent) == 0x000358, "Member 'ABP_DarkFireImp_Beam_VisualEntity_C::AkComponent' has a wrong offset!");
static_assert(offsetof(ABP_DarkFireImp_Beam_VisualEntity_C, NS_DarkFireImp_BeamEnd) == 0x000360, "Member 'ABP_DarkFireImp_Beam_VisualEntity_C::NS_DarkFireImp_BeamEnd' has a wrong offset!");
static_assert(offsetof(ABP_DarkFireImp_Beam_VisualEntity_C, Niagara) == 0x000368, "Member 'ABP_DarkFireImp_Beam_VisualEntity_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_DarkFireImp_Beam_VisualEntity_C, FakeTick__Direction_B5399ED24AA485110891EEA126220EB8) == 0x000370, "Member 'ABP_DarkFireImp_Beam_VisualEntity_C::FakeTick__Direction_B5399ED24AA485110891EEA126220EB8' has a wrong offset!");
static_assert(offsetof(ABP_DarkFireImp_Beam_VisualEntity_C, FakeTick) == 0x000378, "Member 'ABP_DarkFireImp_Beam_VisualEntity_C::FakeTick' has a wrong offset!");
static_assert(offsetof(ABP_DarkFireImp_Beam_VisualEntity_C, BeamAbility) == 0x000380, "Member 'ABP_DarkFireImp_Beam_VisualEntity_C::BeamAbility' has a wrong offset!");
static_assert(offsetof(ABP_DarkFireImp_Beam_VisualEntity_C, EndVecInterped) == 0x000388, "Member 'ABP_DarkFireImp_Beam_VisualEntity_C::EndVecInterped' has a wrong offset!");
static_assert(offsetof(ABP_DarkFireImp_Beam_VisualEntity_C, InterpRate) == 0x000394, "Member 'ABP_DarkFireImp_Beam_VisualEntity_C::InterpRate' has a wrong offset!");

}

