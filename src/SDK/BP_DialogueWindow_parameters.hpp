#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DialogueWindow

#include "Basic.hpp"

#include "man_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_DialogueWindow.BP_DialogueWindow_C.ExecuteUbergraph_BP_DialogueWindow
// 0x0120 (0x0120 - 0x0000)
struct BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InTitle;                              // 0x0058(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InDesciption;                         // 0x0070(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InBtnHotkeyAText;                     // 0x0088(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InBtnHotkeyXText;                     // 0x00A0(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InBtnHotkeyBText;                     // 0x00B8(0x0018)(ConstParm)
	class FText                                   K2Node_Event_Desciption;                           // 0x00D0(0x0018)(ConstParm)
	class FText                                   CallFunc_SetTextFormatByHeroGender_ReturnValue;    // 0x00E8(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_106[0x2];                                      // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InInputDisplay;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InControlDisplay;                     // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow) == 0x000008, "Wrong alignment on BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow");
static_assert(sizeof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow) == 0x000120, "Wrong size on BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, EntryPoint) == 0x000000, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, Temp_byte_Variable) == 0x000004, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Event_MyGeometry) == 0x000008, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Event_InDeltaTime) == 0x000040, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Event_AnimDuration_1) == 0x000044, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Event_AnimDuration) == 0x000048, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x00004C, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000050, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Event_InTitle) == 0x000058, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Event_InTitle' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Event_InDesciption) == 0x000070, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Event_InDesciption' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Event_InBtnHotkeyAText) == 0x000088, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Event_InBtnHotkeyAText' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Event_InBtnHotkeyXText) == 0x0000A0, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Event_InBtnHotkeyXText' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Event_InBtnHotkeyBText) == 0x0000B8, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Event_InBtnHotkeyBText' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Event_Desciption) == 0x0000D0, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Event_Desciption' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, CallFunc_SetTextFormatByHeroGender_ReturnValue) == 0x0000E8, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::CallFunc_SetTextFormatByHeroGender_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, CallFunc_TextIsEmpty_ReturnValue) == 0x000100, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, Temp_byte_Variable_1) == 0x000101, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, Temp_bool_Variable) == 0x000102, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Select_Default) == 0x000103, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_SwitchEnum_CmpSuccess) == 0x000104, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, CallFunc_IsActive_ReturnValue) == 0x000105, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, CallFunc_PlayAnimation_ReturnValue) == 0x000108, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, CallFunc_PlayAnimation_ReturnValue_1) == 0x000110, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Event_InInputDisplay) == 0x000118, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Event_InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow, K2Node_Event_InControlDisplay) == 0x000119, "Member 'BP_DialogueWindow_C_ExecuteUbergraph_BP_DialogueWindow::K2Node_Event_InControlDisplay' has a wrong offset!");

// Function BP_DialogueWindow.BP_DialogueWindow_C.OnSetInputDisplay
// 0x0002 (0x0002 - 0x0000)
struct BP_DialogueWindow_C_OnSetInputDisplay final
{
public:
	EInputDisplay                                 InInputDisplay;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 InControlDisplay;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DialogueWindow_C_OnSetInputDisplay) == 0x000001, "Wrong alignment on BP_DialogueWindow_C_OnSetInputDisplay");
static_assert(sizeof(BP_DialogueWindow_C_OnSetInputDisplay) == 0x000002, "Wrong size on BP_DialogueWindow_C_OnSetInputDisplay");
static_assert(offsetof(BP_DialogueWindow_C_OnSetInputDisplay, InInputDisplay) == 0x000000, "Member 'BP_DialogueWindow_C_OnSetInputDisplay::InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_OnSetInputDisplay, InControlDisplay) == 0x000001, "Member 'BP_DialogueWindow_C_OnSetInputDisplay::InControlDisplay' has a wrong offset!");

// Function BP_DialogueWindow.BP_DialogueWindow_C.OnDescriptionTextChanged
// 0x0018 (0x0018 - 0x0000)
struct BP_DialogueWindow_C_OnDescriptionTextChanged final
{
public:
	class FText                                   Desciption;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_DialogueWindow_C_OnDescriptionTextChanged) == 0x000008, "Wrong alignment on BP_DialogueWindow_C_OnDescriptionTextChanged");
static_assert(sizeof(BP_DialogueWindow_C_OnDescriptionTextChanged) == 0x000018, "Wrong size on BP_DialogueWindow_C_OnDescriptionTextChanged");
static_assert(offsetof(BP_DialogueWindow_C_OnDescriptionTextChanged, Desciption) == 0x000000, "Member 'BP_DialogueWindow_C_OnDescriptionTextChanged::Desciption' has a wrong offset!");

// Function BP_DialogueWindow.BP_DialogueWindow_C.OnSetData
// 0x0078 (0x0078 - 0x0000)
struct BP_DialogueWindow_C_OnSetData final
{
public:
	class FText                                   InTitle;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   InDesciption;                                      // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   InBtnHotkeyAText;                                  // 0x0030(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   InBtnHotkeyXText;                                  // 0x0048(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   InBtnHotkeyBText;                                  // 0x0060(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_DialogueWindow_C_OnSetData) == 0x000008, "Wrong alignment on BP_DialogueWindow_C_OnSetData");
static_assert(sizeof(BP_DialogueWindow_C_OnSetData) == 0x000078, "Wrong size on BP_DialogueWindow_C_OnSetData");
static_assert(offsetof(BP_DialogueWindow_C_OnSetData, InTitle) == 0x000000, "Member 'BP_DialogueWindow_C_OnSetData::InTitle' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_OnSetData, InDesciption) == 0x000018, "Member 'BP_DialogueWindow_C_OnSetData::InDesciption' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_OnSetData, InBtnHotkeyAText) == 0x000030, "Member 'BP_DialogueWindow_C_OnSetData::InBtnHotkeyAText' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_OnSetData, InBtnHotkeyXText) == 0x000048, "Member 'BP_DialogueWindow_C_OnSetData::InBtnHotkeyXText' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_OnSetData, InBtnHotkeyBText) == 0x000060, "Member 'BP_DialogueWindow_C_OnSetData::InBtnHotkeyBText' has a wrong offset!");

// Function BP_DialogueWindow.BP_DialogueWindow_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_DialogueWindow_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DialogueWindow_C_OnHide) == 0x000004, "Wrong alignment on BP_DialogueWindow_C_OnHide");
static_assert(sizeof(BP_DialogueWindow_C_OnHide) == 0x000004, "Wrong size on BP_DialogueWindow_C_OnHide");
static_assert(offsetof(BP_DialogueWindow_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_DialogueWindow_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_DialogueWindow.BP_DialogueWindow_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_DialogueWindow_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DialogueWindow_C_OnShow) == 0x000004, "Wrong alignment on BP_DialogueWindow_C_OnShow");
static_assert(sizeof(BP_DialogueWindow_C_OnShow) == 0x000004, "Wrong size on BP_DialogueWindow_C_OnShow");
static_assert(offsetof(BP_DialogueWindow_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_DialogueWindow_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_DialogueWindow.BP_DialogueWindow_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_DialogueWindow_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DialogueWindow_C_Tick) == 0x000004, "Wrong alignment on BP_DialogueWindow_C_Tick");
static_assert(sizeof(BP_DialogueWindow_C_Tick) == 0x00003C, "Wrong size on BP_DialogueWindow_C_Tick");
static_assert(offsetof(BP_DialogueWindow_C_Tick, MyGeometry) == 0x000000, "Member 'BP_DialogueWindow_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_DialogueWindow_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_DialogueWindow.BP_DialogueWindow_C.BtnHotkeyBClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_DialogueWindow_C_BtnHotkeyBClicked final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DialogueWindow_C_BtnHotkeyBClicked) == 0x000001, "Wrong alignment on BP_DialogueWindow_C_BtnHotkeyBClicked");
static_assert(sizeof(BP_DialogueWindow_C_BtnHotkeyBClicked) == 0x000001, "Wrong size on BP_DialogueWindow_C_BtnHotkeyBClicked");
static_assert(offsetof(BP_DialogueWindow_C_BtnHotkeyBClicked, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'BP_DialogueWindow_C_BtnHotkeyBClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_DialogueWindow.BP_DialogueWindow_C.BtnHotkeyAClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_DialogueWindow_C_BtnHotkeyAClicked final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DialogueWindow_C_BtnHotkeyAClicked) == 0x000001, "Wrong alignment on BP_DialogueWindow_C_BtnHotkeyAClicked");
static_assert(sizeof(BP_DialogueWindow_C_BtnHotkeyAClicked) == 0x000001, "Wrong size on BP_DialogueWindow_C_BtnHotkeyAClicked");
static_assert(offsetof(BP_DialogueWindow_C_BtnHotkeyAClicked, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'BP_DialogueWindow_C_BtnHotkeyAClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_DialogueWindow.BP_DialogueWindow_C.BtnHotkeyXClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_DialogueWindow_C_BtnHotkeyXClicked final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DialogueWindow_C_BtnHotkeyXClicked) == 0x000001, "Wrong alignment on BP_DialogueWindow_C_BtnHotkeyXClicked");
static_assert(sizeof(BP_DialogueWindow_C_BtnHotkeyXClicked) == 0x000001, "Wrong size on BP_DialogueWindow_C_BtnHotkeyXClicked");
static_assert(offsetof(BP_DialogueWindow_C_BtnHotkeyXClicked, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'BP_DialogueWindow_C_BtnHotkeyXClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_DialogueWindow.BP_DialogueWindow_C.SetBtnState
// 0x0030 (0x0030 - 0x0000)
struct BP_DialogueWindow_C_SetBtnState final
{
public:
	class UBP_InteractButton_Normal_C*            Btn;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDialogueButtonType                           BtnType;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BtnText;                                           // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DialogueWindow_C_SetBtnState) == 0x000008, "Wrong alignment on BP_DialogueWindow_C_SetBtnState");
static_assert(sizeof(BP_DialogueWindow_C_SetBtnState) == 0x000030, "Wrong size on BP_DialogueWindow_C_SetBtnState");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnState, Btn) == 0x000000, "Member 'BP_DialogueWindow_C_SetBtnState::Btn' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnState, BtnType) == 0x000008, "Member 'BP_DialogueWindow_C_SetBtnState::BtnType' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnState, BtnText) == 0x000010, "Member 'BP_DialogueWindow_C_SetBtnState::BtnText' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnState, Temp_bool_Variable) == 0x000028, "Member 'BP_DialogueWindow_C_SetBtnState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BP_DialogueWindow_C_SetBtnState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnState, Temp_byte_Variable) == 0x00002A, "Member 'BP_DialogueWindow_C_SetBtnState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnState, Temp_byte_Variable_1) == 0x00002B, "Member 'BP_DialogueWindow_C_SetBtnState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnState, K2Node_Select_Default) == 0x00002C, "Member 'BP_DialogueWindow_C_SetBtnState::K2Node_Select_Default' has a wrong offset!");

// Function BP_DialogueWindow.BP_DialogueWindow_C.SetBtnCloseVisibility
// 0x000B (0x000B - 0x0000)
struct BP_DialogueWindow_C_SetBtnCloseVisibility final
{
public:
	EInputDisplay                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 CallFunc_GetInputDisplay_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DialogueWindow_C_SetBtnCloseVisibility) == 0x000001, "Wrong alignment on BP_DialogueWindow_C_SetBtnCloseVisibility");
static_assert(sizeof(BP_DialogueWindow_C_SetBtnCloseVisibility) == 0x00000B, "Wrong size on BP_DialogueWindow_C_SetBtnCloseVisibility");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnCloseVisibility, Temp_byte_Variable) == 0x000000, "Member 'BP_DialogueWindow_C_SetBtnCloseVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_1) == 0x000001, "Member 'BP_DialogueWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_2) == 0x000002, "Member 'BP_DialogueWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_3) == 0x000003, "Member 'BP_DialogueWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_4) == 0x000004, "Member 'BP_DialogueWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_5) == 0x000005, "Member 'BP_DialogueWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_6) == 0x000006, "Member 'BP_DialogueWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_7) == 0x000007, "Member 'BP_DialogueWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_8) == 0x000008, "Member 'BP_DialogueWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnCloseVisibility, CallFunc_GetInputDisplay_ReturnValue) == 0x000009, "Member 'BP_DialogueWindow_C_SetBtnCloseVisibility::CallFunc_GetInputDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DialogueWindow_C_SetBtnCloseVisibility, K2Node_Select_Default) == 0x00000A, "Member 'BP_DialogueWindow_C_SetBtnCloseVisibility::K2Node_Select_Default' has a wrong offset!");

}

