#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DieOfChaos_Projectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DieOfChaos_Projectile.BP_DieOfChaos_Projectile_C
// 0x0048 (0x0C00 - 0x0BB8)
class ABP_DieOfChaos_Projectile_C final : public ADieOfChaosProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0BC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        VFXLocation;                                       // 0x0BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UManBoxComponent*                       ManProjectileEnviormentalCollider;                 // 0x0BD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AVisualEntity*                          CubeVFX;                                           // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVisualEntity*                          DieExplosionVE;                                    // 0x0BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastHitPos;                                        // 0x0BF0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DieOfChaos_Projectile(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Bounce(EManProjectileEventType Type, const struct FVector& position, class AActor* HitActor);
	void ReceiveDestroyed();
	void DieStateChanged(int32 NewState);
	void DieExplosion();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DieOfChaos_Projectile_C">();
	}
	static class ABP_DieOfChaos_Projectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DieOfChaos_Projectile_C>();
	}
};
static_assert(alignof(ABP_DieOfChaos_Projectile_C) == 0x000008, "Wrong alignment on ABP_DieOfChaos_Projectile_C");
static_assert(sizeof(ABP_DieOfChaos_Projectile_C) == 0x000C00, "Wrong size on ABP_DieOfChaos_Projectile_C");
static_assert(offsetof(ABP_DieOfChaos_Projectile_C, UberGraphFrame) == 0x000BB8, "Member 'ABP_DieOfChaos_Projectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DieOfChaos_Projectile_C, Ak) == 0x000BC0, "Member 'ABP_DieOfChaos_Projectile_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_DieOfChaos_Projectile_C, VFXLocation) == 0x000BC8, "Member 'ABP_DieOfChaos_Projectile_C::VFXLocation' has a wrong offset!");
static_assert(offsetof(ABP_DieOfChaos_Projectile_C, ManProjectileEnviormentalCollider) == 0x000BD0, "Member 'ABP_DieOfChaos_Projectile_C::ManProjectileEnviormentalCollider' has a wrong offset!");
static_assert(offsetof(ABP_DieOfChaos_Projectile_C, Arrow) == 0x000BD8, "Member 'ABP_DieOfChaos_Projectile_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_DieOfChaos_Projectile_C, CubeVFX) == 0x000BE0, "Member 'ABP_DieOfChaos_Projectile_C::CubeVFX' has a wrong offset!");
static_assert(offsetof(ABP_DieOfChaos_Projectile_C, DieExplosionVE) == 0x000BE8, "Member 'ABP_DieOfChaos_Projectile_C::DieExplosionVE' has a wrong offset!");
static_assert(offsetof(ABP_DieOfChaos_Projectile_C, LastHitPos) == 0x000BF0, "Member 'ABP_DieOfChaos_Projectile_C::LastHitPos' has a wrong offset!");

}

