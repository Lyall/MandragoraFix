#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EntropicFissure

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EntropicFissure.BP_EntropicFissure_C
// 0x0028 (0x0800 - 0x07D8)
class ABP_EntropicFissure_C final : public AEntropicFissureActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   temp_visual;                                       // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitBox*                                EruptionHitBox;                                    // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_EntropicFissure_Explode_VisualEntity_C* ExplodeVE;                                         // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BPPostBeginPlay();
	void OnGameplayEvent_Event_0(class UAbilityController* OwnerAbilityController, class UGameplayEventID* GameplayEventID, class FName GameplayEventName, class AActorSoul* paramActorSoul);
	void OnKilled_Event_0(class UObject* Killer, class UAbilityController* KillerAbilityController);
	void ExecuteUbergraph_BP_EntropicFissure(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EntropicFissure_C">();
	}
	static class ABP_EntropicFissure_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EntropicFissure_C>();
	}
};
static_assert(alignof(ABP_EntropicFissure_C) == 0x000008, "Wrong alignment on ABP_EntropicFissure_C");
static_assert(sizeof(ABP_EntropicFissure_C) == 0x000800, "Wrong size on ABP_EntropicFissure_C");
static_assert(offsetof(ABP_EntropicFissure_C, UberGraphFrame) == 0x0007D8, "Member 'ABP_EntropicFissure_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EntropicFissure_C, temp_visual) == 0x0007E0, "Member 'ABP_EntropicFissure_C::temp_visual' has a wrong offset!");
static_assert(offsetof(ABP_EntropicFissure_C, EruptionHitBox) == 0x0007E8, "Member 'ABP_EntropicFissure_C::EruptionHitBox' has a wrong offset!");
static_assert(offsetof(ABP_EntropicFissure_C, DefaultSceneRoot) == 0x0007F0, "Member 'ABP_EntropicFissure_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_EntropicFissure_C, ExplodeVE) == 0x0007F8, "Member 'ABP_EntropicFissure_C::ExplodeVE' has a wrong offset!");

}

