#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EntropyRift_SimpleClosable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EntropyRift_SimpleClosable.BP_EntropyRift_SimpleClosable_C
// 0x00A8 (0x02D0 - 0x0228)
class ABP_EntropyRift_SimpleClosable_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_RiftPortal_WargPhase2;                          // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Warg_Die_RiftExtra;                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Warg_Die_Rift;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RiftPlaneDark;                                     // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RiftPlane;                                         // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_PortalOpenWargP2_Value_650C6ACB4F1CEDC9FDAC1EA2F3C5823A; // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_PortalOpenWargP2__Direction_650C6ACB4F1CEDC9FDAC1EA2F3C5823A; // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_PortalOpenWargP2;                         // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_RiftPlanes_ParticleScaleLerp_2B9BA7A14C996D261E57B3A8016A0592; // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_RiftPlanes_ShapeScalar_2B9BA7A14C996D261E57B3A8016A0592; // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_RiftPlanes_EffectLerp_2B9BA7A14C996D261E57B3A8016A0592; // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_RiftPlanes_Alpha_2B9BA7A14C996D261E57B3A8016A0592; // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_RiftPlanes__Direction_2B9BA7A14C996D261E57B3A8016A0592; // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_RiftPlanes;                               // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Portal_Control_Value_C295EBF8486719070EDF919F66FEB1F0; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Portal_Control__Direction_C295EBF8486719070EDF919F66FEB1F0; // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Portal_Control;                                    // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RiftPlaneMaterial;                                 // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RiftPlaneDarkMaterial;                             // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Cubemap;                                           // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Open;                                              // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EdgeStrength;                                      // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MeshDistortion;                                    // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CubemapDepth;                                      // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EntropyRift_SimpleClosable(int32 EntryPoint);
	void OpenPortal_WargP2();
	void WargDieEvent_PortalInside();
	void ReceiveBeginPlay();
	void WargPhase2();
	void WargDieEvent();
	void ClosePortal();
	void OpenPortal();
	void Timeline_PortalOpenWargP2__UpdateFunc();
	void Timeline_PortalOpenWargP2__FinishedFunc();
	void Timeline_RiftPlanes__DieRiftStop__EventFunc();
	void Timeline_RiftPlanes__UpdateFunc();
	void Timeline_RiftPlanes__FinishedFunc();
	void Portal_Control__UpdateFunc();
	void Portal_Control__FinishedFunc();
	void UserConstructionScript();
	void UpdateLightRiftLayer(float Alpha, bool forceMidOpen);
	void Update_Dark_Rift_Layer(float Alpha, bool forceMidOpen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EntropyRift_SimpleClosable_C">();
	}
	static class ABP_EntropyRift_SimpleClosable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EntropyRift_SimpleClosable_C>();
	}
};
static_assert(alignof(ABP_EntropyRift_SimpleClosable_C) == 0x000008, "Wrong alignment on ABP_EntropyRift_SimpleClosable_C");
static_assert(sizeof(ABP_EntropyRift_SimpleClosable_C) == 0x0002D0, "Wrong size on ABP_EntropyRift_SimpleClosable_C");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, UberGraphFrame) == 0x000228, "Member 'ABP_EntropyRift_SimpleClosable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Ak) == 0x000230, "Member 'ABP_EntropyRift_SimpleClosable_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, NS_RiftPortal_WargPhase2) == 0x000238, "Member 'ABP_EntropyRift_SimpleClosable_C::NS_RiftPortal_WargPhase2' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, NS_Warg_Die_RiftExtra) == 0x000240, "Member 'ABP_EntropyRift_SimpleClosable_C::NS_Warg_Die_RiftExtra' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, NS_Warg_Die_Rift) == 0x000248, "Member 'ABP_EntropyRift_SimpleClosable_C::NS_Warg_Die_Rift' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, RiftPlaneDark) == 0x000250, "Member 'ABP_EntropyRift_SimpleClosable_C::RiftPlaneDark' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, RiftPlane) == 0x000258, "Member 'ABP_EntropyRift_SimpleClosable_C::RiftPlane' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Scene) == 0x000260, "Member 'ABP_EntropyRift_SimpleClosable_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Timeline_PortalOpenWargP2_Value_650C6ACB4F1CEDC9FDAC1EA2F3C5823A) == 0x000268, "Member 'ABP_EntropyRift_SimpleClosable_C::Timeline_PortalOpenWargP2_Value_650C6ACB4F1CEDC9FDAC1EA2F3C5823A' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Timeline_PortalOpenWargP2__Direction_650C6ACB4F1CEDC9FDAC1EA2F3C5823A) == 0x00026C, "Member 'ABP_EntropyRift_SimpleClosable_C::Timeline_PortalOpenWargP2__Direction_650C6ACB4F1CEDC9FDAC1EA2F3C5823A' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Timeline_PortalOpenWargP2) == 0x000270, "Member 'ABP_EntropyRift_SimpleClosable_C::Timeline_PortalOpenWargP2' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Timeline_RiftPlanes_ParticleScaleLerp_2B9BA7A14C996D261E57B3A8016A0592) == 0x000278, "Member 'ABP_EntropyRift_SimpleClosable_C::Timeline_RiftPlanes_ParticleScaleLerp_2B9BA7A14C996D261E57B3A8016A0592' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Timeline_RiftPlanes_ShapeScalar_2B9BA7A14C996D261E57B3A8016A0592) == 0x00027C, "Member 'ABP_EntropyRift_SimpleClosable_C::Timeline_RiftPlanes_ShapeScalar_2B9BA7A14C996D261E57B3A8016A0592' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Timeline_RiftPlanes_EffectLerp_2B9BA7A14C996D261E57B3A8016A0592) == 0x000280, "Member 'ABP_EntropyRift_SimpleClosable_C::Timeline_RiftPlanes_EffectLerp_2B9BA7A14C996D261E57B3A8016A0592' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Timeline_RiftPlanes_Alpha_2B9BA7A14C996D261E57B3A8016A0592) == 0x000284, "Member 'ABP_EntropyRift_SimpleClosable_C::Timeline_RiftPlanes_Alpha_2B9BA7A14C996D261E57B3A8016A0592' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Timeline_RiftPlanes__Direction_2B9BA7A14C996D261E57B3A8016A0592) == 0x000288, "Member 'ABP_EntropyRift_SimpleClosable_C::Timeline_RiftPlanes__Direction_2B9BA7A14C996D261E57B3A8016A0592' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Timeline_RiftPlanes) == 0x000290, "Member 'ABP_EntropyRift_SimpleClosable_C::Timeline_RiftPlanes' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Portal_Control_Value_C295EBF8486719070EDF919F66FEB1F0) == 0x000298, "Member 'ABP_EntropyRift_SimpleClosable_C::Portal_Control_Value_C295EBF8486719070EDF919F66FEB1F0' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Portal_Control__Direction_C295EBF8486719070EDF919F66FEB1F0) == 0x00029C, "Member 'ABP_EntropyRift_SimpleClosable_C::Portal_Control__Direction_C295EBF8486719070EDF919F66FEB1F0' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Portal_Control) == 0x0002A0, "Member 'ABP_EntropyRift_SimpleClosable_C::Portal_Control' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, RiftPlaneMaterial) == 0x0002A8, "Member 'ABP_EntropyRift_SimpleClosable_C::RiftPlaneMaterial' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, RiftPlaneDarkMaterial) == 0x0002B0, "Member 'ABP_EntropyRift_SimpleClosable_C::RiftPlaneDarkMaterial' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Cubemap) == 0x0002B8, "Member 'ABP_EntropyRift_SimpleClosable_C::Cubemap' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, Open) == 0x0002C0, "Member 'ABP_EntropyRift_SimpleClosable_C::Open' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, EdgeStrength) == 0x0002C4, "Member 'ABP_EntropyRift_SimpleClosable_C::EdgeStrength' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, MeshDistortion) == 0x0002C8, "Member 'ABP_EntropyRift_SimpleClosable_C::MeshDistortion' has a wrong offset!");
static_assert(offsetof(ABP_EntropyRift_SimpleClosable_C, CubemapDepth) == 0x0002CC, "Member 'ABP_EntropyRift_SimpleClosable_C::CubemapDepth' has a wrong offset!");

}

