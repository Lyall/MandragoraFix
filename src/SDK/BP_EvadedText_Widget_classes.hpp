#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EvadedText_Widget

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_EvadedText_Widget.BP_EvadedText_Widget_C
// 0x0018 (0x0278 - 0x0260)
class UBP_EvadedText_Widget_C final : public UUserWidget
{
public:
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x0260(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             Caption;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         NumberOfFadeInCalles;                              // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void FadeIn();
	void FadeOut();
	void SetAlpha(float Alpha);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EvadedText_Widget_C">();
	}
	static class UBP_EvadedText_Widget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_EvadedText_Widget_C>();
	}
};
static_assert(alignof(UBP_EvadedText_Widget_C) == 0x000008, "Wrong alignment on UBP_EvadedText_Widget_C");
static_assert(sizeof(UBP_EvadedText_Widget_C) == 0x000278, "Wrong size on UBP_EvadedText_Widget_C");
static_assert(offsetof(UBP_EvadedText_Widget_C, FadeInAnim) == 0x000260, "Member 'UBP_EvadedText_Widget_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_EvadedText_Widget_C, Caption) == 0x000268, "Member 'UBP_EvadedText_Widget_C::Caption' has a wrong offset!");
static_assert(offsetof(UBP_EvadedText_Widget_C, NumberOfFadeInCalles) == 0x000270, "Member 'UBP_EvadedText_Widget_C::NumberOfFadeInCalles' has a wrong offset!");

}

