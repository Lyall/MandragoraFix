#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Faust_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BP_Faust_Anim.BP_Faust_Anim_C
// 0x0750 (0x0E40 - 0x06F0)
class UBP_Faust_Anim_C final : public UNpcAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x06F8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0728(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0750(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0778(0x00E8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0860(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0928(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x09A8(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x09D8(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0AC0(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0B68(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0BE8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0C18(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0CC8(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0D48(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0D90(0x00A8)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_BP_Faust_Anim(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Faust_Anim_C">();
	}
	static class UBP_Faust_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Faust_Anim_C>();
	}
};
static_assert(alignof(UBP_Faust_Anim_C) == 0x000010, "Wrong alignment on UBP_Faust_Anim_C");
static_assert(sizeof(UBP_Faust_Anim_C) == 0x000E40, "Wrong size on UBP_Faust_Anim_C");
static_assert(offsetof(UBP_Faust_Anim_C, UberGraphFrame) == 0x0006F0, "Member 'UBP_Faust_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_Root) == 0x0006F8, "Member 'UBP_Faust_Anim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_TransitionResult_1) == 0x000728, "Member 'UBP_Faust_Anim_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_TransitionResult) == 0x000750, "Member 'UBP_Faust_Anim_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000778, "Member 'UBP_Faust_Anim_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_ApplyAdditive) == 0x000860, "Member 'UBP_Faust_Anim_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_SequencePlayer_2) == 0x000928, "Member 'UBP_Faust_Anim_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_StateResult_1) == 0x0009A8, "Member 'UBP_Faust_Anim_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_BlendSpacePlayer) == 0x0009D8, "Member 'UBP_Faust_Anim_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_BlendListByBool_1) == 0x000AC0, "Member 'UBP_Faust_Anim_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_SequencePlayer_1) == 0x000B68, "Member 'UBP_Faust_Anim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_StateResult) == 0x000BE8, "Member 'UBP_Faust_Anim_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_StateMachine) == 0x000C18, "Member 'UBP_Faust_Anim_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_SequencePlayer) == 0x000CC8, "Member 'UBP_Faust_Anim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_Slot) == 0x000D48, "Member 'UBP_Faust_Anim_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UBP_Faust_Anim_C, AnimGraphNode_BlendListByBool) == 0x000D90, "Member 'UBP_Faust_Anim_C::AnimGraphNode_BlendListByBool' has a wrong offset!");

}

