#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FeatureUnlock

#include "Basic.hpp"

#include "BP_FeatureUnlock_classes.hpp"
#include "BP_FeatureUnlock_parameters.hpp"


namespace SDK
{

// Function BP_FeatureUnlock.BP_FeatureUnlock_C.ExecuteUbergraph_BP_FeatureUnlock
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FeatureUnlock_C::ExecuteUbergraph_BP_FeatureUnlock(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeatureUnlock_C", "ExecuteUbergraph_BP_FeatureUnlock");

	Params::BP_FeatureUnlock_C_ExecuteUbergraph_BP_FeatureUnlock Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FeatureUnlock.BP_FeatureUnlock_C.OnSetData
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FHUDPopupQueue                   InHUDPopupQueue                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_FeatureUnlock_C::OnSetData(const struct FHUDPopupQueue& InHUDPopupQueue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeatureUnlock_C", "OnSetData");

	Params::BP_FeatureUnlock_C_OnSetData Parms{};

	Parms.InHUDPopupQueue = std::move(InHUDPopupQueue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FeatureUnlock.BP_FeatureUnlock_C.OnShow
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FeatureUnlock_C::OnShow(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeatureUnlock_C", "OnShow");

	Params::BP_FeatureUnlock_C_OnShow Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FeatureUnlock.BP_FeatureUnlock_C.OnHide
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FeatureUnlock_C::OnHide(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeatureUnlock_C", "OnHide");

	Params::BP_FeatureUnlock_C_OnHide Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FeatureUnlock.BP_FeatureUnlock_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FeatureUnlock_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeatureUnlock_C", "Tick");

	Params::BP_FeatureUnlock_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FeatureUnlock.BP_FeatureUnlock_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_FeatureUnlock_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeatureUnlock_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FeatureUnlock.BP_FeatureUnlock_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FeatureUnlock_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeatureUnlock_C", "PreConstruct");

	Params::BP_FeatureUnlock_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FeatureUnlock.BP_FeatureUnlock_C.SetData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Name_0                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UTexture2D*                       Icon_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FeatureUnlock_C::SetData(const class FText& Param_Name_0, class UTexture2D* Icon_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FeatureUnlock_C", "SetData");

	Params::BP_FeatureUnlock_C_SetData Parms{};

	Parms.Param_Name_0 = std::move(Param_Name_0);
	Parms.Icon_0 = Icon_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

