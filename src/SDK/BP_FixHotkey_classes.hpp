#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FixHotkey

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_FixHotkey.BP_FixHotkey_C
// 0x0030 (0x02B8 - 0x0288)
class UBP_FixHotkey_C final : public UFixHotkeyUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HorizontalBox;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            Hotkey;                                            // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HotkeyNameText;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              HotkeyScaleBox;                                    // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          LeftHotkey;                                        // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_FixHotkey(int32 EntryPoint);
	void OnSetHotkeyNameText(const class FText& InHotkeyNameText);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FixHotkey_C">();
	}
	static class UBP_FixHotkey_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FixHotkey_C>();
	}
};
static_assert(alignof(UBP_FixHotkey_C) == 0x000008, "Wrong alignment on UBP_FixHotkey_C");
static_assert(sizeof(UBP_FixHotkey_C) == 0x0002B8, "Wrong size on UBP_FixHotkey_C");
static_assert(offsetof(UBP_FixHotkey_C, UberGraphFrame) == 0x000288, "Member 'UBP_FixHotkey_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_FixHotkey_C, HorizontalBox) == 0x000290, "Member 'UBP_FixHotkey_C::HorizontalBox' has a wrong offset!");
static_assert(offsetof(UBP_FixHotkey_C, Hotkey) == 0x000298, "Member 'UBP_FixHotkey_C::Hotkey' has a wrong offset!");
static_assert(offsetof(UBP_FixHotkey_C, HotkeyNameText) == 0x0002A0, "Member 'UBP_FixHotkey_C::HotkeyNameText' has a wrong offset!");
static_assert(offsetof(UBP_FixHotkey_C, HotkeyScaleBox) == 0x0002A8, "Member 'UBP_FixHotkey_C::HotkeyScaleBox' has a wrong offset!");
static_assert(offsetof(UBP_FixHotkey_C, LeftHotkey) == 0x0002B0, "Member 'UBP_FixHotkey_C::LeftHotkey' has a wrong offset!");

}

