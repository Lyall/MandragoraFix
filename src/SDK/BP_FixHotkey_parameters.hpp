#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FixHotkey

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_FixHotkey.BP_FixHotkey_C.ExecuteUbergraph_BP_FixHotkey
// 0x0058 (0x0058 - 0x0000)
struct BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetHotkeyNameText_ReturnValue;            // 0x0008(0x0018)()
	class FText                                   K2Node_Event_InHotkeyNameText;                     // 0x0020(0x0018)(ConstParm)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_1;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_2;    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_3;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey) == 0x000008, "Wrong alignment on BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey");
static_assert(sizeof(BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey) == 0x000058, "Wrong size on BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey");
static_assert(offsetof(BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey, EntryPoint) == 0x000000, "Member 'BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey, CallFunc_GetHotkeyNameText_ReturnValue) == 0x000008, "Member 'BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey::CallFunc_GetHotkeyNameText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey, K2Node_Event_InHotkeyNameText) == 0x000020, "Member 'BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey::K2Node_Event_InHotkeyNameText' has a wrong offset!");
static_assert(offsetof(BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000038, "Member 'BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey, CallFunc_AddChildToHorizontalBox_ReturnValue_1) == 0x000040, "Member 'BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey::CallFunc_AddChildToHorizontalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey, CallFunc_AddChildToHorizontalBox_ReturnValue_2) == 0x000048, "Member 'BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey::CallFunc_AddChildToHorizontalBox_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey, CallFunc_AddChildToHorizontalBox_ReturnValue_3) == 0x000050, "Member 'BP_FixHotkey_C_ExecuteUbergraph_BP_FixHotkey::CallFunc_AddChildToHorizontalBox_ReturnValue_3' has a wrong offset!");

// Function BP_FixHotkey.BP_FixHotkey_C.OnSetHotkeyNameText
// 0x0018 (0x0018 - 0x0000)
struct BP_FixHotkey_C_OnSetHotkeyNameText final
{
public:
	class FText                                   InHotkeyNameText;                                  // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_FixHotkey_C_OnSetHotkeyNameText) == 0x000008, "Wrong alignment on BP_FixHotkey_C_OnSetHotkeyNameText");
static_assert(sizeof(BP_FixHotkey_C_OnSetHotkeyNameText) == 0x000018, "Wrong size on BP_FixHotkey_C_OnSetHotkeyNameText");
static_assert(offsetof(BP_FixHotkey_C_OnSetHotkeyNameText, InHotkeyNameText) == 0x000000, "Member 'BP_FixHotkey_C_OnSetHotkeyNameText::InHotkeyNameText' has a wrong offset!");

// Function BP_FixHotkey.BP_FixHotkey_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_FixHotkey_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FixHotkey_C_PreConstruct) == 0x000001, "Wrong alignment on BP_FixHotkey_C_PreConstruct");
static_assert(sizeof(BP_FixHotkey_C_PreConstruct) == 0x000001, "Wrong size on BP_FixHotkey_C_PreConstruct");
static_assert(offsetof(BP_FixHotkey_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_FixHotkey_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

