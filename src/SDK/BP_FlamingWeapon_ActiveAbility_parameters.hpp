#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlamingWeapon_ActiveAbility

#include "Basic.hpp"

#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_FlamingWeapon_ActiveAbility.BP_FlamingWeapon_ActiveAbility_C.ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility
// 0x0050 (0x0050 - 0x0000)
struct BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(class UAbilityBase* InAbility)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAbilityBase* InAbility)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityBase*                           K2Node_CustomEvent_InAbility_1;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInterrupted_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityBase*                           K2Node_CustomEvent_InAbility;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility) == 0x000008, "Wrong alignment on BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility");
static_assert(sizeof(BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility) == 0x000050, "Wrong size on BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility");
static_assert(offsetof(BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility, EntryPoint) == 0x000000, "Member 'BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility, Temp_delegate_Variable) == 0x000004, "Member 'BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility, CallFunc_PostEvent_ReturnValue) == 0x000024, "Member 'BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility, K2Node_CustomEvent_InAbility_1) == 0x000038, "Member 'BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility::K2Node_CustomEvent_InAbility_1' has a wrong offset!");
static_assert(offsetof(BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility, CallFunc_IsInterrupted_ReturnValue) == 0x000040, "Member 'BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility::CallFunc_IsInterrupted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility, K2Node_CustomEvent_InAbility) == 0x000048, "Member 'BP_FlamingWeapon_ActiveAbility_C_ExecuteUbergraph_BP_FlamingWeapon_ActiveAbility::K2Node_CustomEvent_InAbility' has a wrong offset!");

// Function BP_FlamingWeapon_ActiveAbility.BP_FlamingWeapon_ActiveAbility_C.EventOnEnded_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_FlamingWeapon_ActiveAbility_C_EventOnEnded_Event_0 final
{
public:
	class UAbilityBase*                           InAbility;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlamingWeapon_ActiveAbility_C_EventOnEnded_Event_0) == 0x000008, "Wrong alignment on BP_FlamingWeapon_ActiveAbility_C_EventOnEnded_Event_0");
static_assert(sizeof(BP_FlamingWeapon_ActiveAbility_C_EventOnEnded_Event_0) == 0x000008, "Wrong size on BP_FlamingWeapon_ActiveAbility_C_EventOnEnded_Event_0");
static_assert(offsetof(BP_FlamingWeapon_ActiveAbility_C_EventOnEnded_Event_0, InAbility) == 0x000000, "Member 'BP_FlamingWeapon_ActiveAbility_C_EventOnEnded_Event_0::InAbility' has a wrong offset!");

// Function BP_FlamingWeapon_ActiveAbility.BP_FlamingWeapon_ActiveAbility_C.EventOnEnding_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_FlamingWeapon_ActiveAbility_C_EventOnEnding_Event_0 final
{
public:
	class UAbilityBase*                           InAbility;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlamingWeapon_ActiveAbility_C_EventOnEnding_Event_0) == 0x000008, "Wrong alignment on BP_FlamingWeapon_ActiveAbility_C_EventOnEnding_Event_0");
static_assert(sizeof(BP_FlamingWeapon_ActiveAbility_C_EventOnEnding_Event_0) == 0x000008, "Wrong size on BP_FlamingWeapon_ActiveAbility_C_EventOnEnding_Event_0");
static_assert(offsetof(BP_FlamingWeapon_ActiveAbility_C_EventOnEnding_Event_0, InAbility) == 0x000000, "Member 'BP_FlamingWeapon_ActiveAbility_C_EventOnEnding_Event_0::InAbility' has a wrong offset!");

}

