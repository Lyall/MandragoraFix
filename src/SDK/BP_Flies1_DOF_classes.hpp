#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Flies1_DOF

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Flies1_DOF.BP_Flies1_DOF_C
// 0x0080 (0x02A8 - 0x0228)
class ABP_Flies1_DOF_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UManVisualController*                   ManVisualController;                               // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem_DOFcapable;                         // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Moths;                                             // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Flies;                                             // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OrbitRadiusMoth;                                   // 0x0258(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OrbitRadiusFlies;                                  // 0x0264(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0270(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x027C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MothScale;                                         // 0x028C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FlyScale;                                          // 0x0298(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_Flies1_DOF(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Flies1_DOF_C">();
	}
	static class ABP_Flies1_DOF_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Flies1_DOF_C>();
	}
};
static_assert(alignof(ABP_Flies1_DOF_C) == 0x000008, "Wrong alignment on ABP_Flies1_DOF_C");
static_assert(sizeof(ABP_Flies1_DOF_C) == 0x0002A8, "Wrong size on ABP_Flies1_DOF_C");
static_assert(offsetof(ABP_Flies1_DOF_C, UberGraphFrame) == 0x000228, "Member 'ABP_Flies1_DOF_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Flies1_DOF_C, Ak) == 0x000230, "Member 'ABP_Flies1_DOF_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_Flies1_DOF_C, ManVisualController) == 0x000238, "Member 'ABP_Flies1_DOF_C::ManVisualController' has a wrong offset!");
static_assert(offsetof(ABP_Flies1_DOF_C, ParticleSystem_DOFcapable) == 0x000240, "Member 'ABP_Flies1_DOF_C::ParticleSystem_DOFcapable' has a wrong offset!");
static_assert(offsetof(ABP_Flies1_DOF_C, DefaultSceneRoot) == 0x000248, "Member 'ABP_Flies1_DOF_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Flies1_DOF_C, Moths) == 0x000250, "Member 'ABP_Flies1_DOF_C::Moths' has a wrong offset!");
static_assert(offsetof(ABP_Flies1_DOF_C, Flies) == 0x000254, "Member 'ABP_Flies1_DOF_C::Flies' has a wrong offset!");
static_assert(offsetof(ABP_Flies1_DOF_C, OrbitRadiusMoth) == 0x000258, "Member 'ABP_Flies1_DOF_C::OrbitRadiusMoth' has a wrong offset!");
static_assert(offsetof(ABP_Flies1_DOF_C, OrbitRadiusFlies) == 0x000264, "Member 'ABP_Flies1_DOF_C::OrbitRadiusFlies' has a wrong offset!");
static_assert(offsetof(ABP_Flies1_DOF_C, Velocity) == 0x000270, "Member 'ABP_Flies1_DOF_C::Velocity' has a wrong offset!");
static_assert(offsetof(ABP_Flies1_DOF_C, Color) == 0x00027C, "Member 'ABP_Flies1_DOF_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_Flies1_DOF_C, MothScale) == 0x00028C, "Member 'ABP_Flies1_DOF_C::MothScale' has a wrong offset!");
static_assert(offsetof(ABP_Flies1_DOF_C, FlyScale) == 0x000298, "Member 'ABP_Flies1_DOF_C::FlyScale' has a wrong offset!");

}

