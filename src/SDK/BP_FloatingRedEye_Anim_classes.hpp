#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FloatingRedEye_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "man_classes.hpp"
#include "KawaiiPhysics_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BP_FloatingRedEye_Anim.BP_FloatingRedEye_Anim_C
// 0x1D10 (0x23B0 - 0x06A0)
class UBP_FloatingRedEye_Anim_C final : public UAnimInstanceBase
{
public:
	uint8                                         Pad_698[0x8];                                      // 0x0698(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x06A8(0x0030)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x06D8(0x00A8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0780(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x07C8(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0848(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0910(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0A68(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0A90(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0AB8(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0B38(0x00A8)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_7;                     // 0x0BE0(0x0250)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0E30(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0E50(0x0020)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_6;                     // 0x0E70(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_5;                     // 0x10C0(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_4;                     // 0x1310(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_3;                     // 0x1560(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_2;                     // 0x17B0(0x0250)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1A00(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1A80(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1AA8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1B28(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1B58(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1BD8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1C08(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1CB8(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1D38(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1E00(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1E80(0x0080)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_1;                     // 0x1F00(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics;                       // 0x2150(0x0250)()
	bool                                          Blinking;                                          // 0x23A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A1[0x3];                                     // 0x23A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlinkTimeBack;                                     // 0x23A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FloatingRedEye_Anim(int32 EntryPoint);
	void AnimNotify_BlinkEnd();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_FloatingRedEye_Anim_AnimGraphNode_KawaiiPhysics_C9AA251742AD544F08B2C58A74EBE0F5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_FloatingRedEye_Anim_AnimGraphNode_KawaiiPhysics_CFB04ECD46267705A9A7BD84988FBA22();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_FloatingRedEye_Anim_AnimGraphNode_KawaiiPhysics_F3FA35D640EAECB9DEFDC0991ADF466A();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_FloatingRedEye_Anim_AnimGraphNode_KawaiiPhysics_5526F3D749B5FA5AC6B089BB066BB5D2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_FloatingRedEye_Anim_AnimGraphNode_KawaiiPhysics_CD9C5F3B4468BF9765102DA5BE4290E9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_FloatingRedEye_Anim_AnimGraphNode_KawaiiPhysics_5E5B5133442E171A79CE1BA64E527FAC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_FloatingRedEye_Anim_AnimGraphNode_ApplyAdditive_BA8A12314247D032508D629E694C70F6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_FloatingRedEye_Anim_AnimGraphNode_KawaiiPhysics_FC6A14554BA51BD3209654A87AE9E958();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_FloatingRedEye_Anim_AnimGraphNode_KawaiiPhysics_5F961C77484FB3E265CE8B9CD0A0F22E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_FloatingRedEye_Anim_AnimGraphNode_TransitionResult_6305F5E1499EA80EEE816BB61BA21270();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FloatingRedEye_Anim_C">();
	}
	static class UBP_FloatingRedEye_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FloatingRedEye_Anim_C>();
	}
};
static_assert(alignof(UBP_FloatingRedEye_Anim_C) == 0x000010, "Wrong alignment on UBP_FloatingRedEye_Anim_C");
static_assert(sizeof(UBP_FloatingRedEye_Anim_C) == 0x0023B0, "Wrong size on UBP_FloatingRedEye_Anim_C");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, UberGraphFrame) == 0x0006A0, "Member 'UBP_FloatingRedEye_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_Root) == 0x0006A8, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_BlendListByInt) == 0x0006D8, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_Slot) == 0x000780, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_SequencePlayer_7) == 0x0007C8, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_ApplyAdditive_1) == 0x000848, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_SaveCachedPose) == 0x000910, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_UseCachedPose_1) == 0x000A68, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_UseCachedPose) == 0x000A90, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_SequencePlayer_6) == 0x000AB8, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_BlendListByBool) == 0x000B38, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_KawaiiPhysics_7) == 0x000BE0, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_KawaiiPhysics_7' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_LocalToComponentSpace) == 0x000E30, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_ComponentToLocalSpace) == 0x000E50, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_KawaiiPhysics_6) == 0x000E70, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_KawaiiPhysics_6' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_KawaiiPhysics_5) == 0x0010C0, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_KawaiiPhysics_5' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_KawaiiPhysics_4) == 0x001310, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_KawaiiPhysics_4' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_KawaiiPhysics_3) == 0x001560, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_KawaiiPhysics_3' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_KawaiiPhysics_2) == 0x0017B0, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_KawaiiPhysics_2' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_SequencePlayer_5) == 0x001A00, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_TransitionResult) == 0x001A80, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_SequencePlayer_4) == 0x001AA8, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_StateResult_1) == 0x001B28, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_SequencePlayer_3) == 0x001B58, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_StateResult) == 0x001BD8, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_StateMachine) == 0x001C08, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_SequencePlayer_2) == 0x001CB8, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_ApplyAdditive) == 0x001D38, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_SequencePlayer_1) == 0x001E00, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_SequencePlayer) == 0x001E80, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_KawaiiPhysics_1) == 0x001F00, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_KawaiiPhysics_1' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, AnimGraphNode_KawaiiPhysics) == 0x002150, "Member 'UBP_FloatingRedEye_Anim_C::AnimGraphNode_KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, Blinking) == 0x0023A0, "Member 'UBP_FloatingRedEye_Anim_C::Blinking' has a wrong offset!");
static_assert(offsetof(UBP_FloatingRedEye_Anim_C, BlinkTimeBack) == 0x0023A4, "Member 'UBP_FloatingRedEye_Anim_C::BlinkTimeBack' has a wrong offset!");

}

