#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FloatingSimpleEye_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FloatingSimpleEye_Anim.BP_FloatingSimpleEye_Anim_C.ExecuteUbergraph_BP_FloatingSimpleEye_Anim
// 0x001C (0x001C - 0x0000)
struct BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimToggled_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimToggled_ReturnValue_1;              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim) == 0x000004, "Wrong alignment on BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim");
static_assert(sizeof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim) == 0x00001C, "Wrong size on BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim, EntryPoint) == 0x000000, "Member 'BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim, CallFunc_IsAnimToggled_ReturnValue) == 0x000009, "Member 'BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim::CallFunc_IsAnimToggled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim, CallFunc_IsAnimToggled_ReturnValue_1) == 0x00000B, "Member 'BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim::CallFunc_IsAnimToggled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim, CallFunc_BooleanOR_ReturnValue_1) == 0x00000C, "Member 'BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim, CallFunc_GetCurveValue_ReturnValue) == 0x000010, "Member 'BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim, K2Node_Event_DeltaTimeX) == 0x000014, "Member 'BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_FloatingSimpleEye_Anim_C_ExecuteUbergraph_BP_FloatingSimpleEye_Anim::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_FloatingSimpleEye_Anim.BP_FloatingSimpleEye_Anim_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct BP_FloatingSimpleEye_Anim_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FloatingSimpleEye_Anim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on BP_FloatingSimpleEye_Anim_C_BlueprintUpdateAnimation");
static_assert(sizeof(BP_FloatingSimpleEye_Anim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on BP_FloatingSimpleEye_Anim_C_BlueprintUpdateAnimation");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'BP_FloatingSimpleEye_Anim_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function BP_FloatingSimpleEye_Anim.BP_FloatingSimpleEye_Anim_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct BP_FloatingSimpleEye_Anim_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BP_FloatingSimpleEye_Anim_C_AnimGraph) == 0x000008, "Wrong alignment on BP_FloatingSimpleEye_Anim_C_AnimGraph");
static_assert(sizeof(BP_FloatingSimpleEye_Anim_C_AnimGraph) == 0x000010, "Wrong size on BP_FloatingSimpleEye_Anim_C_AnimGraph");
static_assert(offsetof(BP_FloatingSimpleEye_Anim_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'BP_FloatingSimpleEye_Anim_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

