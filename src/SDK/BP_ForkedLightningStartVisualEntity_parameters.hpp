#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ForkedLightningStartVisualEntity

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_ForkedLightningStartVisualEntity.BP_ForkedLightningStartVisualEntity_C.ExecuteUbergraph_BP_ForkedLightningStartVisualEntity
// 0x0004 (0x0004 - 0x0000)
struct BP_ForkedLightningStartVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningStartVisualEntity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ForkedLightningStartVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningStartVisualEntity) == 0x000004, "Wrong alignment on BP_ForkedLightningStartVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningStartVisualEntity");
static_assert(sizeof(BP_ForkedLightningStartVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningStartVisualEntity) == 0x000004, "Wrong size on BP_ForkedLightningStartVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningStartVisualEntity");
static_assert(offsetof(BP_ForkedLightningStartVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningStartVisualEntity, EntryPoint) == 0x000000, "Member 'BP_ForkedLightningStartVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningStartVisualEntity::EntryPoint' has a wrong offset!");

// Function BP_ForkedLightningStartVisualEntity.BP_ForkedLightningStartVisualEntity_C.SetTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_ForkedLightningStartVisualEntity_C_SetTarget final
{
public:
	class USkeletalMeshComponent*                 SkelMesh1;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ForkedLightningStartVisualEntity_C_SetTarget) == 0x000008, "Wrong alignment on BP_ForkedLightningStartVisualEntity_C_SetTarget");
static_assert(sizeof(BP_ForkedLightningStartVisualEntity_C_SetTarget) == 0x000010, "Wrong size on BP_ForkedLightningStartVisualEntity_C_SetTarget");
static_assert(offsetof(BP_ForkedLightningStartVisualEntity_C_SetTarget, SkelMesh1) == 0x000000, "Member 'BP_ForkedLightningStartVisualEntity_C_SetTarget::SkelMesh1' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningStartVisualEntity_C_SetTarget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ForkedLightningStartVisualEntity_C_SetTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

