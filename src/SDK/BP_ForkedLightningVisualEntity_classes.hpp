#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ForkedLightningVisualEntity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ForkedLightningVisualEntity.BP_ForkedLightningVisualEntity_C
// 0x0030 (0x0380 - 0x0350)
class ABP_ForkedLightningVisualEntity_C final : public AVisualEntity
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      ForkedLightningVFX;                                // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         AlteredBeamCount;                                  // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterBase*                         As_Character_Base_0;                               // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForkedLightningAbility*                LightningAbility;                                  // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlipFlop;                                          // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_ForkedLightningVisualEntity(int32 EntryPoint);
	void VisualEntityConstructionFinished();
	void ReceiveTick(float DeltaSeconds);
	void OnKill();
	void TargetChange(class USkeletalMeshComponent* Target1, class USkeletalMeshComponent* Target2);
	void SetTarget(class USkeletalMeshComponent* SkelMesh1);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ForkedLightningVisualEntity_C">();
	}
	static class ABP_ForkedLightningVisualEntity_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ForkedLightningVisualEntity_C>();
	}
};
static_assert(alignof(ABP_ForkedLightningVisualEntity_C) == 0x000008, "Wrong alignment on ABP_ForkedLightningVisualEntity_C");
static_assert(sizeof(ABP_ForkedLightningVisualEntity_C) == 0x000380, "Wrong size on ABP_ForkedLightningVisualEntity_C");
static_assert(offsetof(ABP_ForkedLightningVisualEntity_C, UberGraphFrame) == 0x000350, "Member 'ABP_ForkedLightningVisualEntity_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ForkedLightningVisualEntity_C, ForkedLightningVFX) == 0x000358, "Member 'ABP_ForkedLightningVisualEntity_C::ForkedLightningVFX' has a wrong offset!");
static_assert(offsetof(ABP_ForkedLightningVisualEntity_C, AlteredBeamCount) == 0x000360, "Member 'ABP_ForkedLightningVisualEntity_C::AlteredBeamCount' has a wrong offset!");
static_assert(offsetof(ABP_ForkedLightningVisualEntity_C, As_Character_Base_0) == 0x000368, "Member 'ABP_ForkedLightningVisualEntity_C::As_Character_Base_0' has a wrong offset!");
static_assert(offsetof(ABP_ForkedLightningVisualEntity_C, LightningAbility) == 0x000370, "Member 'ABP_ForkedLightningVisualEntity_C::LightningAbility' has a wrong offset!");
static_assert(offsetof(ABP_ForkedLightningVisualEntity_C, FlipFlop) == 0x000378, "Member 'ABP_ForkedLightningVisualEntity_C::FlipFlop' has a wrong offset!");

}

