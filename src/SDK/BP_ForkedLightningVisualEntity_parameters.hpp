#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ForkedLightningVisualEntity

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ForkedLightningVisualEntity.BP_ForkedLightningVisualEntity_C.ExecuteUbergraph_BP_ForkedLightningVisualEntity
// 0x0110 (0x0110 - 0x0000)
struct BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_CustomEvent_Target1;                        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_CustomEvent_Target2;                        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMandragoraGameMode*                    CallFunc_GetManGameMode_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAbilityUpgradeUnlocked_ReturnValue;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           CallFunc_BPGetAbilityByName_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAbilityUpgradeUnlocked_ReturnValue_1;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UForkedLightningAbility*                K2Node_DynamicCast_AsForked_Lightning_Ability;     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBase*                         K2Node_DynamicCast_AsCharacter_Base;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class USkeletalMeshComponent* Target1, class USkeletalMeshComponent* Target2)> K2Node_CreateDelegate_OutputDelegate;              // 0x0100(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity) == 0x000008, "Wrong alignment on BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity");
static_assert(sizeof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity) == 0x000110, "Wrong size on BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, EntryPoint) == 0x000000, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, CallFunc_SelectRotator_ReturnValue) == 0x000008, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, CallFunc_IsValid_ReturnValue_1) == 0x000014, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, K2Node_CustomEvent_Target1) == 0x000018, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::K2Node_CustomEvent_Target1' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, K2Node_CustomEvent_Target2) == 0x000020, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::K2Node_CustomEvent_Target2' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, CallFunc_GetManGameMode_ReturnValue) == 0x000028, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::CallFunc_GetManGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, CallFunc_IsAbilityUpgradeUnlocked_ReturnValue) == 0x000030, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::CallFunc_IsAbilityUpgradeUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, CallFunc_GetAbilityController_ReturnValue) == 0x000038, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, CallFunc_BPGetAbilityByName_ReturnValue) == 0x000040, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::CallFunc_BPGetAbilityByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, CallFunc_IsAbilityUpgradeUnlocked_ReturnValue_1) == 0x000048, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::CallFunc_IsAbilityUpgradeUnlocked_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, K2Node_DynamicCast_AsForked_Lightning_Ability) == 0x000050, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::K2Node_DynamicCast_AsForked_Lightning_Ability' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, K2Node_DynamicCast_AsCharacter_Base) == 0x000068, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::K2Node_DynamicCast_AsCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, K2Node_Event_DeltaSeconds) == 0x000074, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000078, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity, K2Node_CreateDelegate_OutputDelegate) == 0x000100, "Member 'BP_ForkedLightningVisualEntity_C_ExecuteUbergraph_BP_ForkedLightningVisualEntity::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_ForkedLightningVisualEntity.BP_ForkedLightningVisualEntity_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ForkedLightningVisualEntity_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ForkedLightningVisualEntity_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ForkedLightningVisualEntity_C_ReceiveTick");
static_assert(sizeof(BP_ForkedLightningVisualEntity_C_ReceiveTick) == 0x000004, "Wrong size on BP_ForkedLightningVisualEntity_C_ReceiveTick");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ForkedLightningVisualEntity_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ForkedLightningVisualEntity.BP_ForkedLightningVisualEntity_C.TargetChange
// 0x0010 (0x0010 - 0x0000)
struct BP_ForkedLightningVisualEntity_C_TargetChange final
{
public:
	class USkeletalMeshComponent*                 Target1;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Target2;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ForkedLightningVisualEntity_C_TargetChange) == 0x000008, "Wrong alignment on BP_ForkedLightningVisualEntity_C_TargetChange");
static_assert(sizeof(BP_ForkedLightningVisualEntity_C_TargetChange) == 0x000010, "Wrong size on BP_ForkedLightningVisualEntity_C_TargetChange");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_TargetChange, Target1) == 0x000000, "Member 'BP_ForkedLightningVisualEntity_C_TargetChange::Target1' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_TargetChange, Target2) == 0x000008, "Member 'BP_ForkedLightningVisualEntity_C_TargetChange::Target2' has a wrong offset!");

// Function BP_ForkedLightningVisualEntity.BP_ForkedLightningVisualEntity_C.SetTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_ForkedLightningVisualEntity_C_SetTarget final
{
public:
	class USkeletalMeshComponent*                 SkelMesh1;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ForkedLightningVisualEntity_C_SetTarget) == 0x000008, "Wrong alignment on BP_ForkedLightningVisualEntity_C_SetTarget");
static_assert(sizeof(BP_ForkedLightningVisualEntity_C_SetTarget) == 0x000010, "Wrong size on BP_ForkedLightningVisualEntity_C_SetTarget");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_SetTarget, SkelMesh1) == 0x000000, "Member 'BP_ForkedLightningVisualEntity_C_SetTarget::SkelMesh1' has a wrong offset!");
static_assert(offsetof(BP_ForkedLightningVisualEntity_C_SetTarget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ForkedLightningVisualEntity_C_SetTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

