#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Glossary_Textblock

#include "Basic.hpp"

#include "man_structs.hpp"


namespace SDK::Params
{

// Function BP_Glossary_Textblock.BP_Glossary_Textblock_C.ExecuteUbergraph_BP_Glossary_Textblock
// 0x0050 (0x0050 - 0x0000)
struct BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESmallScreenMode                              CallFunc_GetSmallScreenMode_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESmallScreenMode                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InName;                               // 0x0018(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InDescription;                        // 0x0030(0x0018)(ConstParm)
	bool                                          K2Node_Event_bInVisible;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock) == 0x000008, "Wrong alignment on BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock");
static_assert(sizeof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock) == 0x000050, "Wrong size on BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, EntryPoint) == 0x000000, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, CallFunc_GetSmallScreenMode_ReturnValue) == 0x000004, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::CallFunc_GetSmallScreenMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, Temp_bool_Variable) == 0x000005, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, Temp_float_Variable) == 0x000008, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, Temp_float_Variable_1) == 0x00000C, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, Temp_byte_Variable) == 0x000010, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, Temp_bool_Variable_1) == 0x000011, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, Temp_bool_Variable_2) == 0x000012, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, Temp_bool_Variable_3) == 0x000013, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, Temp_bool_Variable_4) == 0x000014, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, K2Node_Event_IsDesignTime) == 0x000015, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, K2Node_Select_Default) == 0x000016, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, K2Node_Event_InName) == 0x000018, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, K2Node_Event_InDescription) == 0x000030, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::K2Node_Event_InDescription' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, K2Node_Event_bInVisible) == 0x000048, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::K2Node_Event_bInVisible' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock, K2Node_Select_Default_1) == 0x00004C, "Member 'BP_Glossary_Textblock_C_ExecuteUbergraph_BP_Glossary_Textblock::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_Glossary_Textblock.BP_Glossary_Textblock_C.OnSetSeparatorVisible
// 0x0001 (0x0001 - 0x0000)
struct BP_Glossary_Textblock_C_OnSetSeparatorVisible final
{
public:
	bool                                          bInVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Glossary_Textblock_C_OnSetSeparatorVisible) == 0x000001, "Wrong alignment on BP_Glossary_Textblock_C_OnSetSeparatorVisible");
static_assert(sizeof(BP_Glossary_Textblock_C_OnSetSeparatorVisible) == 0x000001, "Wrong size on BP_Glossary_Textblock_C_OnSetSeparatorVisible");
static_assert(offsetof(BP_Glossary_Textblock_C_OnSetSeparatorVisible, bInVisible) == 0x000000, "Member 'BP_Glossary_Textblock_C_OnSetSeparatorVisible::bInVisible' has a wrong offset!");

// Function BP_Glossary_Textblock.BP_Glossary_Textblock_C.OnSetSlot
// 0x0030 (0x0030 - 0x0000)
struct BP_Glossary_Textblock_C_OnSetSlot final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   InDescription;                                     // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Glossary_Textblock_C_OnSetSlot) == 0x000008, "Wrong alignment on BP_Glossary_Textblock_C_OnSetSlot");
static_assert(sizeof(BP_Glossary_Textblock_C_OnSetSlot) == 0x000030, "Wrong size on BP_Glossary_Textblock_C_OnSetSlot");
static_assert(offsetof(BP_Glossary_Textblock_C_OnSetSlot, InName) == 0x000000, "Member 'BP_Glossary_Textblock_C_OnSetSlot::InName' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_OnSetSlot, InDescription) == 0x000018, "Member 'BP_Glossary_Textblock_C_OnSetSlot::InDescription' has a wrong offset!");

// Function BP_Glossary_Textblock.BP_Glossary_Textblock_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Glossary_Textblock_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Glossary_Textblock_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Glossary_Textblock_C_PreConstruct");
static_assert(sizeof(BP_Glossary_Textblock_C_PreConstruct) == 0x000001, "Wrong size on BP_Glossary_Textblock_C_PreConstruct");
static_assert(offsetof(BP_Glossary_Textblock_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Glossary_Textblock_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_Glossary_Textblock.BP_Glossary_Textblock_C.ToggleSmallScreen
// 0x0050 (0x0050 - 0x0000)
struct BP_Glossary_Textblock_C_ToggleSmallScreen final
{
public:
	bool                                          InIsSmallScreen;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default_2;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Glossary_Textblock_C_ToggleSmallScreen) == 0x000008, "Wrong alignment on BP_Glossary_Textblock_C_ToggleSmallScreen");
static_assert(sizeof(BP_Glossary_Textblock_C_ToggleSmallScreen) == 0x000050, "Wrong size on BP_Glossary_Textblock_C_ToggleSmallScreen");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, InIsSmallScreen) == 0x000000, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::InIsSmallScreen' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, Temp_bool_Variable) == 0x000001, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, Temp_float_Variable) == 0x000004, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, Temp_float_Variable_1) == 0x000008, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, Temp_object_Variable) == 0x000010, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, Temp_object_Variable_1) == 0x000018, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, Temp_bool_Variable_2) == 0x000020, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, Temp_object_Variable_2) == 0x000028, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, Temp_object_Variable_3) == 0x000030, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, K2Node_Select_Default) == 0x000038, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, K2Node_Select_Default_1) == 0x000040, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_Textblock_C_ToggleSmallScreen, K2Node_Select_Default_2) == 0x000048, "Member 'BP_Glossary_Textblock_C_ToggleSmallScreen::K2Node_Select_Default_2' has a wrong offset!");

}

