#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Glossary

#include "Basic.hpp"

#include "man_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Glossary.BP_Glossary_C.ExecuteUbergraph_BP_Glossary
// 0x0100 (0x0100 - 0x0000)
struct BP_Glossary_C_ExecuteUbergraph_BP_Glossary final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0034(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInEnabled_1;                         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInEnabled;                           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InPageNumberLeft;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InPageNumberRight;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInRightPageEmpty;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x00B8(0x0018)()
	class FText                                   CallFunc_IntToText_ReturnValue_1;                  // 0x00D0(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInMapShowing;                        // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InInputDisplay;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InControlDisplay;                     // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary) == 0x000008, "Wrong alignment on BP_Glossary_C_ExecuteUbergraph_BP_Glossary");
static_assert(sizeof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary) == 0x000100, "Wrong size on BP_Glossary_C_ExecuteUbergraph_BP_Glossary");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, EntryPoint) == 0x000000, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, Temp_object_Variable) == 0x000008, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, Temp_object_Variable_1) == 0x000010, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, Temp_bool_Variable) == 0x000018, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, Temp_object_Variable_2) == 0x000020, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, Temp_object_Variable_3) == 0x000028, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, Temp_bool_Variable_1) == 0x000030, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, Temp_byte_Variable) == 0x000031, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, Temp_byte_Variable_1) == 0x000032, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Event_MyGeometry) == 0x000034, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Event_InDeltaTime) == 0x00006C, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Event_AnimDuration_1) == 0x000070, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x000074, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Event_AnimDuration) == 0x000078, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, CallFunc_PlayAnimation_ReturnValue) == 0x000080, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000088, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, CallFunc_PlayAnimation_ReturnValue_1) == 0x000090, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Event_bInEnabled_1) == 0x000098, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Event_bInEnabled_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Event_bInEnabled) == 0x000099, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Event_bInEnabled' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Event_InPageNumberLeft) == 0x00009C, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Event_InPageNumberLeft' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Event_InPageNumberRight) == 0x0000A0, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Event_InPageNumberRight' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Event_bInRightPageEmpty) == 0x0000A4, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Event_bInRightPageEmpty' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Select_Default) == 0x0000A8, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Select_Default_1) == 0x0000B0, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, CallFunc_IntToText_ReturnValue) == 0x0000B8, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, CallFunc_IntToText_ReturnValue_1) == 0x0000D0, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::CallFunc_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, Temp_bool_Variable_2) == 0x0000E8, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Event_bInMapShowing) == 0x0000E9, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Event_bInMapShowing' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Select_Default_2) == 0x0000F0, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Event_InInputDisplay) == 0x0000F8, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Event_InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_ExecuteUbergraph_BP_Glossary, K2Node_Event_InControlDisplay) == 0x0000F9, "Member 'BP_Glossary_C_ExecuteUbergraph_BP_Glossary::K2Node_Event_InControlDisplay' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.OnSetInputDisplay
// 0x0002 (0x0002 - 0x0000)
struct BP_Glossary_C_OnSetInputDisplay final
{
public:
	EInputDisplay                                 InInputDisplay;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 InControlDisplay;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Glossary_C_OnSetInputDisplay) == 0x000001, "Wrong alignment on BP_Glossary_C_OnSetInputDisplay");
static_assert(sizeof(BP_Glossary_C_OnSetInputDisplay) == 0x000002, "Wrong size on BP_Glossary_C_OnSetInputDisplay");
static_assert(offsetof(BP_Glossary_C_OnSetInputDisplay, InInputDisplay) == 0x000000, "Member 'BP_Glossary_C_OnSetInputDisplay::InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_OnSetInputDisplay, InControlDisplay) == 0x000001, "Member 'BP_Glossary_C_OnSetInputDisplay::InControlDisplay' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.OnMapShowing
// 0x0001 (0x0001 - 0x0000)
struct BP_Glossary_C_OnMapShowing final
{
public:
	bool                                          bInMapShowing;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Glossary_C_OnMapShowing) == 0x000001, "Wrong alignment on BP_Glossary_C_OnMapShowing");
static_assert(sizeof(BP_Glossary_C_OnMapShowing) == 0x000001, "Wrong size on BP_Glossary_C_OnMapShowing");
static_assert(offsetof(BP_Glossary_C_OnMapShowing, bInMapShowing) == 0x000000, "Member 'BP_Glossary_C_OnMapShowing::bInMapShowing' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.OnPageReady
// 0x000C (0x000C - 0x0000)
struct BP_Glossary_C_OnPageReady final
{
public:
	int32                                         InPageNumberLeft;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InPageNumberRight;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInRightPageEmpty;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Glossary_C_OnPageReady) == 0x000004, "Wrong alignment on BP_Glossary_C_OnPageReady");
static_assert(sizeof(BP_Glossary_C_OnPageReady) == 0x00000C, "Wrong size on BP_Glossary_C_OnPageReady");
static_assert(offsetof(BP_Glossary_C_OnPageReady, InPageNumberLeft) == 0x000000, "Member 'BP_Glossary_C_OnPageReady::InPageNumberLeft' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_OnPageReady, InPageNumberRight) == 0x000004, "Member 'BP_Glossary_C_OnPageReady::InPageNumberRight' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_OnPageReady, bInRightPageEmpty) == 0x000008, "Member 'BP_Glossary_C_OnPageReady::bInRightPageEmpty' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.OnSetNextBtnState
// 0x0001 (0x0001 - 0x0000)
struct BP_Glossary_C_OnSetNextBtnState final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Glossary_C_OnSetNextBtnState) == 0x000001, "Wrong alignment on BP_Glossary_C_OnSetNextBtnState");
static_assert(sizeof(BP_Glossary_C_OnSetNextBtnState) == 0x000001, "Wrong size on BP_Glossary_C_OnSetNextBtnState");
static_assert(offsetof(BP_Glossary_C_OnSetNextBtnState, bInEnabled) == 0x000000, "Member 'BP_Glossary_C_OnSetNextBtnState::bInEnabled' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.OnSetPrevBtnState
// 0x0001 (0x0001 - 0x0000)
struct BP_Glossary_C_OnSetPrevBtnState final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Glossary_C_OnSetPrevBtnState) == 0x000001, "Wrong alignment on BP_Glossary_C_OnSetPrevBtnState");
static_assert(sizeof(BP_Glossary_C_OnSetPrevBtnState) == 0x000001, "Wrong size on BP_Glossary_C_OnSetPrevBtnState");
static_assert(offsetof(BP_Glossary_C_OnSetPrevBtnState, bInEnabled) == 0x000000, "Member 'BP_Glossary_C_OnSetPrevBtnState::bInEnabled' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_Glossary_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Glossary_C_OnHide) == 0x000004, "Wrong alignment on BP_Glossary_C_OnHide");
static_assert(sizeof(BP_Glossary_C_OnHide) == 0x000004, "Wrong size on BP_Glossary_C_OnHide");
static_assert(offsetof(BP_Glossary_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_Glossary_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_Glossary_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Glossary_C_OnShow) == 0x000004, "Wrong alignment on BP_Glossary_C_OnShow");
static_assert(sizeof(BP_Glossary_C_OnShow) == 0x000004, "Wrong size on BP_Glossary_C_OnShow");
static_assert(offsetof(BP_Glossary_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_Glossary_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_Glossary_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Glossary_C_Tick) == 0x000004, "Wrong alignment on BP_Glossary_C_Tick");
static_assert(sizeof(BP_Glossary_C_Tick) == 0x00003C, "Wrong size on BP_Glossary_C_Tick");
static_assert(offsetof(BP_Glossary_C_Tick, MyGeometry) == 0x000000, "Member 'BP_Glossary_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_Glossary_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.BtnHotkeyLSRightClicked
// 0x0010 (0x0010 - 0x0000)
struct BP_Glossary_C_BtnHotkeyLSRightClicked final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Glossary_C_BtnHotkeyLSRightClicked) == 0x000008, "Wrong alignment on BP_Glossary_C_BtnHotkeyLSRightClicked");
static_assert(sizeof(BP_Glossary_C_BtnHotkeyLSRightClicked) == 0x000010, "Wrong size on BP_Glossary_C_BtnHotkeyLSRightClicked");
static_assert(offsetof(BP_Glossary_C_BtnHotkeyLSRightClicked, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_Glossary_C_BtnHotkeyLSRightClicked::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_BtnHotkeyLSRightClicked, CallFunc_GetIsEnabled_ReturnValue) == 0x000008, "Member 'BP_Glossary_C_BtnHotkeyLSRightClicked::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_BtnHotkeyLSRightClicked, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_Glossary_C_BtnHotkeyLSRightClicked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_BtnHotkeyLSRightClicked, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000A, "Member 'BP_Glossary_C_BtnHotkeyLSRightClicked::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_BtnHotkeyLSRightClicked, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'BP_Glossary_C_BtnHotkeyLSRightClicked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_BtnHotkeyLSRightClicked, CallFunc_BooleanAND_ReturnValue_1) == 0x00000C, "Member 'BP_Glossary_C_BtnHotkeyLSRightClicked::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.BtnHotkeyLSLeftClicked
// 0x0010 (0x0010 - 0x0000)
struct BP_Glossary_C_BtnHotkeyLSLeftClicked final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Glossary_C_BtnHotkeyLSLeftClicked) == 0x000008, "Wrong alignment on BP_Glossary_C_BtnHotkeyLSLeftClicked");
static_assert(sizeof(BP_Glossary_C_BtnHotkeyLSLeftClicked) == 0x000010, "Wrong size on BP_Glossary_C_BtnHotkeyLSLeftClicked");
static_assert(offsetof(BP_Glossary_C_BtnHotkeyLSLeftClicked, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_Glossary_C_BtnHotkeyLSLeftClicked::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_BtnHotkeyLSLeftClicked, CallFunc_GetIsEnabled_ReturnValue) == 0x000008, "Member 'BP_Glossary_C_BtnHotkeyLSLeftClicked::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_BtnHotkeyLSLeftClicked, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_Glossary_C_BtnHotkeyLSLeftClicked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_BtnHotkeyLSLeftClicked, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000A, "Member 'BP_Glossary_C_BtnHotkeyLSLeftClicked::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_BtnHotkeyLSLeftClicked, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'BP_Glossary_C_BtnHotkeyLSLeftClicked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_BtnHotkeyLSLeftClicked, CallFunc_BooleanAND_ReturnValue_1) == 0x00000C, "Member 'BP_Glossary_C_BtnHotkeyLSLeftClicked::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.FadeOutText
// 0x0018 (0x0018 - 0x0000)
struct BP_Glossary_C_FadeOutText final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Glossary_C_FadeOutText) == 0x000008, "Wrong alignment on BP_Glossary_C_FadeOutText");
static_assert(sizeof(BP_Glossary_C_FadeOutText) == 0x000018, "Wrong size on BP_Glossary_C_FadeOutText");
static_assert(offsetof(BP_Glossary_C_FadeOutText, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_Glossary_C_FadeOutText::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_FadeOutText, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_Glossary_C_FadeOutText::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.FadeInText
// 0x0008 (0x0008 - 0x0000)
struct BP_Glossary_C_FadeInText final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Glossary_C_FadeInText) == 0x000008, "Wrong alignment on BP_Glossary_C_FadeInText");
static_assert(sizeof(BP_Glossary_C_FadeInText) == 0x000008, "Wrong size on BP_Glossary_C_FadeInText");
static_assert(offsetof(BP_Glossary_C_FadeInText, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_Glossary_C_FadeInText::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.FadeInMap
// 0x0008 (0x0008 - 0x0000)
struct BP_Glossary_C_FadeInMap final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Glossary_C_FadeInMap) == 0x000008, "Wrong alignment on BP_Glossary_C_FadeInMap");
static_assert(sizeof(BP_Glossary_C_FadeInMap) == 0x000008, "Wrong size on BP_Glossary_C_FadeInMap");
static_assert(offsetof(BP_Glossary_C_FadeInMap, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_Glossary_C_FadeInMap::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.FadeOutMap
// 0x0008 (0x0008 - 0x0000)
struct BP_Glossary_C_FadeOutMap final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Glossary_C_FadeOutMap) == 0x000008, "Wrong alignment on BP_Glossary_C_FadeOutMap");
static_assert(sizeof(BP_Glossary_C_FadeOutMap) == 0x000008, "Wrong size on BP_Glossary_C_FadeOutMap");
static_assert(offsetof(BP_Glossary_C_FadeOutMap, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_Glossary_C_FadeOutMap::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_Glossary.BP_Glossary_C.SetBtnCloseVisibility
// 0x000B (0x000B - 0x0000)
struct BP_Glossary_C_SetBtnCloseVisibility final
{
public:
	EInputDisplay                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 CallFunc_GetInputDisplay_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Glossary_C_SetBtnCloseVisibility) == 0x000001, "Wrong alignment on BP_Glossary_C_SetBtnCloseVisibility");
static_assert(sizeof(BP_Glossary_C_SetBtnCloseVisibility) == 0x00000B, "Wrong size on BP_Glossary_C_SetBtnCloseVisibility");
static_assert(offsetof(BP_Glossary_C_SetBtnCloseVisibility, Temp_byte_Variable) == 0x000000, "Member 'BP_Glossary_C_SetBtnCloseVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_SetBtnCloseVisibility, Temp_byte_Variable_1) == 0x000001, "Member 'BP_Glossary_C_SetBtnCloseVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_SetBtnCloseVisibility, Temp_byte_Variable_2) == 0x000002, "Member 'BP_Glossary_C_SetBtnCloseVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_SetBtnCloseVisibility, Temp_byte_Variable_3) == 0x000003, "Member 'BP_Glossary_C_SetBtnCloseVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_SetBtnCloseVisibility, Temp_byte_Variable_4) == 0x000004, "Member 'BP_Glossary_C_SetBtnCloseVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_SetBtnCloseVisibility, Temp_byte_Variable_5) == 0x000005, "Member 'BP_Glossary_C_SetBtnCloseVisibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_SetBtnCloseVisibility, Temp_byte_Variable_6) == 0x000006, "Member 'BP_Glossary_C_SetBtnCloseVisibility::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_SetBtnCloseVisibility, Temp_byte_Variable_7) == 0x000007, "Member 'BP_Glossary_C_SetBtnCloseVisibility::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_SetBtnCloseVisibility, Temp_byte_Variable_8) == 0x000008, "Member 'BP_Glossary_C_SetBtnCloseVisibility::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_SetBtnCloseVisibility, CallFunc_GetInputDisplay_ReturnValue) == 0x000009, "Member 'BP_Glossary_C_SetBtnCloseVisibility::CallFunc_GetInputDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Glossary_C_SetBtnCloseVisibility, K2Node_Select_Default) == 0x00000A, "Member 'BP_Glossary_C_SetBtnCloseVisibility::K2Node_Select_Default' has a wrong offset!");

}

