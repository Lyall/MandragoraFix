#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HPBarWidgetComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HPBarWidgetComponent.BP_HPBarWidgetComponent_C.ExecuteUbergraph_BP_HPBarWidgetComponent
// 0x00D8 (0x00D8 - 0x0000)
struct BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UBP_EnemyHPBar_C*                       K2Node_DynamicCast_AsBP_Enemy_HPBar;               // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewMaxHealth;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HealthChangeVisible_NewParam;             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B7[0x1];                                       // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CurrentHealth_1;                      // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxHealth_1;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentHealth;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxHealth;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEliteEnemy_ReturnValue;                 // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent) == 0x000008, "Wrong alignment on BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent");
static_assert(sizeof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent) == 0x0000D8, "Wrong size on BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, EntryPoint) == 0x000000, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000008, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000010, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, K2Node_DynamicCast_AsBP_Enemy_HPBar) == 0x000098, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::K2Node_DynamicCast_AsBP_Enemy_HPBar' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000A4, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, K2Node_Event_NewMaxHealth) == 0x0000B0, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::K2Node_Event_NewMaxHealth' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, CallFunc_HealthChangeVisible_NewParam) == 0x0000B4, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::CallFunc_HealthChangeVisible_NewParam' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, Temp_bool_IsClosed_Variable) == 0x0000B5, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, Temp_bool_Has_Been_Initd_Variable) == 0x0000B6, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, K2Node_Event_CurrentHealth_1) == 0x0000B8, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::K2Node_Event_CurrentHealth_1' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, K2Node_Event_MaxHealth_1) == 0x0000BC, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::K2Node_Event_MaxHealth_1' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, K2Node_Event_CurrentHealth) == 0x0000C0, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::K2Node_Event_CurrentHealth' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, K2Node_Event_MaxHealth) == 0x0000C4, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::K2Node_Event_MaxHealth' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, K2Node_Event_DeltaSeconds) == 0x0000CC, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, CallFunc_IsVisible_ReturnValue) == 0x0000D0, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, CallFunc_Not_PreBool_ReturnValue) == 0x0000D1, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, CallFunc_IsVisible_ReturnValue_1) == 0x0000D2, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, CallFunc_BooleanAND_ReturnValue) == 0x0000D3, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent, CallFunc_IsEliteEnemy_ReturnValue) == 0x0000D4, "Member 'BP_HPBarWidgetComponent_C_ExecuteUbergraph_BP_HPBarWidgetComponent::CallFunc_IsEliteEnemy_ReturnValue' has a wrong offset!");

// Function BP_HPBarWidgetComponent.BP_HPBarWidgetComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_HPBarWidgetComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HPBarWidgetComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_HPBarWidgetComponent_C_ReceiveTick");
static_assert(sizeof(BP_HPBarWidgetComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_HPBarWidgetComponent_C_ReceiveTick");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_HPBarWidgetComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_HPBarWidgetComponent.BP_HPBarWidgetComponent_C.ExecutePostHealthChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_HPBarWidgetComponent_C_ExecutePostHealthChanged final
{
public:
	float                                         CurrentHealth;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealth;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HPBarWidgetComponent_C_ExecutePostHealthChanged) == 0x000004, "Wrong alignment on BP_HPBarWidgetComponent_C_ExecutePostHealthChanged");
static_assert(sizeof(BP_HPBarWidgetComponent_C_ExecutePostHealthChanged) == 0x000008, "Wrong size on BP_HPBarWidgetComponent_C_ExecutePostHealthChanged");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecutePostHealthChanged, CurrentHealth) == 0x000000, "Member 'BP_HPBarWidgetComponent_C_ExecutePostHealthChanged::CurrentHealth' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecutePostHealthChanged, MaxHealth) == 0x000004, "Member 'BP_HPBarWidgetComponent_C_ExecutePostHealthChanged::MaxHealth' has a wrong offset!");

// Function BP_HPBarWidgetComponent.BP_HPBarWidgetComponent_C.ExecutePostMaxHealthChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_HPBarWidgetComponent_C_ExecutePostMaxHealthChanged final
{
public:
	float                                         CurrentHealth;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealth;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HPBarWidgetComponent_C_ExecutePostMaxHealthChanged) == 0x000004, "Wrong alignment on BP_HPBarWidgetComponent_C_ExecutePostMaxHealthChanged");
static_assert(sizeof(BP_HPBarWidgetComponent_C_ExecutePostMaxHealthChanged) == 0x000008, "Wrong size on BP_HPBarWidgetComponent_C_ExecutePostMaxHealthChanged");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecutePostMaxHealthChanged, CurrentHealth) == 0x000000, "Member 'BP_HPBarWidgetComponent_C_ExecutePostMaxHealthChanged::CurrentHealth' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_ExecutePostMaxHealthChanged, MaxHealth) == 0x000004, "Member 'BP_HPBarWidgetComponent_C_ExecutePostMaxHealthChanged::MaxHealth' has a wrong offset!");

// Function BP_HPBarWidgetComponent.BP_HPBarWidgetComponent_C.CustomEvent
// 0x0004 (0x0004 - 0x0000)
struct BP_HPBarWidgetComponent_C_CustomEvent final
{
public:
	float                                         NewMaxHealth;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HPBarWidgetComponent_C_CustomEvent) == 0x000004, "Wrong alignment on BP_HPBarWidgetComponent_C_CustomEvent");
static_assert(sizeof(BP_HPBarWidgetComponent_C_CustomEvent) == 0x000004, "Wrong size on BP_HPBarWidgetComponent_C_CustomEvent");
static_assert(offsetof(BP_HPBarWidgetComponent_C_CustomEvent, NewMaxHealth) == 0x000000, "Member 'BP_HPBarWidgetComponent_C_CustomEvent::NewMaxHealth' has a wrong offset!");

// Function BP_HPBarWidgetComponent.BP_HPBarWidgetComponent_C.IEntity
// 0x0048 (0x0048 - 0x0000)
struct BP_HPBarWidgetComponent_C_IEntity final
{
public:
	class UAbilityController*                     NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterBase*                         K2Node_DynamicCast_AsCharacter_Base;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActorBase*                             K2Node_DynamicCast_AsActor_Base;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue_1;       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HPBarWidgetComponent_C_IEntity) == 0x000008, "Wrong alignment on BP_HPBarWidgetComponent_C_IEntity");
static_assert(sizeof(BP_HPBarWidgetComponent_C_IEntity) == 0x000048, "Wrong size on BP_HPBarWidgetComponent_C_IEntity");
static_assert(offsetof(BP_HPBarWidgetComponent_C_IEntity, NewParam) == 0x000000, "Member 'BP_HPBarWidgetComponent_C_IEntity::NewParam' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_IEntity, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_HPBarWidgetComponent_C_IEntity::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_IEntity, K2Node_DynamicCast_AsCharacter_Base) == 0x000010, "Member 'BP_HPBarWidgetComponent_C_IEntity::K2Node_DynamicCast_AsCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_IEntity, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HPBarWidgetComponent_C_IEntity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_IEntity, K2Node_DynamicCast_AsActor_Base) == 0x000020, "Member 'BP_HPBarWidgetComponent_C_IEntity::K2Node_DynamicCast_AsActor_Base' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_IEntity, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_HPBarWidgetComponent_C_IEntity::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_IEntity, CallFunc_GetAbilityController_ReturnValue) == 0x000030, "Member 'BP_HPBarWidgetComponent_C_IEntity::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_IEntity, CallFunc_GetAbilityController_ReturnValue_1) == 0x000038, "Member 'BP_HPBarWidgetComponent_C_IEntity::CallFunc_GetAbilityController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_IEntity, CallFunc_IsAlive_ReturnValue) == 0x000040, "Member 'BP_HPBarWidgetComponent_C_IEntity::CallFunc_IsAlive_ReturnValue' has a wrong offset!");

// Function BP_HPBarWidgetComponent.BP_HPBarWidgetComponent_C.HealthChangeVisible
// 0x0050 (0x0050 - 0x0000)
struct BP_HPBarWidgetComponent_C_HealthChangeVisible final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_IEntity_NewParam;                         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTime_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_IEntity_NewParam_1;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTime_ReturnValue_1;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_IEntity_NewParam_2;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttributeContainer*                    CallFunc_GetAttributeContainer_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HPBarWidgetComponent_C_HealthChangeVisible) == 0x000008, "Wrong alignment on BP_HPBarWidgetComponent_C_HealthChangeVisible");
static_assert(sizeof(BP_HPBarWidgetComponent_C_HealthChangeVisible) == 0x000050, "Wrong size on BP_HPBarWidgetComponent_C_HealthChangeVisible");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, NewParam) == 0x000000, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::NewParam' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, CallFunc_IEntity_NewParam) == 0x000008, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::CallFunc_IEntity_NewParam' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, CallFunc_GetGameTime_ReturnValue) == 0x000014, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::CallFunc_GetGameTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, CallFunc_IEntity_NewParam_1) == 0x000020, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::CallFunc_IEntity_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, CallFunc_GetGameTime_ReturnValue_1) == 0x000028, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::CallFunc_GetGameTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, CallFunc_IEntity_NewParam_2) == 0x000030, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::CallFunc_IEntity_NewParam_2' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, CallFunc_GetAttributeContainer_ReturnValue) == 0x000040, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::CallFunc_GetAttributeContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HPBarWidgetComponent_C_HealthChangeVisible, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000049, "Member 'BP_HPBarWidgetComponent_C_HealthChangeVisible::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

