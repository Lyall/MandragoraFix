#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_AbilitySlot

#include "Basic.hpp"

#include "BP_HUD_AbilitySlot_classes.hpp"
#include "BP_HUD_AbilitySlot_parameters.hpp"


namespace SDK
{

// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.ExecuteUbergraph_BP_HUD_AbilitySlot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::ExecuteUbergraph_BP_HUD_AbilitySlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "ExecuteUbergraph_BP_HUD_AbilitySlot");

	Params::BP_HUD_AbilitySlot_C_ExecuteUbergraph_BP_HUD_AbilitySlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnSetRelicChargePercentage
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   RelicChargePercentage                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::OnSetRelicChargePercentage(float RelicChargePercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnSetRelicChargePercentage");

	Params::BP_HUD_AbilitySlot_C_OnSetRelicChargePercentage Parms{};

	Parms.RelicChargePercentage = RelicChargePercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnShowFullChargeAnim
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInShowFullChargeAnim                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::OnShowFullChargeAnim(bool bInShowFullChargeAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnShowFullChargeAnim");

	Params::BP_HUD_AbilitySlot_C_OnShowFullChargeAnim Parms{};

	Parms.bInShowFullChargeAnim = bInShowFullChargeAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnSetAbilityDuration
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::OnSetAbilityDuration(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnSetAbilityDuration");

	Params::BP_HUD_AbilitySlot_C_OnSetAbilityDuration Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnSetHitStackNum
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   ChargePercentage                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::OnSetHitStackNum(int32 ChargePercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnSetHitStackNum");

	Params::BP_HUD_AbilitySlot_C_OnSetHitStackNum Parms{};

	Parms.ChargePercentage = ChargePercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnSetAbilityChargePercentage
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   ChargePercentage                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::OnSetAbilityChargePercentage(float ChargePercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnSetAbilityChargePercentage");

	Params::BP_HUD_AbilitySlot_C_OnSetAbilityChargePercentage Parms{};

	Parms.ChargePercentage = ChargePercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_HUD_AbilitySlot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnSetSetChargeCounter
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InRemainingChargesNum                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::OnSetSetChargeCounter(int32 InRemainingChargesNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnSetSetChargeCounter");

	Params::BP_HUD_AbilitySlot_C_OnSetSetChargeCounter Parms{};

	Parms.InRemainingChargesNum = InRemainingChargesNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnRefreshAbilityStates
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInUsable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::OnRefreshAbilityStates(bool bInUsable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnRefreshAbilityStates");

	Params::BP_HUD_AbilitySlot_C_OnRefreshAbilityStates Parms{};

	Parms.bInUsable = bInUsable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnSetAbilityReactivation
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bReactivation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::OnSetAbilityReactivation(bool bReactivation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnSetAbilityReactivation");

	Params::BP_HUD_AbilitySlot_C_OnSetAbilityReactivation Parms{};

	Parms.bReactivation = bReactivation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnSetAbilityCost
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             EnergyCost_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             RageCost_0                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             ComboPointCost_0                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             StaminaCost_0                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_HUD_AbilitySlot_C::OnSetAbilityCost(const class FText& EnergyCost_0, const class FText& RageCost_0, const class FText& ComboPointCost_0, const class FText& StaminaCost_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnSetAbilityCost");

	Params::BP_HUD_AbilitySlot_C_OnSetAbilityCost Parms{};

	Parms.EnergyCost_0 = std::move(EnergyCost_0);
	Parms.RageCost_0 = std::move(RageCost_0);
	Parms.ComboPointCost_0 = std::move(ComboPointCost_0);
	Parms.StaminaCost_0 = std::move(StaminaCost_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnAbilityReleased
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInSingleUsed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::OnAbilityReleased(bool bInSingleUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnAbilityReleased");

	Params::BP_HUD_AbilitySlot_C_OnAbilityReleased Parms{};

	Parms.bInSingleUsed = bInSingleUsed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnAbilityPressed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInSingleUsed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::OnAbilityPressed(bool bInSingleUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnAbilityPressed");

	Params::BP_HUD_AbilitySlot_C_OnAbilityPressed Parms{};

	Parms.bInSingleUsed = bInSingleUsed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnSetAbilityExecuting
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInExecuting                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::OnSetAbilityExecuting(bool bInExecuting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnSetAbilityExecuting");

	Params::BP_HUD_AbilitySlot_C_OnSetAbilityExecuting Parms{};

	Parms.bInExecuting = bInExecuting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnSetAbilityExtraEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInExtraEffect                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::OnSetAbilityExtraEffect(bool bInExtraEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnSetAbilityExtraEffect");

	Params::BP_HUD_AbilitySlot_C_OnSetAbilityExtraEffect Parms{};

	Parms.bInExtraEffect = bInExtraEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnSetAbilityCooldown
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   CooldownRemain                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::OnSetAbilityCooldown(float CooldownRemain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnSetAbilityCooldown");

	Params::BP_HUD_AbilitySlot_C_OnSetAbilityCooldown Parms{};

	Parms.CooldownRemain = CooldownRemain;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnSetAbilityUsable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bUsable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::OnSetAbilityUsable(bool bUsable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnSetAbilityUsable");

	Params::BP_HUD_AbilitySlot_C_OnSetAbilityUsable Parms{};

	Parms.bUsable = bUsable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnSetAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAbilityBase*                     AbilityType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Cooldown_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxCooldown_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EWeaponType                             RelicType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::OnSetAbility(class UAbilityBase* AbilityType, float Cooldown_0, float MaxCooldown_0, EWeaponType RelicType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnSetAbility");

	Params::BP_HUD_AbilitySlot_C_OnSetAbility Parms{};

	Parms.AbilityType = AbilityType;
	Parms.Cooldown_0 = Cooldown_0;
	Parms.MaxCooldown_0 = MaxCooldown_0;
	Parms.RelicType = RelicType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "Tick");

	Params::BP_HUD_AbilitySlot_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "PreConstruct");

	Params::BP_HUD_AbilitySlot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.Set Controller
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_AbilitySlot_C::Set_Controller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "Set Controller");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsEnabled                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::SetEnabled(bool InIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetEnabled");

	Params::BP_HUD_AbilitySlot_C_SetEnabled Parms{};

	Parms.InIsEnabled = InIsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::SetIcon(class UTexture2D* Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetIcon");

	Params::BP_HUD_AbilitySlot_C_SetIcon Parms{};

	Parms.Icon = Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.Setup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilityBase*                     InAbility                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InCooldown                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InMaxCooldown                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EWeaponType                             inRelicType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::Setup(class UAbilityBase* InAbility, float InCooldown, float InMaxCooldown, EWeaponType inRelicType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "Setup");

	Params::BP_HUD_AbilitySlot_C_Setup Parms{};

	Parms.InAbility = InAbility;
	Parms.InCooldown = InCooldown;
	Parms.InMaxCooldown = InMaxCooldown;
	Parms.inRelicType = inRelicType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetUsable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    inIsUsable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::SetUsable(bool inIsUsable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetUsable");

	Params::BP_HUD_AbilitySlot_C_SetUsable Parms{};

	Parms.inIsUsable = inIsUsable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetExtraEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    inIsExtraEffect                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::SetExtraEffect(bool inIsExtraEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetExtraEffect");

	Params::BP_HUD_AbilitySlot_C_SetExtraEffect Parms{};

	Parms.inIsExtraEffect = inIsExtraEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetMaxCooldown
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InMaxCooldown                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::SetMaxCooldown(float InMaxCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetMaxCooldown");

	Params::BP_HUD_AbilitySlot_C_SetMaxCooldown Parms{};

	Parms.InMaxCooldown = InMaxCooldown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetCooldown
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InCooldown                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::SetCooldown(float InCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetCooldown");

	Params::BP_HUD_AbilitySlot_C_SetCooldown Parms{};

	Parms.InCooldown = InCooldown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetCost
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             EnergyCost_0                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             RageCost_0                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             ComboPointCost_0                                       (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             StaminaCost_0                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_HUD_AbilitySlot_C::SetCost(const class FText& EnergyCost_0, const class FText& RageCost_0, const class FText& ComboPointCost_0, const class FText& StaminaCost_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetCost");

	Params::BP_HUD_AbilitySlot_C_SetCost Parms{};

	Parms.EnergyCost_0 = std::move(EnergyCost_0);
	Parms.RageCost_0 = std::move(RageCost_0);
	Parms.ComboPointCost_0 = std::move(ComboPointCost_0);
	Parms.StaminaCost_0 = std::move(StaminaCost_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.PlayExtraEffectAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_AbilitySlot_C::PlayExtraEffectAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "PlayExtraEffectAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.PlayAbilityPressed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InSingleUsed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::PlayAbilityPressed(bool InSingleUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "PlayAbilityPressed");

	Params::BP_HUD_AbilitySlot_C_PlayAbilityPressed Parms{};

	Parms.InSingleUsed = InSingleUsed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.PlayAbilityReleased
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InSingleUsed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::PlayAbilityReleased(bool InSingleUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "PlayAbilityReleased");

	Params::BP_HUD_AbilitySlot_C_PlayAbilityReleased Parms{};

	Parms.InSingleUsed = InSingleUsed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetExecuting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    inIsExecuting                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::SetExecuting(bool inIsExecuting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetExecuting");

	Params::BP_HUD_AbilitySlot_C_SetExecuting Parms{};

	Parms.inIsExecuting = inIsExecuting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetOffsets
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_AbilitySlot_C::SetOffsets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetOffsets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetSlotType
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_AbilitySlot_C::SetSlotType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetSlotType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetSecondActivation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsSecondActivation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::SetSecondActivation(bool InIsSecondActivation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetSecondActivation");

	Params::BP_HUD_AbilitySlot_C_SetSecondActivation Parms{};

	Parms.InIsSecondActivation = InIsSecondActivation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.ToggleChargeCounter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::ToggleChargeCounter(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "ToggleChargeCounter");

	Params::BP_HUD_AbilitySlot_C_ToggleChargeCounter Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetChargeCounter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNewValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::SetChargeCounter(int32 InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetChargeCounter");

	Params::BP_HUD_AbilitySlot_C_SetChargeCounter Parms{};

	Parms.InNewValue = InNewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetBrightness
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InUsable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_AbilitySlot_C::SetBrightness(bool InUsable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetBrightness");

	Params::BP_HUD_AbilitySlot_C_SetBrightness Parms{};

	Parms.InUsable = InUsable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnFullRelicCharge
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_AbilitySlot_C::OnFullRelicCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnFullRelicCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetRelicCharge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InRelicCharge                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::SetRelicCharge(float InRelicCharge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetRelicCharge");

	Params::BP_HUD_AbilitySlot_C_SetRelicCharge Parms{};

	Parms.InRelicCharge = InRelicCharge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_AbilitySlot_C::SetMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.OnUseRelicCharge
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_AbilitySlot_C::OnUseRelicCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "OnUseRelicCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.DisableRelicCharge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InRelicCharge                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::DisableRelicCharge(float InRelicCharge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "DisableRelicCharge");

	Params::BP_HUD_AbilitySlot_C_DisableRelicCharge Parms{};

	Parms.InRelicCharge = InRelicCharge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetDuration
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   inDuration                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::SetDuration(float inDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetDuration");

	Params::BP_HUD_AbilitySlot_C_SetDuration Parms{};

	Parms.inDuration = inDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetAbilityCharge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InCharge                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::SetAbilityCharge(float InCharge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetAbilityCharge");

	Params::BP_HUD_AbilitySlot_C_SetAbilityCharge Parms{};

	Parms.InCharge = InCharge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.DisableAbilityCharge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InCharge                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::DisableAbilityCharge(float InCharge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "DisableAbilityCharge");

	Params::BP_HUD_AbilitySlot_C_DisableAbilityCharge Parms{};

	Parms.InCharge = InCharge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_AbilitySlot.BP_HUD_AbilitySlot_C.SetRelicType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWeaponType                             inRelicType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_AbilitySlot_C::SetRelicType(EWeaponType inRelicType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_AbilitySlot_C", "SetRelicType");

	Params::BP_HUD_AbilitySlot_C_SetRelicType Parms{};

	Parms.inRelicType = inRelicType;

	UObject::ProcessEvent(Func, &Parms);
}

}

