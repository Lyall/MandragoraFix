#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_BottomLeftPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_HUD_BottomLeftPanel.BP_HUD_BottomLeftPanel_C
// 0x0038 (0x0298 - 0x0260)
class UBP_HUD_BottomLeftPanel_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowExtraSlotAnim;                                 // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_HUD_AbilitySlot_C*                  AbilitySlot1;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_AbilitySlot_C*                  AbilitySlot2;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_AbilitySlot_C*                  AbilitySlot3;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_AbilitySlot_C*                  ExtraAbilitySlot1;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          EnergyVisible;                                     // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RageVisible;                                       // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ExtraSlotVisible;                                  // 0x0292(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSmallScreen;                                     // 0x0293(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_HUD_BottomLeftPanel(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void ShowExtraSlot();
	void HideExtraSlot();
	void ToggleSmallScreen(bool InIsSmallScreen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HUD_BottomLeftPanel_C">();
	}
	static class UBP_HUD_BottomLeftPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HUD_BottomLeftPanel_C>();
	}
};
static_assert(alignof(UBP_HUD_BottomLeftPanel_C) == 0x000008, "Wrong alignment on UBP_HUD_BottomLeftPanel_C");
static_assert(sizeof(UBP_HUD_BottomLeftPanel_C) == 0x000298, "Wrong size on UBP_HUD_BottomLeftPanel_C");
static_assert(offsetof(UBP_HUD_BottomLeftPanel_C, UberGraphFrame) == 0x000260, "Member 'UBP_HUD_BottomLeftPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HUD_BottomLeftPanel_C, ShowExtraSlotAnim) == 0x000268, "Member 'UBP_HUD_BottomLeftPanel_C::ShowExtraSlotAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_BottomLeftPanel_C, AbilitySlot1) == 0x000270, "Member 'UBP_HUD_BottomLeftPanel_C::AbilitySlot1' has a wrong offset!");
static_assert(offsetof(UBP_HUD_BottomLeftPanel_C, AbilitySlot2) == 0x000278, "Member 'UBP_HUD_BottomLeftPanel_C::AbilitySlot2' has a wrong offset!");
static_assert(offsetof(UBP_HUD_BottomLeftPanel_C, AbilitySlot3) == 0x000280, "Member 'UBP_HUD_BottomLeftPanel_C::AbilitySlot3' has a wrong offset!");
static_assert(offsetof(UBP_HUD_BottomLeftPanel_C, ExtraAbilitySlot1) == 0x000288, "Member 'UBP_HUD_BottomLeftPanel_C::ExtraAbilitySlot1' has a wrong offset!");
static_assert(offsetof(UBP_HUD_BottomLeftPanel_C, EnergyVisible) == 0x000290, "Member 'UBP_HUD_BottomLeftPanel_C::EnergyVisible' has a wrong offset!");
static_assert(offsetof(UBP_HUD_BottomLeftPanel_C, RageVisible) == 0x000291, "Member 'UBP_HUD_BottomLeftPanel_C::RageVisible' has a wrong offset!");
static_assert(offsetof(UBP_HUD_BottomLeftPanel_C, ExtraSlotVisible) == 0x000292, "Member 'UBP_HUD_BottomLeftPanel_C::ExtraSlotVisible' has a wrong offset!");
static_assert(offsetof(UBP_HUD_BottomLeftPanel_C, IsSmallScreen) == 0x000293, "Member 'UBP_HUD_BottomLeftPanel_C::IsSmallScreen' has a wrong offset!");

}

