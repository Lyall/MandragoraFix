#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_BottomLeftPanel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_HUD_BottomLeftPanel.BP_HUD_BottomLeftPanel_C.ExecuteUbergraph_BP_HUD_BottomLeftPanel
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_BottomLeftPanel_C_ExecuteUbergraph_BP_HUD_BottomLeftPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_BottomLeftPanel_C_ExecuteUbergraph_BP_HUD_BottomLeftPanel) == 0x000004, "Wrong alignment on BP_HUD_BottomLeftPanel_C_ExecuteUbergraph_BP_HUD_BottomLeftPanel");
static_assert(sizeof(BP_HUD_BottomLeftPanel_C_ExecuteUbergraph_BP_HUD_BottomLeftPanel) == 0x000008, "Wrong size on BP_HUD_BottomLeftPanel_C_ExecuteUbergraph_BP_HUD_BottomLeftPanel");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ExecuteUbergraph_BP_HUD_BottomLeftPanel, EntryPoint) == 0x000000, "Member 'BP_HUD_BottomLeftPanel_C_ExecuteUbergraph_BP_HUD_BottomLeftPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ExecuteUbergraph_BP_HUD_BottomLeftPanel, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_HUD_BottomLeftPanel_C_ExecuteUbergraph_BP_HUD_BottomLeftPanel::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_HUD_BottomLeftPanel.BP_HUD_BottomLeftPanel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_BottomLeftPanel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_BottomLeftPanel_C_PreConstruct) == 0x000001, "Wrong alignment on BP_HUD_BottomLeftPanel_C_PreConstruct");
static_assert(sizeof(BP_HUD_BottomLeftPanel_C_PreConstruct) == 0x000001, "Wrong size on BP_HUD_BottomLeftPanel_C_PreConstruct");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_HUD_BottomLeftPanel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_HUD_BottomLeftPanel.BP_HUD_BottomLeftPanel_C.ShowExtraSlot
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_BottomLeftPanel_C_ShowExtraSlot final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BottomLeftPanel_C_ShowExtraSlot) == 0x000008, "Wrong alignment on BP_HUD_BottomLeftPanel_C_ShowExtraSlot");
static_assert(sizeof(BP_HUD_BottomLeftPanel_C_ShowExtraSlot) == 0x000008, "Wrong size on BP_HUD_BottomLeftPanel_C_ShowExtraSlot");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ShowExtraSlot, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_HUD_BottomLeftPanel_C_ShowExtraSlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_HUD_BottomLeftPanel.BP_HUD_BottomLeftPanel_C.HideExtraSlot
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_BottomLeftPanel_C_HideExtraSlot final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BottomLeftPanel_C_HideExtraSlot) == 0x000008, "Wrong alignment on BP_HUD_BottomLeftPanel_C_HideExtraSlot");
static_assert(sizeof(BP_HUD_BottomLeftPanel_C_HideExtraSlot) == 0x000008, "Wrong size on BP_HUD_BottomLeftPanel_C_HideExtraSlot");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_HideExtraSlot, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_HUD_BottomLeftPanel_C_HideExtraSlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_HUD_BottomLeftPanel.BP_HUD_BottomLeftPanel_C.ToggleSmallScreen
// 0x0048 (0x0048 - 0x0000)
struct BP_HUD_BottomLeftPanel_C_ToggleSmallScreen final
{
public:
	bool                                          InIsSmallScreen;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x002C(0x001C)(NoDestructor)
};
static_assert(alignof(BP_HUD_BottomLeftPanel_C_ToggleSmallScreen) == 0x000004, "Wrong alignment on BP_HUD_BottomLeftPanel_C_ToggleSmallScreen");
static_assert(sizeof(BP_HUD_BottomLeftPanel_C_ToggleSmallScreen) == 0x000048, "Wrong size on BP_HUD_BottomLeftPanel_C_ToggleSmallScreen");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ToggleSmallScreen, InIsSmallScreen) == 0x000000, "Member 'BP_HUD_BottomLeftPanel_C_ToggleSmallScreen::InIsSmallScreen' has a wrong offset!");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ToggleSmallScreen, Temp_bool_Variable) == 0x000001, "Member 'BP_HUD_BottomLeftPanel_C_ToggleSmallScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ToggleSmallScreen, Temp_struct_Variable) == 0x000004, "Member 'BP_HUD_BottomLeftPanel_C_ToggleSmallScreen::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ToggleSmallScreen, Temp_struct_Variable_1) == 0x00000C, "Member 'BP_HUD_BottomLeftPanel_C_ToggleSmallScreen::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ToggleSmallScreen, Temp_bool_Variable_1) == 0x000014, "Member 'BP_HUD_BottomLeftPanel_C_ToggleSmallScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ToggleSmallScreen, Temp_float_Variable) == 0x000018, "Member 'BP_HUD_BottomLeftPanel_C_ToggleSmallScreen::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ToggleSmallScreen, Temp_float_Variable_1) == 0x00001C, "Member 'BP_HUD_BottomLeftPanel_C_ToggleSmallScreen::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ToggleSmallScreen, K2Node_Select_Default) == 0x000020, "Member 'BP_HUD_BottomLeftPanel_C_ToggleSmallScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ToggleSmallScreen, K2Node_Select_Default_1) == 0x000024, "Member 'BP_HUD_BottomLeftPanel_C_ToggleSmallScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BottomLeftPanel_C_ToggleSmallScreen, K2Node_MakeStruct_WidgetTransform) == 0x00002C, "Member 'BP_HUD_BottomLeftPanel_C_ToggleSmallScreen::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

}

