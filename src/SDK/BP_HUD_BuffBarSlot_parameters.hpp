#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_BuffBarSlot

#include "Basic.hpp"

#include "man_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.ExecuteUbergraph_BP_HUD_BuffBarSlot
// 0x0108 (0x0108 - 0x0000)
struct BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InBuffIconID;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0028(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InCooldown;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InBuffText;                           // 0x0068(0x0018)(ConstParm)
	const class UTexture2D*                       K2Node_Event_InBuffIcon;                           // 0x0080(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBuffType                                     K2Node_Event_InBuffType;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InOuterNumber;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0090(0x0018)()
	bool                                          K2Node_Event_bInOuterNumberVisible;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InInnerNumber;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_IntToText_ReturnValue_1;                  // 0x00B0(0x0018)()
	bool                                          K2Node_Event_bInInnerNumberVisible;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InMaxCooldown;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInGreyedOut;                         // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInHighlight;                         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_4;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot) == 0x000008, "Wrong alignment on BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot) == 0x000108, "Wrong size on BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, EntryPoint) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_InBuffIconID) == 0x000004, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_InBuffIconID' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_bool_Variable) == 0x000008, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_byte_Variable) == 0x000009, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_byte_Variable_1) == 0x00000A, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_bool_Variable_1) == 0x00000B, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_byte_Variable_2) == 0x00000C, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_byte_Variable_3) == 0x00000D, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_bool_Variable_2) == 0x00000E, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_float_Variable) == 0x000010, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_float_Variable_1) == 0x000014, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_bool_Variable_3) == 0x000018, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_float_Variable_2) == 0x00001C, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_float_Variable_3) == 0x000020, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, Temp_bool_Variable_4) == 0x000024, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_IsDesignTime) == 0x000025, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_MyGeometry) == 0x000028, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_InDeltaTime) == 0x000060, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_InCooldown) == 0x000064, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_InCooldown' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_InBuffText) == 0x000068, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_InBuffText' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_InBuffIcon) == 0x000080, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_InBuffIcon' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_InBuffType) == 0x000088, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_InBuffType' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_InOuterNumber) == 0x00008C, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_InOuterNumber' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, CallFunc_IntToText_ReturnValue) == 0x000090, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_bInOuterNumberVisible) == 0x0000A8, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_bInOuterNumberVisible' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Select_Default) == 0x0000A9, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_InInnerNumber) == 0x0000AC, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_InInnerNumber' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, CallFunc_IntToText_ReturnValue_1) == 0x0000B0, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::CallFunc_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_bInInnerNumberVisible) == 0x0000C8, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_bInInnerNumberVisible' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_InMaxCooldown) == 0x0000CC, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_InMaxCooldown' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Select_Default_1) == 0x0000D0, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_bInGreyedOut) == 0x0000D1, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_bInGreyedOut' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000D8, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Select_Default_2) == 0x0000E0, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Select_Default_3) == 0x0000E4, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Event_bInHighlight) == 0x0000E8, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Event_bInHighlight' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, K2Node_Select_Default_4) == 0x0000F0, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000F8, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot, CallFunc_PlayAnimation_ReturnValue) == 0x000100, "Member 'BP_HUD_BuffBarSlot_C_ExecuteUbergraph_BP_HUD_BuffBarSlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.OnSetIconID
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_BuffBarSlot_C_OnSetIconID final
{
public:
	int32                                         InBuffIconID;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_OnSetIconID) == 0x000004, "Wrong alignment on BP_HUD_BuffBarSlot_C_OnSetIconID");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_OnSetIconID) == 0x000004, "Wrong size on BP_HUD_BuffBarSlot_C_OnSetIconID");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_OnSetIconID, InBuffIconID) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_OnSetIconID::InBuffIconID' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.OnSetHighlight
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_BuffBarSlot_C_OnSetHighlight final
{
public:
	bool                                          bInHighlight;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_OnSetHighlight) == 0x000001, "Wrong alignment on BP_HUD_BuffBarSlot_C_OnSetHighlight");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_OnSetHighlight) == 0x000001, "Wrong size on BP_HUD_BuffBarSlot_C_OnSetHighlight");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_OnSetHighlight, bInHighlight) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_OnSetHighlight::bInHighlight' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.OnGreyedOut
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_BuffBarSlot_C_OnGreyedOut final
{
public:
	bool                                          bInGreyedOut;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_OnGreyedOut) == 0x000001, "Wrong alignment on BP_HUD_BuffBarSlot_C_OnGreyedOut");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_OnGreyedOut) == 0x000001, "Wrong size on BP_HUD_BuffBarSlot_C_OnGreyedOut");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_OnGreyedOut, bInGreyedOut) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_OnGreyedOut::bInGreyedOut' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.OnSetMaxCooldown
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_BuffBarSlot_C_OnSetMaxCooldown final
{
public:
	float                                         InMaxCooldown;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_OnSetMaxCooldown) == 0x000004, "Wrong alignment on BP_HUD_BuffBarSlot_C_OnSetMaxCooldown");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_OnSetMaxCooldown) == 0x000004, "Wrong size on BP_HUD_BuffBarSlot_C_OnSetMaxCooldown");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_OnSetMaxCooldown, InMaxCooldown) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_OnSetMaxCooldown::InMaxCooldown' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.OnSetInnerNumberVisible
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_BuffBarSlot_C_OnSetInnerNumberVisible final
{
public:
	bool                                          bInInnerNumberVisible;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_OnSetInnerNumberVisible) == 0x000001, "Wrong alignment on BP_HUD_BuffBarSlot_C_OnSetInnerNumberVisible");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_OnSetInnerNumberVisible) == 0x000001, "Wrong size on BP_HUD_BuffBarSlot_C_OnSetInnerNumberVisible");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_OnSetInnerNumberVisible, bInInnerNumberVisible) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_OnSetInnerNumberVisible::bInInnerNumberVisible' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.OnSetInnerNumber
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_BuffBarSlot_C_OnSetInnerNumber final
{
public:
	int32                                         InInnerNumber;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_OnSetInnerNumber) == 0x000004, "Wrong alignment on BP_HUD_BuffBarSlot_C_OnSetInnerNumber");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_OnSetInnerNumber) == 0x000004, "Wrong size on BP_HUD_BuffBarSlot_C_OnSetInnerNumber");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_OnSetInnerNumber, InInnerNumber) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_OnSetInnerNumber::InInnerNumber' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.OnSetOuterNumberVisible
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_BuffBarSlot_C_OnSetOuterNumberVisible final
{
public:
	bool                                          bInOuterNumberVisible;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_OnSetOuterNumberVisible) == 0x000001, "Wrong alignment on BP_HUD_BuffBarSlot_C_OnSetOuterNumberVisible");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_OnSetOuterNumberVisible) == 0x000001, "Wrong size on BP_HUD_BuffBarSlot_C_OnSetOuterNumberVisible");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_OnSetOuterNumberVisible, bInOuterNumberVisible) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_OnSetOuterNumberVisible::bInOuterNumberVisible' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.OnSetOuterNumber
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_BuffBarSlot_C_OnSetOuterNumber final
{
public:
	int32                                         InOuterNumber;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_OnSetOuterNumber) == 0x000004, "Wrong alignment on BP_HUD_BuffBarSlot_C_OnSetOuterNumber");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_OnSetOuterNumber) == 0x000004, "Wrong size on BP_HUD_BuffBarSlot_C_OnSetOuterNumber");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_OnSetOuterNumber, InOuterNumber) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_OnSetOuterNumber::InOuterNumber' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.OnSetType
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_BuffBarSlot_C_OnSetType final
{
public:
	EBuffType                                     InBuffType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_OnSetType) == 0x000001, "Wrong alignment on BP_HUD_BuffBarSlot_C_OnSetType");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_OnSetType) == 0x000001, "Wrong size on BP_HUD_BuffBarSlot_C_OnSetType");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_OnSetType, InBuffType) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_OnSetType::InBuffType' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.OnSetIcon
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_BuffBarSlot_C_OnSetIcon final
{
public:
	const class UTexture2D*                       InBuffIcon;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_OnSetIcon) == 0x000008, "Wrong alignment on BP_HUD_BuffBarSlot_C_OnSetIcon");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_OnSetIcon) == 0x000008, "Wrong size on BP_HUD_BuffBarSlot_C_OnSetIcon");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_OnSetIcon, InBuffIcon) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_OnSetIcon::InBuffIcon' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.OnSetText
// 0x0018 (0x0018 - 0x0000)
struct BP_HUD_BuffBarSlot_C_OnSetText final
{
public:
	class FText                                   InBuffText;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_OnSetText) == 0x000008, "Wrong alignment on BP_HUD_BuffBarSlot_C_OnSetText");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_OnSetText) == 0x000018, "Wrong size on BP_HUD_BuffBarSlot_C_OnSetText");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_OnSetText, InBuffText) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_OnSetText::InBuffText' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.OnSetCooldown
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_BuffBarSlot_C_OnSetCooldown final
{
public:
	float                                         InCooldown;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_OnSetCooldown) == 0x000004, "Wrong alignment on BP_HUD_BuffBarSlot_C_OnSetCooldown");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_OnSetCooldown) == 0x000004, "Wrong size on BP_HUD_BuffBarSlot_C_OnSetCooldown");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_OnSetCooldown, InCooldown) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_OnSetCooldown::InCooldown' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_HUD_BuffBarSlot_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_Tick) == 0x000004, "Wrong alignment on BP_HUD_BuffBarSlot_C_Tick");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_Tick) == 0x00003C, "Wrong size on BP_HUD_BuffBarSlot_C_Tick");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_Tick, MyGeometry) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_HUD_BuffBarSlot_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_BuffBarSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_PreConstruct) == 0x000001, "Wrong alignment on BP_HUD_BuffBarSlot_C_PreConstruct");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_PreConstruct) == 0x000001, "Wrong size on BP_HUD_BuffBarSlot_C_PreConstruct");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.SetIcon
// 0x0018 (0x0018 - 0x0000)
struct BP_HUD_BuffBarSlot_C_SetIcon final
{
public:
	class UTexture2D*                             InIcon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_SetIcon) == 0x000008, "Wrong alignment on BP_HUD_BuffBarSlot_C_SetIcon");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_SetIcon) == 0x000018, "Wrong size on BP_HUD_BuffBarSlot_C_SetIcon");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetIcon, InIcon) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_SetIcon::InIcon' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetIcon, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_HUD_BuffBarSlot_C_SetIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'BP_HUD_BuffBarSlot_C_SetIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.SetCooldown
// 0x0020 (0x0020 - 0x0000)
struct BP_HUD_BuffBarSlot_C_SetCooldown final
{
public:
	float                                         InCooldown;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_SetCooldown) == 0x000008, "Wrong alignment on BP_HUD_BuffBarSlot_C_SetCooldown");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_SetCooldown) == 0x000020, "Wrong size on BP_HUD_BuffBarSlot_C_SetCooldown");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetCooldown, InCooldown) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_SetCooldown::InCooldown' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetCooldown, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_HUD_BuffBarSlot_C_SetCooldown::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetCooldown, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000005, "Member 'BP_HUD_BuffBarSlot_C_SetCooldown::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetCooldown, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_HUD_BuffBarSlot_C_SetCooldown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetCooldown, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_HUD_BuffBarSlot_C_SetCooldown::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetCooldown, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'BP_HUD_BuffBarSlot_C_SetCooldown::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetCooldown, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_HUD_BuffBarSlot_C_SetCooldown::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.SetType
// 0x0108 (0x0108 - 0x0000)
struct BP_HUD_BuffBarSlot_C_SetType final
{
public:
	EBuffType                                     InBuffType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBuffType                                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBuffType                                     Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBuffType                                     Temp_byte_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBuffType                                     Temp_byte_Variable_3;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_3;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_4;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBuffType                                     Temp_byte_Variable_4;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00C8(0x0028)()
	class UTexture*                               K2Node_Select_Default_3;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_SetType) == 0x000008, "Wrong alignment on BP_HUD_BuffBarSlot_C_SetType");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_SetType) == 0x000108, "Wrong size on BP_HUD_BuffBarSlot_C_SetType");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, InBuffType) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_SetType::InBuffType' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_byte_Variable) == 0x000001, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_object_Variable) == 0x000008, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_object_Variable_1) == 0x000010, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_object_Variable_2) == 0x000018, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_byte_Variable_1) == 0x000020, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_float_Variable) == 0x000024, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_float_Variable_1) == 0x000028, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_float_Variable_2) == 0x00002C, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_byte_Variable_2) == 0x000030, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_struct_Variable) == 0x000034, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_struct_Variable_1) == 0x000044, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_struct_Variable_2) == 0x000054, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_byte_Variable_3) == 0x000064, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_object_Variable_3) == 0x000068, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_object_Variable_4) == 0x000070, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_object_Variable_5) == 0x000078, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_byte_Variable_4) == 0x000080, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_object_Variable_6) == 0x000088, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_object_Variable_7) == 0x000090, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, Temp_object_Variable_8) == 0x000098, "Member 'BP_HUD_BuffBarSlot_C_SetType::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, K2Node_Select_Default) == 0x0000A0, "Member 'BP_HUD_BuffBarSlot_C_SetType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, K2Node_Select_Default_1) == 0x0000A8, "Member 'BP_HUD_BuffBarSlot_C_SetType::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000B0, "Member 'BP_HUD_BuffBarSlot_C_SetType::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, K2Node_Select_Default_2) == 0x0000B8, "Member 'BP_HUD_BuffBarSlot_C_SetType::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, K2Node_MakeStruct_SlateColor) == 0x0000C8, "Member 'BP_HUD_BuffBarSlot_C_SetType::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, K2Node_Select_Default_3) == 0x0000F0, "Member 'BP_HUD_BuffBarSlot_C_SetType::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000F8, "Member 'BP_HUD_BuffBarSlot_C_SetType::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetType, K2Node_Select_Default_4) == 0x000100, "Member 'BP_HUD_BuffBarSlot_C_SetType::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_HUD_BuffBarSlot.BP_HUD_BuffBarSlot_C.SetUpgradeIcon
// 0x0048 (0x0048 - 0x0000)
struct BP_HUD_BuffBarSlot_C_SetUpgradeIcon final
{
public:
	int32                                         InUpgradeID;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBarSlot_C_SetUpgradeIcon) == 0x000008, "Wrong alignment on BP_HUD_BuffBarSlot_C_SetUpgradeIcon");
static_assert(sizeof(BP_HUD_BuffBarSlot_C_SetUpgradeIcon) == 0x000048, "Wrong size on BP_HUD_BuffBarSlot_C_SetUpgradeIcon");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetUpgradeIcon, InUpgradeID) == 0x000000, "Member 'BP_HUD_BuffBarSlot_C_SetUpgradeIcon::InUpgradeID' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetUpgradeIcon, Temp_int_Variable) == 0x000004, "Member 'BP_HUD_BuffBarSlot_C_SetUpgradeIcon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetUpgradeIcon, Temp_object_Variable) == 0x000008, "Member 'BP_HUD_BuffBarSlot_C_SetUpgradeIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetUpgradeIcon, Temp_object_Variable_1) == 0x000010, "Member 'BP_HUD_BuffBarSlot_C_SetUpgradeIcon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetUpgradeIcon, Temp_object_Variable_2) == 0x000018, "Member 'BP_HUD_BuffBarSlot_C_SetUpgradeIcon::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetUpgradeIcon, Temp_object_Variable_3) == 0x000020, "Member 'BP_HUD_BuffBarSlot_C_SetUpgradeIcon::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetUpgradeIcon, Temp_object_Variable_4) == 0x000028, "Member 'BP_HUD_BuffBarSlot_C_SetUpgradeIcon::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetUpgradeIcon, Temp_object_Variable_5) == 0x000030, "Member 'BP_HUD_BuffBarSlot_C_SetUpgradeIcon::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetUpgradeIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000038, "Member 'BP_HUD_BuffBarSlot_C_SetUpgradeIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBarSlot_C_SetUpgradeIcon, K2Node_Select_Default) == 0x000040, "Member 'BP_HUD_BuffBarSlot_C_SetUpgradeIcon::K2Node_Select_Default' has a wrong offset!");

}

