#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_BuffBar

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_HUD_BuffBar.BP_HUD_BuffBar_C.ExecuteUbergraph_BP_HUD_BuffBar
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_BuffBar_C_ExecuteUbergraph_BP_HUD_BuffBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_BuffBar_C_ExecuteUbergraph_BP_HUD_BuffBar) == 0x000004, "Wrong alignment on BP_HUD_BuffBar_C_ExecuteUbergraph_BP_HUD_BuffBar");
static_assert(sizeof(BP_HUD_BuffBar_C_ExecuteUbergraph_BP_HUD_BuffBar) == 0x000008, "Wrong size on BP_HUD_BuffBar_C_ExecuteUbergraph_BP_HUD_BuffBar");
static_assert(offsetof(BP_HUD_BuffBar_C_ExecuteUbergraph_BP_HUD_BuffBar, EntryPoint) == 0x000000, "Member 'BP_HUD_BuffBar_C_ExecuteUbergraph_BP_HUD_BuffBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBar_C_ExecuteUbergraph_BP_HUD_BuffBar, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_HUD_BuffBar_C_ExecuteUbergraph_BP_HUD_BuffBar::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_HUD_BuffBar.BP_HUD_BuffBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_BuffBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_BuffBar_C_PreConstruct) == 0x000001, "Wrong alignment on BP_HUD_BuffBar_C_PreConstruct");
static_assert(sizeof(BP_HUD_BuffBar_C_PreConstruct) == 0x000001, "Wrong size on BP_HUD_BuffBar_C_PreConstruct");
static_assert(offsetof(BP_HUD_BuffBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_HUD_BuffBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_HUD_BuffBar.BP_HUD_BuffBar_C.ToggleSmallScreen
// 0x0005 (0x0005 - 0x0000)
struct BP_HUD_BuffBar_C_ToggleSmallScreen final
{
public:
	bool                                          InIsSmallScreen;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_BuffBar_C_ToggleSmallScreen) == 0x000001, "Wrong alignment on BP_HUD_BuffBar_C_ToggleSmallScreen");
static_assert(sizeof(BP_HUD_BuffBar_C_ToggleSmallScreen) == 0x000005, "Wrong size on BP_HUD_BuffBar_C_ToggleSmallScreen");
static_assert(offsetof(BP_HUD_BuffBar_C_ToggleSmallScreen, InIsSmallScreen) == 0x000000, "Member 'BP_HUD_BuffBar_C_ToggleSmallScreen::InIsSmallScreen' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBar_C_ToggleSmallScreen, Temp_bool_Variable) == 0x000001, "Member 'BP_HUD_BuffBar_C_ToggleSmallScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBar_C_ToggleSmallScreen, Temp_byte_Variable) == 0x000002, "Member 'BP_HUD_BuffBar_C_ToggleSmallScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBar_C_ToggleSmallScreen, Temp_byte_Variable_1) == 0x000003, "Member 'BP_HUD_BuffBar_C_ToggleSmallScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_BuffBar_C_ToggleSmallScreen, K2Node_Select_Default) == 0x000004, "Member 'BP_HUD_BuffBar_C_ToggleSmallScreen::K2Node_Select_Default' has a wrong offset!");

}

