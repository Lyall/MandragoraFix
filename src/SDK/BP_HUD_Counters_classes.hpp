#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_Counters

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "man_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_HUD_Counters.BP_HUD_Counters_C
// 0x00C0 (0x0320 - 0x0260)
class UBP_HUD_Counters_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimateAddedEntropicEssence;                       // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimateAddedEssence;                               // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimateAddedCoin;                                  // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EntropicEssenceAnim;                               // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EssenceAnim;                                       // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CoinAnim;                                          // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           Added;                                             // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             AddedCoinText;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         AddedEntropicEssenceBox;                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             AddedEntropicEssenceText;                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             AddedEssenceText;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Background;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Coin;                                              // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CoinIcon_C*                         CoinIcon;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             EntropicEssence;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         EntropicEssenceBox;                                // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_EntropicEssenceIcon_C*              EntropicEssenceIcon;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Essence;                                           // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           EssenceAndGold;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_EssenceIcon_C*                      EssenceIcon;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          EnergyVisible;                                     // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RageVisible;                                       // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Texture;                                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSmallScreen;                                     // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_HUD_Counters(int32 EntryPoint);
	void AddedEntropicEssenceAnimFinished();
	void AddedEssenceAnimFinished();
	void AddedCoinAnimFinished();
	void EventOnHideAddedEntropicEssence(bool InAnimate);
	void EventOnShowAddedEntropicEssence(int32 InAddedEntropicEssence, bool InAnimate);
	void EventOnHideAddedEssence(bool InAnimate);
	void EventOnShowAddedEssence(int32 InAddedEssence, bool InAnimate);
	void EventOnHideAddedCoin(bool InAnimate);
	void EventOnShowAddedCoin(int32 InAddedCoin, bool InAnimate);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void OnToggleAddedResource(EHeroProperty InPropertyType, int32 InValue, bool InShowing, bool InAnimate);
	void ToggleSmallScreen(bool InIsSmallScreen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HUD_Counters_C">();
	}
	static class UBP_HUD_Counters_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HUD_Counters_C>();
	}
};
static_assert(alignof(UBP_HUD_Counters_C) == 0x000008, "Wrong alignment on UBP_HUD_Counters_C");
static_assert(sizeof(UBP_HUD_Counters_C) == 0x000320, "Wrong size on UBP_HUD_Counters_C");
static_assert(offsetof(UBP_HUD_Counters_C, UberGraphFrame) == 0x000260, "Member 'UBP_HUD_Counters_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, AnimateAddedEntropicEssence) == 0x000268, "Member 'UBP_HUD_Counters_C::AnimateAddedEntropicEssence' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, AnimateAddedEssence) == 0x000270, "Member 'UBP_HUD_Counters_C::AnimateAddedEssence' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, AnimateAddedCoin) == 0x000278, "Member 'UBP_HUD_Counters_C::AnimateAddedCoin' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, EntropicEssenceAnim) == 0x000280, "Member 'UBP_HUD_Counters_C::EntropicEssenceAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, EssenceAnim) == 0x000288, "Member 'UBP_HUD_Counters_C::EssenceAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, CoinAnim) == 0x000290, "Member 'UBP_HUD_Counters_C::CoinAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, Added) == 0x000298, "Member 'UBP_HUD_Counters_C::Added' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, AddedCoinText) == 0x0002A0, "Member 'UBP_HUD_Counters_C::AddedCoinText' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, AddedEntropicEssenceBox) == 0x0002A8, "Member 'UBP_HUD_Counters_C::AddedEntropicEssenceBox' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, AddedEntropicEssenceText) == 0x0002B0, "Member 'UBP_HUD_Counters_C::AddedEntropicEssenceText' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, AddedEssenceText) == 0x0002B8, "Member 'UBP_HUD_Counters_C::AddedEssenceText' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, Background) == 0x0002C0, "Member 'UBP_HUD_Counters_C::Background' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, Coin) == 0x0002C8, "Member 'UBP_HUD_Counters_C::Coin' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, CoinIcon) == 0x0002D0, "Member 'UBP_HUD_Counters_C::CoinIcon' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, EntropicEssence) == 0x0002D8, "Member 'UBP_HUD_Counters_C::EntropicEssence' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, EntropicEssenceBox) == 0x0002E0, "Member 'UBP_HUD_Counters_C::EntropicEssenceBox' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, EntropicEssenceIcon) == 0x0002E8, "Member 'UBP_HUD_Counters_C::EntropicEssenceIcon' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, Essence) == 0x0002F0, "Member 'UBP_HUD_Counters_C::Essence' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, EssenceAndGold) == 0x0002F8, "Member 'UBP_HUD_Counters_C::EssenceAndGold' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, EssenceIcon) == 0x000300, "Member 'UBP_HUD_Counters_C::EssenceIcon' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, EnergyVisible) == 0x000308, "Member 'UBP_HUD_Counters_C::EnergyVisible' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, RageVisible) == 0x000309, "Member 'UBP_HUD_Counters_C::RageVisible' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, Texture) == 0x000310, "Member 'UBP_HUD_Counters_C::Texture' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Counters_C, IsSmallScreen) == 0x000318, "Member 'UBP_HUD_Counters_C::IsSmallScreen' has a wrong offset!");

}

