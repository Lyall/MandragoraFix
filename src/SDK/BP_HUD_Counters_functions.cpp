#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_Counters

#include "Basic.hpp"

#include "BP_HUD_Counters_classes.hpp"
#include "BP_HUD_Counters_parameters.hpp"


namespace SDK
{

// Function BP_HUD_Counters.BP_HUD_Counters_C.ExecuteUbergraph_BP_HUD_Counters
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_Counters_C::ExecuteUbergraph_BP_HUD_Counters(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "ExecuteUbergraph_BP_HUD_Counters");

	Params::BP_HUD_Counters_C_ExecuteUbergraph_BP_HUD_Counters Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.AddedEntropicEssenceAnimFinished
// (BlueprintCallable, BlueprintEvent)

void UBP_HUD_Counters_C::AddedEntropicEssenceAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "AddedEntropicEssenceAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.AddedEssenceAnimFinished
// (BlueprintCallable, BlueprintEvent)

void UBP_HUD_Counters_C::AddedEssenceAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "AddedEssenceAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.AddedCoinAnimFinished
// (BlueprintCallable, BlueprintEvent)

void UBP_HUD_Counters_C::AddedCoinAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "AddedCoinAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.EventOnHideAddedEntropicEssence
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InAnimate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_Counters_C::EventOnHideAddedEntropicEssence(bool InAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "EventOnHideAddedEntropicEssence");

	Params::BP_HUD_Counters_C_EventOnHideAddedEntropicEssence Parms{};

	Parms.InAnimate = InAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.EventOnShowAddedEntropicEssence
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InAddedEntropicEssence                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InAnimate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_Counters_C::EventOnShowAddedEntropicEssence(int32 InAddedEntropicEssence, bool InAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "EventOnShowAddedEntropicEssence");

	Params::BP_HUD_Counters_C_EventOnShowAddedEntropicEssence Parms{};

	Parms.InAddedEntropicEssence = InAddedEntropicEssence;
	Parms.InAnimate = InAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.EventOnHideAddedEssence
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InAnimate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_Counters_C::EventOnHideAddedEssence(bool InAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "EventOnHideAddedEssence");

	Params::BP_HUD_Counters_C_EventOnHideAddedEssence Parms{};

	Parms.InAnimate = InAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.EventOnShowAddedEssence
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InAddedEssence                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InAnimate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_Counters_C::EventOnShowAddedEssence(int32 InAddedEssence, bool InAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "EventOnShowAddedEssence");

	Params::BP_HUD_Counters_C_EventOnShowAddedEssence Parms{};

	Parms.InAddedEssence = InAddedEssence;
	Parms.InAnimate = InAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.EventOnHideAddedCoin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InAnimate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_Counters_C::EventOnHideAddedCoin(bool InAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "EventOnHideAddedCoin");

	Params::BP_HUD_Counters_C_EventOnHideAddedCoin Parms{};

	Parms.InAnimate = InAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.EventOnShowAddedCoin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InAddedCoin                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InAnimate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_Counters_C::EventOnShowAddedCoin(int32 InAddedCoin, bool InAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "EventOnShowAddedCoin");

	Params::BP_HUD_Counters_C_EventOnShowAddedCoin Parms{};

	Parms.InAddedCoin = InAddedCoin;
	Parms.InAnimate = InAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_Counters_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "Tick");

	Params::BP_HUD_Counters_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_HUD_Counters_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_Counters_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "PreConstruct");

	Params::BP_HUD_Counters_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.OnToggleAddedResource
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHeroProperty                           InPropertyType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InShowing                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InAnimate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_Counters_C::OnToggleAddedResource(EHeroProperty InPropertyType, int32 InValue, bool InShowing, bool InAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "OnToggleAddedResource");

	Params::BP_HUD_Counters_C_OnToggleAddedResource Parms{};

	Parms.InPropertyType = InPropertyType;
	Parms.InValue = InValue;
	Parms.InShowing = InShowing;
	Parms.InAnimate = InAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_Counters.BP_HUD_Counters_C.ToggleSmallScreen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsSmallScreen                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_Counters_C::ToggleSmallScreen(bool InIsSmallScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_Counters_C", "ToggleSmallScreen");

	Params::BP_HUD_Counters_C_ToggleSmallScreen Parms{};

	Parms.InIsSmallScreen = InIsSmallScreen;

	UObject::ProcessEvent(Func, &Parms);
}

}

