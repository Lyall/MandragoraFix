#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_KeyItemSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_HUD_KeyItemSlot.BP_HUD_KeyItemSlot_C
// 0x0040 (0x02A8 - 0x0268)
class UBP_HUD_KeyItemSlot_C final : public UHUDKeyItemSlotUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HighlightAnim;                                     // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 FrameWidget;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GlowVFX;                                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HighlightImg;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconWidget;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             IconTexture;                                       // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         HighlightRotationSpeed;                            // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HUD_KeyItemSlot(int32 EntryPoint);
	void OnPlayHighlight();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void SetIcon(class UTexture2D* InIcon);
	void PlayHighlight();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HUD_KeyItemSlot_C">();
	}
	static class UBP_HUD_KeyItemSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HUD_KeyItemSlot_C>();
	}
};
static_assert(alignof(UBP_HUD_KeyItemSlot_C) == 0x000008, "Wrong alignment on UBP_HUD_KeyItemSlot_C");
static_assert(sizeof(UBP_HUD_KeyItemSlot_C) == 0x0002A8, "Wrong size on UBP_HUD_KeyItemSlot_C");
static_assert(offsetof(UBP_HUD_KeyItemSlot_C, UberGraphFrame) == 0x000268, "Member 'UBP_HUD_KeyItemSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HUD_KeyItemSlot_C, HighlightAnim) == 0x000270, "Member 'UBP_HUD_KeyItemSlot_C::HighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_KeyItemSlot_C, FrameWidget) == 0x000278, "Member 'UBP_HUD_KeyItemSlot_C::FrameWidget' has a wrong offset!");
static_assert(offsetof(UBP_HUD_KeyItemSlot_C, GlowVFX) == 0x000280, "Member 'UBP_HUD_KeyItemSlot_C::GlowVFX' has a wrong offset!");
static_assert(offsetof(UBP_HUD_KeyItemSlot_C, HighlightImg) == 0x000288, "Member 'UBP_HUD_KeyItemSlot_C::HighlightImg' has a wrong offset!");
static_assert(offsetof(UBP_HUD_KeyItemSlot_C, IconWidget) == 0x000290, "Member 'UBP_HUD_KeyItemSlot_C::IconWidget' has a wrong offset!");
static_assert(offsetof(UBP_HUD_KeyItemSlot_C, IconTexture) == 0x000298, "Member 'UBP_HUD_KeyItemSlot_C::IconTexture' has a wrong offset!");
static_assert(offsetof(UBP_HUD_KeyItemSlot_C, HighlightRotationSpeed) == 0x0002A0, "Member 'UBP_HUD_KeyItemSlot_C::HighlightRotationSpeed' has a wrong offset!");

}

