#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_Level

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_HUD_Level.BP_HUD_Level_C.ExecuteUbergraph_BP_HUD_Level
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_Level_C_ExecuteUbergraph_BP_HUD_Level final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_Level_C_ExecuteUbergraph_BP_HUD_Level) == 0x000004, "Wrong alignment on BP_HUD_Level_C_ExecuteUbergraph_BP_HUD_Level");
static_assert(sizeof(BP_HUD_Level_C_ExecuteUbergraph_BP_HUD_Level) == 0x000008, "Wrong size on BP_HUD_Level_C_ExecuteUbergraph_BP_HUD_Level");
static_assert(offsetof(BP_HUD_Level_C_ExecuteUbergraph_BP_HUD_Level, EntryPoint) == 0x000000, "Member 'BP_HUD_Level_C_ExecuteUbergraph_BP_HUD_Level::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HUD_Level_C_ExecuteUbergraph_BP_HUD_Level, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_HUD_Level_C_ExecuteUbergraph_BP_HUD_Level::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_HUD_Level.BP_HUD_Level_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_Level_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_Level_C_PreConstruct) == 0x000001, "Wrong alignment on BP_HUD_Level_C_PreConstruct");
static_assert(sizeof(BP_HUD_Level_C_PreConstruct) == 0x000001, "Wrong size on BP_HUD_Level_C_PreConstruct");
static_assert(offsetof(BP_HUD_Level_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_HUD_Level_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_HUD_Level.BP_HUD_Level_C.SetLevel
// 0x0020 (0x0020 - 0x0000)
struct BP_HUD_Level_C_SetLevel final
{
public:
	int32                                         NewLevel;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0008(0x0018)()
};
static_assert(alignof(BP_HUD_Level_C_SetLevel) == 0x000008, "Wrong alignment on BP_HUD_Level_C_SetLevel");
static_assert(sizeof(BP_HUD_Level_C_SetLevel) == 0x000020, "Wrong size on BP_HUD_Level_C_SetLevel");
static_assert(offsetof(BP_HUD_Level_C_SetLevel, NewLevel) == 0x000000, "Member 'BP_HUD_Level_C_SetLevel::NewLevel' has a wrong offset!");
static_assert(offsetof(BP_HUD_Level_C_SetLevel, CallFunc_IntToText_ReturnValue) == 0x000008, "Member 'BP_HUD_Level_C_SetLevel::CallFunc_IntToText_ReturnValue' has a wrong offset!");

// Function BP_HUD_Level.BP_HUD_Level_C.StartPulseAnim
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_Level_C_StartPulseAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_Level_C_StartPulseAnim) == 0x000008, "Wrong alignment on BP_HUD_Level_C_StartPulseAnim");
static_assert(sizeof(BP_HUD_Level_C_StartPulseAnim) == 0x000008, "Wrong size on BP_HUD_Level_C_StartPulseAnim");
static_assert(offsetof(BP_HUD_Level_C_StartPulseAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_HUD_Level_C_StartPulseAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_HUD_Level.BP_HUD_Level_C.StopPulseAnim
// 0x0028 (0x0028 - 0x0000)
struct BP_HUD_Level_C_StopPulseAnim final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
};
static_assert(alignof(BP_HUD_Level_C_StopPulseAnim) == 0x000008, "Wrong alignment on BP_HUD_Level_C_StopPulseAnim");
static_assert(sizeof(BP_HUD_Level_C_StopPulseAnim) == 0x000028, "Wrong size on BP_HUD_Level_C_StopPulseAnim");
static_assert(offsetof(BP_HUD_Level_C_StopPulseAnim, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'BP_HUD_Level_C_StopPulseAnim::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function BP_HUD_Level.BP_HUD_Level_C.PlayHighlightAnim
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_Level_C_PlayHighlightAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_Level_C_PlayHighlightAnim) == 0x000008, "Wrong alignment on BP_HUD_Level_C_PlayHighlightAnim");
static_assert(sizeof(BP_HUD_Level_C_PlayHighlightAnim) == 0x000008, "Wrong size on BP_HUD_Level_C_PlayHighlightAnim");
static_assert(offsetof(BP_HUD_Level_C_PlayHighlightAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_HUD_Level_C_PlayHighlightAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_HUD_Level.BP_HUD_Level_C.SetProgress
// 0x0010 (0x0010 - 0x0000)
struct BP_HUD_Level_C_SetProgress final
{
public:
	float                                         InProgress;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_Level_C_SetProgress) == 0x000008, "Wrong alignment on BP_HUD_Level_C_SetProgress");
static_assert(sizeof(BP_HUD_Level_C_SetProgress) == 0x000010, "Wrong size on BP_HUD_Level_C_SetProgress");
static_assert(offsetof(BP_HUD_Level_C_SetProgress, InProgress) == 0x000000, "Member 'BP_HUD_Level_C_SetProgress::InProgress' has a wrong offset!");
static_assert(offsetof(BP_HUD_Level_C_SetProgress, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'BP_HUD_Level_C_SetProgress::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

