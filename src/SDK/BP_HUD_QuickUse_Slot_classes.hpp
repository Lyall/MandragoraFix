#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_QuickUse_Slot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_HUD_QuickUse_Slot.BP_HUD_QuickUse_Slot_C
// 0x00A8 (0x0318 - 0x0270)
class UBP_HUD_QuickUse_Slot_C final : public UHUDQuickUseSlotUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UseAnim;                                           // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InactivateAnim;                                    // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ActivateAnim;                                      // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             CaptionCapacity;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CaptionQuantity;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CaptionSlash;                                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         CountBox;                                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Countdown;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CountdownBar;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CountdownCaption_1;                                // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Darkening;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Active;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Bg;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Inactive;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconHighlight;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconImage_Active;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Quantity;                                          // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CAPACITY;                                          // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Icon;                                              // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowCapacity;                                      // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEmpty;                                           // 0x0311(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUsing;                                           // 0x0312(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShowQuantity;                                      // 0x0313(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_HUD_QuickUse_Slot(int32 EntryPoint);
	void OnSetQuickUseUsable(bool bUsable);
	void OnSetCountdown(float ElapsedCooldownPercent, const class FText& TimeLeft);
	void PreConstruct(bool IsDesignTime);
	void SetActive(bool InIsActive, bool InAnimate);
	void Setup(class UTexture2D* InIcon, int32 InQuantity, int32 InCapacity);
	void SetUsing(bool InIsUsing);
	void SetCountdown(float PercentLeft, const class FText& TimeLeft);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HUD_QuickUse_Slot_C">();
	}
	static class UBP_HUD_QuickUse_Slot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HUD_QuickUse_Slot_C>();
	}
};
static_assert(alignof(UBP_HUD_QuickUse_Slot_C) == 0x000008, "Wrong alignment on UBP_HUD_QuickUse_Slot_C");
static_assert(sizeof(UBP_HUD_QuickUse_Slot_C) == 0x000318, "Wrong size on UBP_HUD_QuickUse_Slot_C");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, UberGraphFrame) == 0x000270, "Member 'UBP_HUD_QuickUse_Slot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, UseAnim) == 0x000278, "Member 'UBP_HUD_QuickUse_Slot_C::UseAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, InactivateAnim) == 0x000280, "Member 'UBP_HUD_QuickUse_Slot_C::InactivateAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, ActivateAnim) == 0x000288, "Member 'UBP_HUD_QuickUse_Slot_C::ActivateAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, CaptionCapacity) == 0x000290, "Member 'UBP_HUD_QuickUse_Slot_C::CaptionCapacity' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, CaptionQuantity) == 0x000298, "Member 'UBP_HUD_QuickUse_Slot_C::CaptionQuantity' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, CaptionSlash) == 0x0002A0, "Member 'UBP_HUD_QuickUse_Slot_C::CaptionSlash' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, CountBox) == 0x0002A8, "Member 'UBP_HUD_QuickUse_Slot_C::CountBox' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, Countdown) == 0x0002B0, "Member 'UBP_HUD_QuickUse_Slot_C::Countdown' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, CountdownBar) == 0x0002B8, "Member 'UBP_HUD_QuickUse_Slot_C::CountdownBar' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, CountdownCaption_1) == 0x0002C0, "Member 'UBP_HUD_QuickUse_Slot_C::CountdownCaption_1' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, Darkening) == 0x0002C8, "Member 'UBP_HUD_QuickUse_Slot_C::Darkening' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, Frame_Active) == 0x0002D0, "Member 'UBP_HUD_QuickUse_Slot_C::Frame_Active' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, Frame_Bg) == 0x0002D8, "Member 'UBP_HUD_QuickUse_Slot_C::Frame_Bg' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, Frame_Inactive) == 0x0002E0, "Member 'UBP_HUD_QuickUse_Slot_C::Frame_Inactive' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, IconHighlight) == 0x0002E8, "Member 'UBP_HUD_QuickUse_Slot_C::IconHighlight' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, IconImage_Active) == 0x0002F0, "Member 'UBP_HUD_QuickUse_Slot_C::IconImage_Active' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, IsActive) == 0x0002F8, "Member 'UBP_HUD_QuickUse_Slot_C::IsActive' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, Quantity) == 0x0002FC, "Member 'UBP_HUD_QuickUse_Slot_C::Quantity' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, CAPACITY) == 0x000300, "Member 'UBP_HUD_QuickUse_Slot_C::CAPACITY' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, Icon) == 0x000308, "Member 'UBP_HUD_QuickUse_Slot_C::Icon' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, ShowCapacity) == 0x000310, "Member 'UBP_HUD_QuickUse_Slot_C::ShowCapacity' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, IsEmpty) == 0x000311, "Member 'UBP_HUD_QuickUse_Slot_C::IsEmpty' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, IsUsing) == 0x000312, "Member 'UBP_HUD_QuickUse_Slot_C::IsUsing' has a wrong offset!");
static_assert(offsetof(UBP_HUD_QuickUse_Slot_C, ShowQuantity) == 0x000313, "Member 'UBP_HUD_QuickUse_Slot_C::ShowQuantity' has a wrong offset!");

}

