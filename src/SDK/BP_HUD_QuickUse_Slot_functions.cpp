#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_QuickUse_Slot

#include "Basic.hpp"

#include "BP_HUD_QuickUse_Slot_classes.hpp"
#include "BP_HUD_QuickUse_Slot_parameters.hpp"


namespace SDK
{

// Function BP_HUD_QuickUse_Slot.BP_HUD_QuickUse_Slot_C.ExecuteUbergraph_BP_HUD_QuickUse_Slot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_QuickUse_Slot_C::ExecuteUbergraph_BP_HUD_QuickUse_Slot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_QuickUse_Slot_C", "ExecuteUbergraph_BP_HUD_QuickUse_Slot");

	Params::BP_HUD_QuickUse_Slot_C_ExecuteUbergraph_BP_HUD_QuickUse_Slot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_QuickUse_Slot.BP_HUD_QuickUse_Slot_C.OnSetQuickUseUsable
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bUsable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_QuickUse_Slot_C::OnSetQuickUseUsable(bool bUsable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_QuickUse_Slot_C", "OnSetQuickUseUsable");

	Params::BP_HUD_QuickUse_Slot_C_OnSetQuickUseUsable Parms{};

	Parms.bUsable = bUsable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_QuickUse_Slot.BP_HUD_QuickUse_Slot_C.OnSetCountdown
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   ElapsedCooldownPercent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TimeLeft                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_HUD_QuickUse_Slot_C::OnSetCountdown(float ElapsedCooldownPercent, const class FText& TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_QuickUse_Slot_C", "OnSetCountdown");

	Params::BP_HUD_QuickUse_Slot_C_OnSetCountdown Parms{};

	Parms.ElapsedCooldownPercent = ElapsedCooldownPercent;
	Parms.TimeLeft = std::move(TimeLeft);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_QuickUse_Slot.BP_HUD_QuickUse_Slot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_QuickUse_Slot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_QuickUse_Slot_C", "PreConstruct");

	Params::BP_HUD_QuickUse_Slot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_QuickUse_Slot.BP_HUD_QuickUse_Slot_C.SetActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InAnimate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_QuickUse_Slot_C::SetActive(bool InIsActive, bool InAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_QuickUse_Slot_C", "SetActive");

	Params::BP_HUD_QuickUse_Slot_C_SetActive Parms{};

	Parms.InIsActive = InIsActive;
	Parms.InAnimate = InAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_QuickUse_Slot.BP_HUD_QuickUse_Slot_C.Setup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       InIcon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InQuantity                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InCapacity                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_QuickUse_Slot_C::Setup(class UTexture2D* InIcon, int32 InQuantity, int32 InCapacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_QuickUse_Slot_C", "Setup");

	Params::BP_HUD_QuickUse_Slot_C_Setup Parms{};

	Parms.InIcon = InIcon;
	Parms.InQuantity = InQuantity;
	Parms.InCapacity = InCapacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_QuickUse_Slot.BP_HUD_QuickUse_Slot_C.SetUsing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsUsing                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_QuickUse_Slot_C::SetUsing(bool InIsUsing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_QuickUse_Slot_C", "SetUsing");

	Params::BP_HUD_QuickUse_Slot_C_SetUsing Parms{};

	Parms.InIsUsing = InIsUsing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD_QuickUse_Slot.BP_HUD_QuickUse_Slot_C.SetCountdown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PercentLeft                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TimeLeft                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_HUD_QuickUse_Slot_C::SetCountdown(float PercentLeft, const class FText& TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_QuickUse_Slot_C", "SetCountdown");

	Params::BP_HUD_QuickUse_Slot_C_SetCountdown Parms{};

	Parms.PercentLeft = PercentLeft;
	Parms.TimeLeft = std::move(TimeLeft);

	UObject::ProcessEvent(Func, &Parms);
}

}

