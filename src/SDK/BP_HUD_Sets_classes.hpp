#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_Sets

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_HUD_Sets.BP_HUD_Sets_C
// 0x0070 (0x02D0 - 0x0260)
class UBP_HUD_Sets_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       WeaponHighlightAnim;                               // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SkillHighlightAnim;                                // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            ControllerKeyDown;                                 // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            ControllerKeyUp;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBoxKeyDown;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBoxKeyUp;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SkillHighlight;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SkillText;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SkillUp;                                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WeaponHighlight;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             WeaponText;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WeaponUp;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          WeaponSet1;                                        // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          SkillSet1;                                         // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IsSmallScreen;                                     // 0x02CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_HUD_Sets(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void ToggleWeaponSet(bool InWeaponSet1, bool InAnimate);
	void ToggleSkillSet(bool InSkillSet1, bool InAnimate);
	void ToggleEnabled(bool inEnabled);
	void ToggleSmallScreen(bool InIsSmallScreen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HUD_Sets_C">();
	}
	static class UBP_HUD_Sets_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HUD_Sets_C>();
	}
};
static_assert(alignof(UBP_HUD_Sets_C) == 0x000008, "Wrong alignment on UBP_HUD_Sets_C");
static_assert(sizeof(UBP_HUD_Sets_C) == 0x0002D0, "Wrong size on UBP_HUD_Sets_C");
static_assert(offsetof(UBP_HUD_Sets_C, UberGraphFrame) == 0x000260, "Member 'UBP_HUD_Sets_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, WeaponHighlightAnim) == 0x000268, "Member 'UBP_HUD_Sets_C::WeaponHighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, SkillHighlightAnim) == 0x000270, "Member 'UBP_HUD_Sets_C::SkillHighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, ControllerKeyDown) == 0x000278, "Member 'UBP_HUD_Sets_C::ControllerKeyDown' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, ControllerKeyUp) == 0x000280, "Member 'UBP_HUD_Sets_C::ControllerKeyUp' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, ScaleBoxKeyDown) == 0x000288, "Member 'UBP_HUD_Sets_C::ScaleBoxKeyDown' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, ScaleBoxKeyUp) == 0x000290, "Member 'UBP_HUD_Sets_C::ScaleBoxKeyUp' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, SkillHighlight) == 0x000298, "Member 'UBP_HUD_Sets_C::SkillHighlight' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, SkillText) == 0x0002A0, "Member 'UBP_HUD_Sets_C::SkillText' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, SkillUp) == 0x0002A8, "Member 'UBP_HUD_Sets_C::SkillUp' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, WeaponHighlight) == 0x0002B0, "Member 'UBP_HUD_Sets_C::WeaponHighlight' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, WeaponText) == 0x0002B8, "Member 'UBP_HUD_Sets_C::WeaponText' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, WeaponUp) == 0x0002C0, "Member 'UBP_HUD_Sets_C::WeaponUp' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, WeaponSet1) == 0x0002C8, "Member 'UBP_HUD_Sets_C::WeaponSet1' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, SkillSet1) == 0x0002C9, "Member 'UBP_HUD_Sets_C::SkillSet1' has a wrong offset!");
static_assert(offsetof(UBP_HUD_Sets_C, IsSmallScreen) == 0x0002CA, "Member 'UBP_HUD_Sets_C::IsSmallScreen' has a wrong offset!");

}

