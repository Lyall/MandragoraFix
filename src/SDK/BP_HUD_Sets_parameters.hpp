#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_Sets

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_HUD_Sets.BP_HUD_Sets_C.ExecuteUbergraph_BP_HUD_Sets
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_Sets_C_ExecuteUbergraph_BP_HUD_Sets final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_Sets_C_ExecuteUbergraph_BP_HUD_Sets) == 0x000004, "Wrong alignment on BP_HUD_Sets_C_ExecuteUbergraph_BP_HUD_Sets");
static_assert(sizeof(BP_HUD_Sets_C_ExecuteUbergraph_BP_HUD_Sets) == 0x000008, "Wrong size on BP_HUD_Sets_C_ExecuteUbergraph_BP_HUD_Sets");
static_assert(offsetof(BP_HUD_Sets_C_ExecuteUbergraph_BP_HUD_Sets, EntryPoint) == 0x000000, "Member 'BP_HUD_Sets_C_ExecuteUbergraph_BP_HUD_Sets::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ExecuteUbergraph_BP_HUD_Sets, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_HUD_Sets_C_ExecuteUbergraph_BP_HUD_Sets::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_HUD_Sets.BP_HUD_Sets_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_Sets_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_Sets_C_PreConstruct) == 0x000001, "Wrong alignment on BP_HUD_Sets_C_PreConstruct");
static_assert(sizeof(BP_HUD_Sets_C_PreConstruct) == 0x000001, "Wrong size on BP_HUD_Sets_C_PreConstruct");
static_assert(offsetof(BP_HUD_Sets_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_HUD_Sets_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_HUD_Sets.BP_HUD_Sets_C.ToggleWeaponSet
// 0x0058 (0x0058 - 0x0000)
struct BP_HUD_Sets_C_ToggleWeaponSet final
{
public:
	bool                                          InWeaponSet1;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InAnimate;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0040(0x0018)()
};
static_assert(alignof(BP_HUD_Sets_C_ToggleWeaponSet) == 0x000008, "Wrong alignment on BP_HUD_Sets_C_ToggleWeaponSet");
static_assert(sizeof(BP_HUD_Sets_C_ToggleWeaponSet) == 0x000058, "Wrong size on BP_HUD_Sets_C_ToggleWeaponSet");
static_assert(offsetof(BP_HUD_Sets_C_ToggleWeaponSet, InWeaponSet1) == 0x000000, "Member 'BP_HUD_Sets_C_ToggleWeaponSet::InWeaponSet1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleWeaponSet, InAnimate) == 0x000001, "Member 'BP_HUD_Sets_C_ToggleWeaponSet::InAnimate' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleWeaponSet, Temp_bool_Variable) == 0x000002, "Member 'BP_HUD_Sets_C_ToggleWeaponSet::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleWeaponSet, Temp_text_Variable) == 0x000008, "Member 'BP_HUD_Sets_C_ToggleWeaponSet::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleWeaponSet, Temp_text_Variable_1) == 0x000020, "Member 'BP_HUD_Sets_C_ToggleWeaponSet::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleWeaponSet, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'BP_HUD_Sets_C_ToggleWeaponSet::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleWeaponSet, K2Node_Select_Default) == 0x000040, "Member 'BP_HUD_Sets_C_ToggleWeaponSet::K2Node_Select_Default' has a wrong offset!");

// Function BP_HUD_Sets.BP_HUD_Sets_C.ToggleSkillSet
// 0x0070 (0x0070 - 0x0000)
struct BP_HUD_Sets_C_ToggleSkillSet final
{
public:
	bool                                          InSkillSet1;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InAnimate;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0058(0x0018)()
};
static_assert(alignof(BP_HUD_Sets_C_ToggleSkillSet) == 0x000008, "Wrong alignment on BP_HUD_Sets_C_ToggleSkillSet");
static_assert(sizeof(BP_HUD_Sets_C_ToggleSkillSet) == 0x000070, "Wrong size on BP_HUD_Sets_C_ToggleSkillSet");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSkillSet, InSkillSet1) == 0x000000, "Member 'BP_HUD_Sets_C_ToggleSkillSet::InSkillSet1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSkillSet, InAnimate) == 0x000001, "Member 'BP_HUD_Sets_C_ToggleSkillSet::InAnimate' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSkillSet, Temp_delegate_Variable) == 0x000004, "Member 'BP_HUD_Sets_C_ToggleSkillSet::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSkillSet, CallFunc_PostEvent_ReturnValue) == 0x000014, "Member 'BP_HUD_Sets_C_ToggleSkillSet::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSkillSet, Temp_bool_Variable) == 0x000018, "Member 'BP_HUD_Sets_C_ToggleSkillSet::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSkillSet, Temp_text_Variable) == 0x000020, "Member 'BP_HUD_Sets_C_ToggleSkillSet::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSkillSet, Temp_text_Variable_1) == 0x000038, "Member 'BP_HUD_Sets_C_ToggleSkillSet::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSkillSet, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'BP_HUD_Sets_C_ToggleSkillSet::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSkillSet, K2Node_Select_Default) == 0x000058, "Member 'BP_HUD_Sets_C_ToggleSkillSet::K2Node_Select_Default' has a wrong offset!");

// Function BP_HUD_Sets.BP_HUD_Sets_C.ToggleEnabled
// 0x0090 (0x0090 - 0x0000)
struct BP_HUD_Sets_C_ToggleEnabled final
{
public:
	bool                                          inEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0068(0x0028)()
};
static_assert(alignof(BP_HUD_Sets_C_ToggleEnabled) == 0x000008, "Wrong alignment on BP_HUD_Sets_C_ToggleEnabled");
static_assert(sizeof(BP_HUD_Sets_C_ToggleEnabled) == 0x000090, "Wrong size on BP_HUD_Sets_C_ToggleEnabled");
static_assert(offsetof(BP_HUD_Sets_C_ToggleEnabled, inEnabled) == 0x000000, "Member 'BP_HUD_Sets_C_ToggleEnabled::inEnabled' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleEnabled, Temp_bool_Variable) == 0x000001, "Member 'BP_HUD_Sets_C_ToggleEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleEnabled, Temp_struct_Variable) == 0x000004, "Member 'BP_HUD_Sets_C_ToggleEnabled::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleEnabled, Temp_struct_Variable_1) == 0x000014, "Member 'BP_HUD_Sets_C_ToggleEnabled::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleEnabled, Temp_bool_Variable_1) == 0x000024, "Member 'BP_HUD_Sets_C_ToggleEnabled::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleEnabled, Temp_struct_Variable_2) == 0x000028, "Member 'BP_HUD_Sets_C_ToggleEnabled::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleEnabled, Temp_struct_Variable_3) == 0x000038, "Member 'BP_HUD_Sets_C_ToggleEnabled::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleEnabled, K2Node_Select_Default) == 0x000048, "Member 'BP_HUD_Sets_C_ToggleEnabled::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleEnabled, K2Node_Select_Default_1) == 0x000058, "Member 'BP_HUD_Sets_C_ToggleEnabled::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleEnabled, K2Node_MakeStruct_SlateColor) == 0x000068, "Member 'BP_HUD_Sets_C_ToggleEnabled::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function BP_HUD_Sets.BP_HUD_Sets_C.ToggleSmallScreen
// 0x0080 (0x0080 - 0x0000)
struct BP_HUD_Sets_C_ToggleSmallScreen final
{
public:
	bool                                          InIsSmallScreen;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0040(0x001C)(NoDestructor)
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform_1;               // 0x0064(0x001C)(NoDestructor)
};
static_assert(alignof(BP_HUD_Sets_C_ToggleSmallScreen) == 0x000004, "Wrong alignment on BP_HUD_Sets_C_ToggleSmallScreen");
static_assert(sizeof(BP_HUD_Sets_C_ToggleSmallScreen) == 0x000080, "Wrong size on BP_HUD_Sets_C_ToggleSmallScreen");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, InIsSmallScreen) == 0x000000, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::InIsSmallScreen' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, Temp_bool_Variable) == 0x000001, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, Temp_struct_Variable) == 0x000004, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, Temp_struct_Variable_1) == 0x00000C, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, Temp_bool_Variable_1) == 0x000014, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, Temp_struct_Variable_2) == 0x000018, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, Temp_struct_Variable_3) == 0x000020, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, Temp_bool_Variable_2) == 0x000028, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, Temp_float_Variable) == 0x00002C, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, Temp_float_Variable_1) == 0x000030, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, K2Node_Select_Default) == 0x000034, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, K2Node_Select_Default_1) == 0x000038, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, K2Node_MakeStruct_WidgetTransform) == 0x000040, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, K2Node_Select_Default_2) == 0x00005C, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_Sets_C_ToggleSmallScreen, K2Node_MakeStruct_WidgetTransform_1) == 0x000064, "Member 'BP_HUD_Sets_C_ToggleSmallScreen::K2Node_MakeStruct_WidgetTransform_1' has a wrong offset!");

}

