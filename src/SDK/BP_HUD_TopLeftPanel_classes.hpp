#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_TopLeftPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_HUD_TopLeftPanel.BP_HUD_TopLeftPanel_C
// 0x0200 (0x0460 - 0x0260)
class UBP_HUD_TopLeftPanel_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       LowComboPointsLoopAnim;                            // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowComboPointsAnim;                                // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowManaAnim;                                       // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowManaLoopAnim;                                   // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowRageAnim;                                       // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowRageLoopAnim;                                   // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowStaminaAnim;                                    // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowStaminaLoopAnim;                                // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowHPAnim;                                         // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowHPLoopAnim;                                     // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EnergyFrameHighlightAnim;                          // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RageFrameHighlightAnim;                            // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       StaminaFrameHighlightAnim;                         // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HealthFrameHighlightAnim;                          // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NoStaminaAnim;                                     // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           Bars;                                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           BarShadows;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ComboPoint;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ComboPoint_C*                       ComboPoint1;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ComboPoint_C*                       ComboPoint10;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ComboPoint_C*                       ComboPoint2;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ComboPoint_C*                       ComboPoint3;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ComboPoint_C*                       ComboPoint4;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ComboPoint_C*                       ComboPoint5;                                       // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ComboPoint_C*                       ComboPoint6;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ComboPoint_C*                       ComboPoint7;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ComboPoint_C*                       ComboPoint8;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ComboPoint_C*                       ComboPoint9;                                       // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ComboPoints;                                       // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Energy;                                            // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBarEnergy_C*        EnergyBar;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EnergyFrame;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EnergyFrameHighlight;                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EnergyShadow;                                      // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Health;                                            // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBarHealth_C*        HealthBar;                                         // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBarHealthValue_C*   HealthBarValue;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBarArcaneArmor_C*   HealthDamageBufferBar;                             // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HealthFrame;                                       // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HealthFrameHighlight;                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBarMagicArmor_C*    HealthMagicArmor;                                  // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HealthShadow;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_Level_C*                        Level;                                             // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LowComboPointsHighlight;                           // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LowHPWarning;                                      // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LowMana;                                           // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LowRage;                                           // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LowStamina;                                        // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NoStaminaHighlight;                                // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBarArcaneArmor_C*   PriorityHealthBar;                                 // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Rage;                                              // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBarRage_C*          RageBar;                                           // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RageFrame;                                         // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RageFrameHighlight;                                // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RageShadow;                                        // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Stamina;                                           // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBarStamina_C*       StaminaBar;                                        // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StaminaFrame;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StaminaFrameHighlight;                             // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StaminaShadow;                                     // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          EnergyVisible;                                     // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RageVisible;                                       // 0x0449(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A[0x6];                                      // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Texture;                                           // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSmallScreen;                                     // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_HUD_TopLeftPanel(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void SetRageVisibility(bool IsVisible_0);
	void SetEnergyVisibility(bool IsVisible_0);
	void PlayNoStaminaFeedback();
	void Resize_Health_Bar(float NewWidth, bool Animate);
	void ResizeStaminaBar(float NewWidth, bool Animate);
	void ResizeRageBar(float NewWidth, bool Animate);
	void ResizeEnergyBar(float NewWidth, bool Animate);
	void ToggleLowHPAnim(bool IsHPLow);
	void RepositionHealthBars();
	void SetComboPoint(int32 CurrentComboPointFraction, int32 CurrentComboPoint, int32 MaxComboPoint);
	void ToggleLowStaminaAnim(bool IsStaminaLow);
	void ToggleLowRageAnim(bool IsRageLow);
	void ToggleLowManaAnim(bool IsManaLow);
	void HighlightHealthBar();
	void HighlightStaminaBar();
	void HighlightRageBar();
	void HighlightManaBar();
	void SetBarTextures();
	void ToggleLowComboPointsAnim(bool IsActive);
	void ToggleSmallScreen(bool InIsSmallScreen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HUD_TopLeftPanel_C">();
	}
	static class UBP_HUD_TopLeftPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HUD_TopLeftPanel_C>();
	}
};
static_assert(alignof(UBP_HUD_TopLeftPanel_C) == 0x000008, "Wrong alignment on UBP_HUD_TopLeftPanel_C");
static_assert(sizeof(UBP_HUD_TopLeftPanel_C) == 0x000460, "Wrong size on UBP_HUD_TopLeftPanel_C");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, UberGraphFrame) == 0x000260, "Member 'UBP_HUD_TopLeftPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowComboPointsLoopAnim) == 0x000268, "Member 'UBP_HUD_TopLeftPanel_C::LowComboPointsLoopAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowComboPointsAnim) == 0x000270, "Member 'UBP_HUD_TopLeftPanel_C::LowComboPointsAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowManaAnim) == 0x000278, "Member 'UBP_HUD_TopLeftPanel_C::LowManaAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowManaLoopAnim) == 0x000280, "Member 'UBP_HUD_TopLeftPanel_C::LowManaLoopAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowRageAnim) == 0x000288, "Member 'UBP_HUD_TopLeftPanel_C::LowRageAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowRageLoopAnim) == 0x000290, "Member 'UBP_HUD_TopLeftPanel_C::LowRageLoopAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowStaminaAnim) == 0x000298, "Member 'UBP_HUD_TopLeftPanel_C::LowStaminaAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowStaminaLoopAnim) == 0x0002A0, "Member 'UBP_HUD_TopLeftPanel_C::LowStaminaLoopAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowHPAnim) == 0x0002A8, "Member 'UBP_HUD_TopLeftPanel_C::LowHPAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowHPLoopAnim) == 0x0002B0, "Member 'UBP_HUD_TopLeftPanel_C::LowHPLoopAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, EnergyFrameHighlightAnim) == 0x0002B8, "Member 'UBP_HUD_TopLeftPanel_C::EnergyFrameHighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, RageFrameHighlightAnim) == 0x0002C0, "Member 'UBP_HUD_TopLeftPanel_C::RageFrameHighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, StaminaFrameHighlightAnim) == 0x0002C8, "Member 'UBP_HUD_TopLeftPanel_C::StaminaFrameHighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, HealthFrameHighlightAnim) == 0x0002D0, "Member 'UBP_HUD_TopLeftPanel_C::HealthFrameHighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, NoStaminaAnim) == 0x0002D8, "Member 'UBP_HUD_TopLeftPanel_C::NoStaminaAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, Bars) == 0x0002E0, "Member 'UBP_HUD_TopLeftPanel_C::Bars' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, BarShadows) == 0x0002E8, "Member 'UBP_HUD_TopLeftPanel_C::BarShadows' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, ComboPoint) == 0x0002F0, "Member 'UBP_HUD_TopLeftPanel_C::ComboPoint' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, ComboPoint1) == 0x0002F8, "Member 'UBP_HUD_TopLeftPanel_C::ComboPoint1' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, ComboPoint10) == 0x000300, "Member 'UBP_HUD_TopLeftPanel_C::ComboPoint10' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, ComboPoint2) == 0x000308, "Member 'UBP_HUD_TopLeftPanel_C::ComboPoint2' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, ComboPoint3) == 0x000310, "Member 'UBP_HUD_TopLeftPanel_C::ComboPoint3' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, ComboPoint4) == 0x000318, "Member 'UBP_HUD_TopLeftPanel_C::ComboPoint4' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, ComboPoint5) == 0x000320, "Member 'UBP_HUD_TopLeftPanel_C::ComboPoint5' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, ComboPoint6) == 0x000328, "Member 'UBP_HUD_TopLeftPanel_C::ComboPoint6' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, ComboPoint7) == 0x000330, "Member 'UBP_HUD_TopLeftPanel_C::ComboPoint7' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, ComboPoint8) == 0x000338, "Member 'UBP_HUD_TopLeftPanel_C::ComboPoint8' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, ComboPoint9) == 0x000340, "Member 'UBP_HUD_TopLeftPanel_C::ComboPoint9' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, ComboPoints) == 0x000348, "Member 'UBP_HUD_TopLeftPanel_C::ComboPoints' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, Energy) == 0x000350, "Member 'UBP_HUD_TopLeftPanel_C::Energy' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, EnergyBar) == 0x000358, "Member 'UBP_HUD_TopLeftPanel_C::EnergyBar' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, EnergyFrame) == 0x000360, "Member 'UBP_HUD_TopLeftPanel_C::EnergyFrame' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, EnergyFrameHighlight) == 0x000368, "Member 'UBP_HUD_TopLeftPanel_C::EnergyFrameHighlight' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, EnergyShadow) == 0x000370, "Member 'UBP_HUD_TopLeftPanel_C::EnergyShadow' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, Health) == 0x000378, "Member 'UBP_HUD_TopLeftPanel_C::Health' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, HealthBar) == 0x000380, "Member 'UBP_HUD_TopLeftPanel_C::HealthBar' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, HealthBarValue) == 0x000388, "Member 'UBP_HUD_TopLeftPanel_C::HealthBarValue' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, HealthDamageBufferBar) == 0x000390, "Member 'UBP_HUD_TopLeftPanel_C::HealthDamageBufferBar' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, HealthFrame) == 0x000398, "Member 'UBP_HUD_TopLeftPanel_C::HealthFrame' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, HealthFrameHighlight) == 0x0003A0, "Member 'UBP_HUD_TopLeftPanel_C::HealthFrameHighlight' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, HealthMagicArmor) == 0x0003A8, "Member 'UBP_HUD_TopLeftPanel_C::HealthMagicArmor' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, HealthShadow) == 0x0003B0, "Member 'UBP_HUD_TopLeftPanel_C::HealthShadow' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, Level) == 0x0003B8, "Member 'UBP_HUD_TopLeftPanel_C::Level' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowComboPointsHighlight) == 0x0003C0, "Member 'UBP_HUD_TopLeftPanel_C::LowComboPointsHighlight' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowHPWarning) == 0x0003C8, "Member 'UBP_HUD_TopLeftPanel_C::LowHPWarning' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowMana) == 0x0003D0, "Member 'UBP_HUD_TopLeftPanel_C::LowMana' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowRage) == 0x0003D8, "Member 'UBP_HUD_TopLeftPanel_C::LowRage' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, LowStamina) == 0x0003E0, "Member 'UBP_HUD_TopLeftPanel_C::LowStamina' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, NoStaminaHighlight) == 0x0003E8, "Member 'UBP_HUD_TopLeftPanel_C::NoStaminaHighlight' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, PriorityHealthBar) == 0x0003F0, "Member 'UBP_HUD_TopLeftPanel_C::PriorityHealthBar' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, Rage) == 0x0003F8, "Member 'UBP_HUD_TopLeftPanel_C::Rage' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, RageBar) == 0x000400, "Member 'UBP_HUD_TopLeftPanel_C::RageBar' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, RageFrame) == 0x000408, "Member 'UBP_HUD_TopLeftPanel_C::RageFrame' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, RageFrameHighlight) == 0x000410, "Member 'UBP_HUD_TopLeftPanel_C::RageFrameHighlight' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, RageShadow) == 0x000418, "Member 'UBP_HUD_TopLeftPanel_C::RageShadow' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, Stamina) == 0x000420, "Member 'UBP_HUD_TopLeftPanel_C::Stamina' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, StaminaBar) == 0x000428, "Member 'UBP_HUD_TopLeftPanel_C::StaminaBar' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, StaminaFrame) == 0x000430, "Member 'UBP_HUD_TopLeftPanel_C::StaminaFrame' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, StaminaFrameHighlight) == 0x000438, "Member 'UBP_HUD_TopLeftPanel_C::StaminaFrameHighlight' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, StaminaShadow) == 0x000440, "Member 'UBP_HUD_TopLeftPanel_C::StaminaShadow' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, EnergyVisible) == 0x000448, "Member 'UBP_HUD_TopLeftPanel_C::EnergyVisible' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, RageVisible) == 0x000449, "Member 'UBP_HUD_TopLeftPanel_C::RageVisible' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, Texture) == 0x000450, "Member 'UBP_HUD_TopLeftPanel_C::Texture' has a wrong offset!");
static_assert(offsetof(UBP_HUD_TopLeftPanel_C, IsSmallScreen) == 0x000458, "Member 'UBP_HUD_TopLeftPanel_C::IsSmallScreen' has a wrong offset!");

}

