#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_HUD.BP_HUD_C
// 0x0248 (0x08D0 - 0x0688)
class UBP_HUD_C final : public UHUDUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0688(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       RiftCombatStartAnim;                               // 0x0690(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PurgingRainVFXAnim;                                // 0x0698(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowRageWarningReducedAnim;                         // 0x06A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowLifeAuraWarningReducedAnim;                     // 0x06A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowHPWarningReducedAnim;                           // 0x06B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowStaminaWarningReducedAnim;                      // 0x06B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowManaWarningReducedAnim;                         // 0x06C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowHPWarningInstantReducedAnim;                    // 0x06C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       StunnedWarningReducedAnim;                         // 0x06D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowRageWarningAnim;                                // 0x06D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideItemUsedLabelAnim;                             // 0x06E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideNewItemLabelAnim;                              // 0x06E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MoveUseItemcontainer;                              // 0x06F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MovePickupContainer;                               // 0x06F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowItemUsedLabelAnim;                             // 0x0700(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowNewItemLabelAnim;                              // 0x0708(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowLifeAuraWarningAnim;                            // 0x0710(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowHPWarningAnim;                                  // 0x0718(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowStaminaWarningAnim;                             // 0x0720(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowManaWarningAnim;                                // 0x0728(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowHPWarningInstantAnim;                           // 0x0730(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowHPWarningLoop;                                  // 0x0738(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       StunnedWarningAnim;                                // 0x0740(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowStaminaWarningLoop;                             // 0x0748(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideHUD;                                           // 0x0750(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_HUD_TopLeftPanel_C*                 Bars;                                              // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BestiaryUpdatedNotification_C*      BestiaryUpdatedNotification;                       // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBar_BossHP_C*       BossHP;                                            // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBar_BossHP_C*       BossHP2;                                           // 0x0770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_BuffBar_C*                      BuffBar;                                           // 0x0778(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              BuffBarScaleBox;                                   // 0x0780(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas;                                            // 0x0788(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_Counters_C*                     Counters;                                          // 0x0790(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBar_LifeAura_C*     EntropyBar;                                        // 0x0798(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBar_Glide_C*        GlideWingsBar;                                     // 0x07A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBar_HeavyAttack_C*  HeavyAttackBar;                                    // 0x07A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractText_C*                     InteractText;                                      // 0x07B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ItemBox;                                           // 0x07B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ItemUsedLabel;                                     // 0x07C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              KeyItemScaleBox;                                   // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_KeyItemSlot_C*                  KeyItemSlot_Alannah;                               // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_KeyItemSlot_C*                  KeyItemSlot_Gerald;                                // 0x07D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_KeyItemSlot_C*                  KeyItemSlot_Yrsa;                                  // 0x07E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         KeyItemSlots;                                      // 0x07E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBar_KillingFields_C* KillingFields2;                                    // 0x07F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LowHPWarning;                                      // 0x07F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LowHPWarning_Instant;                              // 0x0800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LowLifeAuraWarning;                                // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LowManaWarning;                                    // 0x0810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LowRageWarning;                                    // 0x0818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LowStaminaWarning2;                                // 0x0820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NewItemLabel;                                      // 0x0828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PickupContainer;                                   // 0x0830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PurgingRainVFX;                                    // 0x0838(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           QuestContainer;                                    // 0x0840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_QuestNotification_C*                QuestNotification;                                 // 0x0848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         QuickUseKeyItemsContainer;                         // 0x0850(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_QuickUse_C*                     QuickUseSlots;                                     // 0x0858(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              QuikcUseScaleBox;                                  // 0x0860(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RiftCombatStart1;                                  // 0x0868(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RiftCombatStart2;                                  // 0x0870(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_BottomLeftPanel_C*              SkillSlots;                                        // 0x0878(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StunnedWarning;                                    // 0x0880(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_Warning_C*                      TextWarning;                                       // 0x0888(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           UseItemContainer;                                  // 0x0890(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_HUD_Sets_C*                         WeaponSkillSet;                                    // 0x0898(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              WeaponSkillSetScaleBox;                            // 0x08A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Visible_;                                          // 0x08A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NewItemLabelVisible;                               // 0x08A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ItemUsedLabelVisible;                              // 0x08AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8AB[0x5];                                      // 0x08AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           NewItemLabelTimer;                                 // 0x08B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ItemUsedLabelTimer;                                // 0x08B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         GlobalNotificationDelay;                           // 0x08C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowInteractIsActive;                              // 0x08C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RequestQuestNotificationVisibility;                // 0x08C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C6[0x2];                                      // 0x08C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ShowBestiaryUpdatedTimer;                          // 0x08C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HUD(int32 EntryPoint);
	void OnPlayNoStaminaFeedback();
	void OnHideInteract();
	void OnShowInteract(const class FText& InInteractText, class UAbilityBase* InAbilityBase);
	void OnInputRestrict(bool bInInputRestrict);
	void CustomEvent_1(class UManUserWidgetBase* ManUserWidgetBase);
	void OnSpecialMovementUlnocked(ESpecialMovementType SpecialMovementType);
	void OnToggleAddedResource(EHeroProperty PropertyType, int32 Value, bool bShowing, bool bAnimate);
	void OnToggleExtraLanternDrainEffect(bool bActive);
	void OnChangeSkillSetIndex(int32 SkillSetIndex, bool bAnimate);
	void OnChangeItemSetIndex(int32 ItemSetIndex, bool bAnimate);
	void OnPlayRiftCombatStartAnim(int32 RiftID);
	void OnShowBestiaryUpdatedNotification(float Timeout);
	void OnSetLightBarrier(EHUDBarType HUDBarType, float LightBarrierCurrentValue, float LightBarrierMaxValue);
	void OnSetBossBar(EHUDBarType HUDBarType, bool bMiniBoss, bool bTwoStageBossBar, bool bMandragora);
	void OnSetWarningText(bool bInShow, const class FText& InWarningText);
	void OnShowHUDPopup(const struct FHUDPopupQueue& HUDPopupQueue);
	void OnToggleResourceBarPosition(bool bDownPosition);
	void OnToggleSideEffectWarning(EScreenSideEffect Effect, bool bActive, ESideEffectWarningType SideEffectWarningType);
	void OnSetInteractMode(bool bInCanInteract);
	void OnSetLevelProgress(float LevelProgress);
	void OnSetFadeQuestTrackerBackgroundVisible(bool bInVisible);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnComboPointBarVisible(bool bComboPointBarVisible);
	void OnToggleLowLifeAuraWarning(bool bIsBelowZero);
	void OnSetComboPoint(int32 CurrentComboPointFraction, int32 CurrentComboPoint, int32 MaxComboPoint);
	void OnToggleLowHPBarWarning(bool bIsHPLow);
	void OnExtraAbilitySlotVisibility(bool bInVisible);
	void OnHideHUDBar(EHUDBarType HUDBarType);
	void OnSetHUDBar(EHUDBarType HUDBarType, float CurrentValue);
	void OnShowHUDBar(EHUDBarType HUDBarType, const class FText& HudBarTitle, float MinValue, float MaxValue, float CurrentValue, float ReferencePointValue, float LengthRatio);
	void OnPropertyChanged(EHeroProperty PropertyType, float Value, float RoundedFloatValue, int32 RoundedIntValue, bool bAnimate);
	void OnSetLevelPulseAnim(bool bPlay);
	void OnEnergyBarVisibility(bool bInVisible);
	void OnRageBarVisibility(bool bInVisible);
	void OnHUDVisibility(bool bInVisible, bool bAnimate);
	void OnLevelUpIndicator(bool bMatchHasStarted);
	void OnHeroDie();
	void OnShowUseItemNotification(class UHUDNotificationUserWidget* HUDNotificationUserWidget, const class FText& ItemName, class UTexture2D* Icon, float Timeout, int32 Number);
	void OnShowPickupNotification(class UHUDNotificationUserWidget* HUDNotificationUserWidget, const class FText& ItemName, const class FText& ItemDescription, class UTexture2D* Icon, float Timeout, int32 Number, class UItemAbility* ItemAbility, bool bHideNewItemTitle);
	void OnRemoveQuestNotification(class UManQuest* ManQuest);
	void OnUpdateQuestNotificationObjective(class UManQuest* ManQuest, const TArray<class UManQuestObjective*>& Objectives);
	void OnShowQuestNotification(class UManQuest* ManQuest, const TArray<class UManQuestObjective*>& Objectives);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void StartLowHPWarningLoop();
	void SetHUDVisibility(bool Visible__0, bool Animate_);
	void CoinChange(int32 NewCoin, bool Animate_);
	void Show_Pickup_Notification(class UHUDNotificationUserWidget* HUDNotificationUserWidget, const class FText& Name_0, const class FText& Description, class UTexture2D* Icon, float Timeout, int32 Number, class UItemAbility* ItemAbility);
	void ShowInteract(const class FText& Caption, class UAbilityBase* AbilityBase);
	void HideInteract();
	void SetHeroLevel(int32 NewLevel);
	void PlayLevelHighlightAnim();
	void StartLevelPulseAnim();
	void StopLevelPulseAnim();
	void UpdateQuestNotificationObjective(class UManQuest* ManQuest, TArray<class UManQuestObjective*>& Objectives);
	void EssenceChange(int32 NewEssence, bool Animate_);
	class UBP_QuestNotification_C* GetQuestNotification(class UManQuest* ManQuest);
	void SetupAbilityIcons();
	void ToggleLowStaminaWarning(bool IsBelowZero, ESideEffectWarningType SideEffectWarningType);
	void ShowUseItemNotification(class UHUDNotificationUserWidget* HUDNotificationUserWidget, const class FText& Name_0, class UTexture2D* Icon, float Timeout, int32 Number);
	void BP_PropertyChanged(EHeroProperty PropertyType, float Value, float RoundedFloatValue, int32 RoundedIntValue, bool Animate);
	void ShowHUDBar(EHUDBarType HUDBarType, const class FText& HudBarTitle, float MinValue, float MaxValue, float CurrentValue, float ReferencePointValue, float LengthRatio);
	void HideHUDBar(EHUDBarType HUDBarType);
	void SetHUDBar(EHUDBarType HUDBarType, float CurrentValue);
	void ToggleStunnedWarning(bool IsStunned, ESideEffectWarningType SideEffectWarningType);
	void ToggleLowHPWarning(bool IsHPLow, ESideEffectWarningType SideEffectWarningType);
	void ToggleLowManaWarning(bool IsManaLow, ESideEffectWarningType SideEffectWarningType);
	void ToggleLowHPBarWarning(bool IsHPLow);
	void ToggleLowLifeAuraWarning(bool IsBelowZero);
	void EntropicEssenceChange(int32 NewEntropicEssence, bool Animate_);
	void ShowNewItemLabel();
	void HideNewItemLabel();
	void ShowItemUsedLabel();
	void HideItemUsedLabel();
	void ToggleLowRageWarning(bool IsRageLow, ESideEffectWarningType SideEffectWarningType);
	void Toggle_Resource_Bar_Position(bool IsDefault);
	void TogglePurgingRainVFX(bool IsVisible_0, bool IsFacingLeft);
	void SetLightBarrier(EHUDBarType HUDBarType, float LightBarrierCurrentValue, float LightBarrierMaxValue);
	void SetBossBar(EHUDBarType HUDBarType, bool Miniboss, bool TwoStageBossBar, bool Mandragora);
	void ShowBestiaryUpdatedNotification(float Timeout);
	void HideBestiaryUpdated();
	void PlayRiftCombatStartAnim(int32 RiftID);
	void RepositionKeyItemSlots(int32 QuickUseSlotClount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HUD_C">();
	}
	static class UBP_HUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HUD_C>();
	}
};
static_assert(alignof(UBP_HUD_C) == 0x000008, "Wrong alignment on UBP_HUD_C");
static_assert(sizeof(UBP_HUD_C) == 0x0008D0, "Wrong size on UBP_HUD_C");
static_assert(offsetof(UBP_HUD_C, UberGraphFrame) == 0x000688, "Member 'UBP_HUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, RiftCombatStartAnim) == 0x000690, "Member 'UBP_HUD_C::RiftCombatStartAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, PurgingRainVFXAnim) == 0x000698, "Member 'UBP_HUD_C::PurgingRainVFXAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowRageWarningReducedAnim) == 0x0006A0, "Member 'UBP_HUD_C::LowRageWarningReducedAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowLifeAuraWarningReducedAnim) == 0x0006A8, "Member 'UBP_HUD_C::LowLifeAuraWarningReducedAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowHPWarningReducedAnim) == 0x0006B0, "Member 'UBP_HUD_C::LowHPWarningReducedAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowStaminaWarningReducedAnim) == 0x0006B8, "Member 'UBP_HUD_C::LowStaminaWarningReducedAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowManaWarningReducedAnim) == 0x0006C0, "Member 'UBP_HUD_C::LowManaWarningReducedAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowHPWarningInstantReducedAnim) == 0x0006C8, "Member 'UBP_HUD_C::LowHPWarningInstantReducedAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, StunnedWarningReducedAnim) == 0x0006D0, "Member 'UBP_HUD_C::StunnedWarningReducedAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowRageWarningAnim) == 0x0006D8, "Member 'UBP_HUD_C::LowRageWarningAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, HideItemUsedLabelAnim) == 0x0006E0, "Member 'UBP_HUD_C::HideItemUsedLabelAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, HideNewItemLabelAnim) == 0x0006E8, "Member 'UBP_HUD_C::HideNewItemLabelAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, MoveUseItemcontainer) == 0x0006F0, "Member 'UBP_HUD_C::MoveUseItemcontainer' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, MovePickupContainer) == 0x0006F8, "Member 'UBP_HUD_C::MovePickupContainer' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, ShowItemUsedLabelAnim) == 0x000700, "Member 'UBP_HUD_C::ShowItemUsedLabelAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, ShowNewItemLabelAnim) == 0x000708, "Member 'UBP_HUD_C::ShowNewItemLabelAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowLifeAuraWarningAnim) == 0x000710, "Member 'UBP_HUD_C::LowLifeAuraWarningAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowHPWarningAnim) == 0x000718, "Member 'UBP_HUD_C::LowHPWarningAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowStaminaWarningAnim) == 0x000720, "Member 'UBP_HUD_C::LowStaminaWarningAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowManaWarningAnim) == 0x000728, "Member 'UBP_HUD_C::LowManaWarningAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowHPWarningInstantAnim) == 0x000730, "Member 'UBP_HUD_C::LowHPWarningInstantAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowHPWarningLoop) == 0x000738, "Member 'UBP_HUD_C::LowHPWarningLoop' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, StunnedWarningAnim) == 0x000740, "Member 'UBP_HUD_C::StunnedWarningAnim' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowStaminaWarningLoop) == 0x000748, "Member 'UBP_HUD_C::LowStaminaWarningLoop' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, HideHUD) == 0x000750, "Member 'UBP_HUD_C::HideHUD' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, Bars) == 0x000758, "Member 'UBP_HUD_C::Bars' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, BestiaryUpdatedNotification) == 0x000760, "Member 'UBP_HUD_C::BestiaryUpdatedNotification' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, BossHP) == 0x000768, "Member 'UBP_HUD_C::BossHP' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, BossHP2) == 0x000770, "Member 'UBP_HUD_C::BossHP2' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, BuffBar) == 0x000778, "Member 'UBP_HUD_C::BuffBar' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, BuffBarScaleBox) == 0x000780, "Member 'UBP_HUD_C::BuffBarScaleBox' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, Canvas) == 0x000788, "Member 'UBP_HUD_C::Canvas' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, Counters) == 0x000790, "Member 'UBP_HUD_C::Counters' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, EntropyBar) == 0x000798, "Member 'UBP_HUD_C::EntropyBar' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, GlideWingsBar) == 0x0007A0, "Member 'UBP_HUD_C::GlideWingsBar' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, HeavyAttackBar) == 0x0007A8, "Member 'UBP_HUD_C::HeavyAttackBar' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, InteractText) == 0x0007B0, "Member 'UBP_HUD_C::InteractText' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, ItemBox) == 0x0007B8, "Member 'UBP_HUD_C::ItemBox' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, ItemUsedLabel) == 0x0007C0, "Member 'UBP_HUD_C::ItemUsedLabel' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, KeyItemScaleBox) == 0x0007C8, "Member 'UBP_HUD_C::KeyItemScaleBox' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, KeyItemSlot_Alannah) == 0x0007D0, "Member 'UBP_HUD_C::KeyItemSlot_Alannah' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, KeyItemSlot_Gerald) == 0x0007D8, "Member 'UBP_HUD_C::KeyItemSlot_Gerald' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, KeyItemSlot_Yrsa) == 0x0007E0, "Member 'UBP_HUD_C::KeyItemSlot_Yrsa' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, KeyItemSlots) == 0x0007E8, "Member 'UBP_HUD_C::KeyItemSlots' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, KillingFields2) == 0x0007F0, "Member 'UBP_HUD_C::KillingFields2' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowHPWarning) == 0x0007F8, "Member 'UBP_HUD_C::LowHPWarning' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowHPWarning_Instant) == 0x000800, "Member 'UBP_HUD_C::LowHPWarning_Instant' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowLifeAuraWarning) == 0x000808, "Member 'UBP_HUD_C::LowLifeAuraWarning' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowManaWarning) == 0x000810, "Member 'UBP_HUD_C::LowManaWarning' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowRageWarning) == 0x000818, "Member 'UBP_HUD_C::LowRageWarning' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, LowStaminaWarning2) == 0x000820, "Member 'UBP_HUD_C::LowStaminaWarning2' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, NewItemLabel) == 0x000828, "Member 'UBP_HUD_C::NewItemLabel' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, PickupContainer) == 0x000830, "Member 'UBP_HUD_C::PickupContainer' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, PurgingRainVFX) == 0x000838, "Member 'UBP_HUD_C::PurgingRainVFX' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, QuestContainer) == 0x000840, "Member 'UBP_HUD_C::QuestContainer' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, QuestNotification) == 0x000848, "Member 'UBP_HUD_C::QuestNotification' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, QuickUseKeyItemsContainer) == 0x000850, "Member 'UBP_HUD_C::QuickUseKeyItemsContainer' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, QuickUseSlots) == 0x000858, "Member 'UBP_HUD_C::QuickUseSlots' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, QuikcUseScaleBox) == 0x000860, "Member 'UBP_HUD_C::QuikcUseScaleBox' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, RiftCombatStart1) == 0x000868, "Member 'UBP_HUD_C::RiftCombatStart1' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, RiftCombatStart2) == 0x000870, "Member 'UBP_HUD_C::RiftCombatStart2' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, SkillSlots) == 0x000878, "Member 'UBP_HUD_C::SkillSlots' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, StunnedWarning) == 0x000880, "Member 'UBP_HUD_C::StunnedWarning' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, TextWarning) == 0x000888, "Member 'UBP_HUD_C::TextWarning' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, UseItemContainer) == 0x000890, "Member 'UBP_HUD_C::UseItemContainer' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, WeaponSkillSet) == 0x000898, "Member 'UBP_HUD_C::WeaponSkillSet' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, WeaponSkillSetScaleBox) == 0x0008A0, "Member 'UBP_HUD_C::WeaponSkillSetScaleBox' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, Visible_) == 0x0008A8, "Member 'UBP_HUD_C::Visible_' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, NewItemLabelVisible) == 0x0008A9, "Member 'UBP_HUD_C::NewItemLabelVisible' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, ItemUsedLabelVisible) == 0x0008AA, "Member 'UBP_HUD_C::ItemUsedLabelVisible' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, NewItemLabelTimer) == 0x0008B0, "Member 'UBP_HUD_C::NewItemLabelTimer' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, ItemUsedLabelTimer) == 0x0008B8, "Member 'UBP_HUD_C::ItemUsedLabelTimer' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, GlobalNotificationDelay) == 0x0008C0, "Member 'UBP_HUD_C::GlobalNotificationDelay' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, ShowInteractIsActive) == 0x0008C4, "Member 'UBP_HUD_C::ShowInteractIsActive' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, RequestQuestNotificationVisibility) == 0x0008C5, "Member 'UBP_HUD_C::RequestQuestNotificationVisibility' has a wrong offset!");
static_assert(offsetof(UBP_HUD_C, ShowBestiaryUpdatedTimer) == 0x0008C8, "Member 'UBP_HUD_C::ShowBestiaryUpdatedTimer' has a wrong offset!");

}

