#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD

#include "Basic.hpp"

#include "BP_HUD_classes.hpp"
#include "BP_HUD_parameters.hpp"


namespace SDK
{

// Function BP_HUD.BP_HUD_C.ExecuteUbergraph_BP_HUD
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::ExecuteUbergraph_BP_HUD(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ExecuteUbergraph_BP_HUD");

	Params::BP_HUD_C_ExecuteUbergraph_BP_HUD Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnPlayNoStaminaFeedback
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::OnPlayNoStaminaFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnPlayNoStaminaFeedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.OnHideInteract
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::OnHideInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnHideInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.OnShowInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InInteractText                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UAbilityBase*                     InAbilityBase                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnShowInteract(const class FText& InInteractText, class UAbilityBase* InAbilityBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnShowInteract");

	Params::BP_HUD_C_OnShowInteract Parms{};

	Parms.InInteractText = std::move(InInteractText);
	Parms.InAbilityBase = InAbilityBase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnInputRestrict
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInInputRestrict                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnInputRestrict(bool bInInputRestrict)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnInputRestrict");

	Params::BP_HUD_C_OnInputRestrict Parms{};

	Parms.bInInputRestrict = bInInputRestrict;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UManUserWidgetBase*               ManUserWidgetBase                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::CustomEvent_1(class UManUserWidgetBase* ManUserWidgetBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "CustomEvent_1");

	Params::BP_HUD_C_CustomEvent_1 Parms{};

	Parms.ManUserWidgetBase = ManUserWidgetBase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnSpecialMovementUlnocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESpecialMovementType                    SpecialMovementType                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnSpecialMovementUlnocked(ESpecialMovementType SpecialMovementType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnSpecialMovementUlnocked");

	Params::BP_HUD_C_OnSpecialMovementUlnocked Parms{};

	Parms.SpecialMovementType = SpecialMovementType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnToggleAddedResource
// (Event, Protected, BlueprintEvent)
// Parameters:
// EHeroProperty                           PropertyType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShowing                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnToggleAddedResource(EHeroProperty PropertyType, int32 Value, bool bShowing, bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnToggleAddedResource");

	Params::BP_HUD_C_OnToggleAddedResource Parms{};

	Parms.PropertyType = PropertyType;
	Parms.Value = Value;
	Parms.bShowing = bShowing;
	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnToggleExtraLanternDrainEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnToggleExtraLanternDrainEffect(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnToggleExtraLanternDrainEffect");

	Params::BP_HUD_C_OnToggleExtraLanternDrainEffect Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnChangeSkillSetIndex
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   SkillSetIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnChangeSkillSetIndex(int32 SkillSetIndex, bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnChangeSkillSetIndex");

	Params::BP_HUD_C_OnChangeSkillSetIndex Parms{};

	Parms.SkillSetIndex = SkillSetIndex;
	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnChangeItemSetIndex
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   ItemSetIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnChangeItemSetIndex(int32 ItemSetIndex, bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnChangeItemSetIndex");

	Params::BP_HUD_C_OnChangeItemSetIndex Parms{};

	Parms.ItemSetIndex = ItemSetIndex;
	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnPlayRiftCombatStartAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   RiftID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnPlayRiftCombatStartAnim(int32 RiftID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnPlayRiftCombatStartAnim");

	Params::BP_HUD_C_OnPlayRiftCombatStartAnim Parms{};

	Parms.RiftID = RiftID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnShowBestiaryUpdatedNotification
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Timeout                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnShowBestiaryUpdatedNotification(float Timeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnShowBestiaryUpdatedNotification");

	Params::BP_HUD_C_OnShowBestiaryUpdatedNotification Parms{};

	Parms.Timeout = Timeout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnSetLightBarrier
// (Event, Public, BlueprintEvent)
// Parameters:
// EHUDBarType                             HUDBarType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LightBarrierCurrentValue                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LightBarrierMaxValue                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnSetLightBarrier(EHUDBarType HUDBarType, float LightBarrierCurrentValue, float LightBarrierMaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnSetLightBarrier");

	Params::BP_HUD_C_OnSetLightBarrier Parms{};

	Parms.HUDBarType = HUDBarType;
	Parms.LightBarrierCurrentValue = LightBarrierCurrentValue;
	Parms.LightBarrierMaxValue = LightBarrierMaxValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnSetBossBar
// (Event, Public, BlueprintEvent)
// Parameters:
// EHUDBarType                             HUDBarType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMiniBoss                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bTwoStageBossBar                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMandragora                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnSetBossBar(EHUDBarType HUDBarType, bool bMiniBoss, bool bTwoStageBossBar, bool bMandragora)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnSetBossBar");

	Params::BP_HUD_C_OnSetBossBar Parms{};

	Parms.HUDBarType = HUDBarType;
	Parms.bMiniBoss = bMiniBoss;
	Parms.bTwoStageBossBar = bTwoStageBossBar;
	Parms.bMandragora = bMandragora;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnSetWarningText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             InWarningText                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_HUD_C::OnSetWarningText(bool bInShow, const class FText& InWarningText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnSetWarningText");

	Params::BP_HUD_C_OnSetWarningText Parms{};

	Parms.bInShow = bInShow;
	Parms.InWarningText = std::move(InWarningText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnShowHUDPopup
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FHUDPopupQueue                   HUDPopupQueue                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_HUD_C::OnShowHUDPopup(const struct FHUDPopupQueue& HUDPopupQueue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnShowHUDPopup");

	Params::BP_HUD_C_OnShowHUDPopup Parms{};

	Parms.HUDPopupQueue = std::move(HUDPopupQueue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnToggleResourceBarPosition
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDownPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnToggleResourceBarPosition(bool bDownPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnToggleResourceBarPosition");

	Params::BP_HUD_C_OnToggleResourceBarPosition Parms{};

	Parms.bDownPosition = bDownPosition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnToggleSideEffectWarning
// (Event, Protected, BlueprintEvent)
// Parameters:
// EScreenSideEffect                       Effect                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bActive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ESideEffectWarningType                  SideEffectWarningType                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnToggleSideEffectWarning(EScreenSideEffect Effect, bool bActive, ESideEffectWarningType SideEffectWarningType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnToggleSideEffectWarning");

	Params::BP_HUD_C_OnToggleSideEffectWarning Parms{};

	Parms.Effect = Effect;
	Parms.bActive = bActive;
	Parms.SideEffectWarningType = SideEffectWarningType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnSetInteractMode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInCanInteract                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnSetInteractMode(bool bInCanInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnSetInteractMode");

	Params::BP_HUD_C_OnSetInteractMode Parms{};

	Parms.bInCanInteract = bInCanInteract;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnSetLevelProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   LevelProgress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnSetLevelProgress(float LevelProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnSetLevelProgress");

	Params::BP_HUD_C_OnSetLevelProgress Parms{};

	Parms.LevelProgress = LevelProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnSetFadeQuestTrackerBackgroundVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnSetFadeQuestTrackerBackgroundVisible(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnSetFadeQuestTrackerBackgroundVisible");

	Params::BP_HUD_C_OnSetFadeQuestTrackerBackgroundVisible Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "Tick");

	Params::BP_HUD_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnComboPointBarVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bComboPointBarVisible                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnComboPointBarVisible(bool bComboPointBarVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnComboPointBarVisible");

	Params::BP_HUD_C_OnComboPointBarVisible Parms{};

	Parms.bComboPointBarVisible = bComboPointBarVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnToggleLowLifeAuraWarning
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsBelowZero                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnToggleLowLifeAuraWarning(bool bIsBelowZero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnToggleLowLifeAuraWarning");

	Params::BP_HUD_C_OnToggleLowLifeAuraWarning Parms{};

	Parms.bIsBelowZero = bIsBelowZero;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnSetComboPoint
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   CurrentComboPointFraction                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentComboPoint                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxComboPoint                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnSetComboPoint(int32 CurrentComboPointFraction, int32 CurrentComboPoint, int32 MaxComboPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnSetComboPoint");

	Params::BP_HUD_C_OnSetComboPoint Parms{};

	Parms.CurrentComboPointFraction = CurrentComboPointFraction;
	Parms.CurrentComboPoint = CurrentComboPoint;
	Parms.MaxComboPoint = MaxComboPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnToggleLowHPBarWarning
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsHPLow                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnToggleLowHPBarWarning(bool bIsHPLow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnToggleLowHPBarWarning");

	Params::BP_HUD_C_OnToggleLowHPBarWarning Parms{};

	Parms.bIsHPLow = bIsHPLow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnExtraAbilitySlotVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnExtraAbilitySlotVisibility(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnExtraAbilitySlotVisibility");

	Params::BP_HUD_C_OnExtraAbilitySlotVisibility Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnHideHUDBar
// (Event, Public, BlueprintEvent)
// Parameters:
// EHUDBarType                             HUDBarType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnHideHUDBar(EHUDBarType HUDBarType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnHideHUDBar");

	Params::BP_HUD_C_OnHideHUDBar Parms{};

	Parms.HUDBarType = HUDBarType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnSetHUDBar
// (Event, Public, BlueprintEvent)
// Parameters:
// EHUDBarType                             HUDBarType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnSetHUDBar(EHUDBarType HUDBarType, float CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnSetHUDBar");

	Params::BP_HUD_C_OnSetHUDBar Parms{};

	Parms.HUDBarType = HUDBarType;
	Parms.CurrentValue = CurrentValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnShowHUDBar
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EHUDBarType                             HUDBarType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             HudBarTitle                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   MinValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReferencePointValue                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LengthRatio                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnShowHUDBar(EHUDBarType HUDBarType, const class FText& HudBarTitle, float MinValue, float MaxValue, float CurrentValue, float ReferencePointValue, float LengthRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnShowHUDBar");

	Params::BP_HUD_C_OnShowHUDBar Parms{};

	Parms.HUDBarType = HUDBarType;
	Parms.HudBarTitle = std::move(HudBarTitle);
	Parms.MinValue = MinValue;
	Parms.MaxValue = MaxValue;
	Parms.CurrentValue = CurrentValue;
	Parms.ReferencePointValue = ReferencePointValue;
	Parms.LengthRatio = LengthRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnPropertyChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EHeroProperty                           PropertyType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RoundedFloatValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RoundedIntValue                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnPropertyChanged(EHeroProperty PropertyType, float Value, float RoundedFloatValue, int32 RoundedIntValue, bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnPropertyChanged");

	Params::BP_HUD_C_OnPropertyChanged Parms{};

	Parms.PropertyType = PropertyType;
	Parms.Value = Value;
	Parms.RoundedFloatValue = RoundedFloatValue;
	Parms.RoundedIntValue = RoundedIntValue;
	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnSetLevelPulseAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bPlay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnSetLevelPulseAnim(bool bPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnSetLevelPulseAnim");

	Params::BP_HUD_C_OnSetLevelPulseAnim Parms{};

	Parms.bPlay = bPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnEnergyBarVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnEnergyBarVisibility(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnEnergyBarVisibility");

	Params::BP_HUD_C_OnEnergyBarVisibility Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnRageBarVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnRageBarVisibility(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnRageBarVisibility");

	Params::BP_HUD_C_OnRageBarVisibility Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnHUDVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnHUDVisibility(bool bInVisible, bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnHUDVisibility");

	Params::BP_HUD_C_OnHUDVisibility Parms{};

	Parms.bInVisible = bInVisible;
	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnLevelUpIndicator
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bMatchHasStarted                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnLevelUpIndicator(bool bMatchHasStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnLevelUpIndicator");

	Params::BP_HUD_C_OnLevelUpIndicator Parms{};

	Parms.bMatchHasStarted = bMatchHasStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnHeroDie
// (Event, Public, BlueprintEvent)

void UBP_HUD_C::OnHeroDie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnHeroDie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.OnShowUseItemNotification
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UHUDNotificationUserWidget*       HUDNotificationUserWidget                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ItemName                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Timeout                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Number                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnShowUseItemNotification(class UHUDNotificationUserWidget* HUDNotificationUserWidget, const class FText& ItemName, class UTexture2D* Icon, float Timeout, int32 Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnShowUseItemNotification");

	Params::BP_HUD_C_OnShowUseItemNotification Parms{};

	Parms.HUDNotificationUserWidget = HUDNotificationUserWidget;
	Parms.ItemName = std::move(ItemName);
	Parms.Icon = Icon;
	Parms.Timeout = Timeout;
	Parms.Number = Number;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnShowPickupNotification
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UHUDNotificationUserWidget*       HUDNotificationUserWidget                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ItemName                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             ItemDescription                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Timeout                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Number                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UItemAbility*                     ItemAbility                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHideNewItemTitle                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::OnShowPickupNotification(class UHUDNotificationUserWidget* HUDNotificationUserWidget, const class FText& ItemName, const class FText& ItemDescription, class UTexture2D* Icon, float Timeout, int32 Number, class UItemAbility* ItemAbility, bool bHideNewItemTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnShowPickupNotification");

	Params::BP_HUD_C_OnShowPickupNotification Parms{};

	Parms.HUDNotificationUserWidget = HUDNotificationUserWidget;
	Parms.ItemName = std::move(ItemName);
	Parms.ItemDescription = std::move(ItemDescription);
	Parms.Icon = Icon;
	Parms.Timeout = Timeout;
	Parms.Number = Number;
	Parms.ItemAbility = ItemAbility;
	Parms.bHideNewItemTitle = bHideNewItemTitle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnRemoveQuestNotification
// (Event, Public, BlueprintEvent)
// Parameters:
// class UManQuest*                        ManQuest                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::OnRemoveQuestNotification(class UManQuest* ManQuest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnRemoveQuestNotification");

	Params::BP_HUD_C_OnRemoveQuestNotification Parms{};

	Parms.ManQuest = ManQuest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnUpdateQuestNotificationObjective
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UManQuest*                        ManQuest                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UManQuestObjective*>       Objectives                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_HUD_C::OnUpdateQuestNotificationObjective(class UManQuest* ManQuest, const TArray<class UManQuestObjective*>& Objectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnUpdateQuestNotificationObjective");

	Params::BP_HUD_C_OnUpdateQuestNotificationObjective Parms{};

	Parms.ManQuest = ManQuest;
	Parms.Objectives = std::move(Objectives);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.OnShowQuestNotification
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UManQuest*                        ManQuest                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UManQuestObjective*>       Objectives                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_HUD_C::OnShowQuestNotification(class UManQuest* ManQuest, const TArray<class UManQuestObjective*>& Objectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "OnShowQuestNotification");

	Params::BP_HUD_C_OnShowQuestNotification Parms{};

	Parms.ManQuest = ManQuest;
	Parms.Objectives = std::move(Objectives);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "PreConstruct");

	Params::BP_HUD_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_HUD_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.StartLowHPWarningLoop
// (BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::StartLowHPWarningLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "StartLowHPWarningLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.SetHUDVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible__0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Animate_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::SetHUDVisibility(bool Visible__0, bool Animate_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "SetHUDVisibility");

	Params::BP_HUD_C_SetHUDVisibility Parms{};

	Parms.Visible__0 = Visible__0;
	Parms.Animate_ = Animate_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.CoinChange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewCoin                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Animate_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::CoinChange(int32 NewCoin, bool Animate_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "CoinChange");

	Params::BP_HUD_C_CoinChange Parms{};

	Parms.NewCoin = NewCoin;
	Parms.Animate_ = Animate_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.Show Pickup Notification
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHUDNotificationUserWidget*       HUDNotificationUserWidget                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Description                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Timeout                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Number                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UItemAbility*                     ItemAbility                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::Show_Pickup_Notification(class UHUDNotificationUserWidget* HUDNotificationUserWidget, const class FText& Name_0, const class FText& Description, class UTexture2D* Icon, float Timeout, int32 Number, class UItemAbility* ItemAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "Show Pickup Notification");

	Params::BP_HUD_C_Show_Pickup_Notification Parms{};

	Parms.HUDNotificationUserWidget = HUDNotificationUserWidget;
	Parms.Name_0 = std::move(Name_0);
	Parms.Description = std::move(Description);
	Parms.Icon = Icon;
	Parms.Timeout = Timeout;
	Parms.Number = Number;
	Parms.ItemAbility = ItemAbility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ShowInteract
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Caption                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class UAbilityBase*                     AbilityBase                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::ShowInteract(const class FText& Caption, class UAbilityBase* AbilityBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowInteract");

	Params::BP_HUD_C_ShowInteract Parms{};

	Parms.Caption = std::move(Caption);
	Parms.AbilityBase = AbilityBase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.HideInteract
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::HideInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "HideInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.SetHeroLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::SetHeroLevel(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "SetHeroLevel");

	Params::BP_HUD_C_SetHeroLevel Parms{};

	Parms.NewLevel = NewLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.PlayLevelHighlightAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::PlayLevelHighlightAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "PlayLevelHighlightAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.StartLevelPulseAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::StartLevelPulseAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "StartLevelPulseAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.StopLevelPulseAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::StopLevelPulseAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "StopLevelPulseAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.UpdateQuestNotificationObjective
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UManQuest*                        ManQuest                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UManQuestObjective*>       Objectives                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_HUD_C::UpdateQuestNotificationObjective(class UManQuest* ManQuest, TArray<class UManQuestObjective*>& Objectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "UpdateQuestNotificationObjective");

	Params::BP_HUD_C_UpdateQuestNotificationObjective Parms{};

	Parms.ManQuest = ManQuest;
	Parms.Objectives = std::move(Objectives);

	UObject::ProcessEvent(Func, &Parms);

	Objectives = std::move(Parms.Objectives);
}


// Function BP_HUD.BP_HUD_C.EssenceChange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewEssence                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Animate_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::EssenceChange(int32 NewEssence, bool Animate_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "EssenceChange");

	Params::BP_HUD_C_EssenceChange Parms{};

	Parms.NewEssence = NewEssence;
	Parms.Animate_ = Animate_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.GetQuestNotification
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UManQuest*                        ManQuest                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_QuestNotification_C*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UBP_QuestNotification_C* UBP_HUD_C::GetQuestNotification(class UManQuest* ManQuest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "GetQuestNotification");

	Params::BP_HUD_C_GetQuestNotification Parms{};

	Parms.ManQuest = ManQuest;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_HUD.BP_HUD_C.SetupAbilityIcons
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::SetupAbilityIcons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "SetupAbilityIcons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.ToggleLowStaminaWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBelowZero                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ESideEffectWarningType                  SideEffectWarningType                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::ToggleLowStaminaWarning(bool IsBelowZero, ESideEffectWarningType SideEffectWarningType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ToggleLowStaminaWarning");

	Params::BP_HUD_C_ToggleLowStaminaWarning Parms{};

	Parms.IsBelowZero = IsBelowZero;
	Parms.SideEffectWarningType = SideEffectWarningType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ShowUseItemNotification
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHUDNotificationUserWidget*       HUDNotificationUserWidget                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Timeout                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Number                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::ShowUseItemNotification(class UHUDNotificationUserWidget* HUDNotificationUserWidget, const class FText& Name_0, class UTexture2D* Icon, float Timeout, int32 Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowUseItemNotification");

	Params::BP_HUD_C_ShowUseItemNotification Parms{};

	Parms.HUDNotificationUserWidget = HUDNotificationUserWidget;
	Parms.Name_0 = std::move(Name_0);
	Parms.Icon = Icon;
	Parms.Timeout = Timeout;
	Parms.Number = Number;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.BP_PropertyChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHeroProperty                           PropertyType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RoundedFloatValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RoundedIntValue                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Animate                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::BP_PropertyChanged(EHeroProperty PropertyType, float Value, float RoundedFloatValue, int32 RoundedIntValue, bool Animate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "BP_PropertyChanged");

	Params::BP_HUD_C_BP_PropertyChanged Parms{};

	Parms.PropertyType = PropertyType;
	Parms.Value = Value;
	Parms.RoundedFloatValue = RoundedFloatValue;
	Parms.RoundedIntValue = RoundedIntValue;
	Parms.Animate = Animate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ShowHUDBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHUDBarType                             HUDBarType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             HudBarTitle                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   MinValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReferencePointValue                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LengthRatio                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::ShowHUDBar(EHUDBarType HUDBarType, const class FText& HudBarTitle, float MinValue, float MaxValue, float CurrentValue, float ReferencePointValue, float LengthRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowHUDBar");

	Params::BP_HUD_C_ShowHUDBar Parms{};

	Parms.HUDBarType = HUDBarType;
	Parms.HudBarTitle = std::move(HudBarTitle);
	Parms.MinValue = MinValue;
	Parms.MaxValue = MaxValue;
	Parms.CurrentValue = CurrentValue;
	Parms.ReferencePointValue = ReferencePointValue;
	Parms.LengthRatio = LengthRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.HideHUDBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHUDBarType                             HUDBarType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::HideHUDBar(EHUDBarType HUDBarType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "HideHUDBar");

	Params::BP_HUD_C_HideHUDBar Parms{};

	Parms.HUDBarType = HUDBarType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.SetHUDBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHUDBarType                             HUDBarType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::SetHUDBar(EHUDBarType HUDBarType, float CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "SetHUDBar");

	Params::BP_HUD_C_SetHUDBar Parms{};

	Parms.HUDBarType = HUDBarType;
	Parms.CurrentValue = CurrentValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ToggleStunnedWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsStunned                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ESideEffectWarningType                  SideEffectWarningType                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::ToggleStunnedWarning(bool IsStunned, ESideEffectWarningType SideEffectWarningType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ToggleStunnedWarning");

	Params::BP_HUD_C_ToggleStunnedWarning Parms{};

	Parms.IsStunned = IsStunned;
	Parms.SideEffectWarningType = SideEffectWarningType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ToggleLowHPWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHPLow                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ESideEffectWarningType                  SideEffectWarningType                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::ToggleLowHPWarning(bool IsHPLow, ESideEffectWarningType SideEffectWarningType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ToggleLowHPWarning");

	Params::BP_HUD_C_ToggleLowHPWarning Parms{};

	Parms.IsHPLow = IsHPLow;
	Parms.SideEffectWarningType = SideEffectWarningType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ToggleLowManaWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsManaLow                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ESideEffectWarningType                  SideEffectWarningType                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::ToggleLowManaWarning(bool IsManaLow, ESideEffectWarningType SideEffectWarningType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ToggleLowManaWarning");

	Params::BP_HUD_C_ToggleLowManaWarning Parms{};

	Parms.IsManaLow = IsManaLow;
	Parms.SideEffectWarningType = SideEffectWarningType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ToggleLowHPBarWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHPLow                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::ToggleLowHPBarWarning(bool IsHPLow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ToggleLowHPBarWarning");

	Params::BP_HUD_C_ToggleLowHPBarWarning Parms{};

	Parms.IsHPLow = IsHPLow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ToggleLowLifeAuraWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBelowZero                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::ToggleLowLifeAuraWarning(bool IsBelowZero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ToggleLowLifeAuraWarning");

	Params::BP_HUD_C_ToggleLowLifeAuraWarning Parms{};

	Parms.IsBelowZero = IsBelowZero;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.EntropicEssenceChange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewEntropicEssence                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Animate_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::EntropicEssenceChange(int32 NewEntropicEssence, bool Animate_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "EntropicEssenceChange");

	Params::BP_HUD_C_EntropicEssenceChange Parms{};

	Parms.NewEntropicEssence = NewEntropicEssence;
	Parms.Animate_ = Animate_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ShowNewItemLabel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::ShowNewItemLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowNewItemLabel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.HideNewItemLabel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::HideNewItemLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "HideNewItemLabel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.ShowItemUsedLabel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::ShowItemUsedLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowItemUsedLabel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.HideItemUsedLabel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::HideItemUsedLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "HideItemUsedLabel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.ToggleLowRageWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRageLow                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ESideEffectWarningType                  SideEffectWarningType                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::ToggleLowRageWarning(bool IsRageLow, ESideEffectWarningType SideEffectWarningType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ToggleLowRageWarning");

	Params::BP_HUD_C_ToggleLowRageWarning Parms{};

	Parms.IsRageLow = IsRageLow;
	Parms.SideEffectWarningType = SideEffectWarningType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.Toggle Resource Bar Position
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDefault                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::Toggle_Resource_Bar_Position(bool IsDefault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "Toggle Resource Bar Position");

	Params::BP_HUD_C_Toggle_Resource_Bar_Position Parms{};

	Parms.IsDefault = IsDefault;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.TogglePurgingRainVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsFacingLeft                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::TogglePurgingRainVFX(bool IsVisible_0, bool IsFacingLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "TogglePurgingRainVFX");

	Params::BP_HUD_C_TogglePurgingRainVFX Parms{};

	Parms.IsVisible_0 = IsVisible_0;
	Parms.IsFacingLeft = IsFacingLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.SetLightBarrier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHUDBarType                             HUDBarType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LightBarrierCurrentValue                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LightBarrierMaxValue                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::SetLightBarrier(EHUDBarType HUDBarType, float LightBarrierCurrentValue, float LightBarrierMaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "SetLightBarrier");

	Params::BP_HUD_C_SetLightBarrier Parms{};

	Parms.HUDBarType = HUDBarType;
	Parms.LightBarrierCurrentValue = LightBarrierCurrentValue;
	Parms.LightBarrierMaxValue = LightBarrierMaxValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.SetBossBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHUDBarType                             HUDBarType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Miniboss                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    TwoStageBossBar                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Mandragora                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_HUD_C::SetBossBar(EHUDBarType HUDBarType, bool Miniboss, bool TwoStageBossBar, bool Mandragora)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "SetBossBar");

	Params::BP_HUD_C_SetBossBar Parms{};

	Parms.HUDBarType = HUDBarType;
	Parms.Miniboss = Miniboss;
	Parms.TwoStageBossBar = TwoStageBossBar;
	Parms.Mandragora = Mandragora;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.ShowBestiaryUpdatedNotification
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Timeout                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::ShowBestiaryUpdatedNotification(float Timeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "ShowBestiaryUpdatedNotification");

	Params::BP_HUD_C_ShowBestiaryUpdatedNotification Parms{};

	Parms.Timeout = Timeout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.HideBestiaryUpdated
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_HUD_C::HideBestiaryUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "HideBestiaryUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HUD.BP_HUD_C.PlayRiftCombatStartAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RiftID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::PlayRiftCombatStartAnim(int32 RiftID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "PlayRiftCombatStartAnim");

	Params::BP_HUD_C_PlayRiftCombatStartAnim Parms{};

	Parms.RiftID = RiftID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_HUD.BP_HUD_C.RepositionKeyItemSlots
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   QuickUseSlotClount                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_HUD_C::RepositionKeyItemSlots(int32 QuickUseSlotClount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HUD_C", "RepositionKeyItemSlots");

	Params::BP_HUD_C_RepositionKeyItemSlots Parms{};

	Parms.QuickUseSlotClount = QuickUseSlotClount;

	UObject::ProcessEvent(Func, &Parms);
}

}

