#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Hilltop_Owl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Hilltop_Owl.BP_Hilltop_Owl_C
// 0x0040 (0x0268 - 0x0228)
class ABP_Hilltop_Owl_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 PoseableMesh;                                      // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Owl_AFK_Time;                                      // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Random_Look_At_pos;                                // 0x0244(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Need_New_Random_Look_At_Pos;                       // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IdleLookAtSpeed;                                   // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLookTargetChance;                               // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         LookSpeedMax;                                      // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         LookSpeedMin;                                      // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Idle();
	void LookAtPlayer();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_Hilltop_Owl(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Hilltop_Owl_C">();
	}
	static class ABP_Hilltop_Owl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Hilltop_Owl_C>();
	}
};
static_assert(alignof(ABP_Hilltop_Owl_C) == 0x000008, "Wrong alignment on ABP_Hilltop_Owl_C");
static_assert(sizeof(ABP_Hilltop_Owl_C) == 0x000268, "Wrong size on ABP_Hilltop_Owl_C");
static_assert(offsetof(ABP_Hilltop_Owl_C, UberGraphFrame) == 0x000228, "Member 'ABP_Hilltop_Owl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Hilltop_Owl_C, Ak) == 0x000230, "Member 'ABP_Hilltop_Owl_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_Hilltop_Owl_C, PoseableMesh) == 0x000238, "Member 'ABP_Hilltop_Owl_C::PoseableMesh' has a wrong offset!");
static_assert(offsetof(ABP_Hilltop_Owl_C, Owl_AFK_Time) == 0x000240, "Member 'ABP_Hilltop_Owl_C::Owl_AFK_Time' has a wrong offset!");
static_assert(offsetof(ABP_Hilltop_Owl_C, Random_Look_At_pos) == 0x000244, "Member 'ABP_Hilltop_Owl_C::Random_Look_At_pos' has a wrong offset!");
static_assert(offsetof(ABP_Hilltop_Owl_C, Need_New_Random_Look_At_Pos) == 0x000250, "Member 'ABP_Hilltop_Owl_C::Need_New_Random_Look_At_Pos' has a wrong offset!");
static_assert(offsetof(ABP_Hilltop_Owl_C, IdleLookAtSpeed) == 0x000254, "Member 'ABP_Hilltop_Owl_C::IdleLookAtSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Hilltop_Owl_C, NewLookTargetChance) == 0x000258, "Member 'ABP_Hilltop_Owl_C::NewLookTargetChance' has a wrong offset!");
static_assert(offsetof(ABP_Hilltop_Owl_C, LookSpeedMax) == 0x00025C, "Member 'ABP_Hilltop_Owl_C::LookSpeedMax' has a wrong offset!");
static_assert(offsetof(ABP_Hilltop_Owl_C, LookSpeedMin) == 0x000260, "Member 'ABP_Hilltop_Owl_C::LookSpeedMin' has a wrong offset!");

}

