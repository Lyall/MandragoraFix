#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Inquisitor

#include "Basic.hpp"

#include "BP_Inquisitor_classes.hpp"
#include "BP_Inquisitor_parameters.hpp"


namespace SDK
{

// Function BP_Inquisitor.BP_Inquisitor_C.ExecuteUbergraph_BP_Inquisitor
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Inquisitor_C::ExecuteUbergraph_BP_Inquisitor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Inquisitor_C", "ExecuteUbergraph_BP_Inquisitor");

	Params::BP_Inquisitor_C_ExecuteUbergraph_BP_Inquisitor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Inquisitor.BP_Inquisitor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Inquisitor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Inquisitor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Inquisitor.BP_Inquisitor_C.charBaseEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    asd                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   wg                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Inquisitor_C::charBaseEvent(bool asd, float wg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Inquisitor_C", "charBaseEvent");

	Params::BP_Inquisitor_C_charBaseEvent Parms{};

	Parms.asd = asd;
	Parms.wg = wg;

	UObject::ProcessEvent(Func, &Parms);
}

}

