#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractButton_Double

#include "Basic.hpp"

#include "BP_InteractButton_Double_classes.hpp"
#include "BP_InteractButton_Double_parameters.hpp"


namespace SDK
{

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.ExecuteUbergraph_BP_InteractButton_Double
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractButton_Double_C::ExecuteUbergraph_BP_InteractButton_Double(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "ExecuteUbergraph_BP_InteractButton_Double");

	Params::BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.OnSetHotkeyText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class FText>                     HotkeyTexts                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_InteractButton_Double_C::OnSetHotkeyText(const TArray<class FText>& HotkeyTexts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "OnSetHotkeyText");

	Params::BP_InteractButton_Double_C_OnSetHotkeyText Parms{};

	Parms.HotkeyTexts = std::move(HotkeyTexts);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.OnSetHotkeyImages
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UTexture2D*>               HotkeyImages                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_InteractButton_Double_C::OnSetHotkeyImages(const TArray<class UTexture2D*>& HotkeyImages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "OnSetHotkeyImages");

	Params::BP_InteractButton_Double_C_OnSetHotkeyImages Parms{};

	Parms.HotkeyImages = std::move(HotkeyImages);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.OnSetState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInCaption1Active                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInCaption2Active                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InteractButton_Double_C::OnSetState(bool bInCaption1Active, bool bInCaption2Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "OnSetState");

	Params::BP_InteractButton_Double_C_OnSetState Parms{};

	Parms.bInCaption1Active = bInCaption1Active;
	Parms.bInCaption2Active = bInCaption2Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractButton_Double_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "Tick");

	Params::BP_InteractButton_Double_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_InteractButton_Double_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UBP_InteractButton_Double_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UBP_InteractButton_Double_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_InteractButton_Double_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InteractButton_Double_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "PreConstruct");

	Params::BP_InteractButton_Double_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.FadeIn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractButton_Double_C::FadeIn(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "FadeIn");

	Params::BP_InteractButton_Double_C_FadeIn Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.FadeOut
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractButton_Double_C::FadeOut(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "FadeOut");

	Params::BP_InteractButton_Double_C_FadeOut Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.SetupInteract
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Caption1_0                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Caption1Active_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Caption2_0                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Caption2Active_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Captions3                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_InteractButton_Double_C::SetupInteract(const class FText& Caption1_0, bool Caption1Active_0, const class FText& Caption2_0, bool Caption2Active_0, const class FText& Captions3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "SetupInteract");

	Params::BP_InteractButton_Double_C_SetupInteract Parms{};

	Parms.Caption1_0 = std::move(Caption1_0);
	Parms.Caption1Active_0 = Caption1Active_0;
	Parms.Caption2_0 = std::move(Caption2_0);
	Parms.Caption2Active_0 = Caption2Active_0;
	Parms.Captions3 = std::move(Captions3);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.Set Active
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_InteractButton_Double_C::Set_Active()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "Set Active");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.SetInactive
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_InteractButton_Double_C::SetInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "SetInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractButton_Double.BP_InteractButton_Double_C.SetText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Caption1_0                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Caption2_0                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Caption3_0                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_InteractButton_Double_C::SetText(const class FText& Caption1_0, const class FText& Caption2_0, const class FText& Caption3_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractButton_Double_C", "SetText");

	Params::BP_InteractButton_Double_C_SetText Parms{};

	Parms.Caption1_0 = std::move(Caption1_0);
	Parms.Caption2_0 = std::move(Caption2_0);
	Parms.Caption3_0 = std::move(Caption3_0);

	UObject::ProcessEvent(Func, &Parms);
}

}

