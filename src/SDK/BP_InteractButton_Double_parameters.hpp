#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractButton_Double

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.ExecuteUbergraph_BP_InteractButton_Double
// 0x0240 (0x0240 - 0x0000)
struct BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0098(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00E8(0x0028)()
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0120(0x0028)()
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0168(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0190(0x0028)()
	bool                                          K2Node_Event_bInCaption1Active;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInCaption2Active;                    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BB[0x5];                                      // 0x01BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture2D*>                     K2Node_Event_HotkeyImages;                         // 0x01C0(0x0010)(ConstParm, ReferenceParm)
	TArray<class FText>                           K2Node_Event_HotkeyTexts;                          // 0x01D0(0x0010)(ConstParm, ReferenceParm)
	TArray<class UImage*>                         CallFunc_GetHotkeyIconUserWidgets_ReturnValue;     // 0x01E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UBorder*>                        CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue; // 0x01F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UTextBlock*>                     CallFunc_GetHotkeyTextUserWidgets_ReturnValue;     // 0x0200(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UBorder*>                        CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue_1; // 0x0210(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UTextBlock*>                     CallFunc_GetHotkeyTextUserWidgets_ReturnValue_1;   // 0x0220(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0230(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double) == 0x000008, "Wrong alignment on BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double");
static_assert(sizeof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double) == 0x000240, "Wrong size on BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, EntryPoint) == 0x000000, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, Temp_bool_Variable) == 0x000004, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, Temp_struct_Variable) == 0x000008, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, Temp_struct_Variable_1) == 0x000018, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, Temp_bool_Variable_1) == 0x000028, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, Temp_struct_Variable_2) == 0x00002C, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, Temp_struct_Variable_3) == 0x00003C, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, Temp_bool_Variable_2) == 0x00004C, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, Temp_struct_Variable_4) == 0x000050, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, Temp_struct_Variable_5) == 0x000060, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, Temp_bool_Variable_3) == 0x000070, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, Temp_struct_Variable_6) == 0x000074, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, Temp_struct_Variable_7) == 0x000084, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_Event_IsDesignTime) == 0x000094, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_Event_MyGeometry) == 0x000098, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_Event_InDeltaTime) == 0x0000D0, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_Select_Default) == 0x0000D4, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_MakeStruct_SlateColor) == 0x0000E8, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_Select_Default_1) == 0x000110, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_MakeStruct_SlateColor_1) == 0x000120, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_Select_Default_2) == 0x000148, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_Select_Default_3) == 0x000158, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_MakeStruct_SlateColor_2) == 0x000168, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_MakeStruct_SlateColor_3) == 0x000190, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_Event_bInCaption1Active) == 0x0001B8, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_Event_bInCaption1Active' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_Event_bInCaption2Active) == 0x0001B9, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_Event_bInCaption2Active' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, CallFunc_IsActive_ReturnValue) == 0x0001BA, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_Event_HotkeyImages) == 0x0001C0, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_Event_HotkeyImages' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_Event_HotkeyTexts) == 0x0001D0, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_Event_HotkeyTexts' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, CallFunc_GetHotkeyIconUserWidgets_ReturnValue) == 0x0001E0, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::CallFunc_GetHotkeyIconUserWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue) == 0x0001F0, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, CallFunc_GetHotkeyTextUserWidgets_ReturnValue) == 0x000200, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::CallFunc_GetHotkeyTextUserWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue_1) == 0x000210, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, CallFunc_GetHotkeyTextUserWidgets_ReturnValue_1) == 0x000220, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::CallFunc_GetHotkeyTextUserWidgets_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double, K2Node_MakeArray_Array) == 0x000230, "Member 'BP_InteractButton_Double_C_ExecuteUbergraph_BP_InteractButton_Double::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.OnSetHotkeyText
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractButton_Double_C_OnSetHotkeyText final
{
public:
	TArray<class FText>                           HotkeyTexts;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InteractButton_Double_C_OnSetHotkeyText) == 0x000008, "Wrong alignment on BP_InteractButton_Double_C_OnSetHotkeyText");
static_assert(sizeof(BP_InteractButton_Double_C_OnSetHotkeyText) == 0x000010, "Wrong size on BP_InteractButton_Double_C_OnSetHotkeyText");
static_assert(offsetof(BP_InteractButton_Double_C_OnSetHotkeyText, HotkeyTexts) == 0x000000, "Member 'BP_InteractButton_Double_C_OnSetHotkeyText::HotkeyTexts' has a wrong offset!");

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.OnSetHotkeyImages
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractButton_Double_C_OnSetHotkeyImages final
{
public:
	TArray<class UTexture2D*>                     HotkeyImages;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InteractButton_Double_C_OnSetHotkeyImages) == 0x000008, "Wrong alignment on BP_InteractButton_Double_C_OnSetHotkeyImages");
static_assert(sizeof(BP_InteractButton_Double_C_OnSetHotkeyImages) == 0x000010, "Wrong size on BP_InteractButton_Double_C_OnSetHotkeyImages");
static_assert(offsetof(BP_InteractButton_Double_C_OnSetHotkeyImages, HotkeyImages) == 0x000000, "Member 'BP_InteractButton_Double_C_OnSetHotkeyImages::HotkeyImages' has a wrong offset!");

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.OnSetState
// 0x0002 (0x0002 - 0x0000)
struct BP_InteractButton_Double_C_OnSetState final
{
public:
	bool                                          bInCaption1Active;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInCaption2Active;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractButton_Double_C_OnSetState) == 0x000001, "Wrong alignment on BP_InteractButton_Double_C_OnSetState");
static_assert(sizeof(BP_InteractButton_Double_C_OnSetState) == 0x000002, "Wrong size on BP_InteractButton_Double_C_OnSetState");
static_assert(offsetof(BP_InteractButton_Double_C_OnSetState, bInCaption1Active) == 0x000000, "Member 'BP_InteractButton_Double_C_OnSetState::bInCaption1Active' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_OnSetState, bInCaption2Active) == 0x000001, "Member 'BP_InteractButton_Double_C_OnSetState::bInCaption2Active' has a wrong offset!");

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_InteractButton_Double_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractButton_Double_C_Tick) == 0x000004, "Wrong alignment on BP_InteractButton_Double_C_Tick");
static_assert(sizeof(BP_InteractButton_Double_C_Tick) == 0x00003C, "Wrong size on BP_InteractButton_Double_C_Tick");
static_assert(offsetof(BP_InteractButton_Double_C_Tick, MyGeometry) == 0x000000, "Member 'BP_InteractButton_Double_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_InteractButton_Double_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractButton_Double_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractButton_Double_C_PreConstruct) == 0x000001, "Wrong alignment on BP_InteractButton_Double_C_PreConstruct");
static_assert(sizeof(BP_InteractButton_Double_C_PreConstruct) == 0x000001, "Wrong size on BP_InteractButton_Double_C_PreConstruct");
static_assert(offsetof(BP_InteractButton_Double_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_InteractButton_Double_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.FadeIn
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractButton_Double_C_FadeIn final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractButton_Double_C_FadeIn) == 0x000008, "Wrong alignment on BP_InteractButton_Double_C_FadeIn");
static_assert(sizeof(BP_InteractButton_Double_C_FadeIn) == 0x000018, "Wrong size on BP_InteractButton_Double_C_FadeIn");
static_assert(offsetof(BP_InteractButton_Double_C_FadeIn, AnimDuration) == 0x000000, "Member 'BP_InteractButton_Double_C_FadeIn::AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_FadeIn, CallFunc_Abs_ReturnValue) == 0x000004, "Member 'BP_InteractButton_Double_C_FadeIn::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_FadeIn, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_InteractButton_Double_C_FadeIn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_FadeIn, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_InteractButton_Double_C_FadeIn::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_FadeIn, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_InteractButton_Double_C_FadeIn::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.FadeOut
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractButton_Double_C_FadeOut final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractButton_Double_C_FadeOut) == 0x000008, "Wrong alignment on BP_InteractButton_Double_C_FadeOut");
static_assert(sizeof(BP_InteractButton_Double_C_FadeOut) == 0x000018, "Wrong size on BP_InteractButton_Double_C_FadeOut");
static_assert(offsetof(BP_InteractButton_Double_C_FadeOut, AnimDuration) == 0x000000, "Member 'BP_InteractButton_Double_C_FadeOut::AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_FadeOut, CallFunc_Abs_ReturnValue) == 0x000004, "Member 'BP_InteractButton_Double_C_FadeOut::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_FadeOut, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_InteractButton_Double_C_FadeOut::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_FadeOut, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_InteractButton_Double_C_FadeOut::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_FadeOut, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_InteractButton_Double_C_FadeOut::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.SetupInteract
// 0x0080 (0x0080 - 0x0000)
struct BP_InteractButton_Double_C_SetupInteract final
{
public:
	class FText                                   Caption1_0;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Caption1Active_0;                                  // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Caption2_0;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Caption2Active_0;                                  // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Captions3;                                         // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class UImage*>                         CallFunc_GetHotkeyIconUserWidgets_ReturnValue;     // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UTexture2D*>                     CallFunc_GetGamepadHotkeyImages_ReturnValue;       // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractButton_Double_C_SetupInteract) == 0x000008, "Wrong alignment on BP_InteractButton_Double_C_SetupInteract");
static_assert(sizeof(BP_InteractButton_Double_C_SetupInteract) == 0x000080, "Wrong size on BP_InteractButton_Double_C_SetupInteract");
static_assert(offsetof(BP_InteractButton_Double_C_SetupInteract, Caption1_0) == 0x000000, "Member 'BP_InteractButton_Double_C_SetupInteract::Caption1_0' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_SetupInteract, Caption1Active_0) == 0x000018, "Member 'BP_InteractButton_Double_C_SetupInteract::Caption1Active_0' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_SetupInteract, Caption2_0) == 0x000020, "Member 'BP_InteractButton_Double_C_SetupInteract::Caption2_0' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_SetupInteract, Caption2Active_0) == 0x000038, "Member 'BP_InteractButton_Double_C_SetupInteract::Caption2Active_0' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_SetupInteract, Captions3) == 0x000040, "Member 'BP_InteractButton_Double_C_SetupInteract::Captions3' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_SetupInteract, CallFunc_GetHotkeyIconUserWidgets_ReturnValue) == 0x000058, "Member 'BP_InteractButton_Double_C_SetupInteract::CallFunc_GetHotkeyIconUserWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_SetupInteract, CallFunc_GetGamepadHotkeyImages_ReturnValue) == 0x000068, "Member 'BP_InteractButton_Double_C_SetupInteract::CallFunc_GetGamepadHotkeyImages_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_SetupInteract, CallFunc_IsActive_ReturnValue) == 0x000078, "Member 'BP_InteractButton_Double_C_SetupInteract::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.Set Active
// 0x0178 (0x0178 - 0x0000)
struct BP_InteractButton_Double_C_Set_Active final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00A8(0x0028)()
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00E0(0x0028)()
	struct FLinearColor                           K2Node_Select_Default_4;                           // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0118(0x0028)()
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0150(0x0028)()
};
static_assert(alignof(BP_InteractButton_Double_C_Set_Active) == 0x000008, "Wrong alignment on BP_InteractButton_Double_C_Set_Active");
static_assert(sizeof(BP_InteractButton_Double_C_Set_Active) == 0x000178, "Wrong size on BP_InteractButton_Double_C_Set_Active");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_bool_Variable) == 0x000000, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_byte_Variable) == 0x000001, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_byte_Variable_1) == 0x000002, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_bool_Variable_1) == 0x000003, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_byte_Variable_2) == 0x000004, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_byte_Variable_3) == 0x000005, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_bool_Variable_2) == 0x000006, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_struct_Variable) == 0x000008, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_struct_Variable_1) == 0x000018, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_bool_Variable_3) == 0x000028, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_struct_Variable_2) == 0x00002C, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_struct_Variable_3) == 0x00003C, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_bool_Variable_4) == 0x00004C, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_struct_Variable_4) == 0x000050, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_struct_Variable_5) == 0x000060, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_bool_Variable_5) == 0x000070, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_struct_Variable_6) == 0x000074, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, Temp_struct_Variable_7) == 0x000084, "Member 'BP_InteractButton_Double_C_Set_Active::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, K2Node_Select_Default) == 0x000094, "Member 'BP_InteractButton_Double_C_Set_Active::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, K2Node_Select_Default_1) == 0x000095, "Member 'BP_InteractButton_Double_C_Set_Active::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, CallFunc_BooleanOR_ReturnValue) == 0x000096, "Member 'BP_InteractButton_Double_C_Set_Active::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, K2Node_Select_Default_2) == 0x000098, "Member 'BP_InteractButton_Double_C_Set_Active::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, K2Node_MakeStruct_SlateColor) == 0x0000A8, "Member 'BP_InteractButton_Double_C_Set_Active::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, K2Node_Select_Default_3) == 0x0000D0, "Member 'BP_InteractButton_Double_C_Set_Active::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, K2Node_MakeStruct_SlateColor_1) == 0x0000E0, "Member 'BP_InteractButton_Double_C_Set_Active::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, K2Node_Select_Default_4) == 0x000108, "Member 'BP_InteractButton_Double_C_Set_Active::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, K2Node_MakeStruct_SlateColor_2) == 0x000118, "Member 'BP_InteractButton_Double_C_Set_Active::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, K2Node_Select_Default_5) == 0x000140, "Member 'BP_InteractButton_Double_C_Set_Active::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_Set_Active, K2Node_MakeStruct_SlateColor_3) == 0x000150, "Member 'BP_InteractButton_Double_C_Set_Active::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.SetInactive
// 0x0050 (0x0050 - 0x0000)
struct BP_InteractButton_Double_C_SetInactive final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0028)()
};
static_assert(alignof(BP_InteractButton_Double_C_SetInactive) == 0x000008, "Wrong alignment on BP_InteractButton_Double_C_SetInactive");
static_assert(sizeof(BP_InteractButton_Double_C_SetInactive) == 0x000050, "Wrong size on BP_InteractButton_Double_C_SetInactive");
static_assert(offsetof(BP_InteractButton_Double_C_SetInactive, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'BP_InteractButton_Double_C_SetInactive::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_SetInactive, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'BP_InteractButton_Double_C_SetInactive::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function BP_InteractButton_Double.BP_InteractButton_Double_C.SetText
// 0x0048 (0x0048 - 0x0000)
struct BP_InteractButton_Double_C_SetText final
{
public:
	class FText                                   Caption1_0;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Caption2_0;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Caption3_0;                                        // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_InteractButton_Double_C_SetText) == 0x000008, "Wrong alignment on BP_InteractButton_Double_C_SetText");
static_assert(sizeof(BP_InteractButton_Double_C_SetText) == 0x000048, "Wrong size on BP_InteractButton_Double_C_SetText");
static_assert(offsetof(BP_InteractButton_Double_C_SetText, Caption1_0) == 0x000000, "Member 'BP_InteractButton_Double_C_SetText::Caption1_0' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_SetText, Caption2_0) == 0x000018, "Member 'BP_InteractButton_Double_C_SetText::Caption2_0' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Double_C_SetText, Caption3_0) == 0x000030, "Member 'BP_InteractButton_Double_C_SetText::Caption3_0' has a wrong offset!");

}

