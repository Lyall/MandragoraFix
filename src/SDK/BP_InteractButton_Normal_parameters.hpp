#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractButton_Normal

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.ExecuteUbergraph_BP_InteractButton_Normal
// 0x0100 (0x0100 - 0x0000)
struct BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x005C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInCaption1Active;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInCaption2Active;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture2D*>                     K2Node_Event_HotkeyImages;                         // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	TArray<class FText>                           K2Node_Event_HotkeyTexts;                          // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_Event_bInHold;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         CallFunc_GetHotkeyIconUserWidgets_ReturnValue;     // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBorder*>                        CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue; // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UTextBlock*>                     CallFunc_GetHotkeyTextUserWidgets_ReturnValue;     // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal) == 0x000008, "Wrong alignment on BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal");
static_assert(sizeof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal) == 0x000100, "Wrong size on BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, EntryPoint) == 0x000000, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, Temp_bool_Variable) == 0x000058, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, Temp_byte_Variable) == 0x000059, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, Temp_byte_Variable_1) == 0x00005A, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, K2Node_Event_IsDesignTime) == 0x00005B, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, K2Node_Event_MyGeometry) == 0x00005C, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, K2Node_Event_InDeltaTime) == 0x000094, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, K2Node_Event_bInCaption1Active) == 0x000098, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::K2Node_Event_bInCaption1Active' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, K2Node_Event_bInCaption2Active) == 0x000099, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::K2Node_Event_bInCaption2Active' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, CallFunc_IsActive_ReturnValue) == 0x00009A, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, K2Node_Event_HotkeyImages) == 0x0000A0, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::K2Node_Event_HotkeyImages' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, K2Node_Event_HotkeyTexts) == 0x0000B0, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::K2Node_Event_HotkeyTexts' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, K2Node_Event_bInHold) == 0x0000C0, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::K2Node_Event_bInHold' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, CallFunc_GetHotkeyIconUserWidgets_ReturnValue) == 0x0000C8, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::CallFunc_GetHotkeyIconUserWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, K2Node_Select_Default) == 0x0000D8, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue) == 0x0000E0, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal, CallFunc_GetHotkeyTextUserWidgets_ReturnValue) == 0x0000F0, "Member 'BP_InteractButton_Normal_C_ExecuteUbergraph_BP_InteractButton_Normal::CallFunc_GetHotkeyTextUserWidgets_ReturnValue' has a wrong offset!");

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.OnSetHold
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractButton_Normal_C_OnSetHold final
{
public:
	bool                                          bInHold;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractButton_Normal_C_OnSetHold) == 0x000001, "Wrong alignment on BP_InteractButton_Normal_C_OnSetHold");
static_assert(sizeof(BP_InteractButton_Normal_C_OnSetHold) == 0x000001, "Wrong size on BP_InteractButton_Normal_C_OnSetHold");
static_assert(offsetof(BP_InteractButton_Normal_C_OnSetHold, bInHold) == 0x000000, "Member 'BP_InteractButton_Normal_C_OnSetHold::bInHold' has a wrong offset!");

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.OnSetHotkeyText
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractButton_Normal_C_OnSetHotkeyText final
{
public:
	TArray<class FText>                           HotkeyTexts;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InteractButton_Normal_C_OnSetHotkeyText) == 0x000008, "Wrong alignment on BP_InteractButton_Normal_C_OnSetHotkeyText");
static_assert(sizeof(BP_InteractButton_Normal_C_OnSetHotkeyText) == 0x000010, "Wrong size on BP_InteractButton_Normal_C_OnSetHotkeyText");
static_assert(offsetof(BP_InteractButton_Normal_C_OnSetHotkeyText, HotkeyTexts) == 0x000000, "Member 'BP_InteractButton_Normal_C_OnSetHotkeyText::HotkeyTexts' has a wrong offset!");

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.OnSetHotkeyImages
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractButton_Normal_C_OnSetHotkeyImages final
{
public:
	TArray<class UTexture2D*>                     HotkeyImages;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InteractButton_Normal_C_OnSetHotkeyImages) == 0x000008, "Wrong alignment on BP_InteractButton_Normal_C_OnSetHotkeyImages");
static_assert(sizeof(BP_InteractButton_Normal_C_OnSetHotkeyImages) == 0x000010, "Wrong size on BP_InteractButton_Normal_C_OnSetHotkeyImages");
static_assert(offsetof(BP_InteractButton_Normal_C_OnSetHotkeyImages, HotkeyImages) == 0x000000, "Member 'BP_InteractButton_Normal_C_OnSetHotkeyImages::HotkeyImages' has a wrong offset!");

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.OnSetState
// 0x0002 (0x0002 - 0x0000)
struct BP_InteractButton_Normal_C_OnSetState final
{
public:
	bool                                          bInCaption1Active;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInCaption2Active;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractButton_Normal_C_OnSetState) == 0x000001, "Wrong alignment on BP_InteractButton_Normal_C_OnSetState");
static_assert(sizeof(BP_InteractButton_Normal_C_OnSetState) == 0x000002, "Wrong size on BP_InteractButton_Normal_C_OnSetState");
static_assert(offsetof(BP_InteractButton_Normal_C_OnSetState, bInCaption1Active) == 0x000000, "Member 'BP_InteractButton_Normal_C_OnSetState::bInCaption1Active' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_OnSetState, bInCaption2Active) == 0x000001, "Member 'BP_InteractButton_Normal_C_OnSetState::bInCaption2Active' has a wrong offset!");

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_InteractButton_Normal_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractButton_Normal_C_Tick) == 0x000004, "Wrong alignment on BP_InteractButton_Normal_C_Tick");
static_assert(sizeof(BP_InteractButton_Normal_C_Tick) == 0x00003C, "Wrong size on BP_InteractButton_Normal_C_Tick");
static_assert(offsetof(BP_InteractButton_Normal_C_Tick, MyGeometry) == 0x000000, "Member 'BP_InteractButton_Normal_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_InteractButton_Normal_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractButton_Normal_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractButton_Normal_C_PreConstruct) == 0x000001, "Wrong alignment on BP_InteractButton_Normal_C_PreConstruct");
static_assert(sizeof(BP_InteractButton_Normal_C_PreConstruct) == 0x000001, "Wrong size on BP_InteractButton_Normal_C_PreConstruct");
static_assert(offsetof(BP_InteractButton_Normal_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_InteractButton_Normal_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.FadeIn
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractButton_Normal_C_FadeIn final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractButton_Normal_C_FadeIn) == 0x000008, "Wrong alignment on BP_InteractButton_Normal_C_FadeIn");
static_assert(sizeof(BP_InteractButton_Normal_C_FadeIn) == 0x000018, "Wrong size on BP_InteractButton_Normal_C_FadeIn");
static_assert(offsetof(BP_InteractButton_Normal_C_FadeIn, AnimDuration) == 0x000000, "Member 'BP_InteractButton_Normal_C_FadeIn::AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_FadeIn, CallFunc_Abs_ReturnValue) == 0x000004, "Member 'BP_InteractButton_Normal_C_FadeIn::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_FadeIn, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_InteractButton_Normal_C_FadeIn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_FadeIn, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_InteractButton_Normal_C_FadeIn::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_FadeIn, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_InteractButton_Normal_C_FadeIn::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.FadeOut
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractButton_Normal_C_FadeOut final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractButton_Normal_C_FadeOut) == 0x000008, "Wrong alignment on BP_InteractButton_Normal_C_FadeOut");
static_assert(sizeof(BP_InteractButton_Normal_C_FadeOut) == 0x000018, "Wrong size on BP_InteractButton_Normal_C_FadeOut");
static_assert(offsetof(BP_InteractButton_Normal_C_FadeOut, AnimDuration) == 0x000000, "Member 'BP_InteractButton_Normal_C_FadeOut::AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_FadeOut, CallFunc_Abs_ReturnValue) == 0x000004, "Member 'BP_InteractButton_Normal_C_FadeOut::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_FadeOut, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_InteractButton_Normal_C_FadeOut::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_FadeOut, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_InteractButton_Normal_C_FadeOut::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_FadeOut, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_InteractButton_Normal_C_FadeOut::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.SetupInteract
// 0x0068 (0x0068 - 0x0000)
struct BP_InteractButton_Normal_C_SetupInteract final
{
public:
	class FText                                   Caption_0;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	TArray<class UTextBlock*>                     CallFunc_GetHotkeyTextUserWidgets_ReturnValue;     // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UBorder*>                        CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue; // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UImage*>                         CallFunc_GetHotkeyIconUserWidgets_ReturnValue;     // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UTexture2D*>                     CallFunc_GetGamepadHotkeyImages_ReturnValue;       // 0x0058(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_InteractButton_Normal_C_SetupInteract) == 0x000008, "Wrong alignment on BP_InteractButton_Normal_C_SetupInteract");
static_assert(sizeof(BP_InteractButton_Normal_C_SetupInteract) == 0x000068, "Wrong size on BP_InteractButton_Normal_C_SetupInteract");
static_assert(offsetof(BP_InteractButton_Normal_C_SetupInteract, Caption_0) == 0x000000, "Member 'BP_InteractButton_Normal_C_SetupInteract::Caption_0' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetupInteract, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_InteractButton_Normal_C_SetupInteract::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetupInteract, CallFunc_GetHotkeyTextUserWidgets_ReturnValue) == 0x000028, "Member 'BP_InteractButton_Normal_C_SetupInteract::CallFunc_GetHotkeyTextUserWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetupInteract, CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue) == 0x000038, "Member 'BP_InteractButton_Normal_C_SetupInteract::CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetupInteract, CallFunc_GetHotkeyIconUserWidgets_ReturnValue) == 0x000048, "Member 'BP_InteractButton_Normal_C_SetupInteract::CallFunc_GetHotkeyIconUserWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetupInteract, CallFunc_GetGamepadHotkeyImages_ReturnValue) == 0x000058, "Member 'BP_InteractButton_Normal_C_SetupInteract::CallFunc_GetGamepadHotkeyImages_ReturnValue' has a wrong offset!");

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.ToggleActive
// 0x0048 (0x0048 - 0x0000)
struct BP_InteractButton_Normal_C_ToggleActive final
{
public:
	bool                                          InIsActive;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractButton_Normal_C_ToggleActive) == 0x000008, "Wrong alignment on BP_InteractButton_Normal_C_ToggleActive");
static_assert(sizeof(BP_InteractButton_Normal_C_ToggleActive) == 0x000048, "Wrong size on BP_InteractButton_Normal_C_ToggleActive");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, InIsActive) == 0x000000, "Member 'BP_InteractButton_Normal_C_ToggleActive::InIsActive' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, Temp_bool_Variable) == 0x000001, "Member 'BP_InteractButton_Normal_C_ToggleActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_InteractButton_Normal_C_ToggleActive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, Temp_byte_Variable) == 0x000003, "Member 'BP_InteractButton_Normal_C_ToggleActive::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, Temp_byte_Variable_1) == 0x000004, "Member 'BP_InteractButton_Normal_C_ToggleActive::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, Temp_bool_Variable_1) == 0x000005, "Member 'BP_InteractButton_Normal_C_ToggleActive::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, K2Node_Select_Default) == 0x000006, "Member 'BP_InteractButton_Normal_C_ToggleActive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, Temp_object_Variable) == 0x000008, "Member 'BP_InteractButton_Normal_C_ToggleActive::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, Temp_object_Variable_1) == 0x000010, "Member 'BP_InteractButton_Normal_C_ToggleActive::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, Temp_bool_Variable_2) == 0x000018, "Member 'BP_InteractButton_Normal_C_ToggleActive::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, K2Node_Select_Default_1) == 0x000020, "Member 'BP_InteractButton_Normal_C_ToggleActive::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, Temp_float_Variable) == 0x000028, "Member 'BP_InteractButton_Normal_C_ToggleActive::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, Temp_float_Variable_1) == 0x00002C, "Member 'BP_InteractButton_Normal_C_ToggleActive::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, Temp_bool_Variable_3) == 0x000030, "Member 'BP_InteractButton_Normal_C_ToggleActive::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, K2Node_Select_Default_2) == 0x000034, "Member 'BP_InteractButton_Normal_C_ToggleActive::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, Temp_float_Variable_2) == 0x000038, "Member 'BP_InteractButton_Normal_C_ToggleActive::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, Temp_float_Variable_3) == 0x00003C, "Member 'BP_InteractButton_Normal_C_ToggleActive::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_ToggleActive, K2Node_Select_Default_3) == 0x000040, "Member 'BP_InteractButton_Normal_C_ToggleActive::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractButton_Normal_C_SetText final
{
public:
	class FText                                   Caption_0;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_InteractButton_Normal_C_SetText) == 0x000008, "Wrong alignment on BP_InteractButton_Normal_C_SetText");
static_assert(sizeof(BP_InteractButton_Normal_C_SetText) == 0x000018, "Wrong size on BP_InteractButton_Normal_C_SetText");
static_assert(offsetof(BP_InteractButton_Normal_C_SetText, Caption_0) == 0x000000, "Member 'BP_InteractButton_Normal_C_SetText::Caption_0' has a wrong offset!");

// Function BP_InteractButton_Normal.BP_InteractButton_Normal_C.SetHold
// 0x0030 (0x0030 - 0x0000)
struct BP_InteractButton_Normal_C_SetHold final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHold_ReturnValue;                       // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHold_ReturnValue_1;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractButton_Normal_C_SetHold) == 0x000008, "Wrong alignment on BP_InteractButton_Normal_C_SetHold");
static_assert(sizeof(BP_InteractButton_Normal_C_SetHold) == 0x000030, "Wrong size on BP_InteractButton_Normal_C_SetHold");
static_assert(offsetof(BP_InteractButton_Normal_C_SetHold, Temp_bool_Variable) == 0x000000, "Member 'BP_InteractButton_Normal_C_SetHold::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetHold, Temp_float_Variable) == 0x000004, "Member 'BP_InteractButton_Normal_C_SetHold::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetHold, Temp_float_Variable_1) == 0x000008, "Member 'BP_InteractButton_Normal_C_SetHold::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetHold, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_InteractButton_Normal_C_SetHold::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetHold, Temp_byte_Variable) == 0x00000D, "Member 'BP_InteractButton_Normal_C_SetHold::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetHold, Temp_byte_Variable_1) == 0x00000E, "Member 'BP_InteractButton_Normal_C_SetHold::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetHold, CallFunc_IsHold_ReturnValue) == 0x00000F, "Member 'BP_InteractButton_Normal_C_SetHold::CallFunc_IsHold_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetHold, CallFunc_IsHold_ReturnValue_1) == 0x000010, "Member 'BP_InteractButton_Normal_C_SetHold::CallFunc_IsHold_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetHold, K2Node_Select_Default) == 0x000011, "Member 'BP_InteractButton_Normal_C_SetHold::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetHold, K2Node_Select_Default_1) == 0x000014, "Member 'BP_InteractButton_Normal_C_SetHold::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetHold, K2Node_MakeStruct_Margin) == 0x000018, "Member 'BP_InteractButton_Normal_C_SetHold::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_InteractButton_Normal_C_SetHold, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000028, "Member 'BP_InteractButton_Normal_C_SetHold::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");

}

