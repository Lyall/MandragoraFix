#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InventorySlotSmall_V3

#include "Basic.hpp"

#include "BP_InventorySlotSmall_V3_classes.hpp"
#include "BP_InventorySlotSmall_V3_parameters.hpp"


namespace SDK
{

// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.ExecuteUbergraph_BP_InventorySlotSmall_V3
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventorySlotSmall_V3_C::ExecuteUbergraph_BP_InventorySlotSmall_V3(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "ExecuteUbergraph_BP_InventorySlotSmall_V3");

	Params::BP_InventorySlotSmall_V3_C_ExecuteUbergraph_BP_InventorySlotSmall_V3 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnHighlighted
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bHighlighted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::OnHighlighted(bool bHighlighted, bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnHighlighted");

	Params::BP_InventorySlotSmall_V3_C_OnHighlighted Parms{};

	Parms.bHighlighted = bHighlighted;
	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnToggleEmptySlot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInEmptySlot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EItemSlot                               InSlotType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventorySlotSmall_V3_C::OnToggleEmptySlot(bool bInEmptySlot, EItemSlot InSlotType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnToggleEmptySlot");

	Params::BP_InventorySlotSmall_V3_C_OnToggleEmptySlot Parms{};

	Parms.bInEmptySlot = bInEmptySlot;
	Parms.InSlotType = InSlotType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnSetSetIndexes
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<int32>                           InSetIndexes                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_InventorySlotSmall_V3_C::OnSetSetIndexes(const TArray<int32>& InSetIndexes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnSetSetIndexes");

	Params::BP_InventorySlotSmall_V3_C_OnSetSetIndexes Parms{};

	Parms.InSetIndexes = std::move(InSetIndexes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnTemporaryEnchantIconsChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UTexture2D*>               InTemporaryEnchantIcons                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_InventorySlotSmall_V3_C::OnTemporaryEnchantIconsChanged(const TArray<class UTexture2D*>& InTemporaryEnchantIcons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnTemporaryEnchantIconsChanged");

	Params::BP_InventorySlotSmall_V3_C_OnTemporaryEnchantIconsChanged Parms{};

	Parms.InTemporaryEnchantIcons = std::move(InTemporaryEnchantIcons);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnPermanentEnchantIconsChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UTexture2D*>               InPermanentEnchantIcons                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_InventorySlotSmall_V3_C::OnPermanentEnchantIconsChanged(const TArray<class UTexture2D*>& InPermanentEnchantIcons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnPermanentEnchantIconsChanged");

	Params::BP_InventorySlotSmall_V3_C_OnPermanentEnchantIconsChanged Parms{};

	Parms.InPermanentEnchantIcons = std::move(InPermanentEnchantIcons);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnUnfocused
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::OnUnfocused(bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnUnfocused");

	Params::BP_InventorySlotSmall_V3_C_OnUnfocused Parms{};

	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnFocused
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::OnFocused(bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnFocused");

	Params::BP_InventorySlotSmall_V3_C_OnFocused Parms{};

	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnToggleSoldItem
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInSoldItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::OnToggleSoldItem(bool bInSoldItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnToggleSoldItem");

	Params::BP_InventorySlotSmall_V3_C_OnToggleSoldItem Parms{};

	Parms.bInSoldItem = bInSoldItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_InventorySlotSmall_V3_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnStackNumChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InStackNum                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InMaxStackNum                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInIsStackable                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::OnStackNumChanged(int32 InStackNum, int32 InMaxStackNum, bool bInIsStackable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnStackNumChanged");

	Params::BP_InventorySlotSmall_V3_C_OnStackNumChanged Parms{};

	Parms.InStackNum = InStackNum;
	Parms.InMaxStackNum = InMaxStackNum;
	Parms.bInIsStackable = bInIsStackable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnToggleEquipped
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInIsEquipped                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::OnToggleEquipped(bool bInIsEquipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnToggleEquipped");

	Params::BP_InventorySlotSmall_V3_C_OnToggleEquipped Parms{};

	Parms.bInIsEquipped = bInIsEquipped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnSetCountdown
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   ElapsedCooldownPercent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TimeLeft                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_InventorySlotSmall_V3_C::OnSetCountdown(float ElapsedCooldownPercent, const class FText& TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnSetCountdown");

	Params::BP_InventorySlotSmall_V3_C_OnSetCountdown Parms{};

	Parms.ElapsedCooldownPercent = ElapsedCooldownPercent;
	Parms.TimeLeft = std::move(TimeLeft);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnToggleNewItemWarning
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInAnimate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::OnToggleNewItemWarning(bool bInVisible, bool bInAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnToggleNewItemWarning");

	Params::BP_InventorySlotSmall_V3_C_OnToggleNewItemWarning Parms{};

	Parms.bInVisible = bInVisible;
	Parms.bInAnimate = bInAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnSetEquipState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bEquipState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::OnSetEquipState(bool bEquipState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnSetEquipState");

	Params::BP_InventorySlotSmall_V3_C_OnSetEquipState Parms{};

	Parms.bEquipState = bEquipState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnPlayFocusedAnim
// (Event, Public, BlueprintEvent)

void UBP_InventorySlotSmall_V3_C::OnPlayFocusedAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnPlayFocusedAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnToggleUnavailable
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bUnavailable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bUnavailableByResource                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::OnToggleUnavailable(bool bUnavailable, bool bUnavailableByResource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnToggleUnavailable");

	Params::BP_InventorySlotSmall_V3_C_OnToggleUnavailable Parms{};

	Parms.bUnavailable = bUnavailable;
	Parms.bUnavailableByResource = bUnavailableByResource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_InventorySlotSmall_V3_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnSetSlot
// (Event, Public, BlueprintEvent)
// Parameters:
// class UManItemSlotBase*                 InManItemSlotBase                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UItemAbility*                     InItemAbility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventorySlotSmall_V3_C::OnSetSlot(class UManItemSlotBase* InManItemSlotBase, class UItemAbility* InItemAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnSetSlot");

	Params::BP_InventorySlotSmall_V3_C_OnSetSlot Parms{};

	Parms.InManItemSlotBase = InManItemSlotBase;
	Parms.InItemAbility = InItemAbility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnToggleSelected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSelected                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::OnToggleSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnToggleSelected");

	Params::BP_InventorySlotSmall_V3_C_OnToggleSelected Parms{};

	Parms.bSelected = bSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_InventorySlotSmall_V3_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnMouseLeave");

	Params::BP_InventorySlotSmall_V3_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_InventorySlotSmall_V3_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "OnMouseEnter");

	Params::BP_InventorySlotSmall_V3_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventorySlotSmall_V3_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "Tick");

	Params::BP_InventorySlotSmall_V3_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "PreConstruct");

	Params::BP_InventorySlotSmall_V3_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.SetActive
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InventorySlotSmall_V3_C::SetActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "SetActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.SetInactive
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InventorySlotSmall_V3_C::SetInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "SetInactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.Set Slot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UItemAbility*                     InItemAbility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventorySlotSmall_V3_C::Set_Slot(class UItemAbility* InItemAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "Set Slot");

	Params::BP_InventorySlotSmall_V3_C_Set_Slot Parms{};

	Parms.InItemAbility = InItemAbility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.SetCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CAPACITY                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Stackable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::SetCount(int32 Quantity, int32 CAPACITY, bool Stackable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "SetCount");

	Params::BP_InventorySlotSmall_V3_C_SetCount Parms{};

	Parms.Quantity = Quantity;
	Parms.CAPACITY = CAPACITY;
	Parms.Stackable = Stackable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.UpdateDetailsView
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InventorySlotSmall_V3_C::UpdateDetailsView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "UpdateDetailsView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.ToggleEquipped
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Equipped                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::ToggleEquipped(bool Equipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "ToggleEquipped");

	Params::BP_InventorySlotSmall_V3_C_ToggleEquipped Parms{};

	Parms.Equipped = Equipped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.ToggleSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Selected                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::ToggleSelected(bool Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "ToggleSelected");

	Params::BP_InventorySlotSmall_V3_C_ToggleSelected Parms{};

	Parms.Selected = Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.ToggleCanEquipped
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanEquipped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::ToggleCanEquipped(bool CanEquipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "ToggleCanEquipped");

	Params::BP_InventorySlotSmall_V3_C_ToggleCanEquipped Parms{};

	Parms.CanEquipped = CanEquipped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.ToggleUnavailable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unavailable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UnavailableByResource                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::ToggleUnavailable(bool Unavailable, bool UnavailableByResource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "ToggleUnavailable");

	Params::BP_InventorySlotSmall_V3_C_ToggleUnavailable Parms{};

	Parms.Unavailable = Unavailable;
	Parms.UnavailableByResource = UnavailableByResource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.ToggleNewItemWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InAnimate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::ToggleNewItemWarning(bool InVisible, bool InAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "ToggleNewItemWarning");

	Params::BP_InventorySlotSmall_V3_C_ToggleNewItemWarning Parms{};

	Parms.InVisible = InVisible;
	Parms.InAnimate = InAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.SetCountdown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PercentLeft                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TimeLeft                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_InventorySlotSmall_V3_C::SetCountdown(float PercentLeft, const class FText& TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "SetCountdown");

	Params::BP_InventorySlotSmall_V3_C_SetCountdown Parms{};

	Parms.PercentLeft = PercentLeft;
	Parms.TimeLeft = std::move(TimeLeft);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.ToggleSoldItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InSoldItem                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InventorySlotSmall_V3_C::ToggleSoldItem(bool InSoldItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "ToggleSoldItem");

	Params::BP_InventorySlotSmall_V3_C_ToggleSoldItem Parms{};

	Parms.InSoldItem = InSoldItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.Toggle Empty
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsEmpty                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EItemSlot                               InItemSlotType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventorySlotSmall_V3_C::Toggle_Empty(bool InIsEmpty, EItemSlot InItemSlotType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "Toggle Empty");

	Params::BP_InventorySlotSmall_V3_C_Toggle_Empty Parms{};

	Parms.InIsEmpty = InIsEmpty;
	Parms.InItemSlotType = InItemSlotType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.PlayLongpressAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InventorySlotSmall_V3_C::PlayLongpressAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "PlayLongpressAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.PlayLongpressCancelAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InventorySlotSmall_V3_C::PlayLongpressCancelAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "PlayLongpressCancelAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventorySlotSmall_V3.BP_InventorySlotSmall_V3_C.PlayLongpressFinishedAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InventorySlotSmall_V3_C::PlayLongpressFinishedAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventorySlotSmall_V3_C", "PlayLongpressFinishedAnim");

	UObject::ProcessEvent(Func, nullptr);
}

}

