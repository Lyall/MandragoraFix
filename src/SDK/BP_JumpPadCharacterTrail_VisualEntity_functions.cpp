#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JumpPadCharacterTrail_VisualEntity

#include "Basic.hpp"

#include "BP_JumpPadCharacterTrail_VisualEntity_classes.hpp"
#include "BP_JumpPadCharacterTrail_VisualEntity_parameters.hpp"


namespace SDK
{

// Function BP_JumpPadCharacterTrail_VisualEntity.BP_JumpPadCharacterTrail_VisualEntity_C.ExecuteUbergraph_BP_JumpPadCharacterTrail_VisualEntity
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_JumpPadCharacterTrail_VisualEntity_C::ExecuteUbergraph_BP_JumpPadCharacterTrail_VisualEntity(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JumpPadCharacterTrail_VisualEntity_C", "ExecuteUbergraph_BP_JumpPadCharacterTrail_VisualEntity");

	Params::BP_JumpPadCharacterTrail_VisualEntity_C_ExecuteUbergraph_BP_JumpPadCharacterTrail_VisualEntity Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JumpPadCharacterTrail_VisualEntity.BP_JumpPadCharacterTrail_VisualEntity_C.OnKill
// (Event, Protected, BlueprintEvent)

void ABP_JumpPadCharacterTrail_VisualEntity_C::OnKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JumpPadCharacterTrail_VisualEntity_C", "OnKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JumpPadCharacterTrail_VisualEntity.BP_JumpPadCharacterTrail_VisualEntity_C.VisualEntityConstructionFinished
// (Event, Protected, BlueprintEvent)

void ABP_JumpPadCharacterTrail_VisualEntity_C::VisualEntityConstructionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JumpPadCharacterTrail_VisualEntity_C", "VisualEntityConstructionFinished");

	UObject::ProcessEvent(Func, nullptr);
}

}

