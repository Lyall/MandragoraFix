#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KezkaDivineHammerProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KezkaDivineHammerProjectile.BP_KezkaDivineHammerProjectile_C
// 0x0018 (0x0C00 - 0x0BE8)
class ABP_KezkaDivineHammerProjectile_C final : public AWaveOfLightProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BE8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0BF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitBox*                                ExplosionHitBox;                                   // 0x0BF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_KezkaDivineHammerProjectile(int32 EntryPoint);
	void OnDestroyed_Event_0(class AActor* DestroyedActor);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KezkaDivineHammerProjectile_C">();
	}
	static class ABP_KezkaDivineHammerProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KezkaDivineHammerProjectile_C>();
	}
};
static_assert(alignof(ABP_KezkaDivineHammerProjectile_C) == 0x000008, "Wrong alignment on ABP_KezkaDivineHammerProjectile_C");
static_assert(sizeof(ABP_KezkaDivineHammerProjectile_C) == 0x000C00, "Wrong size on ABP_KezkaDivineHammerProjectile_C");
static_assert(offsetof(ABP_KezkaDivineHammerProjectile_C, UberGraphFrame) == 0x000BE8, "Member 'ABP_KezkaDivineHammerProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_KezkaDivineHammerProjectile_C, Ak) == 0x000BF0, "Member 'ABP_KezkaDivineHammerProjectile_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_KezkaDivineHammerProjectile_C, ExplosionHitBox) == 0x000BF8, "Member 'ABP_KezkaDivineHammerProjectile_C::ExplosionHitBox' has a wrong offset!");

}

