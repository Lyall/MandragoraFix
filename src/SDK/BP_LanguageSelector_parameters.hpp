#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LanguageSelector

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_LanguageSelector.BP_LanguageSelector_C.BtnNextClicked
// 0x0020 (0x0020 - 0x0000)
struct BP_LanguageSelector_C_BtnNextClicked final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LanguageSelector_C_BtnNextClicked) == 0x000008, "Wrong alignment on BP_LanguageSelector_C_BtnNextClicked");
static_assert(sizeof(BP_LanguageSelector_C_BtnNextClicked) == 0x000020, "Wrong size on BP_LanguageSelector_C_BtnNextClicked");
static_assert(offsetof(BP_LanguageSelector_C_BtnNextClicked, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'BP_LanguageSelector_C_BtnNextClicked::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_BtnNextClicked, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_LanguageSelector_C_BtnNextClicked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_BtnNextClicked, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_LanguageSelector_C_BtnNextClicked::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_BtnNextClicked, Temp_int_Variable) == 0x000010, "Member 'BP_LanguageSelector_C_BtnNextClicked::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_BtnNextClicked, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_LanguageSelector_C_BtnNextClicked::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_BtnNextClicked, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_LanguageSelector_C_BtnNextClicked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LanguageSelector.BP_LanguageSelector_C.BtnPreviousClicked
// 0x0028 (0x0028 - 0x0000)
struct BP_LanguageSelector_C_BtnPreviousClicked final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LanguageSelector_C_BtnPreviousClicked) == 0x000008, "Wrong alignment on BP_LanguageSelector_C_BtnPreviousClicked");
static_assert(sizeof(BP_LanguageSelector_C_BtnPreviousClicked) == 0x000028, "Wrong size on BP_LanguageSelector_C_BtnPreviousClicked");
static_assert(offsetof(BP_LanguageSelector_C_BtnPreviousClicked, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'BP_LanguageSelector_C_BtnPreviousClicked::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_BtnPreviousClicked, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_LanguageSelector_C_BtnPreviousClicked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_BtnPreviousClicked, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_LanguageSelector_C_BtnPreviousClicked::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_BtnPreviousClicked, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_LanguageSelector_C_BtnPreviousClicked::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_BtnPreviousClicked, Temp_int_Variable) == 0x000018, "Member 'BP_LanguageSelector_C_BtnPreviousClicked::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_BtnPreviousClicked, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_LanguageSelector_C_BtnPreviousClicked::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_BtnPreviousClicked, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_LanguageSelector_C_BtnPreviousClicked::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_LanguageSelector.BP_LanguageSelector_C.UpdateSlots
// 0x0008 (0x0008 - 0x0000)
struct BP_LanguageSelector_C_UpdateSlots final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LanguageSelector_C_UpdateSlots) == 0x000004, "Wrong alignment on BP_LanguageSelector_C_UpdateSlots");
static_assert(sizeof(BP_LanguageSelector_C_UpdateSlots) == 0x000008, "Wrong size on BP_LanguageSelector_C_UpdateSlots");
static_assert(offsetof(BP_LanguageSelector_C_UpdateSlots, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BP_LanguageSelector_C_UpdateSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_UpdateSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'BP_LanguageSelector_C_UpdateSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LanguageSelector.BP_LanguageSelector_C.Init
// 0x0018 (0x0018 - 0x0000)
struct BP_LanguageSelector_C_Init final
{
public:
	TArray<class FText>                           InOptionsArray;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         InSelectedIndex;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LanguageSelector_C_Init) == 0x000008, "Wrong alignment on BP_LanguageSelector_C_Init");
static_assert(sizeof(BP_LanguageSelector_C_Init) == 0x000018, "Wrong size on BP_LanguageSelector_C_Init");
static_assert(offsetof(BP_LanguageSelector_C_Init, InOptionsArray) == 0x000000, "Member 'BP_LanguageSelector_C_Init::InOptionsArray' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_Init, InSelectedIndex) == 0x000010, "Member 'BP_LanguageSelector_C_Init::InSelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_Init, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000014, "Member 'BP_LanguageSelector_C_Init::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_LanguageSelector.BP_LanguageSelector_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_LanguageSelector_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LanguageSelector_C_PreConstruct) == 0x000001, "Wrong alignment on BP_LanguageSelector_C_PreConstruct");
static_assert(sizeof(BP_LanguageSelector_C_PreConstruct) == 0x000001, "Wrong size on BP_LanguageSelector_C_PreConstruct");
static_assert(offsetof(BP_LanguageSelector_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_LanguageSelector_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_LanguageSelector.BP_LanguageSelector_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_LanguageSelector_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LanguageSelector_C_Tick) == 0x000004, "Wrong alignment on BP_LanguageSelector_C_Tick");
static_assert(sizeof(BP_LanguageSelector_C_Tick) == 0x00003C, "Wrong size on BP_LanguageSelector_C_Tick");
static_assert(offsetof(BP_LanguageSelector_C_Tick, MyGeometry) == 0x000000, "Member 'BP_LanguageSelector_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_LanguageSelector_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_LanguageSelector.BP_LanguageSelector_C.OnSetOptionsArray
// 0x0018 (0x0018 - 0x0000)
struct BP_LanguageSelector_C_OnSetOptionsArray final
{
public:
	TArray<class FText>                           InOptions;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         InSelectedIndex;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LanguageSelector_C_OnSetOptionsArray) == 0x000008, "Wrong alignment on BP_LanguageSelector_C_OnSetOptionsArray");
static_assert(sizeof(BP_LanguageSelector_C_OnSetOptionsArray) == 0x000018, "Wrong size on BP_LanguageSelector_C_OnSetOptionsArray");
static_assert(offsetof(BP_LanguageSelector_C_OnSetOptionsArray, InOptions) == 0x000000, "Member 'BP_LanguageSelector_C_OnSetOptionsArray::InOptions' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_OnSetOptionsArray, InSelectedIndex) == 0x000010, "Member 'BP_LanguageSelector_C_OnSetOptionsArray::InSelectedIndex' has a wrong offset!");

// Function BP_LanguageSelector.BP_LanguageSelector_C.ExecuteUbergraph_BP_LanguageSelector
// 0x0060 (0x0060 - 0x0000)
struct BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_Event_InOptions;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	int32                                         K2Node_Event_InSelectedIndex;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector) == 0x000008, "Wrong alignment on BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector");
static_assert(sizeof(BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector) == 0x000060, "Wrong size on BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector");
static_assert(offsetof(BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector, EntryPoint) == 0x000000, "Member 'BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector, K2Node_Event_InOptions) == 0x000008, "Member 'BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector::K2Node_Event_InOptions' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector, K2Node_Event_InSelectedIndex) == 0x000018, "Member 'BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector::K2Node_Event_InSelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector, K2Node_Event_IsDesignTime) == 0x00001C, "Member 'BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector, K2Node_Event_MyGeometry) == 0x000020, "Member 'BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector, K2Node_Event_InDeltaTime) == 0x000058, "Member 'BP_LanguageSelector_C_ExecuteUbergraph_BP_LanguageSelector::K2Node_Event_InDeltaTime' has a wrong offset!");

}

