#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelUpWindow

#include "Basic.hpp"

#include "BP_LevelUpWindow_classes.hpp"
#include "BP_LevelUpWindow_parameters.hpp"


namespace SDK
{

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.ExecuteUbergraph_BP_LevelUpWindow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LevelUpWindow_C::ExecuteUbergraph_BP_LevelUpWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "ExecuteUbergraph_BP_LevelUpWindow");

	Params::BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnErrorHiglight
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UInteractButtonUserWidget*        InteractButtonUserWidget                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LevelUpWindow_C::OnErrorHiglight(class UInteractButtonUserWidget* InteractButtonUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnErrorHiglight");

	Params::BP_LevelUpWindow_C_OnErrorHiglight Parms{};

	Parms.InteractButtonUserWidget = InteractButtonUserWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnSetMaxLevelText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InMaxLevelText                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_LevelUpWindow_C::OnSetMaxLevelText(const class FText& InMaxLevelText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnSetMaxLevelText");

	Params::BP_LevelUpWindow_C_OnSetMaxLevelText Parms{};

	Parms.InMaxLevelText = std::move(InMaxLevelText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnIngameMenuEvent
// (Event, Public, BlueprintEvent)

void UBP_LevelUpWindow_C::OnIngameMenuEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnIngameMenuEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LevelUpWindow_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "Tick");

	Params::BP_LevelUpWindow_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnHoldFinished
// (Event, Public, BlueprintEvent)
// Parameters:
// class UInteractButtonUserWidget*        InteractButtonUserWidget                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LevelUpWindow_C::OnHoldFinished(class UInteractButtonUserWidget* InteractButtonUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnHoldFinished");

	Params::BP_LevelUpWindow_C_OnHoldFinished Parms{};

	Parms.InteractButtonUserWidget = InteractButtonUserWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnHoldCanceled
// (Event, Public, BlueprintEvent)
// Parameters:
// class UInteractButtonUserWidget*        InteractButtonUserWidget                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMinTimeCancel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LevelUpWindow_C::OnHoldCanceled(class UInteractButtonUserWidget* InteractButtonUserWidget, bool bMinTimeCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnHoldCanceled");

	Params::BP_LevelUpWindow_C_OnHoldCanceled Parms{};

	Parms.InteractButtonUserWidget = InteractButtonUserWidget;
	Parms.bMinTimeCancel = bMinTimeCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnHoldStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class UInteractButtonUserWidget*        InteractButtonUserWidget                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LevelUpWindow_C::OnHoldStarted(class UInteractButtonUserWidget* InteractButtonUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnHoldStarted");

	Params::BP_LevelUpWindow_C_OnHoldStarted Parms{};

	Parms.InteractButtonUserWidget = InteractButtonUserWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnLevelUp
// (Event, Protected, BlueprintEvent)

void UBP_LevelUpWindow_C::OnLevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnLevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BndEvt__BP_LevelUpWindow_Tab_Map1_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_LevelUpWindow_C::BndEvt__BP_LevelUpWindow_Tab_Map1_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "BndEvt__BP_LevelUpWindow_Tab_Map1_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BndEvt__BP_LevelUpWindow_Tab_WitchLantern1_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_LevelUpWindow_C::BndEvt__BP_LevelUpWindow_Tab_WitchLantern1_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "BndEvt__BP_LevelUpWindow_Tab_WitchLantern1_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BndEvt__BP_LevelUpWindow_Tab_Skills1_K2Node_ComponentBoundEvent_12_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_LevelUpWindow_C::BndEvt__BP_LevelUpWindow_Tab_Skills1_K2Node_ComponentBoundEvent_12_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "BndEvt__BP_LevelUpWindow_Tab_Skills1_K2Node_ComponentBoundEvent_12_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BndEvt__BP_LevelUpWindow_Tab_Attributes1_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_LevelUpWindow_C::BndEvt__BP_LevelUpWindow_Tab_Attributes1_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "BndEvt__BP_LevelUpWindow_Tab_Attributes1_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnSetDefaultLevelDiff
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InDefaultLevelDiff                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LevelUpWindow_C::OnSetDefaultLevelDiff(int32 InDefaultLevelDiff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnSetDefaultLevelDiff");

	Params::BP_LevelUpWindow_C_OnSetDefaultLevelDiff Parms{};

	Parms.InDefaultLevelDiff = InDefaultLevelDiff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_LevelUpWindow_C::BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_LevelUpWindow_C::BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnGamepadRBEvent
// (Event, Public, BlueprintEvent)

void UBP_LevelUpWindow_C::OnGamepadRBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnGamepadRBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnGamepadLBEvent
// (Event, Public, BlueprintEvent)

void UBP_LevelUpWindow_C::OnGamepadLBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnGamepadLBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnGamepadBEvent
// (Event, Public, BlueprintEvent)

void UBP_LevelUpWindow_C::OnGamepadBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnGamepadBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BndEvt__BtnHotkeyDPad_Down1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_LevelUpWindow_C::BndEvt__BtnHotkeyDPad_Down1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "BndEvt__BtnHotkeyDPad_Down1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BndEvt__BtnHotkeyDPad_Up1_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_LevelUpWindow_C::BndEvt__BtnHotkeyDPad_Up1_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "BndEvt__BtnHotkeyDPad_Up1_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BndEvt__BtnHotkeyB1_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_LevelUpWindow_C::BndEvt__BtnHotkeyB1_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "BndEvt__BtnHotkeyB1_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnDecreaseLevel
// (Event, Protected, BlueprintEvent)

void UBP_LevelUpWindow_C::OnDecreaseLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnDecreaseLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnIncreaseLevel
// (Event, Protected, BlueprintEvent)

void UBP_LevelUpWindow_C::OnIncreaseLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnIncreaseLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnHide
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LevelUpWindow_C::OnHide(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnHide");

	Params::BP_LevelUpWindow_C_OnHide Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnShow
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LevelUpWindow_C::OnShow(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "OnShow");

	Params::BP_LevelUpWindow_C_OnShow Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BtnHotkeyBClicked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OpenPauseMenu                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LevelUpWindow_C::BtnHotkeyBClicked(bool OpenPauseMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "BtnHotkeyBClicked");

	Params::BP_LevelUpWindow_C_BtnHotkeyBClicked Parms{};

	Parms.OpenPauseMenu = OpenPauseMenu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BtnHotkeyDPad_UpClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LevelUpWindow_C::BtnHotkeyDPad_UpClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "BtnHotkeyDPad_UpClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BtnHotkeyDPad_DownClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LevelUpWindow_C::BtnHotkeyDPad_DownClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "BtnHotkeyDPad_DownClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.SetEssenceTexts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LevelUpWindow_C::SetEssenceTexts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "SetEssenceTexts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LevelUpWindow_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.ToggleNextLevelAvailable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InAvailable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LevelUpWindow_C::ToggleNextLevelAvailable(bool InAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "ToggleNextLevelAvailable");

	Params::BP_LevelUpWindow_C_ToggleNextLevelAvailable Parms{};

	Parms.InAvailable = InAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.UIShaker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ShakeStrength                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ShakeMultiplier                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   XFreqSmall                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   XAmpSmall                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   XFreqLarge                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   XAmpLarge                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   YFreqSmall                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   YAmpSmall                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   YFreqLarge                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   YAmpLarge                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Translate                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LevelUpWindow_C::UIShaker(float ShakeStrength, float ShakeMultiplier, float XFreqSmall, float XAmpSmall, float XFreqLarge, float XAmpLarge, float YFreqSmall, float YAmpSmall, float YFreqLarge, float YAmpLarge, struct FVector2D* Translate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "UIShaker");

	Params::BP_LevelUpWindow_C_UIShaker Parms{};

	Parms.ShakeStrength = ShakeStrength;
	Parms.ShakeMultiplier = ShakeMultiplier;
	Parms.XFreqSmall = XFreqSmall;
	Parms.XAmpSmall = XAmpSmall;
	Parms.XFreqLarge = XFreqLarge;
	Parms.XAmpLarge = XAmpLarge;
	Parms.YFreqSmall = YFreqSmall;
	Parms.YAmpSmall = YAmpSmall;
	Parms.YFreqLarge = YFreqLarge;
	Parms.YAmpLarge = YAmpLarge;

	UObject::ProcessEvent(Func, &Parms);

	if (Translate != nullptr)
		*Translate = std::move(Parms.Translate);
}


// Function BP_LevelUpWindow.BP_LevelUpWindow_C.ErrorHighlight
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LevelUpWindow_C::ErrorHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelUpWindow_C", "ErrorHighlight");

	UObject::ProcessEvent(Func, nullptr);
}

}

