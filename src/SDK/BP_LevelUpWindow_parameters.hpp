#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelUpWindow

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.ExecuteUbergraph_BP_LevelUpWindow
// 0x0240 (0x0240 - 0x0000)
struct BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0038(0x0018)()
	class FText                                   CallFunc_IntToText_ReturnValue_1;                  // 0x0050(0x0018)()
	int32                                         K2Node_Event_InDefaultLevelDiff;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0070(0x0028)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00A0(0x0028)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00C8(0x0028)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget_3;           // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget_2;           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bMinTimeCancel;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget_1;           // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_UIShaker_Translate;                       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_UIShaker_Translate_1;                     // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_UIShaker_Translate_2;                     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_UIShaker_Translate_3;                     // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_UIShaker_Translate_4;                     // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_UIShaker_Translate_5;                     // 0x0184(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_6;              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_2;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01A4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x01E0(0x0028)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InMaxLevelText;                       // 0x0210(0x0018)(ConstParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget;             // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GlobalDictionaryGetBool_OutValue;         // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GlobalDictionaryGetBool_ReturnValue;      // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow) == 0x000008, "Wrong alignment on BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow");
static_assert(sizeof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow) == 0x000240, "Wrong size on BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, EntryPoint) == 0x000000, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, Temp_bool_Variable) == 0x000004, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, Temp_bool_Variable_1) == 0x000005, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, Temp_float_Variable) == 0x000008, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, Temp_float_Variable_1) == 0x00000C, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, Temp_bool_Variable_2) == 0x000010, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, Temp_byte_Variable) == 0x000011, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, Temp_byte_Variable_1) == 0x000012, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Event_AnimDuration_1) == 0x000014, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x000018, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Event_AnimDuration) == 0x00001C, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000028, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_PlayAnimation_ReturnValue_1) == 0x000030, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_IntToText_ReturnValue) == 0x000038, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_IntToText_ReturnValue_1) == 0x000050, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Event_InDefaultLevelDiff) == 0x000068, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Event_InDefaultLevelDiff' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_MakeStruct_SlateColor) == 0x000070, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_MakeStruct_SlateColor_1) == 0x0000A0, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Select_Default) == 0x0000C8, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000F0, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_PlayAnimation_ReturnValue_3) == 0x0000F8, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_PlayAnimation_ReturnValue_4) == 0x000100, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Event_InteractButtonUserWidget_3) == 0x000108, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Event_InteractButtonUserWidget_3' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Event_InteractButtonUserWidget_2) == 0x000110, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Event_InteractButtonUserWidget_2' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Event_bMinTimeCancel) == 0x000118, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Event_bMinTimeCancel' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Event_InteractButtonUserWidget_1) == 0x000120, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Event_InteractButtonUserWidget_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_PlayAnimation_ReturnValue_5) == 0x000128, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000130, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_GetEndTime_ReturnValue) == 0x000134, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000138, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00013C, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_UIShaker_Translate) == 0x000140, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_UIShaker_Translate' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_UIShaker_Translate_1) == 0x000148, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_UIShaker_Translate_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_UIShaker_Translate_2) == 0x000150, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_UIShaker_Translate_2' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_GetEndTime_ReturnValue_1) == 0x000158, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x00015C, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000160, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000164, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000168, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00016C, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_FClamp_ReturnValue) == 0x000170, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_UIShaker_Translate_3) == 0x000174, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_UIShaker_Translate_3' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_UIShaker_Translate_4) == 0x00017C, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_UIShaker_Translate_4' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_UIShaker_Translate_5) == 0x000184, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_UIShaker_Translate_5' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_PlayAnimation_ReturnValue_6) == 0x000190, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_PlayAnimation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_IsAnimationPlaying_ReturnValue_2) == 0x000198, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_IsAnimationPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00019C, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001A0, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Event_MyGeometry) == 0x0001A4, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Event_InDeltaTime) == 0x0001DC, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_MakeStruct_SlateColor_2) == 0x0001E0, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_Subtract_IntInt_ReturnValue) == 0x000208, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00020C, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Event_InMaxLevelText) == 0x000210, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Event_InMaxLevelText' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_TextIsEmpty_ReturnValue) == 0x000228, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Event_InteractButtonUserWidget) == 0x000230, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Event_InteractButtonUserWidget' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Select_Default_1) == 0x000238, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_GlobalDictionaryGetBool_OutValue) == 0x00023C, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_GlobalDictionaryGetBool_OutValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, CallFunc_GlobalDictionaryGetBool_ReturnValue) == 0x00023D, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::CallFunc_GlobalDictionaryGetBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow, K2Node_Select_Default_2) == 0x00023E, "Member 'BP_LevelUpWindow_C_ExecuteUbergraph_BP_LevelUpWindow::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnErrorHiglight
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelUpWindow_C_OnErrorHiglight final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelUpWindow_C_OnErrorHiglight) == 0x000008, "Wrong alignment on BP_LevelUpWindow_C_OnErrorHiglight");
static_assert(sizeof(BP_LevelUpWindow_C_OnErrorHiglight) == 0x000008, "Wrong size on BP_LevelUpWindow_C_OnErrorHiglight");
static_assert(offsetof(BP_LevelUpWindow_C_OnErrorHiglight, InteractButtonUserWidget) == 0x000000, "Member 'BP_LevelUpWindow_C_OnErrorHiglight::InteractButtonUserWidget' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnSetMaxLevelText
// 0x0018 (0x0018 - 0x0000)
struct BP_LevelUpWindow_C_OnSetMaxLevelText final
{
public:
	class FText                                   InMaxLevelText;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_LevelUpWindow_C_OnSetMaxLevelText) == 0x000008, "Wrong alignment on BP_LevelUpWindow_C_OnSetMaxLevelText");
static_assert(sizeof(BP_LevelUpWindow_C_OnSetMaxLevelText) == 0x000018, "Wrong size on BP_LevelUpWindow_C_OnSetMaxLevelText");
static_assert(offsetof(BP_LevelUpWindow_C_OnSetMaxLevelText, InMaxLevelText) == 0x000000, "Member 'BP_LevelUpWindow_C_OnSetMaxLevelText::InMaxLevelText' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_LevelUpWindow_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelUpWindow_C_Tick) == 0x000004, "Wrong alignment on BP_LevelUpWindow_C_Tick");
static_assert(sizeof(BP_LevelUpWindow_C_Tick) == 0x00003C, "Wrong size on BP_LevelUpWindow_C_Tick");
static_assert(offsetof(BP_LevelUpWindow_C_Tick, MyGeometry) == 0x000000, "Member 'BP_LevelUpWindow_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_LevelUpWindow_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnHoldFinished
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelUpWindow_C_OnHoldFinished final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelUpWindow_C_OnHoldFinished) == 0x000008, "Wrong alignment on BP_LevelUpWindow_C_OnHoldFinished");
static_assert(sizeof(BP_LevelUpWindow_C_OnHoldFinished) == 0x000008, "Wrong size on BP_LevelUpWindow_C_OnHoldFinished");
static_assert(offsetof(BP_LevelUpWindow_C_OnHoldFinished, InteractButtonUserWidget) == 0x000000, "Member 'BP_LevelUpWindow_C_OnHoldFinished::InteractButtonUserWidget' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnHoldCanceled
// 0x0010 (0x0010 - 0x0000)
struct BP_LevelUpWindow_C_OnHoldCanceled final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMinTimeCancel;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelUpWindow_C_OnHoldCanceled) == 0x000008, "Wrong alignment on BP_LevelUpWindow_C_OnHoldCanceled");
static_assert(sizeof(BP_LevelUpWindow_C_OnHoldCanceled) == 0x000010, "Wrong size on BP_LevelUpWindow_C_OnHoldCanceled");
static_assert(offsetof(BP_LevelUpWindow_C_OnHoldCanceled, InteractButtonUserWidget) == 0x000000, "Member 'BP_LevelUpWindow_C_OnHoldCanceled::InteractButtonUserWidget' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_OnHoldCanceled, bMinTimeCancel) == 0x000008, "Member 'BP_LevelUpWindow_C_OnHoldCanceled::bMinTimeCancel' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnHoldStarted
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelUpWindow_C_OnHoldStarted final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelUpWindow_C_OnHoldStarted) == 0x000008, "Wrong alignment on BP_LevelUpWindow_C_OnHoldStarted");
static_assert(sizeof(BP_LevelUpWindow_C_OnHoldStarted) == 0x000008, "Wrong size on BP_LevelUpWindow_C_OnHoldStarted");
static_assert(offsetof(BP_LevelUpWindow_C_OnHoldStarted, InteractButtonUserWidget) == 0x000000, "Member 'BP_LevelUpWindow_C_OnHoldStarted::InteractButtonUserWidget' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnSetDefaultLevelDiff
// 0x0004 (0x0004 - 0x0000)
struct BP_LevelUpWindow_C_OnSetDefaultLevelDiff final
{
public:
	int32                                         InDefaultLevelDiff;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelUpWindow_C_OnSetDefaultLevelDiff) == 0x000004, "Wrong alignment on BP_LevelUpWindow_C_OnSetDefaultLevelDiff");
static_assert(sizeof(BP_LevelUpWindow_C_OnSetDefaultLevelDiff) == 0x000004, "Wrong size on BP_LevelUpWindow_C_OnSetDefaultLevelDiff");
static_assert(offsetof(BP_LevelUpWindow_C_OnSetDefaultLevelDiff, InDefaultLevelDiff) == 0x000000, "Member 'BP_LevelUpWindow_C_OnSetDefaultLevelDiff::InDefaultLevelDiff' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_LevelUpWindow_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelUpWindow_C_OnHide) == 0x000004, "Wrong alignment on BP_LevelUpWindow_C_OnHide");
static_assert(sizeof(BP_LevelUpWindow_C_OnHide) == 0x000004, "Wrong size on BP_LevelUpWindow_C_OnHide");
static_assert(offsetof(BP_LevelUpWindow_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_LevelUpWindow_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_LevelUpWindow_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelUpWindow_C_OnShow) == 0x000004, "Wrong alignment on BP_LevelUpWindow_C_OnShow");
static_assert(sizeof(BP_LevelUpWindow_C_OnShow) == 0x000004, "Wrong size on BP_LevelUpWindow_C_OnShow");
static_assert(offsetof(BP_LevelUpWindow_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_LevelUpWindow_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BtnHotkeyBClicked
// 0x0002 (0x0002 - 0x0000)
struct BP_LevelUpWindow_C_BtnHotkeyBClicked final
{
public:
	bool                                          OpenPauseMenu;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelUpWindow_C_BtnHotkeyBClicked) == 0x000001, "Wrong alignment on BP_LevelUpWindow_C_BtnHotkeyBClicked");
static_assert(sizeof(BP_LevelUpWindow_C_BtnHotkeyBClicked) == 0x000002, "Wrong size on BP_LevelUpWindow_C_BtnHotkeyBClicked");
static_assert(offsetof(BP_LevelUpWindow_C_BtnHotkeyBClicked, OpenPauseMenu) == 0x000000, "Member 'BP_LevelUpWindow_C_BtnHotkeyBClicked::OpenPauseMenu' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_BtnHotkeyBClicked, CallFunc_IsActive_ReturnValue) == 0x000001, "Member 'BP_LevelUpWindow_C_BtnHotkeyBClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BtnHotkeyDPad_UpClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_LevelUpWindow_C_BtnHotkeyDPad_UpClicked final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelUpWindow_C_BtnHotkeyDPad_UpClicked) == 0x000001, "Wrong alignment on BP_LevelUpWindow_C_BtnHotkeyDPad_UpClicked");
static_assert(sizeof(BP_LevelUpWindow_C_BtnHotkeyDPad_UpClicked) == 0x000001, "Wrong size on BP_LevelUpWindow_C_BtnHotkeyDPad_UpClicked");
static_assert(offsetof(BP_LevelUpWindow_C_BtnHotkeyDPad_UpClicked, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'BP_LevelUpWindow_C_BtnHotkeyDPad_UpClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.BtnHotkeyDPad_DownClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_LevelUpWindow_C_BtnHotkeyDPad_DownClicked final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelUpWindow_C_BtnHotkeyDPad_DownClicked) == 0x000001, "Wrong alignment on BP_LevelUpWindow_C_BtnHotkeyDPad_DownClicked");
static_assert(sizeof(BP_LevelUpWindow_C_BtnHotkeyDPad_DownClicked) == 0x000001, "Wrong size on BP_LevelUpWindow_C_BtnHotkeyDPad_DownClicked");
static_assert(offsetof(BP_LevelUpWindow_C_BtnHotkeyDPad_DownClicked, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'BP_LevelUpWindow_C_BtnHotkeyDPad_DownClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.SetEssenceTexts
// 0x0060 (0x0060 - 0x0000)
struct BP_LevelUpWindow_C_SetEssenceTexts final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0008(0x0018)()
	class FText                                   CallFunc_IntToText_ReturnValue_1;                  // 0x0020(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue_2;                  // 0x0040(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelUpWindow_C_SetEssenceTexts) == 0x000008, "Wrong alignment on BP_LevelUpWindow_C_SetEssenceTexts");
static_assert(sizeof(BP_LevelUpWindow_C_SetEssenceTexts) == 0x000060, "Wrong size on BP_LevelUpWindow_C_SetEssenceTexts");
static_assert(offsetof(BP_LevelUpWindow_C_SetEssenceTexts, Temp_bool_Variable) == 0x000000, "Member 'BP_LevelUpWindow_C_SetEssenceTexts::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_SetEssenceTexts, Temp_byte_Variable) == 0x000001, "Member 'BP_LevelUpWindow_C_SetEssenceTexts::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_SetEssenceTexts, Temp_byte_Variable_1) == 0x000002, "Member 'BP_LevelUpWindow_C_SetEssenceTexts::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_SetEssenceTexts, CallFunc_IntToText_ReturnValue) == 0x000008, "Member 'BP_LevelUpWindow_C_SetEssenceTexts::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_SetEssenceTexts, CallFunc_IntToText_ReturnValue_1) == 0x000020, "Member 'BP_LevelUpWindow_C_SetEssenceTexts::CallFunc_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_SetEssenceTexts, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'BP_LevelUpWindow_C_SetEssenceTexts::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_SetEssenceTexts, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BP_LevelUpWindow_C_SetEssenceTexts::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_SetEssenceTexts, CallFunc_IntToText_ReturnValue_2) == 0x000040, "Member 'BP_LevelUpWindow_C_SetEssenceTexts::CallFunc_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_SetEssenceTexts, K2Node_Select_Default) == 0x000058, "Member 'BP_LevelUpWindow_C_SetEssenceTexts::K2Node_Select_Default' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.Init
// 0x0048 (0x0048 - 0x0000)
struct BP_LevelUpWindow_C_Init final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0010(0x0018)()
	class FText                                   CallFunc_IntToText_ReturnValue_1;                  // 0x0028(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelUpWindow_C_Init) == 0x000008, "Wrong alignment on BP_LevelUpWindow_C_Init");
static_assert(sizeof(BP_LevelUpWindow_C_Init) == 0x000048, "Wrong size on BP_LevelUpWindow_C_Init");
static_assert(offsetof(BP_LevelUpWindow_C_Init, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_LevelUpWindow_C_Init::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_Init, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LevelUpWindow_C_Init::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_Init, CallFunc_IntToText_ReturnValue) == 0x000010, "Member 'BP_LevelUpWindow_C_Init::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_Init, CallFunc_IntToText_ReturnValue_1) == 0x000028, "Member 'BP_LevelUpWindow_C_Init::CallFunc_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_Init, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_LevelUpWindow_C_Init::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.ToggleNextLevelAvailable
// 0x0078 (0x0078 - 0x0000)
struct BP_LevelUpWindow_C_ToggleNextLevelAvailable final
{
public:
	bool                                          InAvailable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0048(0x0028)()
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelUpWindow_C_ToggleNextLevelAvailable) == 0x000008, "Wrong alignment on BP_LevelUpWindow_C_ToggleNextLevelAvailable");
static_assert(sizeof(BP_LevelUpWindow_C_ToggleNextLevelAvailable) == 0x000078, "Wrong size on BP_LevelUpWindow_C_ToggleNextLevelAvailable");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, InAvailable) == 0x000000, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::InAvailable' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_bool_Variable) == 0x000001, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_byte_Variable) == 0x000002, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_byte_Variable_1) == 0x000003, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_bool_Variable_1) == 0x000004, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_byte_Variable_2) == 0x000005, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_byte_Variable_3) == 0x000006, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_bool_Variable_2) == 0x000007, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_byte_Variable_4) == 0x000008, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_byte_Variable_5) == 0x000009, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_bool_Variable_3) == 0x00000A, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_struct_Variable) == 0x00000C, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_struct_Variable_1) == 0x00001C, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_bool_Variable_4) == 0x00002C, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_byte_Variable_6) == 0x00002D, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_byte_Variable_7) == 0x00002E, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_bool_Variable_5) == 0x00002F, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_byte_Variable_8) == 0x000030, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, Temp_byte_Variable_9) == 0x000031, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, K2Node_Select_Default) == 0x000032, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, K2Node_Select_Default_1) == 0x000033, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, K2Node_Select_Default_2) == 0x000034, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, K2Node_Select_Default_3) == 0x000038, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, K2Node_MakeStruct_SlateColor) == 0x000048, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, K2Node_Select_Default_4) == 0x000070, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_ToggleNextLevelAvailable, K2Node_Select_Default_5) == 0x000071, "Member 'BP_LevelUpWindow_C_ToggleNextLevelAvailable::K2Node_Select_Default_5' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.UIShaker
// 0x0080 (0x0080 - 0x0000)
struct BP_LevelUpWindow_C_UIShaker final
{
public:
	float                                         ShakeStrength;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeMultiplier;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XFreqSmall;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XAmpSmall;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XFreqLarge;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XAmpLarge;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YFreqSmall;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YAmpSmall;                                         // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YFreqLarge;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YAmpLarge;                                         // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Translate;                                         // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Cos_ReturnValue;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Cos_ReturnValue_1;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue_1;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelUpWindow_C_UIShaker) == 0x000004, "Wrong alignment on BP_LevelUpWindow_C_UIShaker");
static_assert(sizeof(BP_LevelUpWindow_C_UIShaker) == 0x000080, "Wrong size on BP_LevelUpWindow_C_UIShaker");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, ShakeStrength) == 0x000000, "Member 'BP_LevelUpWindow_C_UIShaker::ShakeStrength' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, ShakeMultiplier) == 0x000004, "Member 'BP_LevelUpWindow_C_UIShaker::ShakeMultiplier' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, XFreqSmall) == 0x000008, "Member 'BP_LevelUpWindow_C_UIShaker::XFreqSmall' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, XAmpSmall) == 0x00000C, "Member 'BP_LevelUpWindow_C_UIShaker::XAmpSmall' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, XFreqLarge) == 0x000010, "Member 'BP_LevelUpWindow_C_UIShaker::XFreqLarge' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, XAmpLarge) == 0x000014, "Member 'BP_LevelUpWindow_C_UIShaker::XAmpLarge' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, YFreqSmall) == 0x000018, "Member 'BP_LevelUpWindow_C_UIShaker::YFreqSmall' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, YAmpSmall) == 0x00001C, "Member 'BP_LevelUpWindow_C_UIShaker::YAmpSmall' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, YFreqLarge) == 0x000020, "Member 'BP_LevelUpWindow_C_UIShaker::YFreqLarge' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, YAmpLarge) == 0x000024, "Member 'BP_LevelUpWindow_C_UIShaker::YAmpLarge' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, Translate) == 0x000028, "Member 'BP_LevelUpWindow_C_UIShaker::Translate' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_GetTimeSeconds_ReturnValue) == 0x000030, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Cos_ReturnValue) == 0x000040, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Sin_ReturnValue) == 0x000044, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000048, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00004C, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000050, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000054, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Cos_ReturnValue_1) == 0x000058, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Cos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Sin_ReturnValue_1) == 0x00005C, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Sin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000060, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000064, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000068, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x00006C, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelUpWindow_C_UIShaker, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000078, "Member 'BP_LevelUpWindow_C_UIShaker::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function BP_LevelUpWindow.BP_LevelUpWindow_C.ErrorHighlight
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelUpWindow_C_ErrorHighlight final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelUpWindow_C_ErrorHighlight) == 0x000008, "Wrong alignment on BP_LevelUpWindow_C_ErrorHighlight");
static_assert(sizeof(BP_LevelUpWindow_C_ErrorHighlight) == 0x000008, "Wrong size on BP_LevelUpWindow_C_ErrorHighlight");
static_assert(offsetof(BP_LevelUpWindow_C_ErrorHighlight, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_LevelUpWindow_C_ErrorHighlight::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

