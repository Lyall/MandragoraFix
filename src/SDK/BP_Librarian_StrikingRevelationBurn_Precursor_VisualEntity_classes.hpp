#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity.BP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C
// 0x0038 (0x0388 - 0x0350)
class ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C final : public AVisualEntity
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Niagara;                                           // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitBox*                                Beam_Hit_Box_0;                                    // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVar_0;                                          // 0x0368(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewVar_1;                                          // 0x0374(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class ABP_LibrarianBoss_C*                    Lib;                                               // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity(int32 EntryPoint);
	void VisualEntityConstructionFinished();
	void OnKill();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C">();
	}
	static class ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C>();
	}
};
static_assert(alignof(ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C) == 0x000008, "Wrong alignment on ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C");
static_assert(sizeof(ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C) == 0x000388, "Wrong size on ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C");
static_assert(offsetof(ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C, UberGraphFrame) == 0x000350, "Member 'ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C, Niagara) == 0x000358, "Member 'ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C, Beam_Hit_Box_0) == 0x000360, "Member 'ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C::Beam_Hit_Box_0' has a wrong offset!");
static_assert(offsetof(ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C, NewVar_0) == 0x000368, "Member 'ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C, NewVar_1) == 0x000374, "Member 'ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C::NewVar_1' has a wrong offset!");
static_assert(offsetof(ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C, Lib) == 0x000380, "Member 'ABP_Librarian_StrikingRevelationBurn_Precursor_VisualEntity_C::Lib' has a wrong offset!");

}

