#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightningStormStrike_VisualEntity

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LightningStormStrike_VisualEntity.BP_LightningStormStrike_VisualEntity_C.ExecuteUbergraph_BP_LightningStormStrike_VisualEntity
// 0x0028 (0x0028 - 0x0000)
struct BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInCone_ReturnValue;            // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity) == 0x000004, "Wrong alignment on BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity");
static_assert(sizeof(BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity) == 0x000028, "Wrong size on BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity, EntryPoint) == 0x000000, "Member 'BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity, CallFunc_RandomPointInCone_ReturnValue) == 0x000010, "Member 'BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity::CallFunc_RandomPointInCone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00001C, "Member 'BP_LightningStormStrike_VisualEntity_C_ExecuteUbergraph_BP_LightningStormStrike_VisualEntity::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");

// Function BP_LightningStormStrike_VisualEntity.BP_LightningStormStrike_VisualEntity_C.RandomPointInCone
// 0x006C (0x006C - 0x0000)
struct BP_LightningStormStrike_VisualEntity_C_RandomPointInCone final
{
public:
	struct FVector2D                              DistanceMinMax;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Origin;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone) == 0x000004, "Wrong alignment on BP_LightningStormStrike_VisualEntity_C_RandomPointInCone");
static_assert(sizeof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone) == 0x00006C, "Wrong size on BP_LightningStormStrike_VisualEntity_C_RandomPointInCone");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, DistanceMinMax) == 0x000000, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::DistanceMinMax' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, Angle) == 0x000008, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::Angle' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, Origin) == 0x00000C, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::Origin' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, ReturnValue) == 0x000018, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, CallFunc_BreakVector2D_X) == 0x000024, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, CallFunc_RandomFloatInRange_ReturnValue) == 0x000030, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000038, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, CallFunc_MakeRotator_ReturnValue) == 0x00003C, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000048, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000054, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightningStormStrike_VisualEntity_C_RandomPointInCone, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'BP_LightningStormStrike_VisualEntity_C_RandomPointInCone::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

}

