#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightningStorm_Actor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LightningStorm_Actor.BP_LightningStorm_Actor_C
// 0x0028 (0x0800 - 0x07D8)
class ABP_LightningStorm_Actor_C final : public AActorBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitBox*                                StormHitBox;                                       // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AVisualEntity*                          LivingVE;                                          // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LightningStorm_Actor(int32 EntryPoint);
	void ReceiveDestroyed();
	void BPPostBeginPlay();
	void OnDamage(class AActor* Target, class USceneComponent* DamageCenterComponent, const struct FVector& StartPoint, const struct FVector& EndPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LightningStorm_Actor_C">();
	}
	static class ABP_LightningStorm_Actor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LightningStorm_Actor_C>();
	}
};
static_assert(alignof(ABP_LightningStorm_Actor_C) == 0x000008, "Wrong alignment on ABP_LightningStorm_Actor_C");
static_assert(sizeof(ABP_LightningStorm_Actor_C) == 0x000800, "Wrong size on ABP_LightningStorm_Actor_C");
static_assert(offsetof(ABP_LightningStorm_Actor_C, UberGraphFrame) == 0x0007D8, "Member 'ABP_LightningStorm_Actor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LightningStorm_Actor_C, Ak) == 0x0007E0, "Member 'ABP_LightningStorm_Actor_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_LightningStorm_Actor_C, StormHitBox) == 0x0007E8, "Member 'ABP_LightningStorm_Actor_C::StormHitBox' has a wrong offset!");
static_assert(offsetof(ABP_LightningStorm_Actor_C, DefaultSceneRoot) == 0x0007F0, "Member 'ABP_LightningStorm_Actor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LightningStorm_Actor_C, LivingVE) == 0x0007F8, "Member 'ABP_LightningStorm_Actor_C::LivingVE' has a wrong offset!");

}

