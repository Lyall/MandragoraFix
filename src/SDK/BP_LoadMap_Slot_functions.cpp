#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LoadMap_Slot

#include "Basic.hpp"

#include "BP_LoadMap_Slot_classes.hpp"
#include "BP_LoadMap_Slot_parameters.hpp"


namespace SDK
{

// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LoadMap_Slot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadMap_Slot_C", "PreConstruct");

	Params::BP_LoadMap_Slot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadMap_Slot_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadMap_Slot_C", "Tick");

	Params::BP_LoadMap_Slot_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_LoadMap_Slot_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadMap_Slot_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_LoadMap_Slot_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadMap_Slot_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_LoadMap_Slot_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadMap_Slot_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_LoadMap_Slot_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadMap_Slot_C", "OnMouseEnter");

	Params::BP_LoadMap_Slot_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_LoadMap_Slot_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadMap_Slot_C", "OnMouseLeave");

	Params::BP_LoadMap_Slot_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_LoadMap_Slot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadMap_Slot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.OnFocused
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LoadMap_Slot_C::OnFocused(bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadMap_Slot_C", "OnFocused");

	Params::BP_LoadMap_Slot_C_OnFocused Parms{};

	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.OnUnfocused
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LoadMap_Slot_C::OnUnfocused(bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadMap_Slot_C", "OnUnfocused");

	Params::BP_LoadMap_Slot_C_OnUnfocused Parms{};

	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.OnSetSlot
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InSlotName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadMap_Slot_C::OnSetSlot(class FName InSlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadMap_Slot_C", "OnSetSlot");

	Params::BP_LoadMap_Slot_C_OnSetSlot Parms{};

	Parms.InSlotName = InSlotName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.ExecuteUbergraph_BP_LoadMap_Slot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LoadMap_Slot_C::ExecuteUbergraph_BP_LoadMap_Slot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LoadMap_Slot_C", "ExecuteUbergraph_BP_LoadMap_Slot");

	Params::BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

