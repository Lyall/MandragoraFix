#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LoadMap_Slot

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_LoadMap_Slot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LoadMap_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on BP_LoadMap_Slot_C_PreConstruct");
static_assert(sizeof(BP_LoadMap_Slot_C_PreConstruct) == 0x000001, "Wrong size on BP_LoadMap_Slot_C_PreConstruct");
static_assert(offsetof(BP_LoadMap_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_LoadMap_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_LoadMap_Slot_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadMap_Slot_C_Tick) == 0x000004, "Wrong alignment on BP_LoadMap_Slot_C_Tick");
static_assert(sizeof(BP_LoadMap_Slot_C_Tick) == 0x00003C, "Wrong size on BP_LoadMap_Slot_C_Tick");
static_assert(offsetof(BP_LoadMap_Slot_C_Tick, MyGeometry) == 0x000000, "Member 'BP_LoadMap_Slot_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_LoadMap_Slot_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LoadMap_Slot_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_LoadMap_Slot_C_OnMouseEnter) == 0x000008, "Wrong alignment on BP_LoadMap_Slot_C_OnMouseEnter");
static_assert(sizeof(BP_LoadMap_Slot_C_OnMouseEnter) == 0x0000A8, "Wrong size on BP_LoadMap_Slot_C_OnMouseEnter");
static_assert(offsetof(BP_LoadMap_Slot_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'BP_LoadMap_Slot_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'BP_LoadMap_Slot_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct BP_LoadMap_Slot_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_LoadMap_Slot_C_OnMouseLeave) == 0x000008, "Wrong alignment on BP_LoadMap_Slot_C_OnMouseLeave");
static_assert(sizeof(BP_LoadMap_Slot_C_OnMouseLeave) == 0x000070, "Wrong size on BP_LoadMap_Slot_C_OnMouseLeave");
static_assert(offsetof(BP_LoadMap_Slot_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'BP_LoadMap_Slot_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.OnFocused
// 0x0001 (0x0001 - 0x0000)
struct BP_LoadMap_Slot_C_OnFocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LoadMap_Slot_C_OnFocused) == 0x000001, "Wrong alignment on BP_LoadMap_Slot_C_OnFocused");
static_assert(sizeof(BP_LoadMap_Slot_C_OnFocused) == 0x000001, "Wrong size on BP_LoadMap_Slot_C_OnFocused");
static_assert(offsetof(BP_LoadMap_Slot_C_OnFocused, bAnimate) == 0x000000, "Member 'BP_LoadMap_Slot_C_OnFocused::bAnimate' has a wrong offset!");

// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.OnUnfocused
// 0x0001 (0x0001 - 0x0000)
struct BP_LoadMap_Slot_C_OnUnfocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LoadMap_Slot_C_OnUnfocused) == 0x000001, "Wrong alignment on BP_LoadMap_Slot_C_OnUnfocused");
static_assert(sizeof(BP_LoadMap_Slot_C_OnUnfocused) == 0x000001, "Wrong size on BP_LoadMap_Slot_C_OnUnfocused");
static_assert(offsetof(BP_LoadMap_Slot_C_OnUnfocused, bAnimate) == 0x000000, "Member 'BP_LoadMap_Slot_C_OnUnfocused::bAnimate' has a wrong offset!");

// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.OnSetSlot
// 0x0008 (0x0008 - 0x0000)
struct BP_LoadMap_Slot_C_OnSetSlot final
{
public:
	class FName                                   InSlotName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadMap_Slot_C_OnSetSlot) == 0x000004, "Wrong alignment on BP_LoadMap_Slot_C_OnSetSlot");
static_assert(sizeof(BP_LoadMap_Slot_C_OnSetSlot) == 0x000008, "Wrong size on BP_LoadMap_Slot_C_OnSetSlot");
static_assert(offsetof(BP_LoadMap_Slot_C_OnSetSlot, InSlotName) == 0x000000, "Member 'BP_LoadMap_Slot_C_OnSetSlot::InSlotName' has a wrong offset!");

// Function BP_LoadMap_Slot.BP_LoadMap_Slot_C.ExecuteUbergraph_BP_LoadMap_Slot
// 0x01D8 (0x01D8 - 0x0000)
struct BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry_1;                         // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0050(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0088(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00F8(0x0070)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlayingForward_ReturnValue;    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate_1;                           // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InSlotName;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x01A8(0x0018)()
	class UManUserWidgetBase*                     CallFunc_GetTopMostManUserWidget_ReturnValue;      // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_LoadMap_C*                          K2Node_DynamicCast_AsBP_Load_Map;                  // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot) == 0x000008, "Wrong alignment on BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot");
static_assert(sizeof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot) == 0x0001D8, "Wrong size on BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, EntryPoint) == 0x000000, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, Temp_bool_Variable) == 0x000004, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, Temp_float_Variable) == 0x000008, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, K2Node_Event_MyGeometry_1) == 0x000010, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::K2Node_Event_MyGeometry_1' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, K2Node_Event_InDeltaTime) == 0x000048, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, CallFunc_GetEndTime_ReturnValue) == 0x00004C, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, K2Node_Event_MyGeometry) == 0x000050, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, K2Node_Event_MouseEvent_1) == 0x000088, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, K2Node_Event_MouseEvent) == 0x0000F8, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, CallFunc_PlayAnimation_ReturnValue) == 0x000168, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, CallFunc_PlayAnimation_ReturnValue_1) == 0x000170, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000178, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, CallFunc_PlayAnimation_ReturnValue_2) == 0x000180, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, CallFunc_IsAnimationPlayingForward_ReturnValue) == 0x000188, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::CallFunc_IsAnimationPlayingForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000189, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, K2Node_Event_bAnimate_1) == 0x00018A, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::K2Node_Event_bAnimate_1' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, CallFunc_BooleanAND_ReturnValue) == 0x00018B, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, K2Node_Event_bAnimate) == 0x00018C, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, K2Node_Select_Default) == 0x000190, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, CallFunc_PlayAnimation_ReturnValue_3) == 0x000198, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, K2Node_Event_InSlotName) == 0x0001A0, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::K2Node_Event_InSlotName' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, CallFunc_Conv_NameToText_ReturnValue) == 0x0001A8, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, CallFunc_GetTopMostManUserWidget_ReturnValue) == 0x0001C0, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::CallFunc_GetTopMostManUserWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, K2Node_DynamicCast_AsBP_Load_Map) == 0x0001C8, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::K2Node_DynamicCast_AsBP_Load_Map' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'BP_LoadMap_Slot_C_ExecuteUbergraph_BP_LoadMap_Slot::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

