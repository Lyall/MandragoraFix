#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LoadMap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_LoadMap.BP_LoadMap_C
// 0x00B0 (0x05B0 - 0x0500)
class UBP_LoadMap_C final : public ULoadMapUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0500(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOutAnim;                                       // 0x0508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_LoadMap_Slot_C*                     BP_LoadMap_Slot;                                   // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_LoadMap_Slot_C*                     BP_LoadMap_Slot_1;                                 // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_LoadMap_Slot_C*                     BP_LoadMap_Slot_2;                                 // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_LoadMap_Slot_C*                     BP_LoadMap_Slot_3;                                 // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_LoadMap_Slot_C*                     BP_LoadMap_Slot_4;                                 // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_LoadMap_Slot_C*                     BP_LoadMap_Slot_5;                                 // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_LoadMap_Slot_C*                     BP_LoadMap_Slot_6;                                 // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_LoadMap_Slot_C*                     BP_LoadMap_Slot_7;                                 // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_LoadMap_Slot_C*                     BP_LoadMap_Slot_8;                                 // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_LoadMap_Slot_C*                     BP_LoadMap_Slot_9;                                 // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_LoadMap_Slot_C*                     BP_LoadMap_Slot_10;                                // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyA;                                        // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyB;                                        // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Buttons;                                           // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas;                                            // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManWrapBox*                            ItemList;                                          // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      Title;                                             // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Window;                                            // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   LevelName;                                         // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BtnHotkeyAClicked();
	void BtnHotkeyBClicked();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnShow(float AnimDuration);
	void OnHide(float AnimDuration);
	void BndEvt__BtnHotkeyB_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void OnGamepadBEvent();
	void BndEvt__BtnHotkeyA_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature();
	void OnGamepadAEvent();
	void ExecuteUbergraph_BP_LoadMap(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LoadMap_C">();
	}
	static class UBP_LoadMap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_LoadMap_C>();
	}
};
static_assert(alignof(UBP_LoadMap_C) == 0x000008, "Wrong alignment on UBP_LoadMap_C");
static_assert(sizeof(UBP_LoadMap_C) == 0x0005B0, "Wrong size on UBP_LoadMap_C");
static_assert(offsetof(UBP_LoadMap_C, UberGraphFrame) == 0x000500, "Member 'UBP_LoadMap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, FadeOutAnim) == 0x000508, "Member 'UBP_LoadMap_C::FadeOutAnim' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, FadeInAnim) == 0x000510, "Member 'UBP_LoadMap_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BP_LoadMap_Slot) == 0x000518, "Member 'UBP_LoadMap_C::BP_LoadMap_Slot' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BP_LoadMap_Slot_1) == 0x000520, "Member 'UBP_LoadMap_C::BP_LoadMap_Slot_1' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BP_LoadMap_Slot_2) == 0x000528, "Member 'UBP_LoadMap_C::BP_LoadMap_Slot_2' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BP_LoadMap_Slot_3) == 0x000530, "Member 'UBP_LoadMap_C::BP_LoadMap_Slot_3' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BP_LoadMap_Slot_4) == 0x000538, "Member 'UBP_LoadMap_C::BP_LoadMap_Slot_4' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BP_LoadMap_Slot_5) == 0x000540, "Member 'UBP_LoadMap_C::BP_LoadMap_Slot_5' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BP_LoadMap_Slot_6) == 0x000548, "Member 'UBP_LoadMap_C::BP_LoadMap_Slot_6' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BP_LoadMap_Slot_7) == 0x000550, "Member 'UBP_LoadMap_C::BP_LoadMap_Slot_7' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BP_LoadMap_Slot_8) == 0x000558, "Member 'UBP_LoadMap_C::BP_LoadMap_Slot_8' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BP_LoadMap_Slot_9) == 0x000560, "Member 'UBP_LoadMap_C::BP_LoadMap_Slot_9' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BP_LoadMap_Slot_10) == 0x000568, "Member 'UBP_LoadMap_C::BP_LoadMap_Slot_10' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BtnHotkeyA) == 0x000570, "Member 'UBP_LoadMap_C::BtnHotkeyA' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, BtnHotkeyB) == 0x000578, "Member 'UBP_LoadMap_C::BtnHotkeyB' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, Buttons) == 0x000580, "Member 'UBP_LoadMap_C::Buttons' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, Canvas) == 0x000588, "Member 'UBP_LoadMap_C::Canvas' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, ItemList) == 0x000590, "Member 'UBP_LoadMap_C::ItemList' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, Title) == 0x000598, "Member 'UBP_LoadMap_C::Title' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, Window) == 0x0005A0, "Member 'UBP_LoadMap_C::Window' has a wrong offset!");
static_assert(offsetof(UBP_LoadMap_C, LevelName) == 0x0005A8, "Member 'UBP_LoadMap_C::LevelName' has a wrong offset!");

}

