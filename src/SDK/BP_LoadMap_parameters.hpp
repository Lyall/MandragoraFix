#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LoadMap

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_LoadMap.BP_LoadMap_C.BtnHotkeyAClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_LoadMap_C_BtnHotkeyAClicked final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LoadMap_C_BtnHotkeyAClicked) == 0x000001, "Wrong alignment on BP_LoadMap_C_BtnHotkeyAClicked");
static_assert(sizeof(BP_LoadMap_C_BtnHotkeyAClicked) == 0x000001, "Wrong size on BP_LoadMap_C_BtnHotkeyAClicked");
static_assert(offsetof(BP_LoadMap_C_BtnHotkeyAClicked, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'BP_LoadMap_C_BtnHotkeyAClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_LoadMap.BP_LoadMap_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_LoadMap_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadMap_C_Tick) == 0x000004, "Wrong alignment on BP_LoadMap_C_Tick");
static_assert(sizeof(BP_LoadMap_C_Tick) == 0x00003C, "Wrong size on BP_LoadMap_C_Tick");
static_assert(offsetof(BP_LoadMap_C_Tick, MyGeometry) == 0x000000, "Member 'BP_LoadMap_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_LoadMap_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_LoadMap.BP_LoadMap_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_LoadMap_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadMap_C_OnShow) == 0x000004, "Wrong alignment on BP_LoadMap_C_OnShow");
static_assert(sizeof(BP_LoadMap_C_OnShow) == 0x000004, "Wrong size on BP_LoadMap_C_OnShow");
static_assert(offsetof(BP_LoadMap_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_LoadMap_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_LoadMap.BP_LoadMap_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_LoadMap_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadMap_C_OnHide) == 0x000004, "Wrong alignment on BP_LoadMap_C_OnHide");
static_assert(sizeof(BP_LoadMap_C_OnHide) == 0x000004, "Wrong size on BP_LoadMap_C_OnHide");
static_assert(offsetof(BP_LoadMap_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_LoadMap_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_LoadMap.BP_LoadMap_C.ExecuteUbergraph_BP_LoadMap
// 0x0060 (0x0060 - 0x0000)
struct BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap) == 0x000008, "Wrong alignment on BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap");
static_assert(sizeof(BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap) == 0x000060, "Wrong size on BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap");
static_assert(offsetof(BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap, EntryPoint) == 0x000000, "Member 'BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap, K2Node_Event_MyGeometry) == 0x000004, "Member 'BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap, K2Node_Event_AnimDuration_1) == 0x000040, "Member 'BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x000044, "Member 'BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap, K2Node_Event_AnimDuration) == 0x000050, "Member 'BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000054, "Member 'BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap, CallFunc_PlayAnimation_ReturnValue_1) == 0x000058, "Member 'BP_LoadMap_C_ExecuteUbergraph_BP_LoadMap::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

}

