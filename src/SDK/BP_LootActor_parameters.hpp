#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootActor

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LootActor.BP_LootActor_C.ExecuteUbergraph_BP_LootActor
// 0x0054 (0x0054 - 0x0000)
struct BP_LootActor_C_ExecuteUbergraph_BP_LootActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0014(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0028(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor) == 0x000004, "Wrong alignment on BP_LootActor_C_ExecuteUbergraph_BP_LootActor");
static_assert(sizeof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor) == 0x000054, "Wrong size on BP_LootActor_C_ExecuteUbergraph_BP_LootActor");
static_assert(offsetof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor, EntryPoint) == 0x000000, "Member 'BP_LootActor_C_ExecuteUbergraph_BP_LootActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor, Temp_delegate_Variable) == 0x000004, "Member 'BP_LootActor_C_ExecuteUbergraph_BP_LootActor::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor, Temp_delegate_Variable_1) == 0x000014, "Member 'BP_LootActor_C_ExecuteUbergraph_BP_LootActor::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor, Temp_bool_Has_Been_Initd_Variable) == 0x000024, "Member 'BP_LootActor_C_ExecuteUbergraph_BP_LootActor::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor, Temp_bool_IsClosed_Variable) == 0x000025, "Member 'BP_LootActor_C_ExecuteUbergraph_BP_LootActor::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor, Temp_delegate_Variable_2) == 0x000028, "Member 'BP_LootActor_C_ExecuteUbergraph_BP_LootActor::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor, CallFunc_PostAkEvent_ReturnValue) == 0x000038, "Member 'BP_LootActor_C_ExecuteUbergraph_BP_LootActor::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00003C, "Member 'BP_LootActor_C_ExecuteUbergraph_BP_LootActor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor, CallFunc_PostEventAtLocation_ReturnValue) == 0x000048, "Member 'BP_LootActor_C_ExecuteUbergraph_BP_LootActor::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor, CallFunc_PostAkEvent_ReturnValue_1) == 0x00004C, "Member 'BP_LootActor_C_ExecuteUbergraph_BP_LootActor::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LootActor_C_ExecuteUbergraph_BP_LootActor, CallFunc_PostAkEvent_ReturnValue_2) == 0x000050, "Member 'BP_LootActor_C_ExecuteUbergraph_BP_LootActor::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");

// Function BP_LootActor.BP_LootActor_C.ChooseLootActorVFX
// 0x0002 (0x0002 - 0x0000)
struct BP_LootActor_C_ChooseLootActorVFX final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LootActor_C_ChooseLootActorVFX) == 0x000001, "Wrong alignment on BP_LootActor_C_ChooseLootActorVFX");
static_assert(sizeof(BP_LootActor_C_ChooseLootActorVFX) == 0x000002, "Wrong size on BP_LootActor_C_ChooseLootActorVFX");
static_assert(offsetof(BP_LootActor_C_ChooseLootActorVFX, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_LootActor_C_ChooseLootActorVFX::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LootActor_C_ChooseLootActorVFX, K2Node_SwitchEnum_CmpSuccess_1) == 0x000001, "Member 'BP_LootActor_C_ChooseLootActorVFX::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

}

