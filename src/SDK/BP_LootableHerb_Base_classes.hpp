#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootableHerb_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LootableHerb_Base.BP_LootableHerb_Base_C
// 0x0038 (0x0898 - 0x0860)
class ABP_LootableHerb_Base_C : public AGrowCollectibleActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0860(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           AkComponent;                                       // 0x0868(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      InteractableVFX;                                   // 0x0870(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   HerbMesh;                                          // 0x0878(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMiniMapActorComponent*                 MiniMapActor;                                      // 0x0880(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         WindIntensity;                                     // 0x0890(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AnimTimedInteract;                                 // 0x0894(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();
	void Collected();
	void GrowthFinished();
	void BPPostBeginPlay();
	void InteractCustom1();
	void OnWakeUp();
	void ExecuteUbergraph_BP_LootableHerb_Base(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LootableHerb_Base_C">();
	}
	static class ABP_LootableHerb_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LootableHerb_Base_C>();
	}
};
static_assert(alignof(ABP_LootableHerb_Base_C) == 0x000008, "Wrong alignment on ABP_LootableHerb_Base_C");
static_assert(sizeof(ABP_LootableHerb_Base_C) == 0x000898, "Wrong size on ABP_LootableHerb_Base_C");
static_assert(offsetof(ABP_LootableHerb_Base_C, UberGraphFrame) == 0x000860, "Member 'ABP_LootableHerb_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LootableHerb_Base_C, AkComponent) == 0x000868, "Member 'ABP_LootableHerb_Base_C::AkComponent' has a wrong offset!");
static_assert(offsetof(ABP_LootableHerb_Base_C, InteractableVFX) == 0x000870, "Member 'ABP_LootableHerb_Base_C::InteractableVFX' has a wrong offset!");
static_assert(offsetof(ABP_LootableHerb_Base_C, HerbMesh) == 0x000878, "Member 'ABP_LootableHerb_Base_C::HerbMesh' has a wrong offset!");
static_assert(offsetof(ABP_LootableHerb_Base_C, MiniMapActor) == 0x000880, "Member 'ABP_LootableHerb_Base_C::MiniMapActor' has a wrong offset!");
static_assert(offsetof(ABP_LootableHerb_Base_C, DefaultSceneRoot) == 0x000888, "Member 'ABP_LootableHerb_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LootableHerb_Base_C, WindIntensity) == 0x000890, "Member 'ABP_LootableHerb_Base_C::WindIntensity' has a wrong offset!");
static_assert(offsetof(ABP_LootableHerb_Base_C, AnimTimedInteract) == 0x000894, "Member 'ABP_LootableHerb_Base_C::AnimTimedInteract' has a wrong offset!");

}

