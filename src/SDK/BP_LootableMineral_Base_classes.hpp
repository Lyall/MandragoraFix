#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootableMineral_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LootableMineral_Base.BP_LootableMineral_Base_C
// 0x00B8 (0x0918 - 0x0860)
class ABP_LootableMineral_Base_C : public AGrowCollectibleActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0860(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           AkComponent;                                       // 0x0868(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SampleComp;                                        // 0x0870(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Interactable_MineralNode_Collect;               // 0x0878(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Interactable_MineralNode;                       // 0x0880(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDestructibleComponent*                 MeshTop;                                           // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractPrompWidgetComponent_C*     BP_InteractPrompWidgetComponent;                   // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoundingBoxComponent*                  BoundingBox;                                       // 0x0898(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MeshBottom;                                        // 0x08A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMiniMapActorComponent*                 MiniMapActor;                                      // 0x08A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x08B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Regrow_ScaleUp_4E5631AB45B3573F824CA183A7D1DFDE; // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_Regrow__Direction_4E5631AB45B3573F824CA183A7D1DFDE; // 0x08BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BD[0x3];                                      // 0x08BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_Regrow;                                   // 0x08C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DissolveTime;                                      // 0x08C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CC[0x4];                                      // 0x08CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleMesh*                      DestructibleRef;                                   // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OriginalPos;                                       // 0x08D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E4[0x4];                                      // 0x08E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerShine;                                        // 0x08E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerRecalcShine;                                  // 0x08F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         MinTime;                                           // 0x08F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCollected;                                        // 0x08FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          OverrideMaterials;                                 // 0x08FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8FE[0x2];                                      // 0x08FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Static;                                            // 0x0900(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Breakable;                                         // 0x0908(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     BreakableInside;                                   // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LootableMineral_Base(int32 EntryPoint);
	void OnWakeUp();
	void BPPostSaveLoaded();
	void GrowthFinished();
	void Collected();
	void BPPostBeginPlay();
	void Timeline_Regrow__UpdateFunc();
	void Timeline_Regrow__FinishedFunc();
	void UserConstructionScript();
	void Shiny();
	void RecalcShine();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LootableMineral_Base_C">();
	}
	static class ABP_LootableMineral_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LootableMineral_Base_C>();
	}
};
static_assert(alignof(ABP_LootableMineral_Base_C) == 0x000008, "Wrong alignment on ABP_LootableMineral_Base_C");
static_assert(sizeof(ABP_LootableMineral_Base_C) == 0x000918, "Wrong size on ABP_LootableMineral_Base_C");
static_assert(offsetof(ABP_LootableMineral_Base_C, UberGraphFrame) == 0x000860, "Member 'ABP_LootableMineral_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, AkComponent) == 0x000868, "Member 'ABP_LootableMineral_Base_C::AkComponent' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, SampleComp) == 0x000870, "Member 'ABP_LootableMineral_Base_C::SampleComp' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, NS_Interactable_MineralNode_Collect) == 0x000878, "Member 'ABP_LootableMineral_Base_C::NS_Interactable_MineralNode_Collect' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, NS_Interactable_MineralNode) == 0x000880, "Member 'ABP_LootableMineral_Base_C::NS_Interactable_MineralNode' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, MeshTop) == 0x000888, "Member 'ABP_LootableMineral_Base_C::MeshTop' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, BP_InteractPrompWidgetComponent) == 0x000890, "Member 'ABP_LootableMineral_Base_C::BP_InteractPrompWidgetComponent' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, BoundingBox) == 0x000898, "Member 'ABP_LootableMineral_Base_C::BoundingBox' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, MeshBottom) == 0x0008A0, "Member 'ABP_LootableMineral_Base_C::MeshBottom' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, MiniMapActor) == 0x0008A8, "Member 'ABP_LootableMineral_Base_C::MiniMapActor' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, DefaultSceneRoot) == 0x0008B0, "Member 'ABP_LootableMineral_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, Timeline_Regrow_ScaleUp_4E5631AB45B3573F824CA183A7D1DFDE) == 0x0008B8, "Member 'ABP_LootableMineral_Base_C::Timeline_Regrow_ScaleUp_4E5631AB45B3573F824CA183A7D1DFDE' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, Timeline_Regrow__Direction_4E5631AB45B3573F824CA183A7D1DFDE) == 0x0008BC, "Member 'ABP_LootableMineral_Base_C::Timeline_Regrow__Direction_4E5631AB45B3573F824CA183A7D1DFDE' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, Timeline_Regrow) == 0x0008C0, "Member 'ABP_LootableMineral_Base_C::Timeline_Regrow' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, DissolveTime) == 0x0008C8, "Member 'ABP_LootableMineral_Base_C::DissolveTime' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, DestructibleRef) == 0x0008D0, "Member 'ABP_LootableMineral_Base_C::DestructibleRef' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, OriginalPos) == 0x0008D8, "Member 'ABP_LootableMineral_Base_C::OriginalPos' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, TimerShine) == 0x0008E8, "Member 'ABP_LootableMineral_Base_C::TimerShine' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, TimerRecalcShine) == 0x0008F0, "Member 'ABP_LootableMineral_Base_C::TimerRecalcShine' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, MinTime) == 0x0008F8, "Member 'ABP_LootableMineral_Base_C::MinTime' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, bCollected) == 0x0008FC, "Member 'ABP_LootableMineral_Base_C::bCollected' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, OverrideMaterials) == 0x0008FD, "Member 'ABP_LootableMineral_Base_C::OverrideMaterials' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, Static) == 0x000900, "Member 'ABP_LootableMineral_Base_C::Static' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, Breakable) == 0x000908, "Member 'ABP_LootableMineral_Base_C::Breakable' has a wrong offset!");
static_assert(offsetof(ABP_LootableMineral_Base_C, BreakableInside) == 0x000910, "Member 'ABP_LootableMineral_Base_C::BreakableInside' has a wrong offset!");

}

