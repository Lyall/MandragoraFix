#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapObject_QuestObjective

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_MapObject_QuestObjective.BP_MapObject_QuestObjective_C
// 0x0058 (0x0360 - 0x0308)
class UBP_MapObject_QuestObjective_C final : public UMapObjectUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 InnerRing;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OuterRing;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QuestionMark;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ZoomScale;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         CurrentZoomScale;                                  // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOffScreen;                                       // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxZoom;                                           // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinZoom;                                           // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               OuterRingDynamicMaterial;                          // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Type;                                              // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               InnerRingDynamicMaterial;                          // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               QuestionMarkDynamicMaterial;                       // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MapObject_QuestObjective(int32 EntryPoint);
	void OnSetType(EMapQuestObjectiveType InMapQuestObjectiveType);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void UpdateZoomScale();
	void ToggleOffScreen(bool InIsOffScreen);
	void SetType(EMapQuestObjectiveType InType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MapObject_QuestObjective_C">();
	}
	static class UBP_MapObject_QuestObjective_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MapObject_QuestObjective_C>();
	}
};
static_assert(alignof(UBP_MapObject_QuestObjective_C) == 0x000008, "Wrong alignment on UBP_MapObject_QuestObjective_C");
static_assert(sizeof(UBP_MapObject_QuestObjective_C) == 0x000360, "Wrong size on UBP_MapObject_QuestObjective_C");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, UberGraphFrame) == 0x000308, "Member 'UBP_MapObject_QuestObjective_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, InnerRing) == 0x000310, "Member 'UBP_MapObject_QuestObjective_C::InnerRing' has a wrong offset!");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, OuterRing) == 0x000318, "Member 'UBP_MapObject_QuestObjective_C::OuterRing' has a wrong offset!");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, QuestionMark) == 0x000320, "Member 'UBP_MapObject_QuestObjective_C::QuestionMark' has a wrong offset!");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, ZoomScale) == 0x000328, "Member 'UBP_MapObject_QuestObjective_C::ZoomScale' has a wrong offset!");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, CurrentZoomScale) == 0x000330, "Member 'UBP_MapObject_QuestObjective_C::CurrentZoomScale' has a wrong offset!");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, IsOffScreen) == 0x000334, "Member 'UBP_MapObject_QuestObjective_C::IsOffScreen' has a wrong offset!");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, MaxZoom) == 0x000338, "Member 'UBP_MapObject_QuestObjective_C::MaxZoom' has a wrong offset!");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, MinZoom) == 0x00033C, "Member 'UBP_MapObject_QuestObjective_C::MinZoom' has a wrong offset!");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, OuterRingDynamicMaterial) == 0x000340, "Member 'UBP_MapObject_QuestObjective_C::OuterRingDynamicMaterial' has a wrong offset!");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, Type) == 0x000348, "Member 'UBP_MapObject_QuestObjective_C::Type' has a wrong offset!");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, InnerRingDynamicMaterial) == 0x000350, "Member 'UBP_MapObject_QuestObjective_C::InnerRingDynamicMaterial' has a wrong offset!");
static_assert(offsetof(UBP_MapObject_QuestObjective_C, QuestionMarkDynamicMaterial) == 0x000358, "Member 'UBP_MapObject_QuestObjective_C::QuestionMarkDynamicMaterial' has a wrong offset!");

}

