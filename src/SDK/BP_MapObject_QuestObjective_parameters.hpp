#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapObject_QuestObjective

#include "Basic.hpp"

#include "man_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_MapObject_QuestObjective.BP_MapObject_QuestObjective_C.ExecuteUbergraph_BP_MapObject_QuestObjective
// 0x0068 (0x0068 - 0x0000)
struct BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        K2Node_Event_InMapQuestObjectiveType;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective) == 0x000008, "Wrong alignment on BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective");
static_assert(sizeof(BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective) == 0x000068, "Wrong size on BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective");
static_assert(offsetof(BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective, EntryPoint) == 0x000000, "Member 'BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective, K2Node_Event_IsDesignTime) == 0x000010, "Member 'BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective, K2Node_Event_MyGeometry) == 0x000014, "Member 'BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective, K2Node_Event_InDeltaTime) == 0x00004C, "Member 'BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective, K2Node_Event_InMapQuestObjectiveType) == 0x000050, "Member 'BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective::K2Node_Event_InMapQuestObjectiveType' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000058, "Member 'BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000060, "Member 'BP_MapObject_QuestObjective_C_ExecuteUbergraph_BP_MapObject_QuestObjective::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");

// Function BP_MapObject_QuestObjective.BP_MapObject_QuestObjective_C.OnSetType
// 0x0001 (0x0001 - 0x0000)
struct BP_MapObject_QuestObjective_C_OnSetType final
{
public:
	EMapQuestObjectiveType                        InMapQuestObjectiveType;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapObject_QuestObjective_C_OnSetType) == 0x000001, "Wrong alignment on BP_MapObject_QuestObjective_C_OnSetType");
static_assert(sizeof(BP_MapObject_QuestObjective_C_OnSetType) == 0x000001, "Wrong size on BP_MapObject_QuestObjective_C_OnSetType");
static_assert(offsetof(BP_MapObject_QuestObjective_C_OnSetType, InMapQuestObjectiveType) == 0x000000, "Member 'BP_MapObject_QuestObjective_C_OnSetType::InMapQuestObjectiveType' has a wrong offset!");

// Function BP_MapObject_QuestObjective.BP_MapObject_QuestObjective_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_MapObject_QuestObjective_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapObject_QuestObjective_C_Tick) == 0x000004, "Wrong alignment on BP_MapObject_QuestObjective_C_Tick");
static_assert(sizeof(BP_MapObject_QuestObjective_C_Tick) == 0x00003C, "Wrong size on BP_MapObject_QuestObjective_C_Tick");
static_assert(offsetof(BP_MapObject_QuestObjective_C_Tick, MyGeometry) == 0x000000, "Member 'BP_MapObject_QuestObjective_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_MapObject_QuestObjective_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_MapObject_QuestObjective.BP_MapObject_QuestObjective_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_MapObject_QuestObjective_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapObject_QuestObjective_C_PreConstruct) == 0x000001, "Wrong alignment on BP_MapObject_QuestObjective_C_PreConstruct");
static_assert(sizeof(BP_MapObject_QuestObjective_C_PreConstruct) == 0x000001, "Wrong size on BP_MapObject_QuestObjective_C_PreConstruct");
static_assert(offsetof(BP_MapObject_QuestObjective_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_MapObject_QuestObjective_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_MapObject_QuestObjective.BP_MapObject_QuestObjective_C.UpdateZoomScale
// 0x0120 (0x0120 - 0x0000)
struct BP_MapObject_QuestObjective_C_UpdateZoomScale final
{
public:
	float                                         AdjustedZoomScale;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Temp_byte_Variable_2;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_8;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Temp_byte_Variable_3;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_12;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_13;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_14;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_15;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Temp_byte_Variable_4;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_16;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_17;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_18;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_19;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Temp_byte_Variable_5;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_20;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_21;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_22;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_23;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Temp_byte_Variable_6;                              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_24;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_25;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_26;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_27;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Temp_byte_Variable_7;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_28;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_29;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_30;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_31;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Temp_byte_Variable_8;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Temp_object_Variable;                              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Temp_object_Variable_1;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Temp_object_Variable_2;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Temp_object_Variable_3;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_5;                           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_6;                           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_7;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_Select_Default_8;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapObject_QuestObjective_C_UpdateZoomScale) == 0x000008, "Wrong alignment on BP_MapObject_QuestObjective_C_UpdateZoomScale");
static_assert(sizeof(BP_MapObject_QuestObjective_C_UpdateZoomScale) == 0x000120, "Wrong size on BP_MapObject_QuestObjective_C_UpdateZoomScale");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, AdjustedZoomScale) == 0x000000, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::AdjustedZoomScale' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_byte_Variable) == 0x000004, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable) == 0x000008, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_1) == 0x00000C, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_2) == 0x000010, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_3) == 0x000014, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_byte_Variable_1) == 0x000018, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_4) == 0x00001C, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_5) == 0x000020, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_6) == 0x000024, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_7) == 0x000028, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_byte_Variable_2) == 0x00002C, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_8) == 0x000030, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_9) == 0x000034, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_10) == 0x000038, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_11) == 0x00003C, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_byte_Variable_3) == 0x000040, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_12) == 0x000044, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_13) == 0x000048, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_14) == 0x00004C, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_15) == 0x000050, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_byte_Variable_4) == 0x000054, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_16) == 0x000058, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_17) == 0x00005C, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_18) == 0x000060, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_19) == 0x000064, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_byte_Variable_5) == 0x000068, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_20) == 0x00006C, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_21) == 0x000070, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_22) == 0x000074, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_23) == 0x000078, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_byte_Variable_6) == 0x00007C, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_24) == 0x000080, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_25) == 0x000084, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_26) == 0x000088, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_27) == 0x00008C, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_byte_Variable_7) == 0x000090, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_28) == 0x000094, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_29) == 0x000098, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_30) == 0x00009C, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_float_Variable_31) == 0x0000A0, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_float_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_byte_Variable_8) == 0x0000A4, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_object_Variable) == 0x0000A8, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_object_Variable_1) == 0x0000B0, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_object_Variable_2) == 0x0000B8, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, Temp_object_Variable_3) == 0x0000C0, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, K2Node_Select_Default) == 0x0000C8, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, K2Node_Select_Default_1) == 0x0000CC, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, K2Node_Select_Default_2) == 0x0000D0, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, K2Node_Select_Default_3) == 0x0000D4, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, K2Node_Select_Default_4) == 0x0000D8, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, K2Node_Select_Default_5) == 0x0000DC, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, K2Node_Select_Default_6) == 0x0000E0, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, K2Node_Select_Default_7) == 0x0000E4, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, K2Node_Select_Default_8) == 0x0000E8, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, CallFunc_MapRangeClamped_ReturnValue) == 0x0000F0, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, CallFunc_MapRangeUnclamped_ReturnValue) == 0x0000F4, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, CallFunc_MakeVector2D_ReturnValue) == 0x0000F8, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000100, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, CallFunc_MakeVector2D_ReturnValue_1) == 0x000104, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, CallFunc_MapRangeClamped_ReturnValue_2) == 0x00010C, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, CallFunc_MakeVector2D_ReturnValue_2) == 0x000110, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_UpdateZoomScale, CallFunc_GetFloatValue_ReturnValue) == 0x000118, "Member 'BP_MapObject_QuestObjective_C_UpdateZoomScale::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");

// Function BP_MapObject_QuestObjective.BP_MapObject_QuestObjective_C.ToggleOffScreen
// 0x0001 (0x0001 - 0x0000)
struct BP_MapObject_QuestObjective_C_ToggleOffScreen final
{
public:
	bool                                          InIsOffScreen;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapObject_QuestObjective_C_ToggleOffScreen) == 0x000001, "Wrong alignment on BP_MapObject_QuestObjective_C_ToggleOffScreen");
static_assert(sizeof(BP_MapObject_QuestObjective_C_ToggleOffScreen) == 0x000001, "Wrong size on BP_MapObject_QuestObjective_C_ToggleOffScreen");
static_assert(offsetof(BP_MapObject_QuestObjective_C_ToggleOffScreen, InIsOffScreen) == 0x000000, "Member 'BP_MapObject_QuestObjective_C_ToggleOffScreen::InIsOffScreen' has a wrong offset!");

// Function BP_MapObject_QuestObjective.BP_MapObject_QuestObjective_C.SetType
// 0x0090 (0x0090 - 0x0000)
struct BP_MapObject_QuestObjective_C_SetType final
{
public:
	EMapQuestObjectiveType                        InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapQuestObjectiveType                        Temp_byte_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_8;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_9;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_10;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_11;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_1;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_2;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapObject_QuestObjective_C_SetType) == 0x000008, "Wrong alignment on BP_MapObject_QuestObjective_C_SetType");
static_assert(sizeof(BP_MapObject_QuestObjective_C_SetType) == 0x000090, "Wrong size on BP_MapObject_QuestObjective_C_SetType");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, InType) == 0x000000, "Member 'BP_MapObject_QuestObjective_C_SetType::InType' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_byte_Variable) == 0x000001, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_object_Variable) == 0x000008, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_object_Variable_1) == 0x000010, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_object_Variable_2) == 0x000018, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_object_Variable_3) == 0x000020, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_byte_Variable_1) == 0x000028, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_object_Variable_4) == 0x000030, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_object_Variable_5) == 0x000038, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_object_Variable_6) == 0x000040, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_object_Variable_7) == 0x000048, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_byte_Variable_2) == 0x000050, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_object_Variable_8) == 0x000058, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_object_Variable_9) == 0x000060, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_object_Variable_10) == 0x000068, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, Temp_object_Variable_11) == 0x000070, "Member 'BP_MapObject_QuestObjective_C_SetType::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, K2Node_Select_Default) == 0x000078, "Member 'BP_MapObject_QuestObjective_C_SetType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, K2Node_Select_Default_1) == 0x000080, "Member 'BP_MapObject_QuestObjective_C_SetType::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapObject_QuestObjective_C_SetType, K2Node_Select_Default_2) == 0x000088, "Member 'BP_MapObject_QuestObjective_C_SetType::K2Node_Select_Default_2' has a wrong offset!");

}

