#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapObject

#include "Basic.hpp"

#include "BP_MapObject_classes.hpp"
#include "BP_MapObject_parameters.hpp"


namespace SDK
{

// Function BP_MapObject.BP_MapObject_C.ExecuteUbergraph_BP_MapObject
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapObject_C::ExecuteUbergraph_BP_MapObject(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "ExecuteUbergraph_BP_MapObject");

	Params::BP_MapObject_C_ExecuteUbergraph_BP_MapObject Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapObject.BP_MapObject_C.OnSetCheckpointNameVisible
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapObject_C::OnSetCheckpointNameVisible(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "OnSetCheckpointNameVisible");

	Params::BP_MapObject_C_OnSetCheckpointNameVisible Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapObject.BP_MapObject_C.OnUnfocused
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapObject_C::OnUnfocused(bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "OnUnfocused");

	Params::BP_MapObject_C_OnUnfocused Parms{};

	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapObject.BP_MapObject_C.OnFocused
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapObject_C::OnFocused(bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "OnFocused");

	Params::BP_MapObject_C_OnFocused Parms{};

	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapObject.BP_MapObject_C.OnSetCheckpoint
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bCheckpoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bCheckpointEnabled                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             InDisplayName                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_MapObject_C::OnSetCheckpoint(bool bCheckpoint, bool bCheckpointEnabled, const class FText& InDisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "OnSetCheckpoint");

	Params::BP_MapObject_C_OnSetCheckpoint Parms{};

	Parms.bCheckpoint = bCheckpoint;
	Parms.bCheckpointEnabled = bCheckpointEnabled;
	Parms.InDisplayName = std::move(InDisplayName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapObject.BP_MapObject_C.OnSetIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTexture2D*                       InIcon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMiniMapGatewaySide                     InGatewaySide                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMiniMapGatewayState                    InGatewayState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapObject_C::OnSetIcon(class UTexture2D* InIcon, EMiniMapGatewaySide InGatewaySide, EMiniMapGatewayState InGatewayState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "OnSetIcon");

	Params::BP_MapObject_C_OnSetIcon Parms{};

	Parms.InIcon = InIcon;
	Parms.InGatewaySide = InGatewaySide;
	Parms.InGatewayState = InGatewayState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapObject.BP_MapObject_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapObject_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "Tick");

	Params::BP_MapObject_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapObject.BP_MapObject_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_MapObject_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapObject.BP_MapObject_C.SetCheckpoint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InCheckpoint                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InCheckpointEnabled                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             InDisplayName                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_MapObject_C::SetCheckpoint(bool InCheckpoint, bool InCheckpointEnabled, const class FText& InDisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "SetCheckpoint");

	Params::BP_MapObject_C_SetCheckpoint Parms{};

	Parms.InCheckpoint = InCheckpoint;
	Parms.InCheckpointEnabled = InCheckpointEnabled;
	Parms.InDisplayName = std::move(InDisplayName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapObject.BP_MapObject_C.UpdateZoomScale
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapObject_C::UpdateZoomScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "UpdateZoomScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapObject.BP_MapObject_C.SetCheckpointNameVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapObject_C::SetCheckpointNameVisible(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "SetCheckpointNameVisible");

	Params::BP_MapObject_C_SetCheckpointNameVisible Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapObject.BP_MapObject_C.Set Icons
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       InIcon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMiniMapGatewaySide                     InGatewaySide                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMiniMapGatewayState                    InGatewayState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapObject_C::Set_Icons(class UTexture2D* InIcon, EMiniMapGatewaySide InGatewaySide, EMiniMapGatewayState InGatewayState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "Set Icons");

	Params::BP_MapObject_C_Set_Icons Parms{};

	Parms.InIcon = InIcon;
	Parms.InGatewaySide = InGatewaySide;
	Parms.InGatewayState = InGatewayState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapObject.BP_MapObject_C.TravelStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MaxKeyTimerHoldTime                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapObject_C::TravelStart(float MaxKeyTimerHoldTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "TravelStart");

	Params::BP_MapObject_C_TravelStart Parms{};

	Parms.MaxKeyTimerHoldTime = MaxKeyTimerHoldTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapObject.BP_MapObject_C.TravelEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapObject_C::TravelEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "TravelEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapObject.BP_MapObject_C.TravelAbort
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapObject_C::TravelAbort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "TravelAbort");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapObject.BP_MapObject_C.ToggleEssenceVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InEssence                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapObject_C::ToggleEssenceVFX(bool InEssence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapObject_C", "ToggleEssenceVFX");

	Params::BP_MapObject_C_ToggleEssenceVFX Parms{};

	Parms.InEssence = InEssence;

	UObject::ProcessEvent(Func, &Parms);
}

}

