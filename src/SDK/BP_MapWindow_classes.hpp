#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWindow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_MapWindow.BP_MapWindow_C
// 0x02F0 (0x09E8 - 0x06F8)
class UBP_MapWindow_C final : public UMapWindowUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ErrorAnim;                                         // 0x0700(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowMarkersAnim;                                   // 0x0708(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowLegendAnim;                                    // 0x0710(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOutAnim;                                       // 0x0718(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x0720(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_0;                                  // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BottomScreenFrame;                                 // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject;                                // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_1;                              // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_2;                              // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_3;                              // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_4;                              // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_5;                              // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_6;                              // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_7;                              // 0x0770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_8;                              // 0x0778(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_9;                              // 0x0780(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_10;                             // 0x0788(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_11;                             // 0x0790(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_12;                             // 0x0798(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_13;                             // 0x07A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_14;                             // 0x07A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_15;                             // 0x07B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_16;                             // 0x07B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_17;                             // 0x07C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_18;                             // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_19;                             // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_20;                             // 0x07D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_21;                             // 0x07E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_22;                             // 0x07E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_23;                             // 0x07F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_24;                             // 0x07F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_25;                             // 0x0800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_26;                             // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_27;                             // 0x0810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapLegendObject_C*                  BP_MapLegendObject_28;                             // 0x0818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapWindow_Marker_C*                 BP_MapWindow_Marker;                               // 0x0820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapWindow_Marker_C*                 BP_MapWindow_Marker_1;                             // 0x0828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapWindow_Marker_C*                 BP_MapWindow_Marker_168;                           // 0x0830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapWindow_Marker_C*                 BP_MapWindow_Marker_309;                           // 0x0838(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapWindow_Marker_C*                 BP_MapWindow_Marker_835;                           // 0x0840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyA;                                        // 0x0848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyB;                                        // 0x0850(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyDPad;                                     // 0x0858(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyDPad_Left;                                // 0x0860(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyDPad_Right;                               // 0x0868(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyLS;                                       // 0x0870(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Double_C*            BtnHotkeyLS_Press;                                 // 0x0878(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Double_C*            BtnHotkeyLT;                                       // 0x0880(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyRT;                                       // 0x0888(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Double_C*            BtnHotkeyX;                                        // 0x0890(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyY;                                        // 0x0898(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnNextTab;                                        // 0x08A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnPreviousTab;                                    // 0x08A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ContentFrame;                                      // 0x08B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               DownScrollingSB;                                   // 0x08B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x08C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_400;                                         // 0x08C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label_MapName;                                     // 0x08D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label_Quest;                                       // 0x08D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               LeftScrollingSB;                                   // 0x08E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Legend;                                            // 0x08E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapCharacter_C*                     MapCharacter;                                      // 0x08F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               MapMarkers;                                        // 0x08F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               MapNameSizeBox;                                    // 0x0900(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MapPanel;                                          // 0x0908(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MapObject_QuestObjective_C*         MapQuestObjective;                                 // 0x0910(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MarkerNumText;                                     // 0x0918(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               OffscreenQuestMarker;                              // 0x0920(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OffscreenQuestMarkerArrow;                         // 0x0928(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OffscreenQuestMarkerIcon;                          // 0x0930(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         QuestInfo;                                         // 0x0938(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               QuestObjectiveSizeBox;                             // 0x0940(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               RightScrollingSB;                                  // 0x0948(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBoxKeyLeft;                                   // 0x0950(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBoxKeyRight;                                  // 0x0958(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBoxMapParts;                                  // 0x0960(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Attributes;                                    // 0x0968(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Character;                                     // 0x0970(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Inventory;                                     // 0x0978(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_LevelUp;                                       // 0x0980(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Map;                                           // 0x0988(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Quests;                                        // 0x0990(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Skills;                                        // 0x0998(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_WitchLantern;                                  // 0x09A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Tabs;                                              // 0x09A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TopScreenFrame;                                    // 0x09B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               UpScrollingSB;                                     // 0x09B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USkillTreeNodeUserWidget*               FocusedNode;                                       // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     AnimLoop;                                          // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowLegend;                                        // 0x09D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RequestMapNameVisibililty;                         // 0x09D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasMapName;                                        // 0x09D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D3[0x1];                                      // 0x09D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentZoomValue;                                  // 0x09D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            ZoomScaleCurve;                                    // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowMarkers;                                       // 0x09E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_MapWindow(int32 EntryPoint);
	void OnHoldCanceled(class UInteractButtonUserWidget* InteractButtonUserWidget, bool bMinTimeCancel);
	void OnHoldFinished(class UInteractButtonUserWidget* InteractButtonUserWidget);
	void OnHoldStarted(class UInteractButtonUserWidget* InteractButtonUserWidget);
	void OnSetMarkerNumText(const class FText& InMarkerNumText, int32 InCurrentMarkerNum, int32 InMaxMarkerNum);
	void OnGamepadDPadLeftEvent();
	void BndEvt__BP_MapWindow_BtnHotkeyDPad_Left_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature();
	void OnGamepadDPadRightEvent();
	void BndEvt__BP_MapWindow_BtnHotkeyDPad_Right_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature();
	void OnGamepadLTEvent();
	void BndEvt__BP_MapWindow_BtnHotkeyLT_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void OnMapEvent();
	void OnGamepadRTEvent();
	void BndEvt__BP_MapWindow_BtnHotkeyRT_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature();
	void BndEvt__BP_MapWindow_BtnHotkeyX_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature();
	void OnToggleMapLayer(int32 MapLayerIndex);
	void OnSetOffscreenQuestIndicator(float InrAngle, float InRenderOpacity);
	void OnSetQuestText(const class FText& InQuestText);
	void PreConstruct(bool IsDesignTime);
	void OnChangeMapSegmentsScale(float InCurrentZoomValue);
	void OnPanEnabled(bool bPanEnabled);
	void OnIngameMenuEvent();
	void OnSetMapName(const class FText& InMapName);
	void OnGamepadLeftStickBtnEvent();
	void BndEvt__BP_ActiveAbilitiesWindow2_Tab_LevelUp2_K2Node_ComponentBoundEvent_34_OnClicked__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__BP_MapWindow_Tab_Inventory_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature();
	void BndEvt__BP_MapWindow_Tab_WitchLantern_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature();
	void BndEvt__BP_MapWindow_BtnHotkeyY_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature();
	void BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature();
	void BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature();
	void BndEvt__Tab_Map_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature();
	void BndEvt__Tab_Quests_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature();
	void BndEvt__Tab_Attributes_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature();
	void BndEvt__Tab_Skills_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void BndEvt__Tab_Character_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void OnGamepadRBEvent();
	void OnGamepadLBEvent();
	void OnHide(float AnimDuration);
	void OnShow(float AnimDuration);
	void BndEvt__BtnHotkeyB_1_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature();
	void OnGamepadXEvent();
	void OnGamepadBEvent();
	void BtnHotkeyBClicked(bool OpenPauseMenu);
	void BtnHotkeyXClicked();
	void ToggleLegend(bool InShowLegend);
	void SetBtnHotkeyLSState();
	void BtnHotkeyLS_PressClicked();
	void SetOffscreenQuestIndicator(float InAngle, float InRenderOpacity);
	void GetWidgetEdgePoint(float Width, float Height, float Angle, float* X, float* Y);
	void BtnHotkeyRTClicked();
	void ToggleMarkers(bool InShowMarkers);
	void BtnHotkeyLTClicked();
	void BtnHotkeyDpadLeftClicked();
	void BtnHotkeyDpadRightClicked();
	void InvalidMarkerPlace();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MapWindow_C">();
	}
	static class UBP_MapWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MapWindow_C>();
	}
};
static_assert(alignof(UBP_MapWindow_C) == 0x000008, "Wrong alignment on UBP_MapWindow_C");
static_assert(sizeof(UBP_MapWindow_C) == 0x0009E8, "Wrong size on UBP_MapWindow_C");
static_assert(offsetof(UBP_MapWindow_C, UberGraphFrame) == 0x0006F8, "Member 'UBP_MapWindow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, ErrorAnim) == 0x000700, "Member 'UBP_MapWindow_C::ErrorAnim' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, ShowMarkersAnim) == 0x000708, "Member 'UBP_MapWindow_C::ShowMarkersAnim' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, ShowLegendAnim) == 0x000710, "Member 'UBP_MapWindow_C::ShowLegendAnim' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, FadeOutAnim) == 0x000718, "Member 'UBP_MapWindow_C::FadeOutAnim' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, FadeInAnim) == 0x000720, "Member 'UBP_MapWindow_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BackgroundBlur_0) == 0x000728, "Member 'UBP_MapWindow_C::BackgroundBlur_0' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BottomScreenFrame) == 0x000730, "Member 'UBP_MapWindow_C::BottomScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject) == 0x000738, "Member 'UBP_MapWindow_C::BP_MapLegendObject' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_1) == 0x000740, "Member 'UBP_MapWindow_C::BP_MapLegendObject_1' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_2) == 0x000748, "Member 'UBP_MapWindow_C::BP_MapLegendObject_2' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_3) == 0x000750, "Member 'UBP_MapWindow_C::BP_MapLegendObject_3' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_4) == 0x000758, "Member 'UBP_MapWindow_C::BP_MapLegendObject_4' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_5) == 0x000760, "Member 'UBP_MapWindow_C::BP_MapLegendObject_5' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_6) == 0x000768, "Member 'UBP_MapWindow_C::BP_MapLegendObject_6' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_7) == 0x000770, "Member 'UBP_MapWindow_C::BP_MapLegendObject_7' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_8) == 0x000778, "Member 'UBP_MapWindow_C::BP_MapLegendObject_8' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_9) == 0x000780, "Member 'UBP_MapWindow_C::BP_MapLegendObject_9' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_10) == 0x000788, "Member 'UBP_MapWindow_C::BP_MapLegendObject_10' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_11) == 0x000790, "Member 'UBP_MapWindow_C::BP_MapLegendObject_11' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_12) == 0x000798, "Member 'UBP_MapWindow_C::BP_MapLegendObject_12' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_13) == 0x0007A0, "Member 'UBP_MapWindow_C::BP_MapLegendObject_13' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_14) == 0x0007A8, "Member 'UBP_MapWindow_C::BP_MapLegendObject_14' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_15) == 0x0007B0, "Member 'UBP_MapWindow_C::BP_MapLegendObject_15' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_16) == 0x0007B8, "Member 'UBP_MapWindow_C::BP_MapLegendObject_16' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_17) == 0x0007C0, "Member 'UBP_MapWindow_C::BP_MapLegendObject_17' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_18) == 0x0007C8, "Member 'UBP_MapWindow_C::BP_MapLegendObject_18' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_19) == 0x0007D0, "Member 'UBP_MapWindow_C::BP_MapLegendObject_19' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_20) == 0x0007D8, "Member 'UBP_MapWindow_C::BP_MapLegendObject_20' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_21) == 0x0007E0, "Member 'UBP_MapWindow_C::BP_MapLegendObject_21' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_22) == 0x0007E8, "Member 'UBP_MapWindow_C::BP_MapLegendObject_22' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_23) == 0x0007F0, "Member 'UBP_MapWindow_C::BP_MapLegendObject_23' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_24) == 0x0007F8, "Member 'UBP_MapWindow_C::BP_MapLegendObject_24' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_25) == 0x000800, "Member 'UBP_MapWindow_C::BP_MapLegendObject_25' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_26) == 0x000808, "Member 'UBP_MapWindow_C::BP_MapLegendObject_26' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_27) == 0x000810, "Member 'UBP_MapWindow_C::BP_MapLegendObject_27' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapLegendObject_28) == 0x000818, "Member 'UBP_MapWindow_C::BP_MapLegendObject_28' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapWindow_Marker) == 0x000820, "Member 'UBP_MapWindow_C::BP_MapWindow_Marker' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapWindow_Marker_1) == 0x000828, "Member 'UBP_MapWindow_C::BP_MapWindow_Marker_1' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapWindow_Marker_168) == 0x000830, "Member 'UBP_MapWindow_C::BP_MapWindow_Marker_168' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapWindow_Marker_309) == 0x000838, "Member 'UBP_MapWindow_C::BP_MapWindow_Marker_309' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BP_MapWindow_Marker_835) == 0x000840, "Member 'UBP_MapWindow_C::BP_MapWindow_Marker_835' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnHotkeyA) == 0x000848, "Member 'UBP_MapWindow_C::BtnHotkeyA' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnHotkeyB) == 0x000850, "Member 'UBP_MapWindow_C::BtnHotkeyB' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnHotkeyDPad) == 0x000858, "Member 'UBP_MapWindow_C::BtnHotkeyDPad' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnHotkeyDPad_Left) == 0x000860, "Member 'UBP_MapWindow_C::BtnHotkeyDPad_Left' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnHotkeyDPad_Right) == 0x000868, "Member 'UBP_MapWindow_C::BtnHotkeyDPad_Right' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnHotkeyLS) == 0x000870, "Member 'UBP_MapWindow_C::BtnHotkeyLS' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnHotkeyLS_Press) == 0x000878, "Member 'UBP_MapWindow_C::BtnHotkeyLS_Press' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnHotkeyLT) == 0x000880, "Member 'UBP_MapWindow_C::BtnHotkeyLT' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnHotkeyRT) == 0x000888, "Member 'UBP_MapWindow_C::BtnHotkeyRT' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnHotkeyX) == 0x000890, "Member 'UBP_MapWindow_C::BtnHotkeyX' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnHotkeyY) == 0x000898, "Member 'UBP_MapWindow_C::BtnHotkeyY' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnNextTab) == 0x0008A0, "Member 'UBP_MapWindow_C::BtnNextTab' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, BtnPreviousTab) == 0x0008A8, "Member 'UBP_MapWindow_C::BtnPreviousTab' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, ContentFrame) == 0x0008B0, "Member 'UBP_MapWindow_C::ContentFrame' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, DownScrollingSB) == 0x0008B8, "Member 'UBP_MapWindow_C::DownScrollingSB' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Image) == 0x0008C0, "Member 'UBP_MapWindow_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Image_400) == 0x0008C8, "Member 'UBP_MapWindow_C::Image_400' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Label_MapName) == 0x0008D0, "Member 'UBP_MapWindow_C::Label_MapName' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Label_Quest) == 0x0008D8, "Member 'UBP_MapWindow_C::Label_Quest' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, LeftScrollingSB) == 0x0008E0, "Member 'UBP_MapWindow_C::LeftScrollingSB' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Legend) == 0x0008E8, "Member 'UBP_MapWindow_C::Legend' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, MapCharacter) == 0x0008F0, "Member 'UBP_MapWindow_C::MapCharacter' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, MapMarkers) == 0x0008F8, "Member 'UBP_MapWindow_C::MapMarkers' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, MapNameSizeBox) == 0x000900, "Member 'UBP_MapWindow_C::MapNameSizeBox' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, MapPanel) == 0x000908, "Member 'UBP_MapWindow_C::MapPanel' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, MapQuestObjective) == 0x000910, "Member 'UBP_MapWindow_C::MapQuestObjective' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, MarkerNumText) == 0x000918, "Member 'UBP_MapWindow_C::MarkerNumText' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, OffscreenQuestMarker) == 0x000920, "Member 'UBP_MapWindow_C::OffscreenQuestMarker' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, OffscreenQuestMarkerArrow) == 0x000928, "Member 'UBP_MapWindow_C::OffscreenQuestMarkerArrow' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, OffscreenQuestMarkerIcon) == 0x000930, "Member 'UBP_MapWindow_C::OffscreenQuestMarkerIcon' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, QuestInfo) == 0x000938, "Member 'UBP_MapWindow_C::QuestInfo' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, QuestObjectiveSizeBox) == 0x000940, "Member 'UBP_MapWindow_C::QuestObjectiveSizeBox' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, RightScrollingSB) == 0x000948, "Member 'UBP_MapWindow_C::RightScrollingSB' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, ScaleBoxKeyLeft) == 0x000950, "Member 'UBP_MapWindow_C::ScaleBoxKeyLeft' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, ScaleBoxKeyRight) == 0x000958, "Member 'UBP_MapWindow_C::ScaleBoxKeyRight' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, ScaleBoxMapParts) == 0x000960, "Member 'UBP_MapWindow_C::ScaleBoxMapParts' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Tab_Attributes) == 0x000968, "Member 'UBP_MapWindow_C::Tab_Attributes' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Tab_Character) == 0x000970, "Member 'UBP_MapWindow_C::Tab_Character' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Tab_Inventory) == 0x000978, "Member 'UBP_MapWindow_C::Tab_Inventory' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Tab_LevelUp) == 0x000980, "Member 'UBP_MapWindow_C::Tab_LevelUp' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Tab_Map) == 0x000988, "Member 'UBP_MapWindow_C::Tab_Map' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Tab_Quests) == 0x000990, "Member 'UBP_MapWindow_C::Tab_Quests' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Tab_Skills) == 0x000998, "Member 'UBP_MapWindow_C::Tab_Skills' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Tab_WitchLantern) == 0x0009A0, "Member 'UBP_MapWindow_C::Tab_WitchLantern' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, Tabs) == 0x0009A8, "Member 'UBP_MapWindow_C::Tabs' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, TopScreenFrame) == 0x0009B0, "Member 'UBP_MapWindow_C::TopScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, UpScrollingSB) == 0x0009B8, "Member 'UBP_MapWindow_C::UpScrollingSB' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, FocusedNode) == 0x0009C0, "Member 'UBP_MapWindow_C::FocusedNode' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, AnimLoop) == 0x0009C8, "Member 'UBP_MapWindow_C::AnimLoop' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, ShowLegend) == 0x0009D0, "Member 'UBP_MapWindow_C::ShowLegend' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, RequestMapNameVisibililty) == 0x0009D1, "Member 'UBP_MapWindow_C::RequestMapNameVisibililty' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, HasMapName) == 0x0009D2, "Member 'UBP_MapWindow_C::HasMapName' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, CurrentZoomValue) == 0x0009D4, "Member 'UBP_MapWindow_C::CurrentZoomValue' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, ZoomScaleCurve) == 0x0009D8, "Member 'UBP_MapWindow_C::ZoomScaleCurve' has a wrong offset!");
static_assert(offsetof(UBP_MapWindow_C, ShowMarkers) == 0x0009E0, "Member 'UBP_MapWindow_C::ShowMarkers' has a wrong offset!");

}

