#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWindow

#include "Basic.hpp"

#include "BP_MapWindow_classes.hpp"
#include "BP_MapWindow_parameters.hpp"


namespace SDK
{

// Function BP_MapWindow.BP_MapWindow_C.ExecuteUbergraph_BP_MapWindow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWindow_C::ExecuteUbergraph_BP_MapWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "ExecuteUbergraph_BP_MapWindow");

	Params::BP_MapWindow_C_ExecuteUbergraph_BP_MapWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.OnHoldCanceled
// (Event, Public, BlueprintEvent)
// Parameters:
// class UInteractButtonUserWidget*        InteractButtonUserWidget                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMinTimeCancel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapWindow_C::OnHoldCanceled(class UInteractButtonUserWidget* InteractButtonUserWidget, bool bMinTimeCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnHoldCanceled");

	Params::BP_MapWindow_C_OnHoldCanceled Parms{};

	Parms.InteractButtonUserWidget = InteractButtonUserWidget;
	Parms.bMinTimeCancel = bMinTimeCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.OnHoldFinished
// (Event, Public, BlueprintEvent)
// Parameters:
// class UInteractButtonUserWidget*        InteractButtonUserWidget                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWindow_C::OnHoldFinished(class UInteractButtonUserWidget* InteractButtonUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnHoldFinished");

	Params::BP_MapWindow_C_OnHoldFinished Parms{};

	Parms.InteractButtonUserWidget = InteractButtonUserWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.OnHoldStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class UInteractButtonUserWidget*        InteractButtonUserWidget                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWindow_C::OnHoldStarted(class UInteractButtonUserWidget* InteractButtonUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnHoldStarted");

	Params::BP_MapWindow_C_OnHoldStarted Parms{};

	Parms.InteractButtonUserWidget = InteractButtonUserWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.OnSetMarkerNumText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InMarkerNumText                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   InCurrentMarkerNum                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InMaxMarkerNum                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWindow_C::OnSetMarkerNumText(const class FText& InMarkerNumText, int32 InCurrentMarkerNum, int32 InMaxMarkerNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnSetMarkerNumText");

	Params::BP_MapWindow_C_OnSetMarkerNumText Parms{};

	Parms.InMarkerNumText = std::move(InMarkerNumText);
	Parms.InCurrentMarkerNum = InCurrentMarkerNum;
	Parms.InMaxMarkerNum = InMaxMarkerNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.OnGamepadDPadLeftEvent
// (Event, Public, BlueprintEvent)

void UBP_MapWindow_C::OnGamepadDPadLeftEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnGamepadDPadLeftEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__BP_MapWindow_BtnHotkeyDPad_Left_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__BP_MapWindow_BtnHotkeyDPad_Left_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__BP_MapWindow_BtnHotkeyDPad_Left_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.OnGamepadDPadRightEvent
// (Event, Public, BlueprintEvent)

void UBP_MapWindow_C::OnGamepadDPadRightEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnGamepadDPadRightEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__BP_MapWindow_BtnHotkeyDPad_Right_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__BP_MapWindow_BtnHotkeyDPad_Right_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__BP_MapWindow_BtnHotkeyDPad_Right_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.OnGamepadLTEvent
// (Event, Public, BlueprintEvent)

void UBP_MapWindow_C::OnGamepadLTEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnGamepadLTEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__BP_MapWindow_BtnHotkeyLT_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__BP_MapWindow_BtnHotkeyLT_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__BP_MapWindow_BtnHotkeyLT_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.OnMapEvent
// (Event, Public, BlueprintEvent)

void UBP_MapWindow_C::OnMapEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnMapEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.OnGamepadRTEvent
// (Event, Public, BlueprintEvent)

void UBP_MapWindow_C::OnGamepadRTEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnGamepadRTEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__BP_MapWindow_BtnHotkeyRT_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__BP_MapWindow_BtnHotkeyRT_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__BP_MapWindow_BtnHotkeyRT_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__BP_MapWindow_BtnHotkeyX_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__BP_MapWindow_BtnHotkeyX_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__BP_MapWindow_BtnHotkeyX_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.OnToggleMapLayer
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   MapLayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWindow_C::OnToggleMapLayer(int32 MapLayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnToggleMapLayer");

	Params::BP_MapWindow_C_OnToggleMapLayer Parms{};

	Parms.MapLayerIndex = MapLayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.OnSetOffscreenQuestIndicator
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   InrAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InRenderOpacity                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWindow_C::OnSetOffscreenQuestIndicator(float InrAngle, float InRenderOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnSetOffscreenQuestIndicator");

	Params::BP_MapWindow_C_OnSetOffscreenQuestIndicator Parms{};

	Parms.InrAngle = InrAngle;
	Parms.InRenderOpacity = InRenderOpacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.OnSetQuestText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InQuestText                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_MapWindow_C::OnSetQuestText(const class FText& InQuestText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnSetQuestText");

	Params::BP_MapWindow_C_OnSetQuestText Parms{};

	Parms.InQuestText = std::move(InQuestText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapWindow_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "PreConstruct");

	Params::BP_MapWindow_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.OnChangeMapSegmentsScale
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   InCurrentZoomValue                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWindow_C::OnChangeMapSegmentsScale(float InCurrentZoomValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnChangeMapSegmentsScale");

	Params::BP_MapWindow_C_OnChangeMapSegmentsScale Parms{};

	Parms.InCurrentZoomValue = InCurrentZoomValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.OnPanEnabled
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPanEnabled                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapWindow_C::OnPanEnabled(bool bPanEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnPanEnabled");

	Params::BP_MapWindow_C_OnPanEnabled Parms{};

	Parms.bPanEnabled = bPanEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.OnIngameMenuEvent
// (Event, Public, BlueprintEvent)

void UBP_MapWindow_C::OnIngameMenuEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnIngameMenuEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.OnSetMapName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InMapName                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_MapWindow_C::OnSetMapName(const class FText& InMapName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnSetMapName");

	Params::BP_MapWindow_C_OnSetMapName Parms{};

	Parms.InMapName = std::move(InMapName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.OnGamepadLeftStickBtnEvent
// (Event, Public, BlueprintEvent)

void UBP_MapWindow_C::OnGamepadLeftStickBtnEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnGamepadLeftStickBtnEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__BP_ActiveAbilitiesWindow2_Tab_LevelUp2_K2Node_ComponentBoundEvent_34_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__BP_ActiveAbilitiesWindow2_Tab_LevelUp2_K2Node_ComponentBoundEvent_34_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__BP_ActiveAbilitiesWindow2_Tab_LevelUp2_K2Node_ComponentBoundEvent_34_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWindow_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "Tick");

	Params::BP_MapWindow_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__BP_MapWindow_Tab_Inventory_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__BP_MapWindow_Tab_Inventory_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__BP_MapWindow_Tab_Inventory_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__BP_MapWindow_Tab_WitchLantern_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__BP_MapWindow_Tab_WitchLantern_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__BP_MapWindow_Tab_WitchLantern_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__BP_MapWindow_BtnHotkeyY_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__BP_MapWindow_BtnHotkeyY_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__BP_MapWindow_BtnHotkeyY_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__Tab_Map_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__Tab_Map_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__Tab_Map_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__Tab_Quests_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__Tab_Quests_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__Tab_Quests_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__Tab_Attributes_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__Tab_Attributes_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__Tab_Attributes_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__Tab_Skills_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__Tab_Skills_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__Tab_Skills_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__Tab_Character_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__Tab_Character_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__Tab_Character_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.OnGamepadRBEvent
// (Event, Public, BlueprintEvent)

void UBP_MapWindow_C::OnGamepadRBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnGamepadRBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.OnGamepadLBEvent
// (Event, Public, BlueprintEvent)

void UBP_MapWindow_C::OnGamepadLBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnGamepadLBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.OnHide
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWindow_C::OnHide(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnHide");

	Params::BP_MapWindow_C_OnHide Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.OnShow
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWindow_C::OnShow(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnShow");

	Params::BP_MapWindow_C_OnShow Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.BndEvt__BtnHotkeyB_1_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_MapWindow_C::BndEvt__BtnHotkeyB_1_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BndEvt__BtnHotkeyB_1_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.OnGamepadXEvent
// (Event, Public, BlueprintEvent)

void UBP_MapWindow_C::OnGamepadXEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnGamepadXEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.OnGamepadBEvent
// (Event, Public, BlueprintEvent)

void UBP_MapWindow_C::OnGamepadBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "OnGamepadBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BtnHotkeyBClicked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OpenPauseMenu                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapWindow_C::BtnHotkeyBClicked(bool OpenPauseMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BtnHotkeyBClicked");

	Params::BP_MapWindow_C_BtnHotkeyBClicked Parms{};

	Parms.OpenPauseMenu = OpenPauseMenu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.BtnHotkeyXClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWindow_C::BtnHotkeyXClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BtnHotkeyXClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.ToggleLegend
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InShowLegend                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapWindow_C::ToggleLegend(bool InShowLegend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "ToggleLegend");

	Params::BP_MapWindow_C_ToggleLegend Parms{};

	Parms.InShowLegend = InShowLegend;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.SetBtnHotkeyLSState
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWindow_C::SetBtnHotkeyLSState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "SetBtnHotkeyLSState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BtnHotkeyLS_PressClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWindow_C::BtnHotkeyLS_PressClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BtnHotkeyLS_PressClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.SetOffscreenQuestIndicator
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InAngle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InRenderOpacity                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWindow_C::SetOffscreenQuestIndicator(float InAngle, float InRenderOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "SetOffscreenQuestIndicator");

	Params::BP_MapWindow_C_SetOffscreenQuestIndicator Parms{};

	Parms.InAngle = InAngle;
	Parms.InRenderOpacity = InRenderOpacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.GetWidgetEdgePoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Width                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Height                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   X                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWindow_C::GetWidgetEdgePoint(float Width, float Height, float Angle, float* X, float* Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "GetWidgetEdgePoint");

	Params::BP_MapWindow_C_GetWidgetEdgePoint Parms{};

	Parms.Width = Width;
	Parms.Height = Height;
	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);

	if (X != nullptr)
		*X = Parms.X;

	if (Y != nullptr)
		*Y = Parms.Y;
}


// Function BP_MapWindow.BP_MapWindow_C.BtnHotkeyRTClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWindow_C::BtnHotkeyRTClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BtnHotkeyRTClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.ToggleMarkers
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InShowMarkers                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapWindow_C::ToggleMarkers(bool InShowMarkers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "ToggleMarkers");

	Params::BP_MapWindow_C_ToggleMarkers Parms{};

	Parms.InShowMarkers = InShowMarkers;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWindow.BP_MapWindow_C.BtnHotkeyLTClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWindow_C::BtnHotkeyLTClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BtnHotkeyLTClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BtnHotkeyDpadLeftClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWindow_C::BtnHotkeyDpadLeftClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BtnHotkeyDpadLeftClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.BtnHotkeyDpadRightClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWindow_C::BtnHotkeyDpadRightClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "BtnHotkeyDpadRightClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWindow.BP_MapWindow_C.InvalidMarkerPlace
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWindow_C::InvalidMarkerPlace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWindow_C", "InvalidMarkerPlace");

	UObject::ProcessEvent(Func, nullptr);
}

}

