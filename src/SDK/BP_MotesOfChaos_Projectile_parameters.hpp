#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MotesOfChaos_Projectile

#include "Basic.hpp"

#include "man_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MotesOfChaos_Projectile.BP_MotesOfChaos_Projectile_C.ExecuteUbergraph_BP_MotesOfChaos_Projectile
// 0x00A0 (0x00A0 - 0x0000)
struct BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManProjectileEventType                       K2Node_CustomEvent_Type;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Position;                       // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EManProjectileEventType Type, const struct FVector& position, class AActor* HitActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class AHeroBase*                              K2Node_DynamicCast_AsHero_Base;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           CallFunc_BPGetAbilityByClass_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetTargetRef_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMotesOfChaosPassive*                   K2Node_DynamicCast_AsMotes_Of_Chaos_Passive;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterBase*                         K2Node_DynamicCast_AsCharacter_Base;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPIsAlive_ReturnValue;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           CallFunc_BPGetAbilityByName_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile) == 0x000008, "Wrong alignment on BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile");
static_assert(sizeof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile) == 0x0000A0, "Wrong size on BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, EntryPoint) == 0x000000, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, K2Node_CustomEvent_Type) == 0x00001C, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::K2Node_CustomEvent_Type' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, K2Node_CustomEvent_Position) == 0x000020, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::K2Node_CustomEvent_Position' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, K2Node_CustomEvent_HitActor) == 0x000030, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, CallFunc_PostEventAtLocation_ReturnValue) == 0x000038, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003C, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, K2Node_DynamicCast_AsHero_Base) == 0x000050, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::K2Node_DynamicCast_AsHero_Base' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, CallFunc_GetAbilityController_ReturnValue) == 0x000060, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, CallFunc_BPGetAbilityByClass_ReturnValue) == 0x000068, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::CallFunc_BPGetAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, CallFunc_GetTargetRef_ReturnValue) == 0x000070, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::CallFunc_GetTargetRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, K2Node_DynamicCast_AsMotes_Of_Chaos_Passive) == 0x000078, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::K2Node_DynamicCast_AsMotes_Of_Chaos_Passive' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, K2Node_DynamicCast_AsCharacter_Base) == 0x000088, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::K2Node_DynamicCast_AsCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, CallFunc_BPIsAlive_ReturnValue) == 0x000091, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::CallFunc_BPIsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, K2Node_Event_DeltaSeconds) == 0x000094, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile, CallFunc_BPGetAbilityByName_ReturnValue) == 0x000098, "Member 'BP_MotesOfChaos_Projectile_C_ExecuteUbergraph_BP_MotesOfChaos_Projectile::CallFunc_BPGetAbilityByName_ReturnValue' has a wrong offset!");

// Function BP_MotesOfChaos_Projectile.BP_MotesOfChaos_Projectile_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MotesOfChaos_Projectile_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MotesOfChaos_Projectile_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MotesOfChaos_Projectile_C_ReceiveTick");
static_assert(sizeof(BP_MotesOfChaos_Projectile_C_ReceiveTick) == 0x000004, "Wrong size on BP_MotesOfChaos_Projectile_C_ReceiveTick");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MotesOfChaos_Projectile_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_MotesOfChaos_Projectile.BP_MotesOfChaos_Projectile_C.OnStaticCollide
// 0x0018 (0x0018 - 0x0000)
struct BP_MotesOfChaos_Projectile_C_OnStaticCollide final
{
public:
	EManProjectileEventType                       Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                position;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MotesOfChaos_Projectile_C_OnStaticCollide) == 0x000008, "Wrong alignment on BP_MotesOfChaos_Projectile_C_OnStaticCollide");
static_assert(sizeof(BP_MotesOfChaos_Projectile_C_OnStaticCollide) == 0x000018, "Wrong size on BP_MotesOfChaos_Projectile_C_OnStaticCollide");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_OnStaticCollide, Type) == 0x000000, "Member 'BP_MotesOfChaos_Projectile_C_OnStaticCollide::Type' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_OnStaticCollide, position) == 0x000004, "Member 'BP_MotesOfChaos_Projectile_C_OnStaticCollide::position' has a wrong offset!");
static_assert(offsetof(BP_MotesOfChaos_Projectile_C_OnStaticCollide, HitActor) == 0x000010, "Member 'BP_MotesOfChaos_Projectile_C_OnStaticCollide::HitActor' has a wrong offset!");

}

