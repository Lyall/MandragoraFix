#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPCHorseTailor_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BP_NPCHorseTailor_Anim.BP_NPCHorseTailor_Anim_C
// 0x0AD0 (0x1170 - 0x06A0)
class UBP_NPCHorseTailor_Anim_C final : public UAnimInstanceBase
{
public:
	uint8                                         Pad_698[0x8];                                      // 0x0698(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x06A8(0x0030)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x06D8(0x00A8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0780(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x07A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x07D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x07F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0820(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0848(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0870(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0898(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x08C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x08E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0910(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0938(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0960(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0988(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x09B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x09D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0A00(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0A28(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0AA8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0AD8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0B58(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0B88(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0C08(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0C38(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0CB8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0CE8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0D68(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0D98(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0E18(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0E48(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0EC8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0EF8(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0FA8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1028(0x0080)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x10A8(0x00A8)()
	int32                                         IdleAnimIx;                                        // 0x1150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IdleBridgeAnimIx;                                  // 0x1154(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CustomIdleAnimIx;                                  // 0x1158(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIdleBridge;                                       // 0x115C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bConversation;                                     // 0x115D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIdleBridgeConversation;                           // 0x115E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bTransition;                                       // 0x115F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UBP_TailorAndHorse_Anim_C*              Tailor;                                            // 0x1160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_NPCHorseTailor_Anim(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_04988A0C455C74A0DB2CADAAC75FECE9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_A706E0A044001DD178408AAAAF7FD57D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_F6FBE070468C1C84720435AD49C4E5DC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_EF3A5F894DE6B06272D341815DD20E18();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_95EEC8AC4B58EDFBC7C74682960D6ABA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_04956BC24188B1C27955DEAB7D344936();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_FB4289B644E924FC346F2092D4F64F12();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_5F1EEBB048F6FC74DF8EB5945FED4FFA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_2BB65E20495CE2608E69E896987FBA7B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_80F7E8874CBA6475EE555AB4180F118D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_4810ACF146564981E52B69A68DED1DC3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_FFAA4E5D45A34F7D0F713EAAE6E099A4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCHorseTailor_Anim_AnimGraphNode_TransitionResult_8D817C9A47DB277D8C9D8692830C74E3();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPCHorseTailor_Anim_C">();
	}
	static class UBP_NPCHorseTailor_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NPCHorseTailor_Anim_C>();
	}
};
static_assert(alignof(UBP_NPCHorseTailor_Anim_C) == 0x000010, "Wrong alignment on UBP_NPCHorseTailor_Anim_C");
static_assert(sizeof(UBP_NPCHorseTailor_Anim_C) == 0x001170, "Wrong size on UBP_NPCHorseTailor_Anim_C");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, UberGraphFrame) == 0x0006A0, "Member 'UBP_NPCHorseTailor_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_Root) == 0x0006A8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_BlendListByInt_1) == 0x0006D8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_16) == 0x000780, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_15) == 0x0007A8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_14) == 0x0007D0, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_13) == 0x0007F8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_12) == 0x000820, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_11) == 0x000848, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_10) == 0x000870, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_9) == 0x000898, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_8) == 0x0008C0, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_7) == 0x0008E8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_6) == 0x000910, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_5) == 0x000938, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_4) == 0x000960, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_3) == 0x000988, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_2) == 0x0009B0, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult_1) == 0x0009D8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_TransitionResult) == 0x000A00, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_SequencePlayer_8) == 0x000A28, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_StateResult_6) == 0x000AA8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_SequencePlayer_7) == 0x000AD8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_StateResult_5) == 0x000B58, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_SequencePlayer_6) == 0x000B88, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_StateResult_4) == 0x000C08, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_SequencePlayer_5) == 0x000C38, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_StateResult_3) == 0x000CB8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_SequencePlayer_4) == 0x000CE8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_StateResult_2) == 0x000D68, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_SequencePlayer_3) == 0x000D98, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_StateResult_1) == 0x000E18, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_SequencePlayer_2) == 0x000E48, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_StateResult) == 0x000EC8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_StateMachine) == 0x000EF8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_SequencePlayer_1) == 0x000FA8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_SequencePlayer) == 0x001028, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, AnimGraphNode_BlendListByInt) == 0x0010A8, "Member 'UBP_NPCHorseTailor_Anim_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, IdleAnimIx) == 0x001150, "Member 'UBP_NPCHorseTailor_Anim_C::IdleAnimIx' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, IdleBridgeAnimIx) == 0x001154, "Member 'UBP_NPCHorseTailor_Anim_C::IdleBridgeAnimIx' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, CustomIdleAnimIx) == 0x001158, "Member 'UBP_NPCHorseTailor_Anim_C::CustomIdleAnimIx' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, bIdleBridge) == 0x00115C, "Member 'UBP_NPCHorseTailor_Anim_C::bIdleBridge' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, bConversation) == 0x00115D, "Member 'UBP_NPCHorseTailor_Anim_C::bConversation' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, bIdleBridgeConversation) == 0x00115E, "Member 'UBP_NPCHorseTailor_Anim_C::bIdleBridgeConversation' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, bTransition) == 0x00115F, "Member 'UBP_NPCHorseTailor_Anim_C::bTransition' has a wrong offset!");
static_assert(offsetof(UBP_NPCHorseTailor_Anim_C, Tailor) == 0x001160, "Member 'UBP_NPCHorseTailor_Anim_C::Tailor' has a wrong offset!");

}

