#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPCLittleGirlTutorial_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BP_NPCLittleGirlTutorial_Anim.BP_NPCLittleGirlTutorial_Anim_C
// 0x02A0 (0x0940 - 0x06A0)
class UBP_NPCLittleGirlTutorial_Anim_C final : public UAnimInstanceBase
{
public:
	uint8                                         Pad_698[0x8];                                      // 0x0698(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x06A8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x06D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0700(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0728(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x07A8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x07D8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0858(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0888(0x00B0)()
	bool                                          PlayIdleBridge;                                    // 0x0938(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_NPCLittleGirlTutorial_Anim(int32 EntryPoint);
	void AnimNotify_OnLittleGirlStartIdle();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCLittleGirlTutorial_Anim_AnimGraphNode_TransitionResult_6C1A3D164F3C85084B127A962150FAA1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_NPCLittleGirlTutorial_Anim_AnimGraphNode_TransitionResult_9E871E824178A35C5020B09C77E5FDF7();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPCLittleGirlTutorial_Anim_C">();
	}
	static class UBP_NPCLittleGirlTutorial_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NPCLittleGirlTutorial_Anim_C>();
	}
};
static_assert(alignof(UBP_NPCLittleGirlTutorial_Anim_C) == 0x000010, "Wrong alignment on UBP_NPCLittleGirlTutorial_Anim_C");
static_assert(sizeof(UBP_NPCLittleGirlTutorial_Anim_C) == 0x000940, "Wrong size on UBP_NPCLittleGirlTutorial_Anim_C");
static_assert(offsetof(UBP_NPCLittleGirlTutorial_Anim_C, UberGraphFrame) == 0x0006A0, "Member 'UBP_NPCLittleGirlTutorial_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_NPCLittleGirlTutorial_Anim_C, AnimGraphNode_Root) == 0x0006A8, "Member 'UBP_NPCLittleGirlTutorial_Anim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBP_NPCLittleGirlTutorial_Anim_C, AnimGraphNode_TransitionResult_1) == 0x0006D8, "Member 'UBP_NPCLittleGirlTutorial_Anim_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UBP_NPCLittleGirlTutorial_Anim_C, AnimGraphNode_TransitionResult) == 0x000700, "Member 'UBP_NPCLittleGirlTutorial_Anim_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UBP_NPCLittleGirlTutorial_Anim_C, AnimGraphNode_SequencePlayer_1) == 0x000728, "Member 'UBP_NPCLittleGirlTutorial_Anim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UBP_NPCLittleGirlTutorial_Anim_C, AnimGraphNode_StateResult_1) == 0x0007A8, "Member 'UBP_NPCLittleGirlTutorial_Anim_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UBP_NPCLittleGirlTutorial_Anim_C, AnimGraphNode_SequencePlayer) == 0x0007D8, "Member 'UBP_NPCLittleGirlTutorial_Anim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBP_NPCLittleGirlTutorial_Anim_C, AnimGraphNode_StateResult) == 0x000858, "Member 'UBP_NPCLittleGirlTutorial_Anim_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UBP_NPCLittleGirlTutorial_Anim_C, AnimGraphNode_StateMachine) == 0x000888, "Member 'UBP_NPCLittleGirlTutorial_Anim_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UBP_NPCLittleGirlTutorial_Anim_C, PlayIdleBridge) == 0x000938, "Member 'UBP_NPCLittleGirlTutorial_Anim_C::PlayIdleBridge' has a wrong offset!");

}

