#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_Actor

#include "Basic.hpp"

#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPC_Actor.BP_NPC_Actor_C
// 0x0058 (0x0830 - 0x07D8)
class ABP_NPC_Actor_C final : public AActorBase
{
public:
	class UAkComponent*                           Ak;                                                // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkGameObject*                          AkGameObject;                                      // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CameraSphere;                                      // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SpeechBubbleComponent_C*            BP_SpeechBubbleComponent;                          // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LeftHandSkeletalMesh;                              // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 RightHandSkeletalMesh;                             // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightHandStaticMesh;                               // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftHandStaticMesh;                                // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0820(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SubtitleVisibleDistanceOverride;                   // 0x0828(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPC_Actor_C">();
	}
	static class ABP_NPC_Actor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NPC_Actor_C>();
	}
};
static_assert(alignof(ABP_NPC_Actor_C) == 0x000008, "Wrong alignment on ABP_NPC_Actor_C");
static_assert(sizeof(ABP_NPC_Actor_C) == 0x000830, "Wrong size on ABP_NPC_Actor_C");
static_assert(offsetof(ABP_NPC_Actor_C, Ak) == 0x0007D8, "Member 'ABP_NPC_Actor_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Actor_C, AkGameObject) == 0x0007E0, "Member 'ABP_NPC_Actor_C::AkGameObject' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Actor_C, CameraSphere) == 0x0007E8, "Member 'ABP_NPC_Actor_C::CameraSphere' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Actor_C, BP_SpeechBubbleComponent) == 0x0007F0, "Member 'ABP_NPC_Actor_C::BP_SpeechBubbleComponent' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Actor_C, LeftHandSkeletalMesh) == 0x0007F8, "Member 'ABP_NPC_Actor_C::LeftHandSkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Actor_C, RightHandSkeletalMesh) == 0x000800, "Member 'ABP_NPC_Actor_C::RightHandSkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Actor_C, RightHandStaticMesh) == 0x000808, "Member 'ABP_NPC_Actor_C::RightHandStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Actor_C, LeftHandStaticMesh) == 0x000810, "Member 'ABP_NPC_Actor_C::LeftHandStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Actor_C, SkeletalMesh) == 0x000818, "Member 'ABP_NPC_Actor_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Actor_C, DefaultSceneRoot) == 0x000820, "Member 'ABP_NPC_Actor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Actor_C, SubtitleVisibleDistanceOverride) == 0x000828, "Member 'ABP_NPC_Actor_C::SubtitleVisibleDistanceOverride' has a wrong offset!");

}

