#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_Bestiary_Button

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_NPC_Bestiary_Button.BP_NPC_Bestiary_Button_C
// 0x00A0 (0x0330 - 0x0290)
class UBP_NPC_Bestiary_Button_C final : public UNPCBestiaryBtnUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HighlightAnim;                                     // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                ButtonFrame;                                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Caption;                                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                FrameSel;                                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NewRegistryIconLeft;                               // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NewRegistryIconRight;                              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnClicked;                                         // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnHovered;                                         // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnUnhovered;                                       // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnPressed;                                         // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnReleased;                                        // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnFocus;                                           // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_NPC_Bestiary_Button(int32 EntryPoint);
	void BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void OnSetSlot(const class FText& InName, bool bInNewRegistry);
	void OnUnfocused(bool bAnimate);
	void OnFocused(bool bAnimate);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void GetSeedFromCaption(float* OutSeed1, float* OutSeed2);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPC_Bestiary_Button_C">();
	}
	static class UBP_NPC_Bestiary_Button_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NPC_Bestiary_Button_C>();
	}
};
static_assert(alignof(UBP_NPC_Bestiary_Button_C) == 0x000008, "Wrong alignment on UBP_NPC_Bestiary_Button_C");
static_assert(sizeof(UBP_NPC_Bestiary_Button_C) == 0x000330, "Wrong size on UBP_NPC_Bestiary_Button_C");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, UberGraphFrame) == 0x000290, "Member 'UBP_NPC_Bestiary_Button_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, HighlightAnim) == 0x000298, "Member 'UBP_NPC_Bestiary_Button_C::HighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, ButtonFrame) == 0x0002A0, "Member 'UBP_NPC_Bestiary_Button_C::ButtonFrame' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, Caption) == 0x0002A8, "Member 'UBP_NPC_Bestiary_Button_C::Caption' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, FrameSel) == 0x0002B0, "Member 'UBP_NPC_Bestiary_Button_C::FrameSel' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, NewRegistryIconLeft) == 0x0002B8, "Member 'UBP_NPC_Bestiary_Button_C::NewRegistryIconLeft' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, NewRegistryIconRight) == 0x0002C0, "Member 'UBP_NPC_Bestiary_Button_C::NewRegistryIconRight' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, Overlay_0) == 0x0002C8, "Member 'UBP_NPC_Bestiary_Button_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, OnClicked) == 0x0002D0, "Member 'UBP_NPC_Bestiary_Button_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, OnHovered) == 0x0002E0, "Member 'UBP_NPC_Bestiary_Button_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, OnUnhovered) == 0x0002F0, "Member 'UBP_NPC_Bestiary_Button_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, OnPressed) == 0x000300, "Member 'UBP_NPC_Bestiary_Button_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, OnReleased) == 0x000310, "Member 'UBP_NPC_Bestiary_Button_C::OnReleased' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Button_C, OnFocus) == 0x000320, "Member 'UBP_NPC_Bestiary_Button_C::OnFocus' has a wrong offset!");

}

