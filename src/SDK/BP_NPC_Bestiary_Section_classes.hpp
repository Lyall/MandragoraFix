#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_Bestiary_Section

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_NPC_Bestiary_Section.BP_NPC_Bestiary_Section_C
// 0x0030 (0x0290 - 0x0260)
class UBP_NPC_Bestiary_Section_C final : public UNPCBestiarySectionUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNamedSlot*                             ContentSlot;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconSectionHidden;                                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconSectionLocked;                                 // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NumberRequiredText;                                // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          SectionHidden;                                     // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberRequired;                                    // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_NPC_Bestiary_Section(int32 EntryPoint);
	void OnSetSlot(int32 InKillRequirement, bool bInSectionHidden);
	void PreConstruct(bool IsDesignTime);
	void ToggleHidden(bool InSectionHidden);
	void SetNumberRequired(int32 InNumberRequired);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPC_Bestiary_Section_C">();
	}
	static class UBP_NPC_Bestiary_Section_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NPC_Bestiary_Section_C>();
	}
};
static_assert(alignof(UBP_NPC_Bestiary_Section_C) == 0x000008, "Wrong alignment on UBP_NPC_Bestiary_Section_C");
static_assert(sizeof(UBP_NPC_Bestiary_Section_C) == 0x000290, "Wrong size on UBP_NPC_Bestiary_Section_C");
static_assert(offsetof(UBP_NPC_Bestiary_Section_C, UberGraphFrame) == 0x000260, "Member 'UBP_NPC_Bestiary_Section_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Section_C, ContentSlot) == 0x000268, "Member 'UBP_NPC_Bestiary_Section_C::ContentSlot' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Section_C, IconSectionHidden) == 0x000270, "Member 'UBP_NPC_Bestiary_Section_C::IconSectionHidden' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Section_C, IconSectionLocked) == 0x000278, "Member 'UBP_NPC_Bestiary_Section_C::IconSectionLocked' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Section_C, NumberRequiredText) == 0x000280, "Member 'UBP_NPC_Bestiary_Section_C::NumberRequiredText' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Section_C, SectionHidden) == 0x000288, "Member 'UBP_NPC_Bestiary_Section_C::SectionHidden' has a wrong offset!");
static_assert(offsetof(UBP_NPC_Bestiary_Section_C, NumberRequired) == 0x00028C, "Member 'UBP_NPC_Bestiary_Section_C::NumberRequired' has a wrong offset!");

}

