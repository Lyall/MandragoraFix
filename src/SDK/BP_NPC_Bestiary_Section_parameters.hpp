#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_Bestiary_Section

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_NPC_Bestiary_Section.BP_NPC_Bestiary_Section_C.ExecuteUbergraph_BP_NPC_Bestiary_Section
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InKillRequirement;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInSectionHidden;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section) == 0x000004, "Wrong alignment on BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section");
static_assert(sizeof(BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section) == 0x000010, "Wrong size on BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section, EntryPoint) == 0x000000, "Member 'BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section, K2Node_Event_InKillRequirement) == 0x000008, "Member 'BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section::K2Node_Event_InKillRequirement' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section, K2Node_Event_bInSectionHidden) == 0x00000C, "Member 'BP_NPC_Bestiary_Section_C_ExecuteUbergraph_BP_NPC_Bestiary_Section::K2Node_Event_bInSectionHidden' has a wrong offset!");

// Function BP_NPC_Bestiary_Section.BP_NPC_Bestiary_Section_C.OnSetSlot
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_Bestiary_Section_C_OnSetSlot final
{
public:
	int32                                         InKillRequirement;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInSectionHidden;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Bestiary_Section_C_OnSetSlot) == 0x000004, "Wrong alignment on BP_NPC_Bestiary_Section_C_OnSetSlot");
static_assert(sizeof(BP_NPC_Bestiary_Section_C_OnSetSlot) == 0x000008, "Wrong size on BP_NPC_Bestiary_Section_C_OnSetSlot");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_OnSetSlot, InKillRequirement) == 0x000000, "Member 'BP_NPC_Bestiary_Section_C_OnSetSlot::InKillRequirement' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_OnSetSlot, bInSectionHidden) == 0x000004, "Member 'BP_NPC_Bestiary_Section_C_OnSetSlot::bInSectionHidden' has a wrong offset!");

// Function BP_NPC_Bestiary_Section.BP_NPC_Bestiary_Section_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_Bestiary_Section_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Bestiary_Section_C_PreConstruct) == 0x000001, "Wrong alignment on BP_NPC_Bestiary_Section_C_PreConstruct");
static_assert(sizeof(BP_NPC_Bestiary_Section_C_PreConstruct) == 0x000001, "Wrong size on BP_NPC_Bestiary_Section_C_PreConstruct");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_NPC_Bestiary_Section_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_NPC_Bestiary_Section.BP_NPC_Bestiary_Section_C.ToggleHidden
// 0x0009 (0x0009 - 0x0000)
struct BP_NPC_Bestiary_Section_C_ToggleHidden final
{
public:
	bool                                          InSectionHidden;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_Section_C_ToggleHidden) == 0x000001, "Wrong alignment on BP_NPC_Bestiary_Section_C_ToggleHidden");
static_assert(sizeof(BP_NPC_Bestiary_Section_C_ToggleHidden) == 0x000009, "Wrong size on BP_NPC_Bestiary_Section_C_ToggleHidden");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ToggleHidden, InSectionHidden) == 0x000000, "Member 'BP_NPC_Bestiary_Section_C_ToggleHidden::InSectionHidden' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ToggleHidden, Temp_bool_Variable) == 0x000001, "Member 'BP_NPC_Bestiary_Section_C_ToggleHidden::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ToggleHidden, Temp_byte_Variable) == 0x000002, "Member 'BP_NPC_Bestiary_Section_C_ToggleHidden::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ToggleHidden, Temp_byte_Variable_1) == 0x000003, "Member 'BP_NPC_Bestiary_Section_C_ToggleHidden::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ToggleHidden, Temp_bool_Variable_1) == 0x000004, "Member 'BP_NPC_Bestiary_Section_C_ToggleHidden::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ToggleHidden, Temp_byte_Variable_2) == 0x000005, "Member 'BP_NPC_Bestiary_Section_C_ToggleHidden::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ToggleHidden, Temp_byte_Variable_3) == 0x000006, "Member 'BP_NPC_Bestiary_Section_C_ToggleHidden::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ToggleHidden, K2Node_Select_Default) == 0x000007, "Member 'BP_NPC_Bestiary_Section_C_ToggleHidden::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_ToggleHidden, K2Node_Select_Default_1) == 0x000008, "Member 'BP_NPC_Bestiary_Section_C_ToggleHidden::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_NPC_Bestiary_Section.BP_NPC_Bestiary_Section_C.SetNumberRequired
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_Bestiary_Section_C_SetNumberRequired final
{
public:
	int32                                         InNumberRequired;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0008(0x0018)()
};
static_assert(alignof(BP_NPC_Bestiary_Section_C_SetNumberRequired) == 0x000008, "Wrong alignment on BP_NPC_Bestiary_Section_C_SetNumberRequired");
static_assert(sizeof(BP_NPC_Bestiary_Section_C_SetNumberRequired) == 0x000020, "Wrong size on BP_NPC_Bestiary_Section_C_SetNumberRequired");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_SetNumberRequired, InNumberRequired) == 0x000000, "Member 'BP_NPC_Bestiary_Section_C_SetNumberRequired::InNumberRequired' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_Section_C_SetNumberRequired, CallFunc_IntToText_ReturnValue) == 0x000008, "Member 'BP_NPC_Bestiary_Section_C_SetNumberRequired::CallFunc_IntToText_ReturnValue' has a wrong offset!");

}

