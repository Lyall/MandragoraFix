#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_Bestiary

#include "Basic.hpp"

#include "man_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.ExecuteUbergraph_BP_NPC_Bestiary
// 0x01E8 (0x01E8 - 0x0000)
struct BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0050(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InName;                               // 0x00B0(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InDescription;                        // 0x00C8(0x0018)(ConstParm)
	const class UTexture2D*                       K2Node_Event_InPicture;                            // 0x00E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InKillNum;                            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InKillNumRequestForNextSection;       // 0x00F0(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InPageNumber;                         // 0x0108(0x0018)(ConstParm)
	EBestiaryCategory                             K2Node_Event_InBestiaryCategoryFilter;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNPCBestiaryFilterSlotUserWidget*       K2Node_ComponentBoundEvent_WidgetReference_5;      // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBestiaryCategory                             K2Node_ComponentBoundEvent_BestiaryCategoryFilter_5; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNPCBestiaryFilterSlotUserWidget*       K2Node_ComponentBoundEvent_WidgetReference_4;      // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBestiaryCategory                             K2Node_ComponentBoundEvent_BestiaryCategoryFilter_4; // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNPCBestiaryFilterSlotUserWidget*       K2Node_ComponentBoundEvent_WidgetReference_3;      // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBestiaryCategory                             K2Node_ComponentBoundEvent_BestiaryCategoryFilter_3; // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNPCBestiaryFilterSlotUserWidget*       K2Node_ComponentBoundEvent_WidgetReference_2;      // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBestiaryCategory                             K2Node_ComponentBoundEvent_BestiaryCategoryFilter_2; // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNPCBestiaryFilterSlotUserWidget*       K2Node_ComponentBoundEvent_WidgetReference_1;      // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBestiaryCategory                             K2Node_ComponentBoundEvent_BestiaryCategoryFilter_1; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNPCBestiaryFilterSlotUserWidget*       K2Node_ComponentBoundEvent_WidgetReference;        // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBestiaryCategory                             K2Node_ComponentBoundEvent_BestiaryCategoryFilter; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0188(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NPC_Bestiary_Button_C*              K2Node_DynamicCast_AsBP_NPC_Bestiary_Button;       // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInEnabled_1;                         // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B3[0x5];                                      // 0x01B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInEnabled;                           // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InInputDisplay;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InControlDisplay;                     // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary) == 0x000008, "Wrong alignment on BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary");
static_assert(sizeof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary) == 0x0001E8, "Wrong size on BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, EntryPoint) == 0x000000, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, Temp_bool_Variable) == 0x000004, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, Temp_object_Variable) == 0x000018, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, Temp_object_Variable_1) == 0x000020, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, Temp_bool_Variable_1) == 0x000028, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, Temp_object_Variable_2) == 0x000030, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, Temp_object_Variable_3) == 0x000038, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_IsDesignTime) == 0x00004C, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_MyGeometry) == 0x000050, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_InDeltaTime) == 0x000088, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_AnimDuration_1) == 0x00008C, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x000090, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_AnimDuration) == 0x000094, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, CallFunc_PlayAnimation_ReturnValue) == 0x000098, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x0000A0, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000A8, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_InName) == 0x0000B0, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_InDescription) == 0x0000C8, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_InDescription' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_InPicture) == 0x0000E0, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_InPicture' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_InKillNum) == 0x0000E8, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_InKillNum' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_InKillNumRequestForNextSection) == 0x0000F0, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_InKillNumRequestForNextSection' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_InPageNumber) == 0x000108, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_InPageNumber' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_InBestiaryCategoryFilter) == 0x000120, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_InBestiaryCategoryFilter' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_ComponentBoundEvent_WidgetReference_5) == 0x000128, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_ComponentBoundEvent_WidgetReference_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_ComponentBoundEvent_BestiaryCategoryFilter_5) == 0x000130, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_ComponentBoundEvent_BestiaryCategoryFilter_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_ComponentBoundEvent_WidgetReference_4) == 0x000138, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_ComponentBoundEvent_WidgetReference_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_ComponentBoundEvent_BestiaryCategoryFilter_4) == 0x000140, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_ComponentBoundEvent_BestiaryCategoryFilter_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_ComponentBoundEvent_WidgetReference_3) == 0x000148, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_ComponentBoundEvent_WidgetReference_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_ComponentBoundEvent_BestiaryCategoryFilter_3) == 0x000150, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_ComponentBoundEvent_BestiaryCategoryFilter_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_ComponentBoundEvent_WidgetReference_2) == 0x000158, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_ComponentBoundEvent_WidgetReference_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_ComponentBoundEvent_BestiaryCategoryFilter_2) == 0x000160, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_ComponentBoundEvent_BestiaryCategoryFilter_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_ComponentBoundEvent_WidgetReference_1) == 0x000168, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_ComponentBoundEvent_WidgetReference_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_ComponentBoundEvent_BestiaryCategoryFilter_1) == 0x000170, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_ComponentBoundEvent_BestiaryCategoryFilter_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_ComponentBoundEvent_WidgetReference) == 0x000178, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_ComponentBoundEvent_WidgetReference' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_ComponentBoundEvent_BestiaryCategoryFilter) == 0x000180, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_ComponentBoundEvent_BestiaryCategoryFilter' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, CallFunc_GetAllChildren_ReturnValue) == 0x000188, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, CallFunc_Array_Get_Item) == 0x000198, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, CallFunc_Array_Length_ReturnValue) == 0x0001A0, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_DynamicCast_AsBP_NPC_Bestiary_Button) == 0x0001A8, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_DynamicCast_AsBP_NPC_Bestiary_Button' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, CallFunc_Less_IntInt_ReturnValue) == 0x0001B1, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_bInEnabled_1) == 0x0001B2, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_bInEnabled_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Select_Default) == 0x0001B8, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_bInEnabled) == 0x0001C0, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_bInEnabled' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Select_Default_1) == 0x0001C8, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0001D0, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0001D8, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_InInputDisplay) == 0x0001E0, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary, K2Node_Event_InControlDisplay) == 0x0001E1, "Member 'BP_NPC_Bestiary_C_ExecuteUbergraph_BP_NPC_Bestiary::K2Node_Event_InControlDisplay' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.OnSetInputDisplay
// 0x0002 (0x0002 - 0x0000)
struct BP_NPC_Bestiary_C_OnSetInputDisplay final
{
public:
	EInputDisplay                                 InInputDisplay;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 InControlDisplay;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_OnSetInputDisplay) == 0x000001, "Wrong alignment on BP_NPC_Bestiary_C_OnSetInputDisplay");
static_assert(sizeof(BP_NPC_Bestiary_C_OnSetInputDisplay) == 0x000002, "Wrong size on BP_NPC_Bestiary_C_OnSetInputDisplay");
static_assert(offsetof(BP_NPC_Bestiary_C_OnSetInputDisplay, InInputDisplay) == 0x000000, "Member 'BP_NPC_Bestiary_C_OnSetInputDisplay::InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_OnSetInputDisplay, InControlDisplay) == 0x000001, "Member 'BP_NPC_Bestiary_C_OnSetInputDisplay::InControlDisplay' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.OnSetNextBtnState
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_Bestiary_C_OnSetNextBtnState final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Bestiary_C_OnSetNextBtnState) == 0x000001, "Wrong alignment on BP_NPC_Bestiary_C_OnSetNextBtnState");
static_assert(sizeof(BP_NPC_Bestiary_C_OnSetNextBtnState) == 0x000001, "Wrong size on BP_NPC_Bestiary_C_OnSetNextBtnState");
static_assert(offsetof(BP_NPC_Bestiary_C_OnSetNextBtnState, bInEnabled) == 0x000000, "Member 'BP_NPC_Bestiary_C_OnSetNextBtnState::bInEnabled' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.OnSetPrevBtnState
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_Bestiary_C_OnSetPrevBtnState final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Bestiary_C_OnSetPrevBtnState) == 0x000001, "Wrong alignment on BP_NPC_Bestiary_C_OnSetPrevBtnState");
static_assert(sizeof(BP_NPC_Bestiary_C_OnSetPrevBtnState) == 0x000001, "Wrong size on BP_NPC_Bestiary_C_OnSetPrevBtnState");
static_assert(offsetof(BP_NPC_Bestiary_C_OnSetPrevBtnState, bInEnabled) == 0x000000, "Member 'BP_NPC_Bestiary_C_OnSetPrevBtnState::bInEnabled' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.BndEvt__BP_NPC_Bestiary_Filter_Alphabetical_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Alphabetical_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature final
{
public:
	class UNPCBestiaryFilterSlotUserWidget*       WidgetReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBestiaryCategory                             BestiaryCategoryFilter;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Alphabetical_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Alphabetical_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature");
static_assert(sizeof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Alphabetical_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature) == 0x000010, "Wrong size on BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Alphabetical_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature");
static_assert(offsetof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Alphabetical_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature, WidgetReference) == 0x000000, "Member 'BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Alphabetical_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature::WidgetReference' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Alphabetical_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature, BestiaryCategoryFilter) == 0x000008, "Member 'BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Alphabetical_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature::BestiaryCategoryFilter' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.BndEvt__BP_NPC_Bestiary_Filter_Entropic_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Entropic_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature final
{
public:
	class UNPCBestiaryFilterSlotUserWidget*       WidgetReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBestiaryCategory                             BestiaryCategoryFilter;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Entropic_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Entropic_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature");
static_assert(sizeof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Entropic_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature) == 0x000010, "Wrong size on BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Entropic_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature");
static_assert(offsetof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Entropic_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature, WidgetReference) == 0x000000, "Member 'BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Entropic_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature::WidgetReference' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Entropic_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature, BestiaryCategoryFilter) == 0x000008, "Member 'BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Entropic_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature::BestiaryCategoryFilter' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.BndEvt__BP_NPC_Bestiary_Filter_Boss_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Boss_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature final
{
public:
	class UNPCBestiaryFilterSlotUserWidget*       WidgetReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBestiaryCategory                             BestiaryCategoryFilter;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Boss_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Boss_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature");
static_assert(sizeof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Boss_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature) == 0x000010, "Wrong size on BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Boss_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature");
static_assert(offsetof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Boss_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature, WidgetReference) == 0x000000, "Member 'BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Boss_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature::WidgetReference' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Boss_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature, BestiaryCategoryFilter) == 0x000008, "Member 'BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Boss_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature::BestiaryCategoryFilter' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.BndEvt__BP_NPC_Bestiary_Filter_Miniboss_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Miniboss_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature final
{
public:
	class UNPCBestiaryFilterSlotUserWidget*       WidgetReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBestiaryCategory                             BestiaryCategoryFilter;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Miniboss_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Miniboss_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature");
static_assert(sizeof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Miniboss_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature) == 0x000010, "Wrong size on BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Miniboss_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature");
static_assert(offsetof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Miniboss_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature, WidgetReference) == 0x000000, "Member 'BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Miniboss_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature::WidgetReference' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Miniboss_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature, BestiaryCategoryFilter) == 0x000008, "Member 'BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Miniboss_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature::BestiaryCategoryFilter' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.BndEvt__BP_NPC_Bestiary_Filter_Elite_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Elite_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature final
{
public:
	class UNPCBestiaryFilterSlotUserWidget*       WidgetReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBestiaryCategory                             BestiaryCategoryFilter;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Elite_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Elite_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature");
static_assert(sizeof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Elite_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature) == 0x000010, "Wrong size on BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Elite_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature");
static_assert(offsetof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Elite_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature, WidgetReference) == 0x000000, "Member 'BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Elite_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature::WidgetReference' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Elite_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature, BestiaryCategoryFilter) == 0x000008, "Member 'BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Elite_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature::BestiaryCategoryFilter' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.BndEvt__BP_NPC_Bestiary_Filter_Basic_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Basic_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature final
{
public:
	class UNPCBestiaryFilterSlotUserWidget*       WidgetReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBestiaryCategory                             BestiaryCategoryFilter;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Basic_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Basic_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature");
static_assert(sizeof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Basic_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature) == 0x000010, "Wrong size on BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Basic_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature");
static_assert(offsetof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Basic_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature, WidgetReference) == 0x000000, "Member 'BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Basic_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature::WidgetReference' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Basic_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature, BestiaryCategoryFilter) == 0x000008, "Member 'BP_NPC_Bestiary_C_BndEvt__BP_NPC_Bestiary_Filter_Basic_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature::BestiaryCategoryFilter' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.OnSetFilter
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_Bestiary_C_OnSetFilter final
{
public:
	EBestiaryCategory                             InBestiaryCategoryFilter;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_OnSetFilter) == 0x000001, "Wrong alignment on BP_NPC_Bestiary_C_OnSetFilter");
static_assert(sizeof(BP_NPC_Bestiary_C_OnSetFilter) == 0x000001, "Wrong size on BP_NPC_Bestiary_C_OnSetFilter");
static_assert(offsetof(BP_NPC_Bestiary_C_OnSetFilter, InBestiaryCategoryFilter) == 0x000000, "Member 'BP_NPC_Bestiary_C_OnSetFilter::InBestiaryCategoryFilter' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.OnUpdateBestiaryPanels
// 0x0070 (0x0070 - 0x0000)
struct BP_NPC_Bestiary_C_OnUpdateBestiaryPanels final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   InDescription;                                     // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	const class UTexture2D*                       InPicture;                                         // 0x0030(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InKillNum;                                         // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InKillNumRequestForNextSection;                    // 0x0040(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   InPageNumber;                                      // 0x0058(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_NPC_Bestiary_C_OnUpdateBestiaryPanels) == 0x000008, "Wrong alignment on BP_NPC_Bestiary_C_OnUpdateBestiaryPanels");
static_assert(sizeof(BP_NPC_Bestiary_C_OnUpdateBestiaryPanels) == 0x000070, "Wrong size on BP_NPC_Bestiary_C_OnUpdateBestiaryPanels");
static_assert(offsetof(BP_NPC_Bestiary_C_OnUpdateBestiaryPanels, InName) == 0x000000, "Member 'BP_NPC_Bestiary_C_OnUpdateBestiaryPanels::InName' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_OnUpdateBestiaryPanels, InDescription) == 0x000018, "Member 'BP_NPC_Bestiary_C_OnUpdateBestiaryPanels::InDescription' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_OnUpdateBestiaryPanels, InPicture) == 0x000030, "Member 'BP_NPC_Bestiary_C_OnUpdateBestiaryPanels::InPicture' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_OnUpdateBestiaryPanels, InKillNum) == 0x000038, "Member 'BP_NPC_Bestiary_C_OnUpdateBestiaryPanels::InKillNum' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_OnUpdateBestiaryPanels, InKillNumRequestForNextSection) == 0x000040, "Member 'BP_NPC_Bestiary_C_OnUpdateBestiaryPanels::InKillNumRequestForNextSection' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_OnUpdateBestiaryPanels, InPageNumber) == 0x000058, "Member 'BP_NPC_Bestiary_C_OnUpdateBestiaryPanels::InPageNumber' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_Bestiary_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_OnHide) == 0x000004, "Wrong alignment on BP_NPC_Bestiary_C_OnHide");
static_assert(sizeof(BP_NPC_Bestiary_C_OnHide) == 0x000004, "Wrong size on BP_NPC_Bestiary_C_OnHide");
static_assert(offsetof(BP_NPC_Bestiary_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_NPC_Bestiary_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_Bestiary_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_OnShow) == 0x000004, "Wrong alignment on BP_NPC_Bestiary_C_OnShow");
static_assert(sizeof(BP_NPC_Bestiary_C_OnShow) == 0x000004, "Wrong size on BP_NPC_Bestiary_C_OnShow");
static_assert(offsetof(BP_NPC_Bestiary_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_NPC_Bestiary_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_NPC_Bestiary_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_Tick) == 0x000004, "Wrong alignment on BP_NPC_Bestiary_C_Tick");
static_assert(sizeof(BP_NPC_Bestiary_C_Tick) == 0x00003C, "Wrong size on BP_NPC_Bestiary_C_Tick");
static_assert(offsetof(BP_NPC_Bestiary_C_Tick, MyGeometry) == 0x000000, "Member 'BP_NPC_Bestiary_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_NPC_Bestiary_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_Bestiary_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Bestiary_C_PreConstruct) == 0x000001, "Wrong alignment on BP_NPC_Bestiary_C_PreConstruct");
static_assert(sizeof(BP_NPC_Bestiary_C_PreConstruct) == 0x000001, "Wrong size on BP_NPC_Bestiary_C_PreConstruct");
static_assert(offsetof(BP_NPC_Bestiary_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_NPC_Bestiary_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.UpdateBestiaryPanels
// 0x0140 (0x0140 - 0x0000)
struct BP_NPC_Bestiary_C_UpdateBestiaryPanels final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InDescription;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             InPicture;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InKillNum;                                         // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InKillNumRequestForNextSection;                    // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InPageNumber;                                      // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0100(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_3;                           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0128(0x0018)()
};
static_assert(alignof(BP_NPC_Bestiary_C_UpdateBestiaryPanels) == 0x000008, "Wrong alignment on BP_NPC_Bestiary_C_UpdateBestiaryPanels");
static_assert(sizeof(BP_NPC_Bestiary_C_UpdateBestiaryPanels) == 0x000140, "Wrong size on BP_NPC_Bestiary_C_UpdateBestiaryPanels");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, InName) == 0x000000, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::InName' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, InDescription) == 0x000018, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::InDescription' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, InPicture) == 0x000030, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::InPicture' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, InKillNum) == 0x000038, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::InKillNum' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, InKillNumRequestForNextSection) == 0x000040, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::InKillNumRequestForNextSection' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, InPageNumber) == 0x000058, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::InPageNumber' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, Temp_bool_Variable) == 0x000070, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, Temp_object_Variable) == 0x000078, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, Temp_object_Variable_1) == 0x000080, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, Temp_bool_Variable_1) == 0x000088, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, Temp_object_Variable_2) == 0x000090, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, Temp_object_Variable_3) == 0x000098, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, Temp_bool_Variable_2) == 0x0000A0, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, Temp_object_Variable_4) == 0x0000A8, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, Temp_object_Variable_5) == 0x0000B0, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, Temp_bool_Variable_3) == 0x0000B8, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, Temp_float_Variable) == 0x0000BC, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, Temp_float_Variable_1) == 0x0000C0, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, K2Node_Select_Default) == 0x0000C8, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, K2Node_Select_Default_1) == 0x0000D0, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D8, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, CallFunc_Replace_ReturnValue) == 0x0000E8, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, K2Node_Select_Default_2) == 0x0000F8, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, CallFunc_Conv_StringToText_ReturnValue) == 0x000100, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, K2Node_Select_Default_3) == 0x00011C, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000120, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_UpdateBestiaryPanels, CallFunc_IntToText_ReturnValue) == 0x000128, "Member 'BP_NPC_Bestiary_C_UpdateBestiaryPanels::CallFunc_IntToText_ReturnValue' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.BtnHotkeyAClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_Bestiary_C_BtnHotkeyAClicked final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Bestiary_C_BtnHotkeyAClicked) == 0x000001, "Wrong alignment on BP_NPC_Bestiary_C_BtnHotkeyAClicked");
static_assert(sizeof(BP_NPC_Bestiary_C_BtnHotkeyAClicked) == 0x000001, "Wrong size on BP_NPC_Bestiary_C_BtnHotkeyAClicked");
static_assert(offsetof(BP_NPC_Bestiary_C_BtnHotkeyAClicked, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'BP_NPC_Bestiary_C_BtnHotkeyAClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.BtnHotkeyLSRightClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_Bestiary_C_BtnHotkeyLSRightClicked final
{
public:
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Bestiary_C_BtnHotkeyLSRightClicked) == 0x000001, "Wrong alignment on BP_NPC_Bestiary_C_BtnHotkeyLSRightClicked");
static_assert(sizeof(BP_NPC_Bestiary_C_BtnHotkeyLSRightClicked) == 0x000001, "Wrong size on BP_NPC_Bestiary_C_BtnHotkeyLSRightClicked");
static_assert(offsetof(BP_NPC_Bestiary_C_BtnHotkeyLSRightClicked, CallFunc_GetIsEnabled_ReturnValue) == 0x000000, "Member 'BP_NPC_Bestiary_C_BtnHotkeyLSRightClicked::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.BtnHotkeyLSLeftClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_Bestiary_C_BtnHotkeyLSLeftClicked final
{
public:
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Bestiary_C_BtnHotkeyLSLeftClicked) == 0x000001, "Wrong alignment on BP_NPC_Bestiary_C_BtnHotkeyLSLeftClicked");
static_assert(sizeof(BP_NPC_Bestiary_C_BtnHotkeyLSLeftClicked) == 0x000001, "Wrong size on BP_NPC_Bestiary_C_BtnHotkeyLSLeftClicked");
static_assert(offsetof(BP_NPC_Bestiary_C_BtnHotkeyLSLeftClicked, CallFunc_GetIsEnabled_ReturnValue) == 0x000000, "Member 'BP_NPC_Bestiary_C_BtnHotkeyLSLeftClicked::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.ToggleEntropicShade
// 0x0038 (0x0038 - 0x0000)
struct BP_NPC_Bestiary_C_ToggleEntropicShade final
{
public:
	bool                                          InIsEntropicShade;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetEntropyTexture_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_ToggleEntropicShade) == 0x000008, "Wrong alignment on BP_NPC_Bestiary_C_ToggleEntropicShade");
static_assert(sizeof(BP_NPC_Bestiary_C_ToggleEntropicShade) == 0x000038, "Wrong size on BP_NPC_Bestiary_C_ToggleEntropicShade");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, InIsEntropicShade) == 0x000000, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::InIsEntropicShade' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, Temp_bool_Variable) == 0x000001, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, Temp_object_Variable) == 0x000008, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, Temp_bool_Variable_1) == 0x000010, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, Temp_byte_Variable) == 0x000011, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, Temp_byte_Variable_1) == 0x000012, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, Temp_bool_Variable_2) == 0x000013, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, Temp_byte_Variable_2) == 0x000014, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, Temp_byte_Variable_3) == 0x000015, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, CallFunc_GetEntropyTexture_ReturnValue) == 0x000018, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::CallFunc_GetEntropyTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000020, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, K2Node_Select_Default) == 0x000028, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, K2Node_Select_Default_1) == 0x000030, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_ToggleEntropicShade, K2Node_Select_Default_2) == 0x000031, "Member 'BP_NPC_Bestiary_C_ToggleEntropicShade::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.Set Filter
// 0x0048 (0x0048 - 0x0000)
struct BP_NPC_Bestiary_C_Set_Filter final
{
public:
	EBestiaryCategory                             InBestiaryCategoryFilter;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable_1;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_3;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_Bestiary_C_Set_Filter) == 0x000008, "Wrong alignment on BP_NPC_Bestiary_C_Set_Filter");
static_assert(sizeof(BP_NPC_Bestiary_C_Set_Filter) == 0x000048, "Wrong size on BP_NPC_Bestiary_C_Set_Filter");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, InBestiaryCategoryFilter) == 0x000000, "Member 'BP_NPC_Bestiary_C_Set_Filter::InBestiaryCategoryFilter' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, Temp_float_Variable) == 0x000004, "Member 'BP_NPC_Bestiary_C_Set_Filter::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, Temp_bool_Variable) == 0x000008, "Member 'BP_NPC_Bestiary_C_Set_Filter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, Temp_byte_Variable) == 0x000009, "Member 'BP_NPC_Bestiary_C_Set_Filter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, Temp_byte_Variable_1) == 0x00000A, "Member 'BP_NPC_Bestiary_C_Set_Filter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, Temp_bool_Variable_1) == 0x00000B, "Member 'BP_NPC_Bestiary_C_Set_Filter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, Temp_byte_Variable_2) == 0x00000C, "Member 'BP_NPC_Bestiary_C_Set_Filter::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, Temp_byte_Variable_3) == 0x00000D, "Member 'BP_NPC_Bestiary_C_Set_Filter::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, Temp_bool_Variable_2) == 0x00000E, "Member 'BP_NPC_Bestiary_C_Set_Filter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, Temp_byte_Variable_4) == 0x00000F, "Member 'BP_NPC_Bestiary_C_Set_Filter::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, Temp_byte_Variable_5) == 0x000010, "Member 'BP_NPC_Bestiary_C_Set_Filter::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000018, "Member 'BP_NPC_Bestiary_C_Set_Filter::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_NPC_Bestiary_C_Set_Filter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, K2Node_Select_Default) == 0x000021, "Member 'BP_NPC_Bestiary_C_Set_Filter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, K2Node_Select_Default_1) == 0x000022, "Member 'BP_NPC_Bestiary_C_Set_Filter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'BP_NPC_Bestiary_C_Set_Filter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, Temp_float_Variable_1) == 0x000024, "Member 'BP_NPC_Bestiary_C_Set_Filter::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000028, "Member 'BP_NPC_Bestiary_C_Set_Filter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000029, "Member 'BP_NPC_Bestiary_C_Set_Filter::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'BP_NPC_Bestiary_C_Set_Filter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, Temp_bool_Variable_3) == 0x00002B, "Member 'BP_NPC_Bestiary_C_Set_Filter::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, K2Node_Select_Default_2) == 0x00002C, "Member 'BP_NPC_Bestiary_C_Set_Filter::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, K2Node_Select_Default_3) == 0x000030, "Member 'BP_NPC_Bestiary_C_Set_Filter::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, K2Node_MakeStruct_Margin) == 0x000034, "Member 'BP_NPC_Bestiary_C_Set_Filter::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_Set_Filter, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000044, "Member 'BP_NPC_Bestiary_C_Set_Filter::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");

// Function BP_NPC_Bestiary.BP_NPC_Bestiary_C.SetBtnCloseVisibility
// 0x000B (0x000B - 0x0000)
struct BP_NPC_Bestiary_C_SetBtnCloseVisibility final
{
public:
	EInputDisplay                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 CallFunc_GetInputDisplay_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_Bestiary_C_SetBtnCloseVisibility) == 0x000001, "Wrong alignment on BP_NPC_Bestiary_C_SetBtnCloseVisibility");
static_assert(sizeof(BP_NPC_Bestiary_C_SetBtnCloseVisibility) == 0x00000B, "Wrong size on BP_NPC_Bestiary_C_SetBtnCloseVisibility");
static_assert(offsetof(BP_NPC_Bestiary_C_SetBtnCloseVisibility, Temp_byte_Variable) == 0x000000, "Member 'BP_NPC_Bestiary_C_SetBtnCloseVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_SetBtnCloseVisibility, Temp_byte_Variable_1) == 0x000001, "Member 'BP_NPC_Bestiary_C_SetBtnCloseVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_SetBtnCloseVisibility, Temp_byte_Variable_2) == 0x000002, "Member 'BP_NPC_Bestiary_C_SetBtnCloseVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_SetBtnCloseVisibility, Temp_byte_Variable_3) == 0x000003, "Member 'BP_NPC_Bestiary_C_SetBtnCloseVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_SetBtnCloseVisibility, Temp_byte_Variable_4) == 0x000004, "Member 'BP_NPC_Bestiary_C_SetBtnCloseVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_SetBtnCloseVisibility, Temp_byte_Variable_5) == 0x000005, "Member 'BP_NPC_Bestiary_C_SetBtnCloseVisibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_SetBtnCloseVisibility, Temp_byte_Variable_6) == 0x000006, "Member 'BP_NPC_Bestiary_C_SetBtnCloseVisibility::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_SetBtnCloseVisibility, Temp_byte_Variable_7) == 0x000007, "Member 'BP_NPC_Bestiary_C_SetBtnCloseVisibility::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_SetBtnCloseVisibility, Temp_byte_Variable_8) == 0x000008, "Member 'BP_NPC_Bestiary_C_SetBtnCloseVisibility::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_SetBtnCloseVisibility, CallFunc_GetInputDisplay_ReturnValue) == 0x000009, "Member 'BP_NPC_Bestiary_C_SetBtnCloseVisibility::CallFunc_GetInputDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_Bestiary_C_SetBtnCloseVisibility, K2Node_Select_Default) == 0x00000A, "Member 'BP_NPC_Bestiary_C_SetBtnCloseVisibility::K2Node_Select_Default' has a wrong offset!");

}

