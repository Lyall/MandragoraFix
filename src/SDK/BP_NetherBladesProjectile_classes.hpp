#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NetherBladesProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NetherBladesProjectile.BP_NetherBladesProjectile_C
// 0x0020 (0x0B30 - 0x0B10)
class ABP_NetherBladesProjectile_C final : public ANetherBladeProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AVisualEntity*                          IdleVE;                                            // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVisualEntity*                          HitVE;                                             // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_NetherBladesProjectile(int32 EntryPoint);
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NetherBladesProjectile_C">();
	}
	static class ABP_NetherBladesProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NetherBladesProjectile_C>();
	}
};
static_assert(alignof(ABP_NetherBladesProjectile_C) == 0x000008, "Wrong alignment on ABP_NetherBladesProjectile_C");
static_assert(sizeof(ABP_NetherBladesProjectile_C) == 0x000B30, "Wrong size on ABP_NetherBladesProjectile_C");
static_assert(offsetof(ABP_NetherBladesProjectile_C, UberGraphFrame) == 0x000B10, "Member 'ABP_NetherBladesProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NetherBladesProjectile_C, Ak) == 0x000B18, "Member 'ABP_NetherBladesProjectile_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_NetherBladesProjectile_C, IdleVE) == 0x000B20, "Member 'ABP_NetherBladesProjectile_C::IdleVE' has a wrong offset!");
static_assert(offsetof(ABP_NetherBladesProjectile_C, HitVE) == 0x000B28, "Member 'ABP_NetherBladesProjectile_C::HitVE' has a wrong offset!");

}

