#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NewGame_Slot

#include "Basic.hpp"

#include "BP_NewGame_Slot_classes.hpp"
#include "BP_NewGame_Slot_parameters.hpp"


namespace SDK
{

// Function BP_NewGame_Slot.BP_NewGame_Slot_C.ToggleSmallScreen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsSmallScreen                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_NewGame_Slot_C::ToggleSmallScreen(bool InIsSmallScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "ToggleSmallScreen");

	Params::BP_NewGame_Slot_C_ToggleSmallScreen Parms{};

	Parms.InIsSmallScreen = InIsSmallScreen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.ToggleEmpty
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_NewGame_Slot_C::ToggleEmpty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "ToggleEmpty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.SetSlot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InName                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             InLevelAndClass                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             InTimeSpent                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             InLastPlayed                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    InInCompatible                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InIsCanLoad                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_NewGame_Slot_C::SetSlot(const class FText& InName, const class FText& InLevelAndClass, const class FText& InLocation, const class FText& InTimeSpent, const class FText& InLastPlayed, bool InInCompatible, bool InIsCanLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "SetSlot");

	Params::BP_NewGame_Slot_C_SetSlot Parms{};

	Parms.InName = std::move(InName);
	Parms.InLevelAndClass = std::move(InLevelAndClass);
	Parms.InLocation = std::move(InLocation);
	Parms.InTimeSpent = std::move(InTimeSpent);
	Parms.InLastPlayed = std::move(InLastPlayed);
	Parms.InInCompatible = InInCompatible;
	Parms.InIsCanLoad = InIsCanLoad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NewGame_Slot_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "Tick");

	Params::BP_NewGame_Slot_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_NewGame_Slot_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_NewGame_Slot_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_NewGame_Slot_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "OnMouseEnter");

	Params::BP_NewGame_Slot_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_NewGame_Slot_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "OnMouseLeave");

	Params::BP_NewGame_Slot_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_NewGame_Slot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_NewGame_Slot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "PreConstruct");

	Params::BP_NewGame_Slot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.OnSetSlot
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Param_Name_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             LevelAndClass_0                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             Location_0                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             TimeSpent_0                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             LastPlayed_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    InCompatible                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_NewGame_Slot_C::OnSetSlot(const class FText& Param_Name_0, const class FText& LevelAndClass_0, const class FText& Location_0, const class FText& TimeSpent_0, const class FText& LastPlayed_0, bool InCompatible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "OnSetSlot");

	Params::BP_NewGame_Slot_C_OnSetSlot Parms{};

	Parms.Param_Name_0 = std::move(Param_Name_0);
	Parms.LevelAndClass_0 = std::move(LevelAndClass_0);
	Parms.Location_0 = std::move(Location_0);
	Parms.TimeSpent_0 = std::move(TimeSpent_0);
	Parms.LastPlayed_0 = std::move(LastPlayed_0);
	Parms.InCompatible = InCompatible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.OnFocused
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_NewGame_Slot_C::OnFocused(bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "OnFocused");

	Params::BP_NewGame_Slot_C_OnFocused Parms{};

	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.OnUnfocused
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_NewGame_Slot_C::OnUnfocused(bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "OnUnfocused");

	Params::BP_NewGame_Slot_C_OnUnfocused Parms{};

	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.BndEvt__BP_NewGame_Slot_ButtonFrame_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_NewGame_Slot_C::BndEvt__BP_NewGame_Slot_ButtonFrame_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "BndEvt__BP_NewGame_Slot_ButtonFrame_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewGame_Slot.BP_NewGame_Slot_C.ExecuteUbergraph_BP_NewGame_Slot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NewGame_Slot_C::ExecuteUbergraph_BP_NewGame_Slot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewGame_Slot_C", "ExecuteUbergraph_BP_NewGame_Slot");

	Params::BP_NewGame_Slot_C_ExecuteUbergraph_BP_NewGame_Slot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

