#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NewItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_NewItem.BP_NewItem_C
// 0x0060 (0x0530 - 0x04D0)
class UBP_NewItem_C final : public UNewItemUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOutAnim;                                       // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           ItemBox;                                           // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PickupNotification_C*               NewItem0;                                          // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PickupNotification_C*               NewItem1;                                          // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PickupNotification_C*               NewItem2;                                          // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PickupNotification_C*               NewItem3;                                          // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PickupNotification_C*               NewItem4;                                          // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PickupNotification_C*               NewItem5;                                          // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           NewItemContainer;                                  // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NewItemLabel;                                      // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_NewItem(int32 EntryPoint);
	void OnHide(float AnimDuration);
	void OnShow(float AnimDuration);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NewItem_C">();
	}
	static class UBP_NewItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NewItem_C>();
	}
};
static_assert(alignof(UBP_NewItem_C) == 0x000008, "Wrong alignment on UBP_NewItem_C");
static_assert(sizeof(UBP_NewItem_C) == 0x000530, "Wrong size on UBP_NewItem_C");
static_assert(offsetof(UBP_NewItem_C, UberGraphFrame) == 0x0004D0, "Member 'UBP_NewItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_NewItem_C, FadeOutAnim) == 0x0004D8, "Member 'UBP_NewItem_C::FadeOutAnim' has a wrong offset!");
static_assert(offsetof(UBP_NewItem_C, FadeInAnim) == 0x0004E0, "Member 'UBP_NewItem_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_NewItem_C, ItemBox) == 0x0004E8, "Member 'UBP_NewItem_C::ItemBox' has a wrong offset!");
static_assert(offsetof(UBP_NewItem_C, NewItem0) == 0x0004F0, "Member 'UBP_NewItem_C::NewItem0' has a wrong offset!");
static_assert(offsetof(UBP_NewItem_C, NewItem1) == 0x0004F8, "Member 'UBP_NewItem_C::NewItem1' has a wrong offset!");
static_assert(offsetof(UBP_NewItem_C, NewItem2) == 0x000500, "Member 'UBP_NewItem_C::NewItem2' has a wrong offset!");
static_assert(offsetof(UBP_NewItem_C, NewItem3) == 0x000508, "Member 'UBP_NewItem_C::NewItem3' has a wrong offset!");
static_assert(offsetof(UBP_NewItem_C, NewItem4) == 0x000510, "Member 'UBP_NewItem_C::NewItem4' has a wrong offset!");
static_assert(offsetof(UBP_NewItem_C, NewItem5) == 0x000518, "Member 'UBP_NewItem_C::NewItem5' has a wrong offset!");
static_assert(offsetof(UBP_NewItem_C, NewItemContainer) == 0x000520, "Member 'UBP_NewItem_C::NewItemContainer' has a wrong offset!");
static_assert(offsetof(UBP_NewItem_C, NewItemLabel) == 0x000528, "Member 'UBP_NewItem_C::NewItemLabel' has a wrong offset!");

}

