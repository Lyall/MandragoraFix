#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OffhandActor

#include "Basic.hpp"

#include "BP_OffhandActor_classes.hpp"
#include "BP_OffhandActor_parameters.hpp"


namespace SDK
{

// Function BP_OffhandActor.BP_OffhandActor_C.ExecuteUbergraph_BP_OffhandActor
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OffhandActor_C::ExecuteUbergraph_BP_OffhandActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "ExecuteUbergraph_BP_OffhandActor");

	Params::BP_OffhandActor_C_ExecuteUbergraph_BP_OffhandActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OffhandActor.BP_OffhandActor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_OffhandActor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OffhandActor.BP_OffhandActor_C.ResetMeshScale
// (BlueprintCallable, BlueprintEvent)

void ABP_OffhandActor_C::ResetMeshScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "ResetMeshScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OffhandActor.BP_OffhandActor_C.ResetDissolve
// (BlueprintCallable, BlueprintEvent)

void ABP_OffhandActor_C::ResetDissolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "ResetDissolve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OffhandActor.BP_OffhandActor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OffhandActor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "ReceiveTick");

	Params::BP_OffhandActor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OffhandActor.BP_OffhandActor_C.BPPostWeaponAttachToggle
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bAttached                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_OffhandActor_C::BPPostWeaponAttachToggle(bool bAttached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "BPPostWeaponAttachToggle");

	Params::BP_OffhandActor_C_BPPostWeaponAttachToggle Parms{};

	Parms.bAttached = bAttached;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OffhandActor.BP_OffhandActor_C.CheckRuneMesh
// (BlueprintCallable, BlueprintEvent)

void ABP_OffhandActor_C::CheckRuneMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "CheckRuneMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OffhandActor.BP_OffhandActor_C.ScaleMesh
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Down_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_OffhandActor_C::ScaleMesh(bool Down_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "ScaleMesh");

	Params::BP_OffhandActor_C_ScaleMesh Parms{};

	Parms.Down_ = Down_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OffhandActor.BP_OffhandActor_C.DissolveMesh
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Appear_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_OffhandActor_C::DissolveMesh(bool Appear_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "DissolveMesh");

	Params::BP_OffhandActor_C_DissolveMesh Parms{};

	Parms.Appear_ = Appear_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OffhandActor.BP_OffhandActor_C.Timeline_MeshScale__UpdateFunc
// (BlueprintEvent)

void ABP_OffhandActor_C::Timeline_MeshScale__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "Timeline_MeshScale__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OffhandActor.BP_OffhandActor_C.Timeline_MeshScale__FinishedFunc
// (BlueprintEvent)

void ABP_OffhandActor_C::Timeline_MeshScale__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "Timeline_MeshScale__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OffhandActor.BP_OffhandActor_C.Timeline_MeshDissolve__UpdateFunc
// (BlueprintEvent)

void ABP_OffhandActor_C::Timeline_MeshDissolve__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "Timeline_MeshDissolve__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OffhandActor.BP_OffhandActor_C.Timeline_MeshDissolve__FinishedFunc
// (BlueprintEvent)

void ABP_OffhandActor_C::Timeline_MeshDissolve__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "Timeline_MeshDissolve__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OffhandActor.BP_OffhandActor_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_OffhandActor_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OffhandActor.BP_OffhandActor_C.CheckFacing
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_OffhandActor_C::CheckFacing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "CheckFacing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OffhandActor.BP_OffhandActor_C.HideByCurve?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CurveName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_OffhandActor_C::HideByCurve_(class FName CurveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "HideByCurve?");

	Params::BP_OffhandActor_C_HideByCurve_ Parms{};

	Parms.CurveName = CurveName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OffhandActor.BP_OffhandActor_C.WeaponOnBack?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_OffhandActor_C::WeaponOnBack_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "WeaponOnBack?");

	Params::BP_OffhandActor_C_WeaponOnBack_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OffhandActor.BP_OffhandActor_C.ToggleRuneVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_OffhandActor_C::ToggleRuneVFX(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "ToggleRuneVFX");

	Params::BP_OffhandActor_C_ToggleRuneVFX Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OffhandActor.BP_OffhandActor_C.ToggleHandVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_OffhandActor_C::ToggleHandVFX(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "ToggleHandVFX");

	Params::BP_OffhandActor_C_ToggleHandVFX Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OffhandActor.BP_OffhandActor_C.StateCheck
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_OffhandActor_C::StateCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "StateCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OffhandActor.BP_OffhandActor_C.SetRelicState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_RelicStates                           RelicState_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OffhandActor_C::SetRelicState(E_RelicStates RelicState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "SetRelicState");

	Params::BP_OffhandActor_C_SetRelicState Parms{};

	Parms.RelicState_0 = RelicState_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OffhandActor.BP_OffhandActor_C.UpdateVisuals
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_RelicStates                           RelicState_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ScaleMesh_Down_                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    HandVFXOn                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RuneVFXOn                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    DissolveMesh_Appear_                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_OffhandActor_C::UpdateVisuals(E_RelicStates RelicState_0, bool ScaleMesh_Down_, bool HandVFXOn, bool RuneVFXOn, bool DissolveMesh_Appear_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "UpdateVisuals");

	Params::BP_OffhandActor_C_UpdateVisuals Parms{};

	Parms.RelicState_0 = RelicState_0;
	Parms.ScaleMesh_Down_ = ScaleMesh_Down_;
	Parms.HandVFXOn = HandVFXOn;
	Parms.RuneVFXOn = RuneVFXOn;
	Parms.DissolveMesh_Appear_ = DissolveMesh_Appear_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OffhandActor.BP_OffhandActor_C.ToggleRelicChargeVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_OffhandActor_C::ToggleRelicChargeVFX(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "ToggleRelicChargeVFX");

	Params::BP_OffhandActor_C_ToggleRelicChargeVFX Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OffhandActor.BP_OffhandActor_C.ChooseFullChargeAndDischargeVFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_OffhandActor_C::ChooseFullChargeAndDischargeVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "ChooseFullChargeAndDischargeVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OffhandActor.BP_OffhandActor_C.GetFinalScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_OffhandActor_C::GetFinalScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OffhandActor_C", "GetFinalScale");

	Params::BP_OffhandActor_C_GetFinalScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

