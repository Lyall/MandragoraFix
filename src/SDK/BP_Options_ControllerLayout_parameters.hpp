#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Options_ControllerLayout

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "man_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.ExecuteUbergraph_BP_Options_ControllerLayout
// 0x0178 (0x0178 - 0x0000)
struct BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBtnEnabled_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 Temp_byte_Variable_4;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 Temp_byte_Variable_13;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_21;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_22;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_23;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 Temp_byte_Variable_24;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0090(0x0018)()
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x00A8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00BC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InInputDisplay;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InControlDisplay;                     // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLeftAndRightSticksSwapped_ReturnValue;  // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLeftAndRightSticksSwapped_ReturnValue_1; // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_4;                           // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bQuickUseDefault;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLungeActionName_ReturnValue;           // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetLungeActionName_ReturnValue_1;         // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETabButtonType                                CallFunc_GetPreviousTab_ReturnValue;               // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETabButtonType                                CallFunc_GetNextTab_ReturnValue;                   // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprintToggleMode_ReturnValue;           // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   K2Node_Select_Default_7;                           // 0x0140(0x0018)()
	class UBP_Options_HotkeyButton_C*             K2Node_ComponentBoundEvent_OptionsButton;          // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UManUserWidgetBase*                     CallFunc_ShowManUserWidgetByZorder_ReturnValue;    // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOptionsKeyBindingsUserWidget*          K2Node_DynamicCast_AsOptions_Key_Bindings_User_Widget; // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout) == 0x000008, "Wrong alignment on BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout");
static_assert(sizeof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout) == 0x000178, "Wrong size on BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, EntryPoint) == 0x000000, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_bool_Variable) == 0x000004, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_IsBtnEnabled_ReturnValue) == 0x000005, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_IsBtnEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable) == 0x000006, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_1) == 0x000007, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_bool_Variable_1) == 0x000008, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_float_Variable) == 0x00000C, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_float_Variable_1) == 0x000010, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_bool_Variable_2) == 0x000014, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_2) == 0x000015, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_3) == 0x000016, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_4) == 0x000017, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_5) == 0x000018, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_6) == 0x000019, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_7) == 0x00001A, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_8) == 0x00001B, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_9) == 0x00001C, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_10) == 0x00001D, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_11) == 0x00001E, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_12) == 0x00001F, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_13) == 0x000020, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_14) == 0x000021, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_15) == 0x000022, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_16) == 0x000023, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_17) == 0x000024, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_18) == 0x000025, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_19) == 0x000026, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_20) == 0x000027, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_21) == 0x000028, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_bool_Variable_3) == 0x000029, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_22) == 0x00002A, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_23) == 0x00002B, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_byte_Variable_24) == 0x00002C, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_object_Variable) == 0x000030, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_object_Variable_1) == 0x000038, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_object_Variable_2) == 0x000040, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_object_Variable_3) == 0x000048, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_object_Variable_4) == 0x000050, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_object_Variable_5) == 0x000058, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_object_Variable_6) == 0x000060, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_object_Variable_7) == 0x000068, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_bool_Variable_4) == 0x000070, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_text_Variable) == 0x000078, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_text_Variable_1) == 0x000090, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, Temp_delegate_Variable) == 0x0000A8, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_PostEvent_ReturnValue) == 0x0000B8, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Event_MyGeometry) == 0x0000BC, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Event_InDeltaTime) == 0x0000F4, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Event_AnimDuration_1) == 0x0000F8, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x0000FC, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Event_AnimDuration) == 0x000100, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_PlayAnimation_ReturnValue) == 0x000108, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000110, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_PlayAnimation_ReturnValue_1) == 0x000118, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Event_InInputDisplay) == 0x000120, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Event_InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Event_InControlDisplay) == 0x000121, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Event_InControlDisplay' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_IsLeftAndRightSticksSwapped_ReturnValue) == 0x000122, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_IsLeftAndRightSticksSwapped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Select_Default) == 0x000123, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Select_Default_1) == 0x000124, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Select_Default_2) == 0x000125, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Select_Default_3) == 0x000128, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_IsLeftAndRightSticksSwapped_ReturnValue_1) == 0x000131, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_IsLeftAndRightSticksSwapped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Select_Default_4) == 0x000134, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Event_bQuickUseDefault) == 0x000138, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Event_bQuickUseDefault' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_SetLungeActionName_ReturnValue) == 0x000139, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_SetLungeActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Select_Default_5) == 0x00013A, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_SetLungeActionName_ReturnValue_1) == 0x00013B, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_SetLungeActionName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Select_Default_6) == 0x00013C, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_GetPreviousTab_ReturnValue) == 0x00013D, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_GetPreviousTab_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_GetNextTab_ReturnValue) == 0x00013E, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_GetNextTab_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_IsSprintToggleMode_ReturnValue) == 0x00013F, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_IsSprintToggleMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_Select_Default_7) == 0x000140, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_ComponentBoundEvent_OptionsButton) == 0x000158, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_ComponentBoundEvent_OptionsButton' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, CallFunc_ShowManUserWidgetByZorder_ReturnValue) == 0x000160, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::CallFunc_ShowManUserWidgetByZorder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_DynamicCast_AsOptions_Key_Bindings_User_Widget) == 0x000168, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_DynamicCast_AsOptions_Key_Bindings_User_Widget' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'BP_Options_ControllerLayout_C_ExecuteUbergraph_BP_Options_ControllerLayout::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.BndEvt__BP_Options_ControllerLayout_Btn_ChangeKeyBindings_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Options_ControllerLayout_C_BndEvt__BP_Options_ControllerLayout_Btn_ChangeKeyBindings_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature final
{
public:
	class UBP_Options_HotkeyButton_C*             OptionsButton;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_ControllerLayout_C_BndEvt__BP_Options_ControllerLayout_Btn_ChangeKeyBindings_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_Options_ControllerLayout_C_BndEvt__BP_Options_ControllerLayout_Btn_ChangeKeyBindings_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");
static_assert(sizeof(BP_Options_ControllerLayout_C_BndEvt__BP_Options_ControllerLayout_Btn_ChangeKeyBindings_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature) == 0x000008, "Wrong size on BP_Options_ControllerLayout_C_BndEvt__BP_Options_ControllerLayout_Btn_ChangeKeyBindings_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");
static_assert(offsetof(BP_Options_ControllerLayout_C_BndEvt__BP_Options_ControllerLayout_Btn_ChangeKeyBindings_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature, OptionsButton) == 0x000000, "Member 'BP_Options_ControllerLayout_C_BndEvt__BP_Options_ControllerLayout_Btn_ChangeKeyBindings_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature::OptionsButton' has a wrong offset!");

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.OnSetQuickUseDefault
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_ControllerLayout_C_OnSetQuickUseDefault final
{
public:
	bool                                          bQuickUseDefault;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_ControllerLayout_C_OnSetQuickUseDefault) == 0x000001, "Wrong alignment on BP_Options_ControllerLayout_C_OnSetQuickUseDefault");
static_assert(sizeof(BP_Options_ControllerLayout_C_OnSetQuickUseDefault) == 0x000001, "Wrong size on BP_Options_ControllerLayout_C_OnSetQuickUseDefault");
static_assert(offsetof(BP_Options_ControllerLayout_C_OnSetQuickUseDefault, bQuickUseDefault) == 0x000000, "Member 'BP_Options_ControllerLayout_C_OnSetQuickUseDefault::bQuickUseDefault' has a wrong offset!");

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.OnSetInputDisplay
// 0x0002 (0x0002 - 0x0000)
struct BP_Options_ControllerLayout_C_OnSetInputDisplay final
{
public:
	EInputDisplay                                 InInputDisplay;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 InControlDisplay;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_ControllerLayout_C_OnSetInputDisplay) == 0x000001, "Wrong alignment on BP_Options_ControllerLayout_C_OnSetInputDisplay");
static_assert(sizeof(BP_Options_ControllerLayout_C_OnSetInputDisplay) == 0x000002, "Wrong size on BP_Options_ControllerLayout_C_OnSetInputDisplay");
static_assert(offsetof(BP_Options_ControllerLayout_C_OnSetInputDisplay, InInputDisplay) == 0x000000, "Member 'BP_Options_ControllerLayout_C_OnSetInputDisplay::InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_OnSetInputDisplay, InControlDisplay) == 0x000001, "Member 'BP_Options_ControllerLayout_C_OnSetInputDisplay::InControlDisplay' has a wrong offset!");

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_Options_ControllerLayout_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_ControllerLayout_C_OnHide) == 0x000004, "Wrong alignment on BP_Options_ControllerLayout_C_OnHide");
static_assert(sizeof(BP_Options_ControllerLayout_C_OnHide) == 0x000004, "Wrong size on BP_Options_ControllerLayout_C_OnHide");
static_assert(offsetof(BP_Options_ControllerLayout_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_Options_ControllerLayout_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_Options_ControllerLayout_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_ControllerLayout_C_OnShow) == 0x000004, "Wrong alignment on BP_Options_ControllerLayout_C_OnShow");
static_assert(sizeof(BP_Options_ControllerLayout_C_OnShow) == 0x000004, "Wrong size on BP_Options_ControllerLayout_C_OnShow");
static_assert(offsetof(BP_Options_ControllerLayout_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_Options_ControllerLayout_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_Options_ControllerLayout_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_ControllerLayout_C_Tick) == 0x000004, "Wrong alignment on BP_Options_ControllerLayout_C_Tick");
static_assert(sizeof(BP_Options_ControllerLayout_C_Tick) == 0x00003C, "Wrong size on BP_Options_ControllerLayout_C_Tick");
static_assert(offsetof(BP_Options_ControllerLayout_C_Tick, MyGeometry) == 0x000000, "Member 'BP_Options_ControllerLayout_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_Options_ControllerLayout_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.QuickUseDefault
// 0x0030 (0x0030 - 0x0000)
struct BP_Options_ControllerLayout_C_QuickUseDefault final
{
public:
	bool                                          IsDefault;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_ControllerLayout_C_QuickUseDefault) == 0x000004, "Wrong alignment on BP_Options_ControllerLayout_C_QuickUseDefault");
static_assert(sizeof(BP_Options_ControllerLayout_C_QuickUseDefault) == 0x000030, "Wrong size on BP_Options_ControllerLayout_C_QuickUseDefault");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, IsDefault) == 0x000000, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::IsDefault' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, Temp_bool_Variable) == 0x000001, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, Temp_float_Variable) == 0x000004, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, Temp_float_Variable_1) == 0x000008, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, Temp_float_Variable_2) == 0x000010, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, Temp_float_Variable_3) == 0x000014, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, Temp_bool_Variable_2) == 0x000018, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, Temp_byte_Variable) == 0x000019, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, Temp_byte_Variable_1) == 0x00001A, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, K2Node_Select_Default) == 0x00001C, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, K2Node_Select_Default_1) == 0x000028, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_QuickUseDefault, K2Node_Select_Default_2) == 0x00002C, "Member 'BP_Options_ControllerLayout_C_QuickUseDefault::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.UnlockAnim_DoubleJump
// 0x0028 (0x0028 - 0x0000)
struct BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump) == 0x000008, "Wrong alignment on BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump");
static_assert(sizeof(BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump) == 0x000028, "Wrong size on BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump, CallFunc_GetEndTime_ReturnValue_1) == 0x000008, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_DoubleJump::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.UnlockAnim_Glide
// 0x0028 (0x0028 - 0x0000)
struct BP_Options_ControllerLayout_C_UnlockAnim_Glide final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_ControllerLayout_C_UnlockAnim_Glide) == 0x000008, "Wrong alignment on BP_Options_ControllerLayout_C_UnlockAnim_Glide");
static_assert(sizeof(BP_Options_ControllerLayout_C_UnlockAnim_Glide) == 0x000028, "Wrong size on BP_Options_ControllerLayout_C_UnlockAnim_Glide");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_Glide, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_Glide::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_Glide, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_Glide::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_Glide, CallFunc_GetEndTime_ReturnValue_1) == 0x000008, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_Glide::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_Glide, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_Glide::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_Glide, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_Glide::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_Glide, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_Glide::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.UnlockAnim_GrapplingHook
// 0x0028 (0x0028 - 0x0000)
struct BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook) == 0x000008, "Wrong alignment on BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook");
static_assert(sizeof(BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook) == 0x000028, "Wrong size on BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook, CallFunc_GetEndTime_ReturnValue_1) == 0x000008, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_GrapplingHook::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.UnlockAnim_GroundSlam
// 0x0028 (0x0028 - 0x0000)
struct BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam) == 0x000008, "Wrong alignment on BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam");
static_assert(sizeof(BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam) == 0x000028, "Wrong size on BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam, CallFunc_GetEndTime_ReturnValue_1) == 0x000008, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'BP_Options_ControllerLayout_C_UnlockAnim_GroundSlam::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_Options_ControllerLayout.BP_Options_ControllerLayout_C.BtnHotkeyBClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_ControllerLayout_C_BtnHotkeyBClicked final
{
public:
	bool                                          CallFunc_DoClose_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_ControllerLayout_C_BtnHotkeyBClicked) == 0x000001, "Wrong alignment on BP_Options_ControllerLayout_C_BtnHotkeyBClicked");
static_assert(sizeof(BP_Options_ControllerLayout_C_BtnHotkeyBClicked) == 0x000001, "Wrong size on BP_Options_ControllerLayout_C_BtnHotkeyBClicked");
static_assert(offsetof(BP_Options_ControllerLayout_C_BtnHotkeyBClicked, CallFunc_DoClose_ReturnValue) == 0x000000, "Member 'BP_Options_ControllerLayout_C_BtnHotkeyBClicked::CallFunc_DoClose_ReturnValue' has a wrong offset!");

}

