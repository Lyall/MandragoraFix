#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Options_HotkeyBtnUserWidget2

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_Options_HotkeyBtnUserWidget2.BP_Options_HotkeyBtnUserWidget2_C.ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x001C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture2D*>                     K2Node_Event_HotkeyImages;                         // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TArray<class FText>                           K2Node_Event_HotkeyTexts;                          // 0x0068(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_Event_bAnimate_1;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInEmpty;                             // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInWaiting;                           // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         CallFunc_GetHotkeyIconUserWidgets_ReturnValue;     // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UBorder*>                        CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue; // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UTextBlock*>                     CallFunc_GetHotkeyTextUserWidgets_ReturnValue;     // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInLocked;                            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2) == 0x000008, "Wrong alignment on BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2");
static_assert(sizeof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2) == 0x0000C8, "Wrong size on BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, EntryPoint) == 0x000000, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, Temp_bool_Variable) == 0x000004, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, Temp_byte_Variable) == 0x000010, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, Temp_byte_Variable_1) == 0x000011, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, Temp_bool_Variable_1) == 0x000012, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, Temp_byte_Variable_2) == 0x000013, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, Temp_byte_Variable_3) == 0x000014, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, Temp_bool_Variable_2) == 0x000015, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, Temp_byte_Variable_4) == 0x000016, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, Temp_byte_Variable_5) == 0x000017, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Event_IsDesignTime) == 0x000018, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Event_MyGeometry) == 0x00001C, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Event_InDeltaTime) == 0x000054, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Event_HotkeyImages) == 0x000058, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Event_HotkeyImages' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Event_HotkeyTexts) == 0x000068, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Event_HotkeyTexts' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Event_bAnimate_1) == 0x000078, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Event_bAnimate_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Event_bAnimate) == 0x000079, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Event_bInEmpty) == 0x00007A, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Event_bInEmpty' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Event_bInWaiting) == 0x00007B, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Event_bInWaiting' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Select_Default) == 0x00007C, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Select_Default_1) == 0x00007D, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Select_Default_2) == 0x00007E, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, CallFunc_GetHotkeyIconUserWidgets_ReturnValue) == 0x000080, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::CallFunc_GetHotkeyIconUserWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue) == 0x000090, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::CallFunc_GetHotkeyTextBorderUserWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, CallFunc_GetHotkeyTextUserWidgets_ReturnValue) == 0x0000A0, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::CallFunc_GetHotkeyTextUserWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, CallFunc_GetRenderOpacity_ReturnValue) == 0x0000B0, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000B8, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2, K2Node_Event_bInLocked) == 0x0000C0, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ExecuteUbergraph_BP_Options_HotkeyBtnUserWidget2::K2Node_Event_bInLocked' has a wrong offset!");

// Function BP_Options_HotkeyBtnUserWidget2.BP_Options_HotkeyBtnUserWidget2_C.OnSetLocked
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_HotkeyBtnUserWidget2_C_OnSetLocked final
{
public:
	bool                                          bInLocked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyBtnUserWidget2_C_OnSetLocked) == 0x000001, "Wrong alignment on BP_Options_HotkeyBtnUserWidget2_C_OnSetLocked");
static_assert(sizeof(BP_Options_HotkeyBtnUserWidget2_C_OnSetLocked) == 0x000001, "Wrong size on BP_Options_HotkeyBtnUserWidget2_C_OnSetLocked");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_OnSetLocked, bInLocked) == 0x000000, "Member 'BP_Options_HotkeyBtnUserWidget2_C_OnSetLocked::bInLocked' has a wrong offset!");

// Function BP_Options_HotkeyBtnUserWidget2.BP_Options_HotkeyBtnUserWidget2_C.OnSetWaiting
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_HotkeyBtnUserWidget2_C_OnSetWaiting final
{
public:
	bool                                          bInWaiting;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyBtnUserWidget2_C_OnSetWaiting) == 0x000001, "Wrong alignment on BP_Options_HotkeyBtnUserWidget2_C_OnSetWaiting");
static_assert(sizeof(BP_Options_HotkeyBtnUserWidget2_C_OnSetWaiting) == 0x000001, "Wrong size on BP_Options_HotkeyBtnUserWidget2_C_OnSetWaiting");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_OnSetWaiting, bInWaiting) == 0x000000, "Member 'BP_Options_HotkeyBtnUserWidget2_C_OnSetWaiting::bInWaiting' has a wrong offset!");

// Function BP_Options_HotkeyBtnUserWidget2.BP_Options_HotkeyBtnUserWidget2_C.OnSetEmpty
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_HotkeyBtnUserWidget2_C_OnSetEmpty final
{
public:
	bool                                          bInEmpty;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyBtnUserWidget2_C_OnSetEmpty) == 0x000001, "Wrong alignment on BP_Options_HotkeyBtnUserWidget2_C_OnSetEmpty");
static_assert(sizeof(BP_Options_HotkeyBtnUserWidget2_C_OnSetEmpty) == 0x000001, "Wrong size on BP_Options_HotkeyBtnUserWidget2_C_OnSetEmpty");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_OnSetEmpty, bInEmpty) == 0x000000, "Member 'BP_Options_HotkeyBtnUserWidget2_C_OnSetEmpty::bInEmpty' has a wrong offset!");

// Function BP_Options_HotkeyBtnUserWidget2.BP_Options_HotkeyBtnUserWidget2_C.OnUnfocused
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_HotkeyBtnUserWidget2_C_OnUnfocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyBtnUserWidget2_C_OnUnfocused) == 0x000001, "Wrong alignment on BP_Options_HotkeyBtnUserWidget2_C_OnUnfocused");
static_assert(sizeof(BP_Options_HotkeyBtnUserWidget2_C_OnUnfocused) == 0x000001, "Wrong size on BP_Options_HotkeyBtnUserWidget2_C_OnUnfocused");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_OnUnfocused, bAnimate) == 0x000000, "Member 'BP_Options_HotkeyBtnUserWidget2_C_OnUnfocused::bAnimate' has a wrong offset!");

// Function BP_Options_HotkeyBtnUserWidget2.BP_Options_HotkeyBtnUserWidget2_C.OnFocused
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_HotkeyBtnUserWidget2_C_OnFocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyBtnUserWidget2_C_OnFocused) == 0x000001, "Wrong alignment on BP_Options_HotkeyBtnUserWidget2_C_OnFocused");
static_assert(sizeof(BP_Options_HotkeyBtnUserWidget2_C_OnFocused) == 0x000001, "Wrong size on BP_Options_HotkeyBtnUserWidget2_C_OnFocused");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_OnFocused, bAnimate) == 0x000000, "Member 'BP_Options_HotkeyBtnUserWidget2_C_OnFocused::bAnimate' has a wrong offset!");

// Function BP_Options_HotkeyBtnUserWidget2.BP_Options_HotkeyBtnUserWidget2_C.OnSetHotkeyText
// 0x0010 (0x0010 - 0x0000)
struct BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyText final
{
public:
	TArray<class FText>                           HotkeyTexts;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyText) == 0x000008, "Wrong alignment on BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyText");
static_assert(sizeof(BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyText) == 0x000010, "Wrong size on BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyText");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyText, HotkeyTexts) == 0x000000, "Member 'BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyText::HotkeyTexts' has a wrong offset!");

// Function BP_Options_HotkeyBtnUserWidget2.BP_Options_HotkeyBtnUserWidget2_C.OnSetHotkeyImages
// 0x0010 (0x0010 - 0x0000)
struct BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyImages final
{
public:
	TArray<class UTexture2D*>                     HotkeyImages;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyImages) == 0x000008, "Wrong alignment on BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyImages");
static_assert(sizeof(BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyImages) == 0x000010, "Wrong size on BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyImages");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyImages, HotkeyImages) == 0x000000, "Member 'BP_Options_HotkeyBtnUserWidget2_C_OnSetHotkeyImages::HotkeyImages' has a wrong offset!");

// Function BP_Options_HotkeyBtnUserWidget2.BP_Options_HotkeyBtnUserWidget2_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_Options_HotkeyBtnUserWidget2_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_HotkeyBtnUserWidget2_C_Tick) == 0x000004, "Wrong alignment on BP_Options_HotkeyBtnUserWidget2_C_Tick");
static_assert(sizeof(BP_Options_HotkeyBtnUserWidget2_C_Tick) == 0x00003C, "Wrong size on BP_Options_HotkeyBtnUserWidget2_C_Tick");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_Tick, MyGeometry) == 0x000000, "Member 'BP_Options_HotkeyBtnUserWidget2_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_Options_HotkeyBtnUserWidget2_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Options_HotkeyBtnUserWidget2.BP_Options_HotkeyBtnUserWidget2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_HotkeyBtnUserWidget2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyBtnUserWidget2_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Options_HotkeyBtnUserWidget2_C_PreConstruct");
static_assert(sizeof(BP_Options_HotkeyBtnUserWidget2_C_PreConstruct) == 0x000001, "Wrong size on BP_Options_HotkeyBtnUserWidget2_C_PreConstruct");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Options_HotkeyBtnUserWidget2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_Options_HotkeyBtnUserWidget2.BP_Options_HotkeyBtnUserWidget2_C.ToggleLocked
// 0x0088 (0x0088 - 0x0000)
struct BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked final
{
public:
	bool                                          InIsLocked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked) == 0x000008, "Wrong alignment on BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked");
static_assert(sizeof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked) == 0x000088, "Wrong size on BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, InIsLocked) == 0x000000, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::InIsLocked' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, Temp_bool_Variable) == 0x000001, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, Temp_struct_Variable) == 0x000004, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, Temp_struct_Variable_1) == 0x000014, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, Temp_bool_Variable_1) == 0x000024, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, Temp_object_Variable) == 0x000028, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, Temp_object_Variable_1) == 0x000030, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, Temp_bool_Variable_2) == 0x000038, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, Temp_float_Variable) == 0x00003C, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, Temp_float_Variable_1) == 0x000040, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, Temp_bool_Variable_3) == 0x000044, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, K2Node_Select_Default) == 0x000048, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, K2Node_Select_Default_1) == 0x000058, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, Temp_object_Variable_2) == 0x000060, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, Temp_object_Variable_3) == 0x000068, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, K2Node_Select_Default_2) == 0x000070, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, K2Node_Select_Default_3) == 0x000078, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'BP_Options_HotkeyBtnUserWidget2_C_ToggleLocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

