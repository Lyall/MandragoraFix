#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Options_HotkeyButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Options_HotkeyButton.BP_Options_HotkeyButton_C.ExecuteUbergraph_BP_Options_HotkeyButton
// 0x00B8 (0x00B8 - 0x0000)
struct BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UBP_Options_HotkeyButton_C* OptionsButton)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0028(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Options_HotkeyButton_C*             K2Node_CustomEvent_OptionsButton;                  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAnimate_1;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InDisplayName;                        // 0x0098(0x0018)(ConstParm)
	bool                                          K2Node_Event_bInEnabled;                           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBtnEnabled_ReturnValue;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocused_ReturnValue;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton) == 0x000008, "Wrong alignment on BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton");
static_assert(sizeof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton) == 0x0000B8, "Wrong size on BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, EntryPoint) == 0x000000, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, Temp_bool_Variable) == 0x000004, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, Temp_float_Variable) == 0x000018, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, Temp_bool_Variable_1) == 0x00001C, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, Temp_float_Variable_1) == 0x000020, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, K2Node_Event_IsDesignTime) == 0x000024, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, K2Node_Event_MyGeometry) == 0x000028, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, K2Node_Event_InDeltaTime) == 0x000060, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, K2Node_CustomEvent_OptionsButton) == 0x000068, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::K2Node_CustomEvent_OptionsButton' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, CallFunc_GetEndTime_ReturnValue) == 0x000070, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, CallFunc_GetEndTime_ReturnValue_1) == 0x000074, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, K2Node_Event_bAnimate_1) == 0x000078, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::K2Node_Event_bAnimate_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, K2Node_Event_bAnimate) == 0x000079, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, K2Node_Select_Default) == 0x00007C, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, K2Node_Select_Default_1) == 0x000080, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, CallFunc_PlayAnimation_ReturnValue) == 0x000088, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, CallFunc_PlayAnimation_ReturnValue_1) == 0x000090, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, K2Node_Event_InDisplayName) == 0x000098, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::K2Node_Event_InDisplayName' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, K2Node_Event_bInEnabled) == 0x0000B0, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::K2Node_Event_bInEnabled' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, CallFunc_IsBtnEnabled_ReturnValue) == 0x0000B1, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::CallFunc_IsBtnEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton, CallFunc_IsFocused_ReturnValue) == 0x0000B2, "Member 'BP_Options_HotkeyButton_C_ExecuteUbergraph_BP_Options_HotkeyButton::CallFunc_IsFocused_ReturnValue' has a wrong offset!");

// Function BP_Options_HotkeyButton.BP_Options_HotkeyButton_C.OnSetEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_HotkeyButton_C_OnSetEnabled final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyButton_C_OnSetEnabled) == 0x000001, "Wrong alignment on BP_Options_HotkeyButton_C_OnSetEnabled");
static_assert(sizeof(BP_Options_HotkeyButton_C_OnSetEnabled) == 0x000001, "Wrong size on BP_Options_HotkeyButton_C_OnSetEnabled");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnSetEnabled, bInEnabled) == 0x000000, "Member 'BP_Options_HotkeyButton_C_OnSetEnabled::bInEnabled' has a wrong offset!");

// Function BP_Options_HotkeyButton.BP_Options_HotkeyButton_C.OnSetDisplayName
// 0x0018 (0x0018 - 0x0000)
struct BP_Options_HotkeyButton_C_OnSetDisplayName final
{
public:
	class FText                                   InDisplayName;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Options_HotkeyButton_C_OnSetDisplayName) == 0x000008, "Wrong alignment on BP_Options_HotkeyButton_C_OnSetDisplayName");
static_assert(sizeof(BP_Options_HotkeyButton_C_OnSetDisplayName) == 0x000018, "Wrong size on BP_Options_HotkeyButton_C_OnSetDisplayName");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnSetDisplayName, InDisplayName) == 0x000000, "Member 'BP_Options_HotkeyButton_C_OnSetDisplayName::InDisplayName' has a wrong offset!");

// Function BP_Options_HotkeyButton.BP_Options_HotkeyButton_C.OnUnfocused
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_HotkeyButton_C_OnUnfocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyButton_C_OnUnfocused) == 0x000001, "Wrong alignment on BP_Options_HotkeyButton_C_OnUnfocused");
static_assert(sizeof(BP_Options_HotkeyButton_C_OnUnfocused) == 0x000001, "Wrong size on BP_Options_HotkeyButton_C_OnUnfocused");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnUnfocused, bAnimate) == 0x000000, "Member 'BP_Options_HotkeyButton_C_OnUnfocused::bAnimate' has a wrong offset!");

// Function BP_Options_HotkeyButton.BP_Options_HotkeyButton_C.OnFocused
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_HotkeyButton_C_OnFocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyButton_C_OnFocused) == 0x000001, "Wrong alignment on BP_Options_HotkeyButton_C_OnFocused");
static_assert(sizeof(BP_Options_HotkeyButton_C_OnFocused) == 0x000001, "Wrong size on BP_Options_HotkeyButton_C_OnFocused");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnFocused, bAnimate) == 0x000000, "Member 'BP_Options_HotkeyButton_C_OnFocused::bAnimate' has a wrong offset!");

// Function BP_Options_HotkeyButton.BP_Options_HotkeyButton_C.OnClickedButton
// 0x0008 (0x0008 - 0x0000)
struct BP_Options_HotkeyButton_C_OnClickedButton final
{
public:
	class UBP_Options_HotkeyButton_C*             OptionsButton_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_HotkeyButton_C_OnClickedButton) == 0x000008, "Wrong alignment on BP_Options_HotkeyButton_C_OnClickedButton");
static_assert(sizeof(BP_Options_HotkeyButton_C_OnClickedButton) == 0x000008, "Wrong size on BP_Options_HotkeyButton_C_OnClickedButton");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnClickedButton, OptionsButton_0) == 0x000000, "Member 'BP_Options_HotkeyButton_C_OnClickedButton::OptionsButton_0' has a wrong offset!");

// Function BP_Options_HotkeyButton.BP_Options_HotkeyButton_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_Options_HotkeyButton_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_HotkeyButton_C_Tick) == 0x000004, "Wrong alignment on BP_Options_HotkeyButton_C_Tick");
static_assert(sizeof(BP_Options_HotkeyButton_C_Tick) == 0x00003C, "Wrong size on BP_Options_HotkeyButton_C_Tick");
static_assert(offsetof(BP_Options_HotkeyButton_C_Tick, MyGeometry) == 0x000000, "Member 'BP_Options_HotkeyButton_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_Options_HotkeyButton_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Options_HotkeyButton.BP_Options_HotkeyButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_HotkeyButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_HotkeyButton_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Options_HotkeyButton_C_PreConstruct");
static_assert(sizeof(BP_Options_HotkeyButton_C_PreConstruct) == 0x000001, "Wrong size on BP_Options_HotkeyButton_C_PreConstruct");
static_assert(offsetof(BP_Options_HotkeyButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Options_HotkeyButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_Options_HotkeyButton.BP_Options_HotkeyButton_C.OnPreviewKeyDown
// 0x02C0 (0x02C0 - 0x0000)
struct BP_Options_HotkeyButton_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0128(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsHotkeyKey_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocused_ReturnValue;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0150(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0208(0x00B8)()
};
static_assert(alignof(BP_Options_HotkeyButton_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on BP_Options_HotkeyButton_C_OnPreviewKeyDown");
static_assert(sizeof(BP_Options_HotkeyButton_C_OnPreviewKeyDown) == 0x0002C0, "Wrong size on BP_Options_HotkeyButton_C_OnPreviewKeyDown");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'BP_Options_HotkeyButton_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'BP_Options_HotkeyButton_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnPreviewKeyDown, ReturnValue) == 0x000070, "Member 'BP_Options_HotkeyButton_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000128, "Member 'BP_Options_HotkeyButton_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnPreviewKeyDown, CallFunc_IsHotkeyKey_ReturnValue) == 0x000140, "Member 'BP_Options_HotkeyButton_C_OnPreviewKeyDown::CallFunc_IsHotkeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnPreviewKeyDown, CallFunc_IsFocused_ReturnValue) == 0x000141, "Member 'BP_Options_HotkeyButton_C_OnPreviewKeyDown::CallFunc_IsFocused_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnPreviewKeyDown, CallFunc_BooleanAND_ReturnValue) == 0x000142, "Member 'BP_Options_HotkeyButton_C_OnPreviewKeyDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnPreviewKeyDown, CallFunc_PlayAnimation_ReturnValue) == 0x000148, "Member 'BP_Options_HotkeyButton_C_OnPreviewKeyDown::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000150, "Member 'BP_Options_HotkeyButton_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_OnPreviewKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000208, "Member 'BP_Options_HotkeyButton_C_OnPreviewKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function BP_Options_HotkeyButton.BP_Options_HotkeyButton_C.ToggleEnabled
// 0x0080 (0x0080 - 0x0000)
struct BP_Options_HotkeyButton_C_ToggleEnabled final
{
public:
	bool                                          InIsBtnEnabled;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBtnEnabled_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBtnEnabled_ReturnValue_1;               // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBtnEnabled_ReturnValue_2;               // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0028)()
	class UWidgetAnimation*                       K2Node_Select_Default_2;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_HotkeyButton_C_ToggleEnabled) == 0x000008, "Wrong alignment on BP_Options_HotkeyButton_C_ToggleEnabled");
static_assert(sizeof(BP_Options_HotkeyButton_C_ToggleEnabled) == 0x000080, "Wrong size on BP_Options_HotkeyButton_C_ToggleEnabled");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, InIsBtnEnabled) == 0x000000, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::InIsBtnEnabled' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, Temp_bool_Variable) == 0x000001, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, Temp_bool_Variable_1) == 0x000002, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, Temp_bool_Variable_2) == 0x000003, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, Temp_struct_Variable) == 0x000004, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, Temp_struct_Variable_1) == 0x000014, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, CallFunc_IsBtnEnabled_ReturnValue) == 0x000024, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::CallFunc_IsBtnEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, CallFunc_IsBtnEnabled_ReturnValue_1) == 0x000025, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::CallFunc_IsBtnEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, CallFunc_IsBtnEnabled_ReturnValue_2) == 0x000026, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::CallFunc_IsBtnEnabled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, K2Node_Select_Default) == 0x000028, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, K2Node_Select_Default_1) == 0x000030, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, K2Node_Select_Default_2) == 0x000068, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, CallFunc_GetEndTime_ReturnValue) == 0x000070, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_ToggleEnabled, CallFunc_PlayAnimation_ReturnValue) == 0x000078, "Member 'BP_Options_HotkeyButton_C_ToggleEnabled::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_Options_HotkeyButton.BP_Options_HotkeyButton_C.PlaySelectAudio
// 0x0050 (0x0050 - 0x0000)
struct BP_Options_HotkeyButton_C_PlaySelectAudio final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UManUserWidgetBase*                     CallFunc_GetParentManUserWidgetBase_ReturnValue;   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBtnEnabled_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundTrackUserWidget*                  K2Node_DynamicCast_AsSound_Track_User_Widget;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArtbookUserWidget*                     K2Node_DynamicCast_AsArtbook_User_Widget;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_HotkeyButton_C_PlaySelectAudio) == 0x000008, "Wrong alignment on BP_Options_HotkeyButton_C_PlaySelectAudio");
static_assert(sizeof(BP_Options_HotkeyButton_C_PlaySelectAudio) == 0x000050, "Wrong size on BP_Options_HotkeyButton_C_PlaySelectAudio");
static_assert(offsetof(BP_Options_HotkeyButton_C_PlaySelectAudio, Temp_bool_Variable) == 0x000000, "Member 'BP_Options_HotkeyButton_C_PlaySelectAudio::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_PlaySelectAudio, Temp_object_Variable) == 0x000008, "Member 'BP_Options_HotkeyButton_C_PlaySelectAudio::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_PlaySelectAudio, Temp_object_Variable_1) == 0x000010, "Member 'BP_Options_HotkeyButton_C_PlaySelectAudio::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_PlaySelectAudio, CallFunc_GetParentManUserWidgetBase_ReturnValue) == 0x000018, "Member 'BP_Options_HotkeyButton_C_PlaySelectAudio::CallFunc_GetParentManUserWidgetBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_PlaySelectAudio, CallFunc_IsBtnEnabled_ReturnValue) == 0x000020, "Member 'BP_Options_HotkeyButton_C_PlaySelectAudio::CallFunc_IsBtnEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_PlaySelectAudio, K2Node_DynamicCast_AsSound_Track_User_Widget) == 0x000028, "Member 'BP_Options_HotkeyButton_C_PlaySelectAudio::K2Node_DynamicCast_AsSound_Track_User_Widget' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_PlaySelectAudio, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Options_HotkeyButton_C_PlaySelectAudio::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_PlaySelectAudio, K2Node_DynamicCast_AsArtbook_User_Widget) == 0x000038, "Member 'BP_Options_HotkeyButton_C_PlaySelectAudio::K2Node_DynamicCast_AsArtbook_User_Widget' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_PlaySelectAudio, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_Options_HotkeyButton_C_PlaySelectAudio::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Options_HotkeyButton_C_PlaySelectAudio, K2Node_Select_Default) == 0x000048, "Member 'BP_Options_HotkeyButton_C_PlaySelectAudio::K2Node_Select_Default' has a wrong offset!");

// Function BP_Options_HotkeyButton.BP_Options_HotkeyButton_C.SetTextures
// 0x0008 (0x0008 - 0x0000)
struct BP_Options_HotkeyButton_C_SetTextures final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_HotkeyButton_C_SetTextures) == 0x000008, "Wrong alignment on BP_Options_HotkeyButton_C_SetTextures");
static_assert(sizeof(BP_Options_HotkeyButton_C_SetTextures) == 0x000008, "Wrong size on BP_Options_HotkeyButton_C_SetTextures");
static_assert(offsetof(BP_Options_HotkeyButton_C_SetTextures, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'BP_Options_HotkeyButton_C_SetTextures::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

