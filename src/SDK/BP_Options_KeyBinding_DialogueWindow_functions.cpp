#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Options_KeyBinding_DialogueWindow

#include "Basic.hpp"

#include "BP_Options_KeyBinding_DialogueWindow_classes.hpp"
#include "BP_Options_KeyBinding_DialogueWindow_parameters.hpp"


namespace SDK
{

// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.ExecuteUbergraph_BP_Options_KeyBinding_DialogueWindow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Options_KeyBinding_DialogueWindow_C::ExecuteUbergraph_BP_Options_KeyBinding_DialogueWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "ExecuteUbergraph_BP_Options_KeyBinding_DialogueWindow");

	Params::BP_Options_KeyBinding_DialogueWindow_C_ExecuteUbergraph_BP_Options_KeyBinding_DialogueWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.OnSetInputDisplay
// (Event, Public, BlueprintEvent)
// Parameters:
// EInputDisplay                           InInputDisplay                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInputDisplay                           InControlDisplay                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Options_KeyBinding_DialogueWindow_C::OnSetInputDisplay(EInputDisplay InInputDisplay, EInputDisplay InControlDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "OnSetInputDisplay");

	Params::BP_Options_KeyBinding_DialogueWindow_C_OnSetInputDisplay Parms{};

	Parms.InInputDisplay = InInputDisplay;
	Parms.InControlDisplay = InControlDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.BndEvt__BP_Options_KeyBinding_DialogueWindow_BtnClose_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_Options_KeyBinding_DialogueWindow_C::BndEvt__BP_Options_KeyBinding_DialogueWindow_BtnClose_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "BndEvt__BP_Options_KeyBinding_DialogueWindow_BtnClose_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.OnDescriptionTextChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Desciption                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_Options_KeyBinding_DialogueWindow_C::OnDescriptionTextChanged(const class FText& Desciption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "OnDescriptionTextChanged");

	Params::BP_Options_KeyBinding_DialogueWindow_C_OnDescriptionTextChanged Parms{};

	Parms.Desciption = std::move(Desciption);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.OnSetData
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InTitle                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             InDesciption                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             InBtnHotkeyAText                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             InBtnHotkeyXText                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             InBtnHotkeyBText                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_Options_KeyBinding_DialogueWindow_C::OnSetData(const class FText& InTitle, const class FText& InDesciption, const class FText& InBtnHotkeyAText, const class FText& InBtnHotkeyXText, const class FText& InBtnHotkeyBText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "OnSetData");

	Params::BP_Options_KeyBinding_DialogueWindow_C_OnSetData Parms{};

	Parms.InTitle = std::move(InTitle);
	Parms.InDesciption = std::move(InDesciption);
	Parms.InBtnHotkeyAText = std::move(InBtnHotkeyAText);
	Parms.InBtnHotkeyXText = std::move(InBtnHotkeyXText);
	Parms.InBtnHotkeyBText = std::move(InBtnHotkeyBText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.OnHide
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Options_KeyBinding_DialogueWindow_C::OnHide(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "OnHide");

	Params::BP_Options_KeyBinding_DialogueWindow_C_OnHide Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.OnShow
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Options_KeyBinding_DialogueWindow_C::OnShow(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "OnShow");

	Params::BP_Options_KeyBinding_DialogueWindow_C_OnShow Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.OnGamepadXEvent
// (Event, Public, BlueprintEvent)

void UBP_Options_KeyBinding_DialogueWindow_C::OnGamepadXEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "OnGamepadXEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.OnGamepadBEvent
// (Event, Public, BlueprintEvent)

void UBP_Options_KeyBinding_DialogueWindow_C::OnGamepadBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "OnGamepadBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.OnGamepadAEvent
// (Event, Public, BlueprintEvent)

void UBP_Options_KeyBinding_DialogueWindow_C::OnGamepadAEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "OnGamepadAEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.BndEvt__Btn2_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_Options_KeyBinding_DialogueWindow_C::BndEvt__Btn2_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "BndEvt__Btn2_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.BndEvt__Btn1_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_Options_KeyBinding_DialogueWindow_C::BndEvt__Btn1_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "BndEvt__Btn1_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.BndEvt__Btn0_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_Options_KeyBinding_DialogueWindow_C::BndEvt__Btn0_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "BndEvt__Btn0_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Options_KeyBinding_DialogueWindow_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "Tick");

	Params::BP_Options_KeyBinding_DialogueWindow_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.BtnHotkeyBClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Options_KeyBinding_DialogueWindow_C::BtnHotkeyBClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "BtnHotkeyBClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.BtnHotkeyAClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Options_KeyBinding_DialogueWindow_C::BtnHotkeyAClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "BtnHotkeyAClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.BtnHotkeyXClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Options_KeyBinding_DialogueWindow_C::BtnHotkeyXClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "BtnHotkeyXClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.SetBtnState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_InteractButton_Normal_C*      Btn                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDialogueButtonType                     BtnType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             BtnText                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_Options_KeyBinding_DialogueWindow_C::SetBtnState(class UBP_InteractButton_Normal_C* Btn, EDialogueButtonType BtnType, const class FText& BtnText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "SetBtnState");

	Params::BP_Options_KeyBinding_DialogueWindow_C_SetBtnState Parms{};

	Parms.Btn = Btn;
	Parms.BtnType = BtnType;
	Parms.BtnText = std::move(BtnText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_KeyBinding_DialogueWindow.BP_Options_KeyBinding_DialogueWindow_C.SetBtnCloseVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Options_KeyBinding_DialogueWindow_C::SetBtnCloseVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_KeyBinding_DialogueWindow_C", "SetBtnCloseVisibility");

	UObject::ProcessEvent(Func, nullptr);
}

}

