#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Options_Selector

#include "Basic.hpp"

#include "BP_Options_Selector_classes.hpp"
#include "BP_Options_Selector_parameters.hpp"


namespace SDK
{

// Function BP_Options_Selector.BP_Options_Selector_C.ExecuteUbergraph_BP_Options_Selector
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Options_Selector_C::ExecuteUbergraph_BP_Options_Selector(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "ExecuteUbergraph_BP_Options_Selector");

	Params::BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_Selector.BP_Options_Selector_C.OnJumpToNextOption
// (Event, Protected, BlueprintEvent)

void UBP_Options_Selector_C::OnJumpToNextOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "OnJumpToNextOption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_Selector.BP_Options_Selector_C.OnJumpToPrevOption
// (Event, Protected, BlueprintEvent)

void UBP_Options_Selector_C::OnJumpToPrevOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "OnJumpToPrevOption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_Selector.BP_Options_Selector_C.OnSetHasChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInHasChanged                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Options_Selector_C::OnSetHasChanged(bool bInHasChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "OnSetHasChanged");

	Params::BP_Options_Selector_C_OnSetHasChanged Parms{};

	Parms.bInHasChanged = bInHasChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_Selector.BP_Options_Selector_C.OnSetSelectedIndex
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InSelectedIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Options_Selector_C::OnSetSelectedIndex(int32 InSelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "OnSetSelectedIndex");

	Params::BP_Options_Selector_C_OnSetSelectedIndex Parms{};

	Parms.InSelectedIndex = InSelectedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_Selector.BP_Options_Selector_C.OnSetDisplayName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InDisplayName                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_Options_Selector_C::OnSetDisplayName(const class FText& InDisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "OnSetDisplayName");

	Params::BP_Options_Selector_C_OnSetDisplayName Parms{};

	Parms.InDisplayName = std::move(InDisplayName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_Selector.BP_Options_Selector_C.OnSetActive
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsActive                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Options_Selector_C::OnSetActive(bool bInIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "OnSetActive");

	Params::BP_Options_Selector_C_OnSetActive Parms{};

	Parms.bInIsActive = bInIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_Selector.BP_Options_Selector_C.OnUnfocused
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Options_Selector_C::OnUnfocused(bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "OnUnfocused");

	Params::BP_Options_Selector_C_OnUnfocused Parms{};

	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_Selector.BP_Options_Selector_C.OnFocused
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Options_Selector_C::OnFocused(bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "OnFocused");

	Params::BP_Options_Selector_C_OnFocused Parms{};

	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_Selector.BP_Options_Selector_C.BndEvt__BtnIncrease_K2Node_ComponentBoundEvent_12_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_Options_Selector_C::BndEvt__BtnIncrease_K2Node_ComponentBoundEvent_12_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "BndEvt__BtnIncrease_K2Node_ComponentBoundEvent_12_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_Selector.BP_Options_Selector_C.BndEvt__BtnDecrease_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_Options_Selector_C::BndEvt__BtnDecrease_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "BndEvt__BtnDecrease_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_Selector.BP_Options_Selector_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UBP_Options_Selector_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_Selector.BP_Options_Selector_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UBP_Options_Selector_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_Selector.BP_Options_Selector_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_Options_Selector_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_Selector.BP_Options_Selector_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_Options_Selector_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_Selector.BP_Options_Selector_C.BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_Options_Selector_C::BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Options_Selector.BP_Options_Selector_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Options_Selector_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "Tick");

	Params::BP_Options_Selector_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_Selector.BP_Options_Selector_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Options_Selector_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "PreConstruct");

	Params::BP_Options_Selector_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_Selector.BP_Options_Selector_C.SetValue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Options_Selector_C::SetValue(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "SetValue");

	Params::BP_Options_Selector_C_SetValue Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_Selector.BP_Options_Selector_C.SetAttributeName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Caption                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_Options_Selector_C::SetAttributeName(const class FText& Caption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "SetAttributeName");

	Params::BP_Options_Selector_C_SetAttributeName Parms{};

	Parms.Caption = std::move(Caption);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Options_Selector.BP_Options_Selector_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_Options_Selector_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "OnPreviewKeyDown");

	Params::BP_Options_Selector_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Options_Selector.BP_Options_Selector_C.ToggleActive
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Options_Selector_C::ToggleActive(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Options_Selector_C", "ToggleActive");

	Params::BP_Options_Selector_C_ToggleActive Parms{};

	Parms.InIsActive = InIsActive;

	UObject::ProcessEvent(Func, &Parms);
}

}

