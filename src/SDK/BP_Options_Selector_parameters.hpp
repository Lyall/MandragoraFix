#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Options_Selector

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Options_Selector.BP_Options_Selector_C.ExecuteUbergraph_BP_Options_Selector
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFocused_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAnimate_1;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsActive;                          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InDisplayName;                        // 0x0078(0x0018)(ConstParm)
	float                                         K2Node_Select_Default_1;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InSelectedIndex;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInHasChanged;                        // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFocused_ReturnValue_1;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocused_ReturnValue_2;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector) == 0x000008, "Wrong alignment on BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector");
static_assert(sizeof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector) == 0x0000C0, "Wrong size on BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, EntryPoint) == 0x000000, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, CallFunc_IsFocused_ReturnValue) == 0x000004, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::CallFunc_IsFocused_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, Temp_bool_Variable) == 0x000005, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, Temp_float_Variable) == 0x000008, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, Temp_float_Variable_1) == 0x000010, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, Temp_bool_Variable_2) == 0x000014, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, Temp_byte_Variable) == 0x000015, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, Temp_byte_Variable_1) == 0x000016, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, K2Node_Event_IsDesignTime) == 0x000017, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, K2Node_Event_MyGeometry) == 0x000018, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, K2Node_Event_InDeltaTime) == 0x000050, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, CallFunc_GetEndTime_ReturnValue) == 0x000054, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, K2Node_Event_bAnimate_1) == 0x000058, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::K2Node_Event_bAnimate_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, K2Node_Event_bAnimate) == 0x000059, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, K2Node_Select_Default) == 0x00005C, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, K2Node_Event_bInIsActive) == 0x000060, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::K2Node_Event_bInIsActive' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, CallFunc_IsActive_ReturnValue) == 0x000070, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, CallFunc_GetEndTime_ReturnValue_1) == 0x000074, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, K2Node_Event_InDisplayName) == 0x000078, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::K2Node_Event_InDisplayName' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, K2Node_Select_Default_1) == 0x000090, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, CallFunc_PlayAnimation_ReturnValue_1) == 0x000098, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, K2Node_Event_InSelectedIndex) == 0x0000A0, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::K2Node_Event_InSelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, K2Node_Event_bInHasChanged) == 0x0000A4, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::K2Node_Event_bInHasChanged' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, K2Node_Select_Default_2) == 0x0000A5, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000A8, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, CallFunc_PlayAnimation_ReturnValue_3) == 0x0000B0, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, CallFunc_IsFocused_ReturnValue_1) == 0x0000B8, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::CallFunc_IsFocused_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector, CallFunc_IsFocused_ReturnValue_2) == 0x0000B9, "Member 'BP_Options_Selector_C_ExecuteUbergraph_BP_Options_Selector::CallFunc_IsFocused_ReturnValue_2' has a wrong offset!");

// Function BP_Options_Selector.BP_Options_Selector_C.OnSetHasChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_Selector_C_OnSetHasChanged final
{
public:
	bool                                          bInHasChanged;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_Selector_C_OnSetHasChanged) == 0x000001, "Wrong alignment on BP_Options_Selector_C_OnSetHasChanged");
static_assert(sizeof(BP_Options_Selector_C_OnSetHasChanged) == 0x000001, "Wrong size on BP_Options_Selector_C_OnSetHasChanged");
static_assert(offsetof(BP_Options_Selector_C_OnSetHasChanged, bInHasChanged) == 0x000000, "Member 'BP_Options_Selector_C_OnSetHasChanged::bInHasChanged' has a wrong offset!");

// Function BP_Options_Selector.BP_Options_Selector_C.OnSetSelectedIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_Options_Selector_C_OnSetSelectedIndex final
{
public:
	int32                                         InSelectedIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_Selector_C_OnSetSelectedIndex) == 0x000004, "Wrong alignment on BP_Options_Selector_C_OnSetSelectedIndex");
static_assert(sizeof(BP_Options_Selector_C_OnSetSelectedIndex) == 0x000004, "Wrong size on BP_Options_Selector_C_OnSetSelectedIndex");
static_assert(offsetof(BP_Options_Selector_C_OnSetSelectedIndex, InSelectedIndex) == 0x000000, "Member 'BP_Options_Selector_C_OnSetSelectedIndex::InSelectedIndex' has a wrong offset!");

// Function BP_Options_Selector.BP_Options_Selector_C.OnSetDisplayName
// 0x0018 (0x0018 - 0x0000)
struct BP_Options_Selector_C_OnSetDisplayName final
{
public:
	class FText                                   InDisplayName;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Options_Selector_C_OnSetDisplayName) == 0x000008, "Wrong alignment on BP_Options_Selector_C_OnSetDisplayName");
static_assert(sizeof(BP_Options_Selector_C_OnSetDisplayName) == 0x000018, "Wrong size on BP_Options_Selector_C_OnSetDisplayName");
static_assert(offsetof(BP_Options_Selector_C_OnSetDisplayName, InDisplayName) == 0x000000, "Member 'BP_Options_Selector_C_OnSetDisplayName::InDisplayName' has a wrong offset!");

// Function BP_Options_Selector.BP_Options_Selector_C.OnSetActive
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_Selector_C_OnSetActive final
{
public:
	bool                                          bInIsActive;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_Selector_C_OnSetActive) == 0x000001, "Wrong alignment on BP_Options_Selector_C_OnSetActive");
static_assert(sizeof(BP_Options_Selector_C_OnSetActive) == 0x000001, "Wrong size on BP_Options_Selector_C_OnSetActive");
static_assert(offsetof(BP_Options_Selector_C_OnSetActive, bInIsActive) == 0x000000, "Member 'BP_Options_Selector_C_OnSetActive::bInIsActive' has a wrong offset!");

// Function BP_Options_Selector.BP_Options_Selector_C.OnUnfocused
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_Selector_C_OnUnfocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_Selector_C_OnUnfocused) == 0x000001, "Wrong alignment on BP_Options_Selector_C_OnUnfocused");
static_assert(sizeof(BP_Options_Selector_C_OnUnfocused) == 0x000001, "Wrong size on BP_Options_Selector_C_OnUnfocused");
static_assert(offsetof(BP_Options_Selector_C_OnUnfocused, bAnimate) == 0x000000, "Member 'BP_Options_Selector_C_OnUnfocused::bAnimate' has a wrong offset!");

// Function BP_Options_Selector.BP_Options_Selector_C.OnFocused
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_Selector_C_OnFocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_Selector_C_OnFocused) == 0x000001, "Wrong alignment on BP_Options_Selector_C_OnFocused");
static_assert(sizeof(BP_Options_Selector_C_OnFocused) == 0x000001, "Wrong size on BP_Options_Selector_C_OnFocused");
static_assert(offsetof(BP_Options_Selector_C_OnFocused, bAnimate) == 0x000000, "Member 'BP_Options_Selector_C_OnFocused::bAnimate' has a wrong offset!");

// Function BP_Options_Selector.BP_Options_Selector_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_Options_Selector_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_Selector_C_Tick) == 0x000004, "Wrong alignment on BP_Options_Selector_C_Tick");
static_assert(sizeof(BP_Options_Selector_C_Tick) == 0x00003C, "Wrong size on BP_Options_Selector_C_Tick");
static_assert(offsetof(BP_Options_Selector_C_Tick, MyGeometry) == 0x000000, "Member 'BP_Options_Selector_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_Options_Selector_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Options_Selector.BP_Options_Selector_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_Selector_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_Selector_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Options_Selector_C_PreConstruct");
static_assert(sizeof(BP_Options_Selector_C_PreConstruct) == 0x000001, "Wrong size on BP_Options_Selector_C_PreConstruct");
static_assert(offsetof(BP_Options_Selector_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Options_Selector_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_Options_Selector.BP_Options_Selector_C.SetValue
// 0x0048 (0x0048 - 0x0000)
struct BP_Options_Selector_C_SetValue final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetOptions_ReturnValue;                   // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TArray<class FText>                           CallFunc_GetOptions_ReturnValue_1;                 // 0x0018(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0018)()
};
static_assert(alignof(BP_Options_Selector_C_SetValue) == 0x000008, "Wrong alignment on BP_Options_Selector_C_SetValue");
static_assert(sizeof(BP_Options_Selector_C_SetValue) == 0x000048, "Wrong size on BP_Options_Selector_C_SetValue");
static_assert(offsetof(BP_Options_Selector_C_SetValue, Index_0) == 0x000000, "Member 'BP_Options_Selector_C_SetValue::Index_0' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_SetValue, CallFunc_GetOptions_ReturnValue) == 0x000008, "Member 'BP_Options_Selector_C_SetValue::CallFunc_GetOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_SetValue, CallFunc_GetOptions_ReturnValue_1) == 0x000018, "Member 'BP_Options_Selector_C_SetValue::CallFunc_GetOptions_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_SetValue, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000028, "Member 'BP_Options_Selector_C_SetValue::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_SetValue, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Options_Selector_C_SetValue::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_Options_Selector.BP_Options_Selector_C.SetAttributeName
// 0x0018 (0x0018 - 0x0000)
struct BP_Options_Selector_C_SetAttributeName final
{
public:
	class FText                                   Caption;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Options_Selector_C_SetAttributeName) == 0x000008, "Wrong alignment on BP_Options_Selector_C_SetAttributeName");
static_assert(sizeof(BP_Options_Selector_C_SetAttributeName) == 0x000018, "Wrong size on BP_Options_Selector_C_SetAttributeName");
static_assert(offsetof(BP_Options_Selector_C_SetAttributeName, Caption) == 0x000000, "Member 'BP_Options_Selector_C_SetAttributeName::Caption' has a wrong offset!");

// Function BP_Options_Selector.BP_Options_Selector_C.OnPreviewKeyDown
// 0x02C0 (0x02C0 - 0x0000)
struct BP_Options_Selector_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsFocused_ReturnValue;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0148(0x00B8)()
	bool                                          CallFunc_IsHotkeyKey_ReturnValue;                  // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0208(0x00B8)()
};
static_assert(alignof(BP_Options_Selector_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on BP_Options_Selector_C_OnPreviewKeyDown");
static_assert(sizeof(BP_Options_Selector_C_OnPreviewKeyDown) == 0x0002C0, "Wrong size on BP_Options_Selector_C_OnPreviewKeyDown");
static_assert(offsetof(BP_Options_Selector_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'BP_Options_Selector_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'BP_Options_Selector_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_OnPreviewKeyDown, ReturnValue) == 0x000070, "Member 'BP_Options_Selector_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_OnPreviewKeyDown, CallFunc_IsFocused_ReturnValue) == 0x000128, "Member 'BP_Options_Selector_C_OnPreviewKeyDown::CallFunc_IsFocused_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'BP_Options_Selector_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000148, "Member 'BP_Options_Selector_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_OnPreviewKeyDown, CallFunc_IsHotkeyKey_ReturnValue) == 0x000200, "Member 'BP_Options_Selector_C_OnPreviewKeyDown::CallFunc_IsHotkeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_OnPreviewKeyDown, CallFunc_BooleanAND_ReturnValue) == 0x000201, "Member 'BP_Options_Selector_C_OnPreviewKeyDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_OnPreviewKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000208, "Member 'BP_Options_Selector_C_OnPreviewKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function BP_Options_Selector.BP_Options_Selector_C.ToggleActive
// 0x0070 (0x0070 - 0x0000)
struct BP_Options_Selector_C_ToggleActive final
{
public:
	bool                                          InIsActive;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0028)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_Selector_C_ToggleActive) == 0x000008, "Wrong alignment on BP_Options_Selector_C_ToggleActive");
static_assert(sizeof(BP_Options_Selector_C_ToggleActive) == 0x000070, "Wrong size on BP_Options_Selector_C_ToggleActive");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, InIsActive) == 0x000000, "Member 'BP_Options_Selector_C_ToggleActive::InIsActive' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, Temp_bool_Variable) == 0x000001, "Member 'BP_Options_Selector_C_ToggleActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, Temp_struct_Variable) == 0x000004, "Member 'BP_Options_Selector_C_ToggleActive::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, Temp_struct_Variable_1) == 0x000014, "Member 'BP_Options_Selector_C_ToggleActive::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, Temp_bool_Variable_1) == 0x000024, "Member 'BP_Options_Selector_C_ToggleActive::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, Temp_byte_Variable) == 0x000025, "Member 'BP_Options_Selector_C_ToggleActive::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, Temp_byte_Variable_1) == 0x000026, "Member 'BP_Options_Selector_C_ToggleActive::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, Temp_bool_Variable_2) == 0x000027, "Member 'BP_Options_Selector_C_ToggleActive::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, Temp_byte_Variable_2) == 0x000028, "Member 'BP_Options_Selector_C_ToggleActive::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, Temp_byte_Variable_3) == 0x000029, "Member 'BP_Options_Selector_C_ToggleActive::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, Temp_bool_Variable_3) == 0x00002A, "Member 'BP_Options_Selector_C_ToggleActive::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, Temp_byte_Variable_4) == 0x00002B, "Member 'BP_Options_Selector_C_ToggleActive::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, Temp_byte_Variable_5) == 0x00002C, "Member 'BP_Options_Selector_C_ToggleActive::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, K2Node_Select_Default) == 0x000030, "Member 'BP_Options_Selector_C_ToggleActive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'BP_Options_Selector_C_ToggleActive::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, K2Node_Select_Default_1) == 0x000068, "Member 'BP_Options_Selector_C_ToggleActive::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, K2Node_Select_Default_2) == 0x000069, "Member 'BP_Options_Selector_C_ToggleActive::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Options_Selector_C_ToggleActive, K2Node_Select_Default_3) == 0x00006A, "Member 'BP_Options_Selector_C_ToggleActive::K2Node_Select_Default_3' has a wrong offset!");

}

