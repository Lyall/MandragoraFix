#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Options_Video

#include "Basic.hpp"

#include "man_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Options_Video.BP_Options_Video_C.ExecuteUbergraph_BP_Options_Video
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Index_1;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Index;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETabButtonType                                CallFunc_GetPreviousTab_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETabButtonType                                CallFunc_GetNextTab_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InDescription;                        // 0x0078(0x0018)(ConstParm)
	class FText                                   K2Node_Event_VRamText;                             // 0x0090(0x0018)(ConstParm)
	EInputDisplay                                 K2Node_Event_InInputDisplay;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InControlDisplay;                     // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video) == 0x000008, "Wrong alignment on BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video");
static_assert(sizeof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video) == 0x0000B0, "Wrong size on BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, EntryPoint) == 0x000000, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, K2Node_Event_MyGeometry) == 0x000004, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, K2Node_ComponentBoundEvent_Index_1) == 0x000040, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::K2Node_ComponentBoundEvent_Index_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, K2Node_ComponentBoundEvent_Index) == 0x000044, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::K2Node_ComponentBoundEvent_Index' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, K2Node_Event_AnimDuration_1) == 0x000048, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x00004C, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, K2Node_Event_AnimDuration) == 0x000050, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000060, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, CallFunc_PlayAnimation_ReturnValue_1) == 0x000068, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, CallFunc_GetPreviousTab_ReturnValue) == 0x000070, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::CallFunc_GetPreviousTab_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, CallFunc_GetNextTab_ReturnValue) == 0x000071, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::CallFunc_GetNextTab_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, K2Node_Event_InDescription) == 0x000078, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::K2Node_Event_InDescription' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, K2Node_Event_VRamText) == 0x000090, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::K2Node_Event_VRamText' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, K2Node_Event_InInputDisplay) == 0x0000A8, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::K2Node_Event_InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video, K2Node_Event_InControlDisplay) == 0x0000A9, "Member 'BP_Options_Video_C_ExecuteUbergraph_BP_Options_Video::K2Node_Event_InControlDisplay' has a wrong offset!");

// Function BP_Options_Video.BP_Options_Video_C.OnSetInputDisplay
// 0x0002 (0x0002 - 0x0000)
struct BP_Options_Video_C_OnSetInputDisplay final
{
public:
	EInputDisplay                                 InInputDisplay;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 InControlDisplay;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_Video_C_OnSetInputDisplay) == 0x000001, "Wrong alignment on BP_Options_Video_C_OnSetInputDisplay");
static_assert(sizeof(BP_Options_Video_C_OnSetInputDisplay) == 0x000002, "Wrong size on BP_Options_Video_C_OnSetInputDisplay");
static_assert(offsetof(BP_Options_Video_C_OnSetInputDisplay, InInputDisplay) == 0x000000, "Member 'BP_Options_Video_C_OnSetInputDisplay::InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_OnSetInputDisplay, InControlDisplay) == 0x000001, "Member 'BP_Options_Video_C_OnSetInputDisplay::InControlDisplay' has a wrong offset!");

// Function BP_Options_Video.BP_Options_Video_C.OnSetVramText
// 0x0018 (0x0018 - 0x0000)
struct BP_Options_Video_C_OnSetVramText final
{
public:
	class FText                                   VRamText_0;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Options_Video_C_OnSetVramText) == 0x000008, "Wrong alignment on BP_Options_Video_C_OnSetVramText");
static_assert(sizeof(BP_Options_Video_C_OnSetVramText) == 0x000018, "Wrong size on BP_Options_Video_C_OnSetVramText");
static_assert(offsetof(BP_Options_Video_C_OnSetVramText, VRamText_0) == 0x000000, "Member 'BP_Options_Video_C_OnSetVramText::VRamText_0' has a wrong offset!");

// Function BP_Options_Video.BP_Options_Video_C.OnSetDescription
// 0x0018 (0x0018 - 0x0000)
struct BP_Options_Video_C_OnSetDescription final
{
public:
	class FText                                   InDescription;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Options_Video_C_OnSetDescription) == 0x000008, "Wrong alignment on BP_Options_Video_C_OnSetDescription");
static_assert(sizeof(BP_Options_Video_C_OnSetDescription) == 0x000018, "Wrong size on BP_Options_Video_C_OnSetDescription");
static_assert(offsetof(BP_Options_Video_C_OnSetDescription, InDescription) == 0x000000, "Member 'BP_Options_Video_C_OnSetDescription::InDescription' has a wrong offset!");

// Function BP_Options_Video.BP_Options_Video_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_Options_Video_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_Video_C_OnHide) == 0x000004, "Wrong alignment on BP_Options_Video_C_OnHide");
static_assert(sizeof(BP_Options_Video_C_OnHide) == 0x000004, "Wrong size on BP_Options_Video_C_OnHide");
static_assert(offsetof(BP_Options_Video_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_Options_Video_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_Options_Video.BP_Options_Video_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_Options_Video_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_Video_C_OnShow) == 0x000004, "Wrong alignment on BP_Options_Video_C_OnShow");
static_assert(sizeof(BP_Options_Video_C_OnShow) == 0x000004, "Wrong size on BP_Options_Video_C_OnShow");
static_assert(offsetof(BP_Options_Video_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_Options_Video_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_Options_Video.BP_Options_Video_C.BndEvt__Option_ScreenResolution_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_Options_Video_C_BndEvt__Option_ScreenResolution_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_Video_C_BndEvt__Option_ScreenResolution_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_Options_Video_C_BndEvt__Option_ScreenResolution_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature");
static_assert(sizeof(BP_Options_Video_C_BndEvt__Option_ScreenResolution_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on BP_Options_Video_C_BndEvt__Option_ScreenResolution_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature");
static_assert(offsetof(BP_Options_Video_C_BndEvt__Option_ScreenResolution_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature, Index_0) == 0x000000, "Member 'BP_Options_Video_C_BndEvt__Option_ScreenResolution_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature::Index_0' has a wrong offset!");

// Function BP_Options_Video.BP_Options_Video_C.BndEvt__Option_DisplayMode_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_Options_Video_C_BndEvt__Option_DisplayMode_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_Video_C_BndEvt__Option_DisplayMode_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_Options_Video_C_BndEvt__Option_DisplayMode_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature");
static_assert(sizeof(BP_Options_Video_C_BndEvt__Option_DisplayMode_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on BP_Options_Video_C_BndEvt__Option_DisplayMode_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature");
static_assert(offsetof(BP_Options_Video_C_BndEvt__Option_DisplayMode_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature, Index_0) == 0x000000, "Member 'BP_Options_Video_C_BndEvt__Option_DisplayMode_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature::Index_0' has a wrong offset!");

// Function BP_Options_Video.BP_Options_Video_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_Options_Video_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_Video_C_Tick) == 0x000004, "Wrong alignment on BP_Options_Video_C_Tick");
static_assert(sizeof(BP_Options_Video_C_Tick) == 0x00003C, "Wrong size on BP_Options_Video_C_Tick");
static_assert(offsetof(BP_Options_Video_C_Tick, MyGeometry) == 0x000000, "Member 'BP_Options_Video_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_Options_Video_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Options_Video.BP_Options_Video_C.BtnHotkeyBClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_Video_C_BtnHotkeyBClicked final
{
public:
	bool                                          CallFunc_DoClose_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_Video_C_BtnHotkeyBClicked) == 0x000001, "Wrong alignment on BP_Options_Video_C_BtnHotkeyBClicked");
static_assert(sizeof(BP_Options_Video_C_BtnHotkeyBClicked) == 0x000001, "Wrong size on BP_Options_Video_C_BtnHotkeyBClicked");
static_assert(offsetof(BP_Options_Video_C_BtnHotkeyBClicked, CallFunc_DoClose_ReturnValue) == 0x000000, "Member 'BP_Options_Video_C_BtnHotkeyBClicked::CallFunc_DoClose_ReturnValue' has a wrong offset!");

// Function BP_Options_Video.BP_Options_Video_C.BtnHotkeyXClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_Options_Video_C_BtnHotkeyXClicked final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Options_Video_C_BtnHotkeyXClicked) == 0x000001, "Wrong alignment on BP_Options_Video_C_BtnHotkeyXClicked");
static_assert(sizeof(BP_Options_Video_C_BtnHotkeyXClicked) == 0x000001, "Wrong size on BP_Options_Video_C_BtnHotkeyXClicked");
static_assert(offsetof(BP_Options_Video_C_BtnHotkeyXClicked, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'BP_Options_Video_C_BtnHotkeyXClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_Options_Video.BP_Options_Video_C.SetBtnCloseVisibility
// 0x000B (0x000B - 0x0000)
struct BP_Options_Video_C_SetBtnCloseVisibility final
{
public:
	EInputDisplay                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 CallFunc_GetInputDisplay_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Options_Video_C_SetBtnCloseVisibility) == 0x000001, "Wrong alignment on BP_Options_Video_C_SetBtnCloseVisibility");
static_assert(sizeof(BP_Options_Video_C_SetBtnCloseVisibility) == 0x00000B, "Wrong size on BP_Options_Video_C_SetBtnCloseVisibility");
static_assert(offsetof(BP_Options_Video_C_SetBtnCloseVisibility, Temp_byte_Variable) == 0x000000, "Member 'BP_Options_Video_C_SetBtnCloseVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_SetBtnCloseVisibility, Temp_byte_Variable_1) == 0x000001, "Member 'BP_Options_Video_C_SetBtnCloseVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_SetBtnCloseVisibility, Temp_byte_Variable_2) == 0x000002, "Member 'BP_Options_Video_C_SetBtnCloseVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_SetBtnCloseVisibility, Temp_byte_Variable_3) == 0x000003, "Member 'BP_Options_Video_C_SetBtnCloseVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_SetBtnCloseVisibility, Temp_byte_Variable_4) == 0x000004, "Member 'BP_Options_Video_C_SetBtnCloseVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_SetBtnCloseVisibility, Temp_byte_Variable_5) == 0x000005, "Member 'BP_Options_Video_C_SetBtnCloseVisibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_SetBtnCloseVisibility, Temp_byte_Variable_6) == 0x000006, "Member 'BP_Options_Video_C_SetBtnCloseVisibility::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_SetBtnCloseVisibility, Temp_byte_Variable_7) == 0x000007, "Member 'BP_Options_Video_C_SetBtnCloseVisibility::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_SetBtnCloseVisibility, Temp_byte_Variable_8) == 0x000008, "Member 'BP_Options_Video_C_SetBtnCloseVisibility::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_SetBtnCloseVisibility, CallFunc_GetInputDisplay_ReturnValue) == 0x000009, "Member 'BP_Options_Video_C_SetBtnCloseVisibility::CallFunc_GetInputDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Options_Video_C_SetBtnCloseVisibility, K2Node_Select_Default) == 0x00000A, "Member 'BP_Options_Video_C_SetBtnCloseVisibility::K2Node_Select_Default' has a wrong offset!");

}

