#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Panning_Waypoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Panning_Waypoint.BP_Panning_Waypoint_C
// 0x0020 (0x0248 - 0x0228)
class ABP_Panning_Waypoint_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextRenderComponent*                   TextRender;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cone;                                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Teleport;                                          // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WaypointIndex;                                     // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Panning_Waypoint(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Panning_Waypoint_C">();
	}
	static class ABP_Panning_Waypoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Panning_Waypoint_C>();
	}
};
static_assert(alignof(ABP_Panning_Waypoint_C) == 0x000008, "Wrong alignment on ABP_Panning_Waypoint_C");
static_assert(sizeof(ABP_Panning_Waypoint_C) == 0x000248, "Wrong size on ABP_Panning_Waypoint_C");
static_assert(offsetof(ABP_Panning_Waypoint_C, UberGraphFrame) == 0x000228, "Member 'ABP_Panning_Waypoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Panning_Waypoint_C, TextRender) == 0x000230, "Member 'ABP_Panning_Waypoint_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_Panning_Waypoint_C, Cone) == 0x000238, "Member 'ABP_Panning_Waypoint_C::Cone' has a wrong offset!");
static_assert(offsetof(ABP_Panning_Waypoint_C, Teleport) == 0x000240, "Member 'ABP_Panning_Waypoint_C::Teleport' has a wrong offset!");
static_assert(offsetof(ABP_Panning_Waypoint_C, WaypointIndex) == 0x000244, "Member 'ABP_Panning_Waypoint_C::WaypointIndex' has a wrong offset!");

}

