#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Parchment

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Parchment.BP_Parchment_C.ExecuteUbergraph_BP_Parchment
// 0x0078 (0x0078 - 0x0000)
struct BP_Parchment_C_ExecuteUbergraph_BP_Parchment final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInfoScreentDataAsset*                  K2Node_Event_InInfoScreenData;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0038(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment) == 0x000008, "Wrong alignment on BP_Parchment_C_ExecuteUbergraph_BP_Parchment");
static_assert(sizeof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment) == 0x000078, "Wrong size on BP_Parchment_C_ExecuteUbergraph_BP_Parchment");
static_assert(offsetof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment, EntryPoint) == 0x000000, "Member 'BP_Parchment_C_ExecuteUbergraph_BP_Parchment::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment, K2Node_Event_InInfoScreenData) == 0x000008, "Member 'BP_Parchment_C_ExecuteUbergraph_BP_Parchment::K2Node_Event_InInfoScreenData' has a wrong offset!");
static_assert(offsetof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment, K2Node_Event_IsDesignTime) == 0x000010, "Member 'BP_Parchment_C_ExecuteUbergraph_BP_Parchment::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment, K2Node_Event_AnimDuration_1) == 0x000014, "Member 'BP_Parchment_C_ExecuteUbergraph_BP_Parchment::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x000018, "Member 'BP_Parchment_C_ExecuteUbergraph_BP_Parchment::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment, K2Node_Event_AnimDuration) == 0x00001C, "Member 'BP_Parchment_C_ExecuteUbergraph_BP_Parchment::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'BP_Parchment_C_ExecuteUbergraph_BP_Parchment::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000028, "Member 'BP_Parchment_C_ExecuteUbergraph_BP_Parchment::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment, CallFunc_PlayAnimation_ReturnValue_1) == 0x000030, "Member 'BP_Parchment_C_ExecuteUbergraph_BP_Parchment::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment, K2Node_Event_MyGeometry) == 0x000038, "Member 'BP_Parchment_C_ExecuteUbergraph_BP_Parchment::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Parchment_C_ExecuteUbergraph_BP_Parchment, K2Node_Event_InDeltaTime) == 0x000070, "Member 'BP_Parchment_C_ExecuteUbergraph_BP_Parchment::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function BP_Parchment.BP_Parchment_C.OnSetData
// 0x0008 (0x0008 - 0x0000)
struct BP_Parchment_C_OnSetData final
{
public:
	class UInfoScreentDataAsset*                  InInfoScreenData;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Parchment_C_OnSetData) == 0x000008, "Wrong alignment on BP_Parchment_C_OnSetData");
static_assert(sizeof(BP_Parchment_C_OnSetData) == 0x000008, "Wrong size on BP_Parchment_C_OnSetData");
static_assert(offsetof(BP_Parchment_C_OnSetData, InInfoScreenData) == 0x000000, "Member 'BP_Parchment_C_OnSetData::InInfoScreenData' has a wrong offset!");

// Function BP_Parchment.BP_Parchment_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_Parchment_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Parchment_C_Tick) == 0x000004, "Wrong alignment on BP_Parchment_C_Tick");
static_assert(sizeof(BP_Parchment_C_Tick) == 0x00003C, "Wrong size on BP_Parchment_C_Tick");
static_assert(offsetof(BP_Parchment_C_Tick, MyGeometry) == 0x000000, "Member 'BP_Parchment_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Parchment_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_Parchment_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Parchment.BP_Parchment_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_Parchment_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Parchment_C_OnHide) == 0x000004, "Wrong alignment on BP_Parchment_C_OnHide");
static_assert(sizeof(BP_Parchment_C_OnHide) == 0x000004, "Wrong size on BP_Parchment_C_OnHide");
static_assert(offsetof(BP_Parchment_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_Parchment_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_Parchment.BP_Parchment_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_Parchment_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Parchment_C_OnShow) == 0x000004, "Wrong alignment on BP_Parchment_C_OnShow");
static_assert(sizeof(BP_Parchment_C_OnShow) == 0x000004, "Wrong size on BP_Parchment_C_OnShow");
static_assert(offsetof(BP_Parchment_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_Parchment_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_Parchment.BP_Parchment_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Parchment_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Parchment_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Parchment_C_PreConstruct");
static_assert(sizeof(BP_Parchment_C_PreConstruct) == 0x000001, "Wrong size on BP_Parchment_C_PreConstruct");
static_assert(offsetof(BP_Parchment_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Parchment_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_Parchment.BP_Parchment_C.Init
// 0x0020 (0x0020 - 0x0000)
struct BP_Parchment_C_Init final
{
public:
	class UTexture2D*                             InParchmentTexture;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   InParchmentText;                                   // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Parchment_C_Init) == 0x000008, "Wrong alignment on BP_Parchment_C_Init");
static_assert(sizeof(BP_Parchment_C_Init) == 0x000020, "Wrong size on BP_Parchment_C_Init");
static_assert(offsetof(BP_Parchment_C_Init, InParchmentTexture) == 0x000000, "Member 'BP_Parchment_C_Init::InParchmentTexture' has a wrong offset!");
static_assert(offsetof(BP_Parchment_C_Init, InParchmentText) == 0x000008, "Member 'BP_Parchment_C_Init::InParchmentText' has a wrong offset!");

}

