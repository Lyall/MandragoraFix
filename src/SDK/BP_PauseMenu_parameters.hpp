#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PauseMenu

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "man_structs.hpp"


namespace SDK::Params
{

// Function BP_PauseMenu.BP_PauseMenu_C.ExecuteUbergraph_BP_PauseMenu
// 0x01F8 (0x01F8 - 0x0000)
struct BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 Temp_byte_Variable_4;                              // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 Temp_byte_Variable_11;                             // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_21;                             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_22;                             // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_23;                             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_24;                             // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_25;                             // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 Temp_byte_Variable_26;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_27;                             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_28;                             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_29;                             // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_30;                             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_31;                             // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_32;                             // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_33;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_34;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_35;                             // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_36;                             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00B0(0x0018)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 Temp_byte_Variable_37;                             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00F4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UManUserWidgetBase*                     CallFunc_ShowManUserWidgetByZorder_ReturnValue;    // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InInputDisplay;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InControlDisplay;                     // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLeftAndRightSticksSwapped_ReturnValue;  // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16B[0x5];                                      // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLeftAndRightSticksSwapped_ReturnValue_1; // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_3;                           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bQuickUseDefault;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate_3;                           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate_2;                           // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate_1;                           // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_186[0x2];                                      // 0x0186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetLungeActionName_ReturnValue;           // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetLungeActionName_ReturnValue_1;         // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0197(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControllerSchemeVisible_ReturnValue;    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControllerSchemeVisible_ReturnValue_1;  // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_7;                           // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_9;                           // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_10;                          // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_11;                          // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetVersion_ReturnValue;                   // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01B0(0x0018)()
	bool                                          CallFunc_IsSprintToggleMode_ReturnValue;           // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_12;                          // 0x01D0(0x0018)()
	bool                                          CallFunc_GlobalDictionaryGetBool_OutValue;         // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GlobalDictionaryGetBool_ReturnValue;      // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTutorialScreenUserWidget*              CallFunc_ShowTutorialReplayScreen_ReturnValue;     // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu) == 0x000008, "Wrong alignment on BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu");
static_assert(sizeof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu) == 0x0001F8, "Wrong size on BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, EntryPoint) == 0x000000, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_object_Variable) == 0x000008, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_object_Variable_1) == 0x000028, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_object_Variable_2) == 0x000030, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_object_Variable_3) == 0x000038, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_object_Variable_4) == 0x000040, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_object_Variable_5) == 0x000048, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_object_Variable_6) == 0x000050, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_object_Variable_7) == 0x000058, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_bool_Variable) == 0x000060, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable) == 0x000061, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_1) == 0x000062, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_bool_Variable_1) == 0x000063, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_float_Variable) == 0x000064, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_float_Variable_1) == 0x000068, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_bool_Variable_2) == 0x00006C, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_2) == 0x00006D, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_3) == 0x00006E, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_4) == 0x00006F, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_5) == 0x000070, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_6) == 0x000071, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_7) == 0x000072, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_8) == 0x000073, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_9) == 0x000074, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_10) == 0x000075, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_11) == 0x000076, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_12) == 0x000077, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_13) == 0x000078, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_14) == 0x000079, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_15) == 0x00007A, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_16) == 0x00007B, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_17) == 0x00007C, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_18) == 0x00007D, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_19) == 0x00007E, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_bool_Variable_3) == 0x00007F, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_20) == 0x000080, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_21) == 0x000081, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_bool_Variable_4) == 0x000082, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_22) == 0x000083, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_23) == 0x000084, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_bool_Variable_5) == 0x000085, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_24) == 0x000086, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_25) == 0x000087, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_26) == 0x000088, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_27) == 0x000089, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_28) == 0x00008A, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_29) == 0x00008B, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_30) == 0x00008C, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_31) == 0x00008D, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_32) == 0x00008E, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_bool_Variable_6) == 0x00008F, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_33) == 0x000090, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_34) == 0x000091, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_bool_Variable_7) == 0x000092, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_35) == 0x000093, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_36) == 0x000094, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_bool_Variable_8) == 0x000095, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_text_Variable) == 0x000098, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_text_Variable_1) == 0x0000B0, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_byte_Variable_37) == 0x0000CC, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_DynamicCast_AsUser_Widget) == 0x0000D8, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_MakeStruct_Margin) == 0x0000E4, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Event_MyGeometry) == 0x0000F4, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Event_InDeltaTime) == 0x00012C, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Event_AnimDuration_1) == 0x000130, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x000134, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Event_AnimDuration) == 0x000138, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_PlayAnimation_ReturnValue) == 0x000140, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000148, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_PlayAnimation_ReturnValue_1) == 0x000150, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_PlayAnimation_ReturnValue_2) == 0x000158, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_ShowManUserWidgetByZorder_ReturnValue) == 0x000160, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_ShowManUserWidgetByZorder_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Event_InInputDisplay) == 0x000168, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Event_InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Event_InControlDisplay) == 0x000169, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Event_InControlDisplay' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_IsLeftAndRightSticksSwapped_ReturnValue) == 0x00016A, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_IsLeftAndRightSticksSwapped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default) == 0x000170, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default_1) == 0x000178, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_IsValid_ReturnValue) == 0x000179, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default_2) == 0x00017A, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_IsLeftAndRightSticksSwapped_ReturnValue_1) == 0x00017B, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_IsLeftAndRightSticksSwapped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default_3) == 0x00017C, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Event_bQuickUseDefault) == 0x000180, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Event_bQuickUseDefault' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Event_bAnimate_3) == 0x000181, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Event_bAnimate_3' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Event_bAnimate_2) == 0x000182, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Event_bAnimate_2' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Event_bAnimate_1) == 0x000183, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Event_bAnimate_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Event_bAnimate) == 0x000184, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_IsConsole_ReturnValue) == 0x000185, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_IsConsole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, Temp_int_Loop_Counter_Variable) == 0x000188, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_Less_IntInt_ReturnValue) == 0x00018C, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000190, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_SetLungeActionName_ReturnValue) == 0x000194, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_SetLungeActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default_4) == 0x000195, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_SetLungeActionName_ReturnValue_1) == 0x000196, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_SetLungeActionName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default_5) == 0x000197, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_IsControllerSchemeVisible_ReturnValue) == 0x000198, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_IsControllerSchemeVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_IsControllerSchemeVisible_ReturnValue_1) == 0x000199, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_IsControllerSchemeVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default_6) == 0x00019A, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default_7) == 0x00019B, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default_8) == 0x00019C, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default_9) == 0x00019D, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default_10) == 0x00019E, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default_11) == 0x00019F, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_GetVersion_ReturnValue) == 0x0001A0, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_GetVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_Conv_StringToText_ReturnValue) == 0x0001B0, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_IsSprintToggleMode_ReturnValue) == 0x0001C8, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_IsSprintToggleMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, K2Node_Select_Default_12) == 0x0001D0, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_GlobalDictionaryGetBool_OutValue) == 0x0001E8, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_GlobalDictionaryGetBool_OutValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_GlobalDictionaryGetBool_ReturnValue) == 0x0001E9, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_GlobalDictionaryGetBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu, CallFunc_ShowTutorialReplayScreen_ReturnValue) == 0x0001F0, "Member 'BP_PauseMenu_C_ExecuteUbergraph_BP_PauseMenu::CallFunc_ShowTutorialReplayScreen_ReturnValue' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.OnGroundSlamUnlock
// 0x0001 (0x0001 - 0x0000)
struct BP_PauseMenu_C_OnGroundSlamUnlock final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PauseMenu_C_OnGroundSlamUnlock) == 0x000001, "Wrong alignment on BP_PauseMenu_C_OnGroundSlamUnlock");
static_assert(sizeof(BP_PauseMenu_C_OnGroundSlamUnlock) == 0x000001, "Wrong size on BP_PauseMenu_C_OnGroundSlamUnlock");
static_assert(offsetof(BP_PauseMenu_C_OnGroundSlamUnlock, bAnimate) == 0x000000, "Member 'BP_PauseMenu_C_OnGroundSlamUnlock::bAnimate' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.OnGrapplingHookUnlock
// 0x0001 (0x0001 - 0x0000)
struct BP_PauseMenu_C_OnGrapplingHookUnlock final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PauseMenu_C_OnGrapplingHookUnlock) == 0x000001, "Wrong alignment on BP_PauseMenu_C_OnGrapplingHookUnlock");
static_assert(sizeof(BP_PauseMenu_C_OnGrapplingHookUnlock) == 0x000001, "Wrong size on BP_PauseMenu_C_OnGrapplingHookUnlock");
static_assert(offsetof(BP_PauseMenu_C_OnGrapplingHookUnlock, bAnimate) == 0x000000, "Member 'BP_PauseMenu_C_OnGrapplingHookUnlock::bAnimate' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.OnDoubleJumpUnlock
// 0x0001 (0x0001 - 0x0000)
struct BP_PauseMenu_C_OnDoubleJumpUnlock final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PauseMenu_C_OnDoubleJumpUnlock) == 0x000001, "Wrong alignment on BP_PauseMenu_C_OnDoubleJumpUnlock");
static_assert(sizeof(BP_PauseMenu_C_OnDoubleJumpUnlock) == 0x000001, "Wrong size on BP_PauseMenu_C_OnDoubleJumpUnlock");
static_assert(offsetof(BP_PauseMenu_C_OnDoubleJumpUnlock, bAnimate) == 0x000000, "Member 'BP_PauseMenu_C_OnDoubleJumpUnlock::bAnimate' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.OnGlideUnlock
// 0x0001 (0x0001 - 0x0000)
struct BP_PauseMenu_C_OnGlideUnlock final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PauseMenu_C_OnGlideUnlock) == 0x000001, "Wrong alignment on BP_PauseMenu_C_OnGlideUnlock");
static_assert(sizeof(BP_PauseMenu_C_OnGlideUnlock) == 0x000001, "Wrong size on BP_PauseMenu_C_OnGlideUnlock");
static_assert(offsetof(BP_PauseMenu_C_OnGlideUnlock, bAnimate) == 0x000000, "Member 'BP_PauseMenu_C_OnGlideUnlock::bAnimate' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.OnSetQuickUseDefault
// 0x0001 (0x0001 - 0x0000)
struct BP_PauseMenu_C_OnSetQuickUseDefault final
{
public:
	bool                                          bQuickUseDefault;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PauseMenu_C_OnSetQuickUseDefault) == 0x000001, "Wrong alignment on BP_PauseMenu_C_OnSetQuickUseDefault");
static_assert(sizeof(BP_PauseMenu_C_OnSetQuickUseDefault) == 0x000001, "Wrong size on BP_PauseMenu_C_OnSetQuickUseDefault");
static_assert(offsetof(BP_PauseMenu_C_OnSetQuickUseDefault, bQuickUseDefault) == 0x000000, "Member 'BP_PauseMenu_C_OnSetQuickUseDefault::bQuickUseDefault' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.OnSetInputDisplay
// 0x0002 (0x0002 - 0x0000)
struct BP_PauseMenu_C_OnSetInputDisplay final
{
public:
	EInputDisplay                                 InInputDisplay;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 InControlDisplay;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PauseMenu_C_OnSetInputDisplay) == 0x000001, "Wrong alignment on BP_PauseMenu_C_OnSetInputDisplay");
static_assert(sizeof(BP_PauseMenu_C_OnSetInputDisplay) == 0x000002, "Wrong size on BP_PauseMenu_C_OnSetInputDisplay");
static_assert(offsetof(BP_PauseMenu_C_OnSetInputDisplay, InInputDisplay) == 0x000000, "Member 'BP_PauseMenu_C_OnSetInputDisplay::InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_OnSetInputDisplay, InControlDisplay) == 0x000001, "Member 'BP_PauseMenu_C_OnSetInputDisplay::InControlDisplay' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_PauseMenu_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PauseMenu_C_OnHide) == 0x000004, "Wrong alignment on BP_PauseMenu_C_OnHide");
static_assert(sizeof(BP_PauseMenu_C_OnHide) == 0x000004, "Wrong size on BP_PauseMenu_C_OnHide");
static_assert(offsetof(BP_PauseMenu_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_PauseMenu_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_PauseMenu_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PauseMenu_C_OnShow) == 0x000004, "Wrong alignment on BP_PauseMenu_C_OnShow");
static_assert(sizeof(BP_PauseMenu_C_OnShow) == 0x000004, "Wrong size on BP_PauseMenu_C_OnShow");
static_assert(offsetof(BP_PauseMenu_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_PauseMenu_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_PauseMenu_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PauseMenu_C_Tick) == 0x000004, "Wrong alignment on BP_PauseMenu_C_Tick");
static_assert(sizeof(BP_PauseMenu_C_Tick) == 0x00003C, "Wrong size on BP_PauseMenu_C_Tick");
static_assert(offsetof(BP_PauseMenu_C_Tick, MyGeometry) == 0x000000, "Member 'BP_PauseMenu_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_PauseMenu_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.GoToFirst
// 0x0028 (0x0028 - 0x0000)
struct BP_PauseMenu_C_GoToFirst final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PauseMenu_Button_C*                 K2Node_DynamicCast_AsBP_Pause_Menu_Button;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PauseMenu_C_GoToFirst) == 0x000008, "Wrong alignment on BP_PauseMenu_C_GoToFirst");
static_assert(sizeof(BP_PauseMenu_C_GoToFirst) == 0x000028, "Wrong size on BP_PauseMenu_C_GoToFirst");
static_assert(offsetof(BP_PauseMenu_C_GoToFirst, Navigation_0) == 0x000000, "Member 'BP_PauseMenu_C_GoToFirst::Navigation_0' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_GoToFirst, ReturnValue) == 0x000008, "Member 'BP_PauseMenu_C_GoToFirst::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_GoToFirst, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'BP_PauseMenu_C_GoToFirst::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_GoToFirst, K2Node_DynamicCast_AsBP_Pause_Menu_Button) == 0x000018, "Member 'BP_PauseMenu_C_GoToFirst::K2Node_DynamicCast_AsBP_Pause_Menu_Button' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_GoToFirst, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PauseMenu_C_GoToFirst::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.GoToLast
// 0x0030 (0x0030 - 0x0000)
struct BP_PauseMenu_C_GoToLast final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PauseMenu_Button_C*                 K2Node_DynamicCast_AsBP_Pause_Menu_Button;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PauseMenu_C_GoToLast) == 0x000008, "Wrong alignment on BP_PauseMenu_C_GoToLast");
static_assert(sizeof(BP_PauseMenu_C_GoToLast) == 0x000030, "Wrong size on BP_PauseMenu_C_GoToLast");
static_assert(offsetof(BP_PauseMenu_C_GoToLast, Navigation_0) == 0x000000, "Member 'BP_PauseMenu_C_GoToLast::Navigation_0' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_GoToLast, ReturnValue) == 0x000008, "Member 'BP_PauseMenu_C_GoToLast::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_GoToLast, CallFunc_GetChildrenCount_ReturnValue) == 0x000010, "Member 'BP_PauseMenu_C_GoToLast::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_GoToLast, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_PauseMenu_C_GoToLast::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_GoToLast, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'BP_PauseMenu_C_GoToLast::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_GoToLast, K2Node_DynamicCast_AsBP_Pause_Menu_Button) == 0x000020, "Member 'BP_PauseMenu_C_GoToLast::K2Node_DynamicCast_AsBP_Pause_Menu_Button' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_GoToLast, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PauseMenu_C_GoToLast::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.QuickUseDefault
// 0x0030 (0x0030 - 0x0000)
struct BP_PauseMenu_C_QuickUseDefault final
{
public:
	bool                                          IsDefault;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PauseMenu_C_QuickUseDefault) == 0x000004, "Wrong alignment on BP_PauseMenu_C_QuickUseDefault");
static_assert(sizeof(BP_PauseMenu_C_QuickUseDefault) == 0x000030, "Wrong size on BP_PauseMenu_C_QuickUseDefault");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, IsDefault) == 0x000000, "Member 'BP_PauseMenu_C_QuickUseDefault::IsDefault' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, Temp_bool_Variable) == 0x000001, "Member 'BP_PauseMenu_C_QuickUseDefault::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, Temp_float_Variable) == 0x000004, "Member 'BP_PauseMenu_C_QuickUseDefault::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, Temp_float_Variable_1) == 0x000008, "Member 'BP_PauseMenu_C_QuickUseDefault::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_PauseMenu_C_QuickUseDefault::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, Temp_float_Variable_2) == 0x000010, "Member 'BP_PauseMenu_C_QuickUseDefault::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, Temp_float_Variable_3) == 0x000014, "Member 'BP_PauseMenu_C_QuickUseDefault::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, Temp_bool_Variable_2) == 0x000018, "Member 'BP_PauseMenu_C_QuickUseDefault::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, Temp_byte_Variable) == 0x000019, "Member 'BP_PauseMenu_C_QuickUseDefault::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, Temp_byte_Variable_1) == 0x00001A, "Member 'BP_PauseMenu_C_QuickUseDefault::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, K2Node_Select_Default) == 0x00001C, "Member 'BP_PauseMenu_C_QuickUseDefault::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'BP_PauseMenu_C_QuickUseDefault::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, K2Node_Select_Default_1) == 0x000028, "Member 'BP_PauseMenu_C_QuickUseDefault::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_QuickUseDefault, K2Node_Select_Default_2) == 0x00002C, "Member 'BP_PauseMenu_C_QuickUseDefault::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.Unlock Anim Double Jump
// 0x0040 (0x0040 - 0x0000)
struct BP_PauseMenu_C_Unlock_Anim_Double_Jump final
{
public:
	bool                                          Animate;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PauseMenu_C_Unlock_Anim_Double_Jump) == 0x000008, "Wrong alignment on BP_PauseMenu_C_Unlock_Anim_Double_Jump");
static_assert(sizeof(BP_PauseMenu_C_Unlock_Anim_Double_Jump) == 0x000040, "Wrong size on BP_PauseMenu_C_Unlock_Anim_Double_Jump");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, Animate) == 0x000000, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::Animate' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, Temp_bool_Variable) == 0x000001, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, Temp_float_Variable) == 0x000004, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, Temp_bool_Variable_1) == 0x000008, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, Temp_float_Variable_1) == 0x00000C, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, CallFunc_GetEndTime_ReturnValue) == 0x000010, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, CallFunc_GetEndTime_ReturnValue_1) == 0x000018, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, K2Node_Select_Default) == 0x00001C, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, K2Node_Select_Default_1) == 0x000030, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_Unlock_Anim_Double_Jump, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'BP_PauseMenu_C_Unlock_Anim_Double_Jump::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.UnlockAnim_Glide
// 0x0040 (0x0040 - 0x0000)
struct BP_PauseMenu_C_UnlockAnim_Glide final
{
public:
	bool                                          Animate;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PauseMenu_C_UnlockAnim_Glide) == 0x000008, "Wrong alignment on BP_PauseMenu_C_UnlockAnim_Glide");
static_assert(sizeof(BP_PauseMenu_C_UnlockAnim_Glide) == 0x000040, "Wrong size on BP_PauseMenu_C_UnlockAnim_Glide");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, Animate) == 0x000000, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::Animate' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, Temp_bool_Variable) == 0x000001, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, Temp_float_Variable) == 0x000004, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, Temp_bool_Variable_1) == 0x000008, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, Temp_float_Variable_1) == 0x00000C, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, CallFunc_GetEndTime_ReturnValue) == 0x000010, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, CallFunc_GetEndTime_ReturnValue_1) == 0x000018, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, K2Node_Select_Default) == 0x00001C, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, K2Node_Select_Default_1) == 0x000030, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_Glide, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'BP_PauseMenu_C_UnlockAnim_Glide::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.UnlockAnim_GrapplingHook
// 0x0040 (0x0040 - 0x0000)
struct BP_PauseMenu_C_UnlockAnim_GrapplingHook final
{
public:
	bool                                          Animate;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PauseMenu_C_UnlockAnim_GrapplingHook) == 0x000008, "Wrong alignment on BP_PauseMenu_C_UnlockAnim_GrapplingHook");
static_assert(sizeof(BP_PauseMenu_C_UnlockAnim_GrapplingHook) == 0x000040, "Wrong size on BP_PauseMenu_C_UnlockAnim_GrapplingHook");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, Animate) == 0x000000, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::Animate' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, Temp_bool_Variable) == 0x000001, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, Temp_float_Variable) == 0x000004, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, Temp_bool_Variable_1) == 0x000008, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, Temp_float_Variable_1) == 0x00000C, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, CallFunc_GetEndTime_ReturnValue) == 0x000010, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, CallFunc_GetEndTime_ReturnValue_1) == 0x000018, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, K2Node_Select_Default) == 0x00001C, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, K2Node_Select_Default_1) == 0x000030, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GrapplingHook, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'BP_PauseMenu_C_UnlockAnim_GrapplingHook::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.UnlockAnim_GroundSlam
// 0x0040 (0x0040 - 0x0000)
struct BP_PauseMenu_C_UnlockAnim_GroundSlam final
{
public:
	bool                                          Animate;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PauseMenu_C_UnlockAnim_GroundSlam) == 0x000008, "Wrong alignment on BP_PauseMenu_C_UnlockAnim_GroundSlam");
static_assert(sizeof(BP_PauseMenu_C_UnlockAnim_GroundSlam) == 0x000040, "Wrong size on BP_PauseMenu_C_UnlockAnim_GroundSlam");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, Animate) == 0x000000, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::Animate' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, Temp_bool_Variable) == 0x000001, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, Temp_float_Variable) == 0x000004, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, Temp_bool_Variable_1) == 0x000008, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, Temp_float_Variable_1) == 0x00000C, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, CallFunc_GetEndTime_ReturnValue) == 0x000010, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, CallFunc_GetEndTime_ReturnValue_1) == 0x000018, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, K2Node_Select_Default) == 0x00001C, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, K2Node_Select_Default_1) == 0x000030, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_UnlockAnim_GroundSlam, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'BP_PauseMenu_C_UnlockAnim_GroundSlam::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_PauseMenu.BP_PauseMenu_C.SetAnimations
// 0x0004 (0x0004 - 0x0000)
struct BP_PauseMenu_C_SetAnimations final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_2;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_3;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PauseMenu_C_SetAnimations) == 0x000001, "Wrong alignment on BP_PauseMenu_C_SetAnimations");
static_assert(sizeof(BP_PauseMenu_C_SetAnimations) == 0x000004, "Wrong size on BP_PauseMenu_C_SetAnimations");
static_assert(offsetof(BP_PauseMenu_C_SetAnimations, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'BP_PauseMenu_C_SetAnimations::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_SetAnimations, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000001, "Member 'BP_PauseMenu_C_SetAnimations::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_SetAnimations, CallFunc_IsAnimationPlaying_ReturnValue_2) == 0x000002, "Member 'BP_PauseMenu_C_SetAnimations::CallFunc_IsAnimationPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PauseMenu_C_SetAnimations, CallFunc_IsAnimationPlaying_ReturnValue_3) == 0x000003, "Member 'BP_PauseMenu_C_SetAnimations::CallFunc_IsAnimationPlaying_ReturnValue_3' has a wrong offset!");

}

