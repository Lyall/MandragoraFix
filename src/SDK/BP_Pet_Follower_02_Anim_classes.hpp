#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pet_Follower_02_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BP_Pet_Follower_02_Anim.BP_Pet_Follower_02_Anim_C
// 0x06F0 (0x0D90 - 0x06A0)
class UBP_Pet_Follower_02_Anim_C final : public UAnimInstanceBase
{
public:
	uint8                                         Pad_698[0x8];                                      // 0x0698(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x06A8(0x0030)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x06D8(0x00A8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0780(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0828(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x08A8(0x0080)()
	struct FAnimNode_MirrorBones                  AnimGraphNode_MirrorBones;                         // 0x0928(0x0048)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x0970(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0A18(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0A98(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0B18(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0B98(0x0080)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0C18(0x00E8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0D00(0x0080)()
	bool                                          IdleBridge;                                        // 0x0D80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IdleBridgeCooldown;                                // 0x0D81(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D82[0x2];                                      // 0x0D82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IdleBridgeChance;                                  // 0x0D84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Pet_Follower_02_Anim(int32 EntryPoint);
	void OnAnimEventReceived(class UAnimID* AnimID, EAnimEventType AnimEventType, class UAnimSequenceBase* InAnimation);
	void AnimNotify_IdleBridge();
	void OnFacingChanged(bool bForced);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Pet_Follower_02_Anim_C">();
	}
	static class UBP_Pet_Follower_02_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Pet_Follower_02_Anim_C>();
	}
};
static_assert(alignof(UBP_Pet_Follower_02_Anim_C) == 0x000010, "Wrong alignment on UBP_Pet_Follower_02_Anim_C");
static_assert(sizeof(UBP_Pet_Follower_02_Anim_C) == 0x000D90, "Wrong size on UBP_Pet_Follower_02_Anim_C");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, UberGraphFrame) == 0x0006A0, "Member 'UBP_Pet_Follower_02_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_Root) == 0x0006A8, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_BlendListByInt_1) == 0x0006D8, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_BlendListByBool) == 0x000780, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_SequencePlayer_6) == 0x000828, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_SequencePlayer_5) == 0x0008A8, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_MirrorBones) == 0x000928, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_MirrorBones' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_BlendListByInt) == 0x000970, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_SequencePlayer_4) == 0x000A18, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_SequencePlayer_3) == 0x000A98, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_SequencePlayer_2) == 0x000B18, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_SequencePlayer_1) == 0x000B98, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_BlendSpacePlayer) == 0x000C18, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, AnimGraphNode_SequencePlayer) == 0x000D00, "Member 'UBP_Pet_Follower_02_Anim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, IdleBridge) == 0x000D80, "Member 'UBP_Pet_Follower_02_Anim_C::IdleBridge' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, IdleBridgeCooldown) == 0x000D81, "Member 'UBP_Pet_Follower_02_Anim_C::IdleBridgeCooldown' has a wrong offset!");
static_assert(offsetof(UBP_Pet_Follower_02_Anim_C, IdleBridgeChance) == 0x000D84, "Member 'UBP_Pet_Follower_02_Anim_C::IdleBridgeChance' has a wrong offset!");

}

