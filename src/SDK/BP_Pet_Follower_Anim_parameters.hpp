#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pet_Follower_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"


namespace SDK::Params
{

// Function BP_Pet_Follower_Anim.BP_Pet_Follower_Anim_C.ExecuteUbergraph_BP_Pet_Follower_Anim
// 0x0048 (0x0048 - 0x0000)
struct BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bForced;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFacing_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimID*                                K2Node_Event_AnimID;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimEventType                                K2Node_Event_AnimEventType;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Event_InAnimation;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim) == 0x000008, "Wrong alignment on BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim");
static_assert(sizeof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim) == 0x000048, "Wrong size on BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, EntryPoint) == 0x000000, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, K2Node_Event_bForced) == 0x000004, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::K2Node_Event_bForced' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_GetFacing_ReturnValue) == 0x000008, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_GetFacing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00000C, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000011, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, K2Node_Event_AnimID) == 0x000018, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::K2Node_Event_AnimID' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, K2Node_Event_AnimEventType) == 0x000020, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::K2Node_Event_AnimEventType' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, K2Node_Event_InAnimation) == 0x000028, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::K2Node_Event_InAnimation' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_BooleanAND_ReturnValue_1) == 0x000032, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000033, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, K2Node_Event_DeltaTimeX) == 0x000034, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_BooleanOR_ReturnValue) == 0x00003D, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim, CallFunc_BooleanOR_ReturnValue_1) == 0x000045, "Member 'BP_Pet_Follower_Anim_C_ExecuteUbergraph_BP_Pet_Follower_Anim::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_Pet_Follower_Anim.BP_Pet_Follower_Anim_C.OnAnimEventReceived
// 0x0018 (0x0018 - 0x0000)
struct BP_Pet_Follower_Anim_C_OnAnimEventReceived final
{
public:
	class UAnimID*                                AnimID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimEventType                                AnimEventType;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      InAnimation;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pet_Follower_Anim_C_OnAnimEventReceived) == 0x000008, "Wrong alignment on BP_Pet_Follower_Anim_C_OnAnimEventReceived");
static_assert(sizeof(BP_Pet_Follower_Anim_C_OnAnimEventReceived) == 0x000018, "Wrong size on BP_Pet_Follower_Anim_C_OnAnimEventReceived");
static_assert(offsetof(BP_Pet_Follower_Anim_C_OnAnimEventReceived, AnimID) == 0x000000, "Member 'BP_Pet_Follower_Anim_C_OnAnimEventReceived::AnimID' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_OnAnimEventReceived, AnimEventType) == 0x000008, "Member 'BP_Pet_Follower_Anim_C_OnAnimEventReceived::AnimEventType' has a wrong offset!");
static_assert(offsetof(BP_Pet_Follower_Anim_C_OnAnimEventReceived, InAnimation) == 0x000010, "Member 'BP_Pet_Follower_Anim_C_OnAnimEventReceived::InAnimation' has a wrong offset!");

// Function BP_Pet_Follower_Anim.BP_Pet_Follower_Anim_C.OnFacingChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Pet_Follower_Anim_C_OnFacingChanged final
{
public:
	bool                                          bForced;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pet_Follower_Anim_C_OnFacingChanged) == 0x000001, "Wrong alignment on BP_Pet_Follower_Anim_C_OnFacingChanged");
static_assert(sizeof(BP_Pet_Follower_Anim_C_OnFacingChanged) == 0x000001, "Wrong size on BP_Pet_Follower_Anim_C_OnFacingChanged");
static_assert(offsetof(BP_Pet_Follower_Anim_C_OnFacingChanged, bForced) == 0x000000, "Member 'BP_Pet_Follower_Anim_C_OnFacingChanged::bForced' has a wrong offset!");

// Function BP_Pet_Follower_Anim.BP_Pet_Follower_Anim_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct BP_Pet_Follower_Anim_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pet_Follower_Anim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on BP_Pet_Follower_Anim_C_BlueprintUpdateAnimation");
static_assert(sizeof(BP_Pet_Follower_Anim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on BP_Pet_Follower_Anim_C_BlueprintUpdateAnimation");
static_assert(offsetof(BP_Pet_Follower_Anim_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'BP_Pet_Follower_Anim_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function BP_Pet_Follower_Anim.BP_Pet_Follower_Anim_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct BP_Pet_Follower_Anim_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BP_Pet_Follower_Anim_C_AnimGraph) == 0x000008, "Wrong alignment on BP_Pet_Follower_Anim_C_AnimGraph");
static_assert(sizeof(BP_Pet_Follower_Anim_C_AnimGraph) == 0x000010, "Wrong size on BP_Pet_Follower_Anim_C_AnimGraph");
static_assert(offsetof(BP_Pet_Follower_Anim_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'BP_Pet_Follower_Anim_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

