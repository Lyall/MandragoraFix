#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Phantom_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "KawaiiPhysics_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BP_Phantom_Anim.BP_Phantom_Anim_C
// 0x3AE0 (0x4180 - 0x06A0)
class UBP_Phantom_Anim_C final : public UAnimInstanceBase
{
public:
	uint8                                         Pad_698[0x8];                                      // 0x0698(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x06A8(0x0030)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_2;                    // 0x06D8(0x00A8)()
	struct FAnimNode_MirrorBones                  AnimGraphNode_MirrorBones;                         // 0x0780(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x07C8(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x0810(0x00C8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x08D8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x08F8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0918(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0A20(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0B28(0x0108)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x0C30(0x01E0)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x0E10(0x01E0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x0FF0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x10E0(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x11D0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x1250(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x12D0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x1350(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x13D0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x1450(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x14D0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x1550(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x15D0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x15F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1678(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x16A8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1728(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1758(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x1808(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x1888(0x0080)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x1908(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x19B0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x1A30(0x0080)()
	struct FAnimNode_HitReaction                  AnimGraphNode_HitReaction_3;                       // 0x1AB0(0x00E8)()
	struct FAnimNode_HitReaction                  AnimGraphNode_HitReaction_2;                       // 0x1B98(0x00E8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1C80(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x1DD8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x1E00(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x1E28(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x1E50(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1ED0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1EF0(0x0020)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_9;                     // 0x1F10(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_8;                     // 0x2160(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_7;                     // 0x23B0(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_6;                     // 0x2600(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_5;                     // 0x2850(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_4;                     // 0x2AA0(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_3;                     // 0x2CF0(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_2;                     // 0x2F40(0x0250)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x3190(0x0028)()
	uint8                                         Pad_31B8[0x8];                                     // 0x31B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_1;                     // 0x31C0(0x0250)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics;                       // 0x3410(0x0250)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x3660(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x36E0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x3760(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x37E0(0x0080)()
	struct FAnimNode_HitReaction                  AnimGraphNode_HitReaction_1;                       // 0x3860(0x00E8)()
	struct FAnimNode_HitReaction                  AnimGraphNode_HitReaction;                         // 0x3948(0x00E8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x3A30(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x3A58(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x3A80(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x3B00(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x3B80(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x3C00(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x3C80(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x3D00(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x3D80(0x0080)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x3E00(0x00A8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x3EA8(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x3F70(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x3F98(0x0158)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x40F0(0x0080)()
	int32                                         AdditiveHitAnimIx;                                 // 0x4170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_Phantom_Anim_AnimGraphNode_TransitionResult_835B8F1E4516137D4BBC1B8CB8AD2EE3();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void OnFacingChanged(bool bForced);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_Phantom_Anim_AnimGraphNode_BlendListByInt_B667AFB6465B99619DAF188043CE0D15();
	void ExecuteUbergraph_BP_Phantom_Anim(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Phantom_Anim_C">();
	}
	static class UBP_Phantom_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Phantom_Anim_C>();
	}
};
static_assert(alignof(UBP_Phantom_Anim_C) == 0x000010, "Wrong alignment on UBP_Phantom_Anim_C");
static_assert(sizeof(UBP_Phantom_Anim_C) == 0x004180, "Wrong size on UBP_Phantom_Anim_C");
static_assert(offsetof(UBP_Phantom_Anim_C, UberGraphFrame) == 0x0006A0, "Member 'UBP_Phantom_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_Root) == 0x0006A8, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_BlendListByInt_2) == 0x0006D8, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_BlendListByInt_2' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_MirrorBones) == 0x000780, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_MirrorBones' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_Slot) == 0x0007C8, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_TwoWayBlend_1) == 0x000810, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0008D8, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0008F8, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_ModifyBone_2) == 0x000918, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_ModifyBone_1) == 0x000A20, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_ModifyBone) == 0x000B28, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_TwoBoneIK_1) == 0x000C30, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_TwoBoneIK) == 0x000E10, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_CopyBone_1) == 0x000FF0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_CopyBone) == 0x0010E0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_26) == 0x0011D0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_25) == 0x001250, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_24) == 0x0012D0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_23) == 0x001350, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_22) == 0x0013D0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_21) == 0x001450, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_20) == 0x0014D0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_19) == 0x001550, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_TransitionResult) == 0x0015D0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_18) == 0x0015F8, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_StateResult_1) == 0x001678, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_17) == 0x0016A8, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_StateResult) == 0x001728, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_StateMachine) == 0x001758, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_16) == 0x001808, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_15) == 0x001888, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_BlendListByInt_1) == 0x001908, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_14) == 0x0019B0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_13) == 0x001A30, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_HitReaction_3) == 0x001AB0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_HitReaction_3' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_HitReaction_2) == 0x001B98, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_HitReaction_2' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SaveCachedPose_1) == 0x001C80, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_UseCachedPose_6) == 0x001DD8, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_UseCachedPose_5) == 0x001E00, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_UseCachedPose_4) == 0x001E28, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_12) == 0x001E50, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_LocalToComponentSpace) == 0x001ED0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_ComponentToLocalSpace) == 0x001EF0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_KawaiiPhysics_9) == 0x001F10, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_KawaiiPhysics_9' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_KawaiiPhysics_8) == 0x002160, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_KawaiiPhysics_8' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_KawaiiPhysics_7) == 0x0023B0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_KawaiiPhysics_7' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_KawaiiPhysics_6) == 0x002600, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_KawaiiPhysics_6' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_KawaiiPhysics_5) == 0x002850, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_KawaiiPhysics_5' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_KawaiiPhysics_4) == 0x002AA0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_KawaiiPhysics_4' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_KawaiiPhysics_3) == 0x002CF0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_KawaiiPhysics_3' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_KawaiiPhysics_2) == 0x002F40, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_KawaiiPhysics_2' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_UseCachedPose_3) == 0x003190, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_KawaiiPhysics_1) == 0x0031C0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_KawaiiPhysics_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_KawaiiPhysics) == 0x003410, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_11) == 0x003660, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_10) == 0x0036E0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_9) == 0x003760, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_8) == 0x0037E0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_HitReaction_1) == 0x003860, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_HitReaction_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_HitReaction) == 0x003948, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_HitReaction' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_UseCachedPose_2) == 0x003A30, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_UseCachedPose_1) == 0x003A58, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_7) == 0x003A80, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_6) == 0x003B00, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_5) == 0x003B80, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_4) == 0x003C00, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_3) == 0x003C80, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_2) == 0x003D00, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer_1) == 0x003D80, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_BlendListByInt) == 0x003E00, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_TwoWayBlend) == 0x003EA8, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_UseCachedPose) == 0x003F70, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SaveCachedPose) == 0x003F98, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AnimGraphNode_SequencePlayer) == 0x0040F0, "Member 'UBP_Phantom_Anim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBP_Phantom_Anim_C, AdditiveHitAnimIx) == 0x004170, "Member 'UBP_Phantom_Anim_C::AdditiveHitAnimIx' has a wrong offset!");

}

