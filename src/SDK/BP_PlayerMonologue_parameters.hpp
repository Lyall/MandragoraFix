#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerMonologue

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_PlayerMonologue.BP_PlayerMonologue_C.ExecuteUbergraph_BP_PlayerMonologue
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_VideoUrl;                             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_Picture;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InText;                               // 0x0048(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InLineIDText;                         // 0x0060(0x0018)(ConstParm)
	bool                                          K2Node_Event_bSubtitleEnable;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue) == 0x000008, "Wrong alignment on BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue");
static_assert(sizeof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue) == 0x000088, "Wrong size on BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, EntryPoint) == 0x000000, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, Temp_bool_Variable) == 0x000004, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, Temp_float_Variable) == 0x000008, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, Temp_float_Variable_1) == 0x00000C, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, K2Node_Event_AnimDuration_1) == 0x000010, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x000014, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, K2Node_Event_AnimDuration) == 0x000018, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000028, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, K2Node_Event_VideoUrl) == 0x000030, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::K2Node_Event_VideoUrl' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, K2Node_Event_Picture) == 0x000040, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::K2Node_Event_Picture' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, K2Node_Event_InText) == 0x000048, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::K2Node_Event_InText' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, K2Node_Event_InLineIDText) == 0x000060, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::K2Node_Event_InLineIDText' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, K2Node_Event_bSubtitleEnable) == 0x000078, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::K2Node_Event_bSubtitleEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, K2Node_Select_Default) == 0x00007C, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue, CallFunc_PlayAnimation_ReturnValue_1) == 0x000080, "Member 'BP_PlayerMonologue_C_ExecuteUbergraph_BP_PlayerMonologue::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerMonologue.BP_PlayerMonologue_C.OnShowText
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerMonologue_C_OnShowText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   InLineIDText;                                      // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bSubtitleEnable;                                   // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerMonologue_C_OnShowText) == 0x000008, "Wrong alignment on BP_PlayerMonologue_C_OnShowText");
static_assert(sizeof(BP_PlayerMonologue_C_OnShowText) == 0x000038, "Wrong size on BP_PlayerMonologue_C_OnShowText");
static_assert(offsetof(BP_PlayerMonologue_C_OnShowText, InText) == 0x000000, "Member 'BP_PlayerMonologue_C_OnShowText::InText' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_OnShowText, InLineIDText) == 0x000018, "Member 'BP_PlayerMonologue_C_OnShowText::InLineIDText' has a wrong offset!");
static_assert(offsetof(BP_PlayerMonologue_C_OnShowText, bSubtitleEnable) == 0x000030, "Member 'BP_PlayerMonologue_C_OnShowText::bSubtitleEnable' has a wrong offset!");

// Function BP_PlayerMonologue.BP_PlayerMonologue_C.OnSetPicture
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerMonologue_C_OnSetPicture final
{
public:
	class UTexture2D*                             Picture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMonologue_C_OnSetPicture) == 0x000008, "Wrong alignment on BP_PlayerMonologue_C_OnSetPicture");
static_assert(sizeof(BP_PlayerMonologue_C_OnSetPicture) == 0x000008, "Wrong size on BP_PlayerMonologue_C_OnSetPicture");
static_assert(offsetof(BP_PlayerMonologue_C_OnSetPicture, Picture) == 0x000000, "Member 'BP_PlayerMonologue_C_OnSetPicture::Picture' has a wrong offset!");

// Function BP_PlayerMonologue.BP_PlayerMonologue_C.OnPlayVideo
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerMonologue_C_OnPlayVideo final
{
public:
	class FString                                 VideoUrl;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMonologue_C_OnPlayVideo) == 0x000008, "Wrong alignment on BP_PlayerMonologue_C_OnPlayVideo");
static_assert(sizeof(BP_PlayerMonologue_C_OnPlayVideo) == 0x000010, "Wrong size on BP_PlayerMonologue_C_OnPlayVideo");
static_assert(offsetof(BP_PlayerMonologue_C_OnPlayVideo, VideoUrl) == 0x000000, "Member 'BP_PlayerMonologue_C_OnPlayVideo::VideoUrl' has a wrong offset!");

// Function BP_PlayerMonologue.BP_PlayerMonologue_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerMonologue_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMonologue_C_OnShow) == 0x000004, "Wrong alignment on BP_PlayerMonologue_C_OnShow");
static_assert(sizeof(BP_PlayerMonologue_C_OnShow) == 0x000004, "Wrong size on BP_PlayerMonologue_C_OnShow");
static_assert(offsetof(BP_PlayerMonologue_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_PlayerMonologue_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_PlayerMonologue.BP_PlayerMonologue_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerMonologue_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerMonologue_C_OnHide) == 0x000004, "Wrong alignment on BP_PlayerMonologue_C_OnHide");
static_assert(sizeof(BP_PlayerMonologue_C_OnHide) == 0x000004, "Wrong size on BP_PlayerMonologue_C_OnHide");
static_assert(offsetof(BP_PlayerMonologue_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_PlayerMonologue_C_OnHide::AnimDuration' has a wrong offset!");

}

