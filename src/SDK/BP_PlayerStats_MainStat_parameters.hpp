#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerStats_MainStat

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerStats_MainStat.BP_PlayerStats_MainStat_C.ExecuteUbergraph_BP_PlayerStats_MainStat
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InCaption;                            // 0x0008(0x0018)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InValue;                              // 0x0028(0x0018)(ConstParm)
};
static_assert(alignof(BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat) == 0x000008, "Wrong alignment on BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat");
static_assert(sizeof(BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat) == 0x000040, "Wrong size on BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat");
static_assert(offsetof(BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat, EntryPoint) == 0x000000, "Member 'BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat, K2Node_Event_InCaption) == 0x000008, "Member 'BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat::K2Node_Event_InCaption' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat, K2Node_Event_IsDesignTime) == 0x000020, "Member 'BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat, K2Node_Event_InValue) == 0x000028, "Member 'BP_PlayerStats_MainStat_C_ExecuteUbergraph_BP_PlayerStats_MainStat::K2Node_Event_InValue' has a wrong offset!");

// Function BP_PlayerStats_MainStat.BP_PlayerStats_MainStat_C.OnSetCaption
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerStats_MainStat_C_OnSetCaption final
{
public:
	class FText                                   InCaption;                                         // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PlayerStats_MainStat_C_OnSetCaption) == 0x000008, "Wrong alignment on BP_PlayerStats_MainStat_C_OnSetCaption");
static_assert(sizeof(BP_PlayerStats_MainStat_C_OnSetCaption) == 0x000018, "Wrong size on BP_PlayerStats_MainStat_C_OnSetCaption");
static_assert(offsetof(BP_PlayerStats_MainStat_C_OnSetCaption, InCaption) == 0x000000, "Member 'BP_PlayerStats_MainStat_C_OnSetCaption::InCaption' has a wrong offset!");

// Function BP_PlayerStats_MainStat.BP_PlayerStats_MainStat_C.OnSetValue
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerStats_MainStat_C_OnSetValue final
{
public:
	class FText                                   InValue;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PlayerStats_MainStat_C_OnSetValue) == 0x000008, "Wrong alignment on BP_PlayerStats_MainStat_C_OnSetValue");
static_assert(sizeof(BP_PlayerStats_MainStat_C_OnSetValue) == 0x000018, "Wrong size on BP_PlayerStats_MainStat_C_OnSetValue");
static_assert(offsetof(BP_PlayerStats_MainStat_C_OnSetValue, InValue) == 0x000000, "Member 'BP_PlayerStats_MainStat_C_OnSetValue::InValue' has a wrong offset!");

// Function BP_PlayerStats_MainStat.BP_PlayerStats_MainStat_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerStats_MainStat_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerStats_MainStat_C_PreConstruct) == 0x000001, "Wrong alignment on BP_PlayerStats_MainStat_C_PreConstruct");
static_assert(sizeof(BP_PlayerStats_MainStat_C_PreConstruct) == 0x000001, "Wrong size on BP_PlayerStats_MainStat_C_PreConstruct");
static_assert(offsetof(BP_PlayerStats_MainStat_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_PlayerStats_MainStat_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_PlayerStats_MainStat.BP_PlayerStats_MainStat_C.SetCaption
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerStats_MainStat_C_SetCaption final
{
public:
	class FText                                   InCaption;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerStats_MainStat_C_SetCaption) == 0x000008, "Wrong alignment on BP_PlayerStats_MainStat_C_SetCaption");
static_assert(sizeof(BP_PlayerStats_MainStat_C_SetCaption) == 0x000018, "Wrong size on BP_PlayerStats_MainStat_C_SetCaption");
static_assert(offsetof(BP_PlayerStats_MainStat_C_SetCaption, InCaption) == 0x000000, "Member 'BP_PlayerStats_MainStat_C_SetCaption::InCaption' has a wrong offset!");

// Function BP_PlayerStats_MainStat.BP_PlayerStats_MainStat_C.SetValue
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerStats_MainStat_C_SetValue final
{
public:
	class FText                                   InValue;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerStats_MainStat_C_SetValue) == 0x000008, "Wrong alignment on BP_PlayerStats_MainStat_C_SetValue");
static_assert(sizeof(BP_PlayerStats_MainStat_C_SetValue) == 0x000018, "Wrong size on BP_PlayerStats_MainStat_C_SetValue");
static_assert(offsetof(BP_PlayerStats_MainStat_C_SetValue, InValue) == 0x000000, "Member 'BP_PlayerStats_MainStat_C_SetValue::InValue' has a wrong offset!");

// Function BP_PlayerStats_MainStat.BP_PlayerStats_MainStat_C.SetRank
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerStats_MainStat_C_SetRank final
{
public:
	class FText                                   InRank;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerStats_MainStat_C_SetRank) == 0x000008, "Wrong alignment on BP_PlayerStats_MainStat_C_SetRank");
static_assert(sizeof(BP_PlayerStats_MainStat_C_SetRank) == 0x000018, "Wrong size on BP_PlayerStats_MainStat_C_SetRank");
static_assert(offsetof(BP_PlayerStats_MainStat_C_SetRank, InRank) == 0x000000, "Member 'BP_PlayerStats_MainStat_C_SetRank::InRank' has a wrong offset!");

// Function BP_PlayerStats_MainStat.BP_PlayerStats_MainStat_C.ShowRank
// 0x0005 (0x0005 - 0x0000)
struct BP_PlayerStats_MainStat_C_ShowRank final
{
public:
	bool                                          InRankVisible;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerStats_MainStat_C_ShowRank) == 0x000001, "Wrong alignment on BP_PlayerStats_MainStat_C_ShowRank");
static_assert(sizeof(BP_PlayerStats_MainStat_C_ShowRank) == 0x000005, "Wrong size on BP_PlayerStats_MainStat_C_ShowRank");
static_assert(offsetof(BP_PlayerStats_MainStat_C_ShowRank, InRankVisible) == 0x000000, "Member 'BP_PlayerStats_MainStat_C_ShowRank::InRankVisible' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MainStat_C_ShowRank, Temp_bool_Variable) == 0x000001, "Member 'BP_PlayerStats_MainStat_C_ShowRank::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MainStat_C_ShowRank, Temp_byte_Variable) == 0x000002, "Member 'BP_PlayerStats_MainStat_C_ShowRank::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MainStat_C_ShowRank, Temp_byte_Variable_1) == 0x000003, "Member 'BP_PlayerStats_MainStat_C_ShowRank::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MainStat_C_ShowRank, K2Node_Select_Default) == 0x000004, "Member 'BP_PlayerStats_MainStat_C_ShowRank::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerStats_MainStat.BP_PlayerStats_MainStat_C.SetIcon
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerStats_MainStat_C_SetIcon final
{
public:
	class UTexture2D*                             InIconTexture;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerStats_MainStat_C_SetIcon) == 0x000008, "Wrong alignment on BP_PlayerStats_MainStat_C_SetIcon");
static_assert(sizeof(BP_PlayerStats_MainStat_C_SetIcon) == 0x000008, "Wrong size on BP_PlayerStats_MainStat_C_SetIcon");
static_assert(offsetof(BP_PlayerStats_MainStat_C_SetIcon, InIconTexture) == 0x000000, "Member 'BP_PlayerStats_MainStat_C_SetIcon::InIconTexture' has a wrong offset!");

}

