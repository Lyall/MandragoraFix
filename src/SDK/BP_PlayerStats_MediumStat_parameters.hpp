#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerStats_MediumStat

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerStats_MediumStat.BP_PlayerStats_MediumStat_C.ExecuteUbergraph_BP_PlayerStats_MediumStat
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InValue;                              // 0x0008(0x0018)(ConstParm)
	bool                                          K2Node_Event_bInHidden;                            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InCaption;                            // 0x0028(0x0018)(ConstParm)
};
static_assert(alignof(BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat) == 0x000008, "Wrong alignment on BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat");
static_assert(sizeof(BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat) == 0x000040, "Wrong size on BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat, EntryPoint) == 0x000000, "Member 'BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat, K2Node_Event_InValue) == 0x000008, "Member 'BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat::K2Node_Event_InValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat, K2Node_Event_bInHidden) == 0x000020, "Member 'BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat::K2Node_Event_bInHidden' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat, K2Node_Event_InCaption) == 0x000028, "Member 'BP_PlayerStats_MediumStat_C_ExecuteUbergraph_BP_PlayerStats_MediumStat::K2Node_Event_InCaption' has a wrong offset!");

// Function BP_PlayerStats_MediumStat.BP_PlayerStats_MediumStat_C.OnSetCaption
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerStats_MediumStat_C_OnSetCaption final
{
public:
	class FText                                   InCaption;                                         // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PlayerStats_MediumStat_C_OnSetCaption) == 0x000008, "Wrong alignment on BP_PlayerStats_MediumStat_C_OnSetCaption");
static_assert(sizeof(BP_PlayerStats_MediumStat_C_OnSetCaption) == 0x000018, "Wrong size on BP_PlayerStats_MediumStat_C_OnSetCaption");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_OnSetCaption, InCaption) == 0x000000, "Member 'BP_PlayerStats_MediumStat_C_OnSetCaption::InCaption' has a wrong offset!");

// Function BP_PlayerStats_MediumStat.BP_PlayerStats_MediumStat_C.OnSetHidden
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerStats_MediumStat_C_OnSetHidden final
{
public:
	bool                                          bInHidden;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerStats_MediumStat_C_OnSetHidden) == 0x000001, "Wrong alignment on BP_PlayerStats_MediumStat_C_OnSetHidden");
static_assert(sizeof(BP_PlayerStats_MediumStat_C_OnSetHidden) == 0x000001, "Wrong size on BP_PlayerStats_MediumStat_C_OnSetHidden");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_OnSetHidden, bInHidden) == 0x000000, "Member 'BP_PlayerStats_MediumStat_C_OnSetHidden::bInHidden' has a wrong offset!");

// Function BP_PlayerStats_MediumStat.BP_PlayerStats_MediumStat_C.OnSetValue
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerStats_MediumStat_C_OnSetValue final
{
public:
	class FText                                   InValue;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PlayerStats_MediumStat_C_OnSetValue) == 0x000008, "Wrong alignment on BP_PlayerStats_MediumStat_C_OnSetValue");
static_assert(sizeof(BP_PlayerStats_MediumStat_C_OnSetValue) == 0x000018, "Wrong size on BP_PlayerStats_MediumStat_C_OnSetValue");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_OnSetValue, InValue) == 0x000000, "Member 'BP_PlayerStats_MediumStat_C_OnSetValue::InValue' has a wrong offset!");

// Function BP_PlayerStats_MediumStat.BP_PlayerStats_MediumStat_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerStats_MediumStat_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerStats_MediumStat_C_PreConstruct) == 0x000001, "Wrong alignment on BP_PlayerStats_MediumStat_C_PreConstruct");
static_assert(sizeof(BP_PlayerStats_MediumStat_C_PreConstruct) == 0x000001, "Wrong size on BP_PlayerStats_MediumStat_C_PreConstruct");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_PlayerStats_MediumStat_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_PlayerStats_MediumStat.BP_PlayerStats_MediumStat_C.SetCaption
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerStats_MediumStat_C_SetCaption final
{
public:
	class FText                                   InCaption;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerStats_MediumStat_C_SetCaption) == 0x000008, "Wrong alignment on BP_PlayerStats_MediumStat_C_SetCaption");
static_assert(sizeof(BP_PlayerStats_MediumStat_C_SetCaption) == 0x000018, "Wrong size on BP_PlayerStats_MediumStat_C_SetCaption");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_SetCaption, InCaption) == 0x000000, "Member 'BP_PlayerStats_MediumStat_C_SetCaption::InCaption' has a wrong offset!");

// Function BP_PlayerStats_MediumStat.BP_PlayerStats_MediumStat_C.SetValue
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerStats_MediumStat_C_SetValue final
{
public:
	class FText                                   InValue;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerStats_MediumStat_C_SetValue) == 0x000008, "Wrong alignment on BP_PlayerStats_MediumStat_C_SetValue");
static_assert(sizeof(BP_PlayerStats_MediumStat_C_SetValue) == 0x000018, "Wrong size on BP_PlayerStats_MediumStat_C_SetValue");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_SetValue, InValue) == 0x000000, "Member 'BP_PlayerStats_MediumStat_C_SetValue::InValue' has a wrong offset!");

// Function BP_PlayerStats_MediumStat.BP_PlayerStats_MediumStat_C.SetHidden
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerStats_MediumStat_C_SetHidden final
{
public:
	bool                                          InIsHidden;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0040(0x0018)()
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0068(0x0028)()
};
static_assert(alignof(BP_PlayerStats_MediumStat_C_SetHidden) == 0x000008, "Wrong alignment on BP_PlayerStats_MediumStat_C_SetHidden");
static_assert(sizeof(BP_PlayerStats_MediumStat_C_SetHidden) == 0x000090, "Wrong size on BP_PlayerStats_MediumStat_C_SetHidden");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_SetHidden, InIsHidden) == 0x000000, "Member 'BP_PlayerStats_MediumStat_C_SetHidden::InIsHidden' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_SetHidden, Temp_bool_Variable) == 0x000001, "Member 'BP_PlayerStats_MediumStat_C_SetHidden::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_SetHidden, Temp_struct_Variable) == 0x000004, "Member 'BP_PlayerStats_MediumStat_C_SetHidden::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_SetHidden, Temp_struct_Variable_1) == 0x000014, "Member 'BP_PlayerStats_MediumStat_C_SetHidden::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_SetHidden, Temp_bool_Variable_1) == 0x000024, "Member 'BP_PlayerStats_MediumStat_C_SetHidden::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_SetHidden, Temp_text_Variable) == 0x000028, "Member 'BP_PlayerStats_MediumStat_C_SetHidden::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_SetHidden, K2Node_Select_Default) == 0x000040, "Member 'BP_PlayerStats_MediumStat_C_SetHidden::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_SetHidden, K2Node_Select_Default_1) == 0x000058, "Member 'BP_PlayerStats_MediumStat_C_SetHidden::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_SetHidden, K2Node_MakeStruct_SlateColor) == 0x000068, "Member 'BP_PlayerStats_MediumStat_C_SetHidden::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function BP_PlayerStats_MediumStat.BP_PlayerStats_MediumStat_C.ToggleSmallScreen
// 0x00D0 (0x00D0 - 0x0000)
struct BP_PlayerStats_MediumStat_C_ToggleSmallScreen final
{
public:
	bool                                          InIsSmallScreen;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0020(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x0078(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen) == 0x000008, "Wrong alignment on BP_PlayerStats_MediumStat_C_ToggleSmallScreen");
static_assert(sizeof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen) == 0x0000D0, "Wrong size on BP_PlayerStats_MediumStat_C_ToggleSmallScreen");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen, InIsSmallScreen) == 0x000000, "Member 'BP_PlayerStats_MediumStat_C_ToggleSmallScreen::InIsSmallScreen' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen, Temp_bool_Variable) == 0x000001, "Member 'BP_PlayerStats_MediumStat_C_ToggleSmallScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen, Temp_int_Variable) == 0x000004, "Member 'BP_PlayerStats_MediumStat_C_ToggleSmallScreen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen, Temp_int_Variable_1) == 0x000008, "Member 'BP_PlayerStats_MediumStat_C_ToggleSmallScreen::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_PlayerStats_MediumStat_C_ToggleSmallScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen, Temp_int_Variable_2) == 0x000010, "Member 'BP_PlayerStats_MediumStat_C_ToggleSmallScreen::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen, Temp_int_Variable_3) == 0x000014, "Member 'BP_PlayerStats_MediumStat_C_ToggleSmallScreen::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen, K2Node_Select_Default) == 0x000018, "Member 'BP_PlayerStats_MediumStat_C_ToggleSmallScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen, K2Node_Select_Default_1) == 0x00001C, "Member 'BP_PlayerStats_MediumStat_C_ToggleSmallScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen, K2Node_MakeStruct_SlateFontInfo) == 0x000020, "Member 'BP_PlayerStats_MediumStat_C_ToggleSmallScreen::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerStats_MediumStat_C_ToggleSmallScreen, K2Node_MakeStruct_SlateFontInfo_1) == 0x000078, "Member 'BP_PlayerStats_MediumStat_C_ToggleSmallScreen::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");

}

