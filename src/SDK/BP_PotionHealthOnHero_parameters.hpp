#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PotionHealthOnHero

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PotionHealthOnHero.BP_PotionHealthOnHero_C.ExecuteUbergraph_BP_PotionHealthOnHero
// 0x0050 (0x0050 - 0x0000)
struct BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero) == 0x000008, "Wrong alignment on BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero");
static_assert(sizeof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero) == 0x000050, "Wrong size on BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero");
static_assert(offsetof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero, EntryPoint) == 0x000000, "Member 'BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero, Temp_delegate_Variable) == 0x000004, "Member 'BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero, CallFunc_PostEvent_ReturnValue) == 0x000014, "Member 'BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero, CallFunc_GetVelocity_ReturnValue) == 0x000028, "Member 'BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero, CallFunc_BreakVector_X) == 0x000034, "Member 'BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero, CallFunc_BreakVector_Y) == 0x000038, "Member 'BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero, CallFunc_BreakVector_Z) == 0x00003C, "Member 'BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'BP_PotionHealthOnHero_C_ExecuteUbergraph_BP_PotionHealthOnHero::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_PotionHealthOnHero.BP_PotionHealthOnHero_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PotionHealthOnHero_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PotionHealthOnHero_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PotionHealthOnHero_C_ReceiveTick");
static_assert(sizeof(BP_PotionHealthOnHero_C_ReceiveTick) == 0x000004, "Wrong size on BP_PotionHealthOnHero_C_ReceiveTick");
static_assert(offsetof(BP_PotionHealthOnHero_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PotionHealthOnHero_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

