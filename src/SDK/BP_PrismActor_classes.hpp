#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PrismActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PrismActor.BP_PrismActor_C
// 0x0060 (0x0838 - 0x07D8)
class ABP_PrismActor_C final : public AActorBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHitBox*                                HitBox;                                            // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPrismAbility*                          Prism;                                             // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetScale;                                       // 0x07F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x07FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentScale;                                      // 0x0800(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Mat;                                               // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChargePercent;                                     // 0x0810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VibrateOffset;                                     // 0x0814(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FinalVibrationCurve;                               // 0x0820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinalVibrateTime;                                  // 0x0828(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C[0x4];                                      // 0x082C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           AkComponent;                                       // 0x0830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PrismActor(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void BPPostBeginPlay();
	void ReceiveBeginPlay();
	void OnCustomEvent(class FName CustomName);
	void VibrationTick(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PrismActor_C">();
	}
	static class ABP_PrismActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PrismActor_C>();
	}
};
static_assert(alignof(ABP_PrismActor_C) == 0x000008, "Wrong alignment on ABP_PrismActor_C");
static_assert(sizeof(ABP_PrismActor_C) == 0x000838, "Wrong size on ABP_PrismActor_C");
static_assert(offsetof(ABP_PrismActor_C, UberGraphFrame) == 0x0007D8, "Member 'ABP_PrismActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PrismActor_C, HitBox) == 0x0007E0, "Member 'ABP_PrismActor_C::HitBox' has a wrong offset!");
static_assert(offsetof(ABP_PrismActor_C, DefaultSceneRoot) == 0x0007E8, "Member 'ABP_PrismActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PrismActor_C, Prism) == 0x0007F0, "Member 'ABP_PrismActor_C::Prism' has a wrong offset!");
static_assert(offsetof(ABP_PrismActor_C, TargetScale) == 0x0007F8, "Member 'ABP_PrismActor_C::TargetScale' has a wrong offset!");
static_assert(offsetof(ABP_PrismActor_C, Time) == 0x0007FC, "Member 'ABP_PrismActor_C::Time' has a wrong offset!");
static_assert(offsetof(ABP_PrismActor_C, CurrentScale) == 0x000800, "Member 'ABP_PrismActor_C::CurrentScale' has a wrong offset!");
static_assert(offsetof(ABP_PrismActor_C, Mat) == 0x000808, "Member 'ABP_PrismActor_C::Mat' has a wrong offset!");
static_assert(offsetof(ABP_PrismActor_C, ChargePercent) == 0x000810, "Member 'ABP_PrismActor_C::ChargePercent' has a wrong offset!");
static_assert(offsetof(ABP_PrismActor_C, VibrateOffset) == 0x000814, "Member 'ABP_PrismActor_C::VibrateOffset' has a wrong offset!");
static_assert(offsetof(ABP_PrismActor_C, FinalVibrationCurve) == 0x000820, "Member 'ABP_PrismActor_C::FinalVibrationCurve' has a wrong offset!");
static_assert(offsetof(ABP_PrismActor_C, FinalVibrateTime) == 0x000828, "Member 'ABP_PrismActor_C::FinalVibrateTime' has a wrong offset!");
static_assert(offsetof(ABP_PrismActor_C, AkComponent) == 0x000830, "Member 'ABP_PrismActor_C::AkComponent' has a wrong offset!");

}

