#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PrismActor

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PrismActor.BP_PrismActor_C.ExecuteUbergraph_BP_PrismActor
// 0x0438 (0x0438 - 0x0000)
struct BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0028(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxDamageCharge_ReturnValue;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetLastDamagedActor_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentDamageCharge_ReturnValue;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaTime;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_CustomName;                     // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Sin_ReturnValue;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Cos_ReturnValue;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentPulseCount_ReturnValue;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue_1;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPrimed_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABrawlerHero*                           K2Node_DynamicCast_AsBrawler_Hero;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           CallFunc_BPGetAbilityByClass_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPrimed_ReturnValue_1;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrismAbility*                          K2Node_DynamicCast_AsPrism_Ability;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName CustomName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x014C(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x01B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0258(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0398(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetOrCreateAkComponent_ComponentCreated;  // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422[0x6];                                      // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_GetOrCreateAkComponent_ReturnValue;       // 0x0428(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor) == 0x000008, "Wrong alignment on BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor");
static_assert(sizeof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor) == 0x000438, "Wrong size on BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, EntryPoint) == 0x000000, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, Temp_object_Variable) == 0x000008, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, Temp_delegate_Variable) == 0x000018, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, Temp_delegate_Variable_1) == 0x000028, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_PostAkEvent_ReturnValue) == 0x000038, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_GetMaxDamageCharge_ReturnValue) == 0x00003C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_GetMaxDamageCharge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_GetLastDamagedActor_ReturnValue) == 0x000040, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_GetLastDamagedActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000058, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_GetCurrentDamageCharge_ReturnValue) == 0x00006C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_GetCurrentDamageCharge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, K2Node_CustomEvent_DeltaTime) == 0x000070, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::K2Node_CustomEvent_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000078, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, K2Node_CustomEvent_CustomName) == 0x00007C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::K2Node_CustomEvent_CustomName' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000084, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000088, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Sin_ReturnValue) == 0x00008C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000090, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Cos_ReturnValue) == 0x000094, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_GetCurrentPulseCount_ReturnValue) == 0x000098, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_GetCurrentPulseCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Sin_ReturnValue_1) == 0x00009C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Sin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000A4, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_IsPrimed_ReturnValue) == 0x0000A8, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_IsPrimed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_GetOwner_ReturnValue) == 0x0000B0, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, K2Node_DynamicCast_AsBrawler_Hero) == 0x0000B8, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::K2Node_DynamicCast_AsBrawler_Hero' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_GetAbilityController_ReturnValue) == 0x0000C8, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BPGetAbilityByClass_ReturnValue) == 0x0000D0, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BPGetAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_IsPrimed_ReturnValue_1) == 0x0000D8, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_IsPrimed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, K2Node_DynamicCast_AsPrism_Ability) == 0x0000E0, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::K2Node_DynamicCast_AsPrism_Ability' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000EC, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000F0, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_GetFloatValue_ReturnValue) == 0x0000F4, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_SelectFloat_ReturnValue) == 0x0000F8, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000FC, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00010C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000110, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000114, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_MakeVector_ReturnValue_1) == 0x000128, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000134, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakVector_X) == 0x000140, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakVector_Y) == 0x000144, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakVector_Z) == 0x000148, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, K2Node_CreateDelegate_OutputDelegate) == 0x00014C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x00015C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Add_VectorVector_ReturnValue) == 0x000168, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000174, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000180, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakVector_X_1) == 0x00018C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakVector_Y_1) == 0x000190, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakVector_Z_1) == 0x000194, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_MakeVector_ReturnValue_2) == 0x000198, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0001A4, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0001B0, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000238, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakVector_X_2) == 0x00023C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakVector_Y_2) == 0x000240, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakVector_Z_2) == 0x000244, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, K2Node_Event_DeltaSeconds) == 0x000248, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_MakeVector_ReturnValue_3) == 0x00024C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000258, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0002E0, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_IsValid_ReturnValue) == 0x0002E1, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_bBlockingHit) == 0x0002E2, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002E3, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_Time) == 0x0002E4, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_Distance) == 0x0002E8, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_Location) == 0x0002EC, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_ImpactPoint) == 0x0002F8, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_Normal) == 0x000304, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_ImpactNormal) == 0x000310, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_PhysMat) == 0x000320, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_HitActor) == 0x000328, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_HitComponent) == 0x000330, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_HitBoneName) == 0x000338, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_HitItem) == 0x000340, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_ElementIndex) == 0x000344, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_FaceIndex) == 0x000348, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_TraceStart) == 0x00034C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakHitResult_TraceEnd) == 0x000358, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000364, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000370, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000374, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakVector_X_3) == 0x000380, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakVector_Y_3) == 0x000384, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_BreakVector_Z_3) == 0x000388, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_MakeVector_ReturnValue_4) == 0x00038C, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000398, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x000420, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_GetOrCreateAkComponent_ComponentCreated) == 0x000421, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_GetOrCreateAkComponent_ComponentCreated' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_GetOrCreateAkComponent_ReturnValue) == 0x000428, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_GetOrCreateAkComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor, CallFunc_PostAkEvent_ReturnValue_1) == 0x000430, "Member 'BP_PrismActor_C_ExecuteUbergraph_BP_PrismActor::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

// Function BP_PrismActor.BP_PrismActor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PrismActor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PrismActor_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PrismActor_C_ReceiveTick");
static_assert(sizeof(BP_PrismActor_C_ReceiveTick) == 0x000004, "Wrong size on BP_PrismActor_C_ReceiveTick");
static_assert(offsetof(BP_PrismActor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PrismActor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PrismActor.BP_PrismActor_C.OnCustomEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_PrismActor_C_OnCustomEvent final
{
public:
	class FName                                   CustomName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PrismActor_C_OnCustomEvent) == 0x000004, "Wrong alignment on BP_PrismActor_C_OnCustomEvent");
static_assert(sizeof(BP_PrismActor_C_OnCustomEvent) == 0x000008, "Wrong size on BP_PrismActor_C_OnCustomEvent");
static_assert(offsetof(BP_PrismActor_C_OnCustomEvent, CustomName) == 0x000000, "Member 'BP_PrismActor_C_OnCustomEvent::CustomName' has a wrong offset!");

// Function BP_PrismActor.BP_PrismActor_C.VibrationTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PrismActor_C_VibrationTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PrismActor_C_VibrationTick) == 0x000004, "Wrong alignment on BP_PrismActor_C_VibrationTick");
static_assert(sizeof(BP_PrismActor_C_VibrationTick) == 0x000004, "Wrong size on BP_PrismActor_C_VibrationTick");
static_assert(offsetof(BP_PrismActor_C_VibrationTick, DeltaTime) == 0x000000, "Member 'BP_PrismActor_C_VibrationTick::DeltaTime' has a wrong offset!");

}

