#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PrismCharged_VisualEntity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PrismCharged_VisualEntity.BP_PrismCharged_VisualEntity_C
// 0x0028 (0x0378 - 0x0350)
class ABP_PrismCharged_VisualEntity_C final : public AVisualEntity
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Niagara;                                           // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TargetScale;                                       // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            PulseCurve;                                        // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PulseDuration;                                     // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PrismCharged_VisualEntity(int32 EntryPoint);
	void VisualEntityConstructionFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PrismCharged_VisualEntity_C">();
	}
	static class ABP_PrismCharged_VisualEntity_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PrismCharged_VisualEntity_C>();
	}
};
static_assert(alignof(ABP_PrismCharged_VisualEntity_C) == 0x000008, "Wrong alignment on ABP_PrismCharged_VisualEntity_C");
static_assert(sizeof(ABP_PrismCharged_VisualEntity_C) == 0x000378, "Wrong size on ABP_PrismCharged_VisualEntity_C");
static_assert(offsetof(ABP_PrismCharged_VisualEntity_C, UberGraphFrame) == 0x000350, "Member 'ABP_PrismCharged_VisualEntity_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PrismCharged_VisualEntity_C, Niagara) == 0x000358, "Member 'ABP_PrismCharged_VisualEntity_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_PrismCharged_VisualEntity_C, TargetScale) == 0x000360, "Member 'ABP_PrismCharged_VisualEntity_C::TargetScale' has a wrong offset!");
static_assert(offsetof(ABP_PrismCharged_VisualEntity_C, CurrentTime) == 0x000364, "Member 'ABP_PrismCharged_VisualEntity_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(ABP_PrismCharged_VisualEntity_C, PulseCurve) == 0x000368, "Member 'ABP_PrismCharged_VisualEntity_C::PulseCurve' has a wrong offset!");
static_assert(offsetof(ABP_PrismCharged_VisualEntity_C, PulseDuration) == 0x000370, "Member 'ABP_PrismCharged_VisualEntity_C::PulseDuration' has a wrong offset!");

}

