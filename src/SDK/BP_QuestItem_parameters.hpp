#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuestItem

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_QuestItem.BP_QuestItem_C.ExecuteUbergraph_BP_QuestItem
// 0x0050 (0x0050 - 0x0000)
struct BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InAmount;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_GoldText;                             // 0x0008(0x0018)(ConstParm)
	class FText                                   K2Node_Event_EssenceText;                          // 0x0020(0x0018)(ConstParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemAbility*                           K2Node_Event_InItemAbility;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem) == 0x000008, "Wrong alignment on BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem");
static_assert(sizeof(BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem) == 0x000050, "Wrong size on BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem");
static_assert(offsetof(BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem, EntryPoint) == 0x000000, "Member 'BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem, K2Node_Event_InAmount) == 0x000004, "Member 'BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem::K2Node_Event_InAmount' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem, K2Node_Event_GoldText) == 0x000008, "Member 'BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem::K2Node_Event_GoldText' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem, K2Node_Event_EssenceText) == 0x000020, "Member 'BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem::K2Node_Event_EssenceText' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem, CallFunc_TextIsEmpty_ReturnValue) == 0x000038, "Member 'BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem, CallFunc_TextIsEmpty_ReturnValue_1) == 0x000039, "Member 'BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003B, "Member 'BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem, K2Node_Event_InItemAbility) == 0x000040, "Member 'BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem::K2Node_Event_InItemAbility' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem, K2Node_Event_IsDesignTime) == 0x000048, "Member 'BP_QuestItem_C_ExecuteUbergraph_BP_QuestItem::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_QuestItem.BP_QuestItem_C.OnSetEssence
// 0x0018 (0x0018 - 0x0000)
struct BP_QuestItem_C_OnSetEssence final
{
public:
	class FText                                   EssenceText;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_QuestItem_C_OnSetEssence) == 0x000008, "Wrong alignment on BP_QuestItem_C_OnSetEssence");
static_assert(sizeof(BP_QuestItem_C_OnSetEssence) == 0x000018, "Wrong size on BP_QuestItem_C_OnSetEssence");
static_assert(offsetof(BP_QuestItem_C_OnSetEssence, EssenceText) == 0x000000, "Member 'BP_QuestItem_C_OnSetEssence::EssenceText' has a wrong offset!");

// Function BP_QuestItem.BP_QuestItem_C.OnSetGold
// 0x0018 (0x0018 - 0x0000)
struct BP_QuestItem_C_OnSetGold final
{
public:
	class FText                                   GoldText;                                          // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_QuestItem_C_OnSetGold) == 0x000008, "Wrong alignment on BP_QuestItem_C_OnSetGold");
static_assert(sizeof(BP_QuestItem_C_OnSetGold) == 0x000018, "Wrong size on BP_QuestItem_C_OnSetGold");
static_assert(offsetof(BP_QuestItem_C_OnSetGold, GoldText) == 0x000000, "Member 'BP_QuestItem_C_OnSetGold::GoldText' has a wrong offset!");

// Function BP_QuestItem.BP_QuestItem_C.OnSetAmount
// 0x0004 (0x0004 - 0x0000)
struct BP_QuestItem_C_OnSetAmount final
{
public:
	int32                                         InAmount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestItem_C_OnSetAmount) == 0x000004, "Wrong alignment on BP_QuestItem_C_OnSetAmount");
static_assert(sizeof(BP_QuestItem_C_OnSetAmount) == 0x000004, "Wrong size on BP_QuestItem_C_OnSetAmount");
static_assert(offsetof(BP_QuestItem_C_OnSetAmount, InAmount) == 0x000000, "Member 'BP_QuestItem_C_OnSetAmount::InAmount' has a wrong offset!");

// Function BP_QuestItem.BP_QuestItem_C.OnSetItem
// 0x0008 (0x0008 - 0x0000)
struct BP_QuestItem_C_OnSetItem final
{
public:
	class UItemAbility*                           InItemAbility;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestItem_C_OnSetItem) == 0x000008, "Wrong alignment on BP_QuestItem_C_OnSetItem");
static_assert(sizeof(BP_QuestItem_C_OnSetItem) == 0x000008, "Wrong size on BP_QuestItem_C_OnSetItem");
static_assert(offsetof(BP_QuestItem_C_OnSetItem, InItemAbility) == 0x000000, "Member 'BP_QuestItem_C_OnSetItem::InItemAbility' has a wrong offset!");

// Function BP_QuestItem.BP_QuestItem_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_QuestItem_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_QuestItem_C_PreConstruct) == 0x000001, "Wrong alignment on BP_QuestItem_C_PreConstruct");
static_assert(sizeof(BP_QuestItem_C_PreConstruct) == 0x000001, "Wrong size on BP_QuestItem_C_PreConstruct");
static_assert(offsetof(BP_QuestItem_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_QuestItem_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_QuestItem.BP_QuestItem_C.SetItem
// 0x0048 (0x0048 - 0x0000)
struct BP_QuestItem_C_SetItem final
{
public:
	class UItemAbility*                           InItemAbility;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_BPGetIcon_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_BPGetItemName_ReturnValue;                // 0x0010(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0030(0x0018)()
};
static_assert(alignof(BP_QuestItem_C_SetItem) == 0x000008, "Wrong alignment on BP_QuestItem_C_SetItem");
static_assert(sizeof(BP_QuestItem_C_SetItem) == 0x000048, "Wrong size on BP_QuestItem_C_SetItem");
static_assert(offsetof(BP_QuestItem_C_SetItem, InItemAbility) == 0x000000, "Member 'BP_QuestItem_C_SetItem::InItemAbility' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetItem, CallFunc_BPGetIcon_ReturnValue) == 0x000008, "Member 'BP_QuestItem_C_SetItem::CallFunc_BPGetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetItem, CallFunc_BPGetItemName_ReturnValue) == 0x000010, "Member 'BP_QuestItem_C_SetItem::CallFunc_BPGetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetItem, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_QuestItem_C_SetItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetItem, CallFunc_GetEmptyText_ReturnValue) == 0x000030, "Member 'BP_QuestItem_C_SetItem::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");

// Function BP_QuestItem.BP_QuestItem_C.SetAmount
// 0x0028 (0x0028 - 0x0000)
struct BP_QuestItem_C_SetAmount final
{
public:
	int32                                         InAmount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0008(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestItem_C_SetAmount) == 0x000008, "Wrong alignment on BP_QuestItem_C_SetAmount");
static_assert(sizeof(BP_QuestItem_C_SetAmount) == 0x000028, "Wrong size on BP_QuestItem_C_SetAmount");
static_assert(offsetof(BP_QuestItem_C_SetAmount, InAmount) == 0x000000, "Member 'BP_QuestItem_C_SetAmount::InAmount' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetAmount, Temp_bool_Variable) == 0x000004, "Member 'BP_QuestItem_C_SetAmount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetAmount, CallFunc_IntToText_ReturnValue) == 0x000008, "Member 'BP_QuestItem_C_SetAmount::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetAmount, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_QuestItem_C_SetAmount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetAmount, Temp_byte_Variable) == 0x000021, "Member 'BP_QuestItem_C_SetAmount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetAmount, Temp_byte_Variable_1) == 0x000022, "Member 'BP_QuestItem_C_SetAmount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetAmount, K2Node_Select_Default) == 0x000023, "Member 'BP_QuestItem_C_SetAmount::K2Node_Select_Default' has a wrong offset!");

// Function BP_QuestItem.BP_QuestItem_C.SetMode
// 0x0009 (0x0009 - 0x0000)
struct BP_QuestItem_C_SetMode final
{
public:
	bool                                          InIsItem;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestItem_C_SetMode) == 0x000001, "Wrong alignment on BP_QuestItem_C_SetMode");
static_assert(sizeof(BP_QuestItem_C_SetMode) == 0x000009, "Wrong size on BP_QuestItem_C_SetMode");
static_assert(offsetof(BP_QuestItem_C_SetMode, InIsItem) == 0x000000, "Member 'BP_QuestItem_C_SetMode::InIsItem' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetMode, Temp_bool_Variable) == 0x000001, "Member 'BP_QuestItem_C_SetMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetMode, Temp_byte_Variable) == 0x000002, "Member 'BP_QuestItem_C_SetMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetMode, Temp_byte_Variable_1) == 0x000003, "Member 'BP_QuestItem_C_SetMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetMode, Temp_bool_Variable_1) == 0x000004, "Member 'BP_QuestItem_C_SetMode::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetMode, Temp_byte_Variable_2) == 0x000005, "Member 'BP_QuestItem_C_SetMode::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetMode, Temp_byte_Variable_3) == 0x000006, "Member 'BP_QuestItem_C_SetMode::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetMode, K2Node_Select_Default) == 0x000007, "Member 'BP_QuestItem_C_SetMode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetMode, K2Node_Select_Default_1) == 0x000008, "Member 'BP_QuestItem_C_SetMode::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_QuestItem.BP_QuestItem_C.SetAlignment
// 0x0010 (0x0010 - 0x0000)
struct BP_QuestItem_C_SetAlignment final
{
public:
	EHorizontalAlignment                          InAlignment;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestItem_C_SetAlignment) == 0x000008, "Wrong alignment on BP_QuestItem_C_SetAlignment");
static_assert(sizeof(BP_QuestItem_C_SetAlignment) == 0x000010, "Wrong size on BP_QuestItem_C_SetAlignment");
static_assert(offsetof(BP_QuestItem_C_SetAlignment, InAlignment) == 0x000000, "Member 'BP_QuestItem_C_SetAlignment::InAlignment' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_SetAlignment, CallFunc_SlotAsSizeBoxSlot_ReturnValue) == 0x000008, "Member 'BP_QuestItem_C_SetAlignment::CallFunc_SlotAsSizeBoxSlot_ReturnValue' has a wrong offset!");

// Function BP_QuestItem.BP_QuestItem_C.ToggleSmallScreen
// 0x0068 (0x0068 - 0x0000)
struct BP_QuestItem_C_ToggleSmallScreen final
{
public:
	bool                                          InIsSmallScreen;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0010(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestItem_C_ToggleSmallScreen) == 0x000008, "Wrong alignment on BP_QuestItem_C_ToggleSmallScreen");
static_assert(sizeof(BP_QuestItem_C_ToggleSmallScreen) == 0x000068, "Wrong size on BP_QuestItem_C_ToggleSmallScreen");
static_assert(offsetof(BP_QuestItem_C_ToggleSmallScreen, InIsSmallScreen) == 0x000000, "Member 'BP_QuestItem_C_ToggleSmallScreen::InIsSmallScreen' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ToggleSmallScreen, Temp_bool_Variable) == 0x000001, "Member 'BP_QuestItem_C_ToggleSmallScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ToggleSmallScreen, Temp_int_Variable) == 0x000004, "Member 'BP_QuestItem_C_ToggleSmallScreen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ToggleSmallScreen, Temp_int_Variable_1) == 0x000008, "Member 'BP_QuestItem_C_ToggleSmallScreen::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ToggleSmallScreen, K2Node_Select_Default) == 0x00000C, "Member 'BP_QuestItem_C_ToggleSmallScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_QuestItem_C_ToggleSmallScreen, K2Node_MakeStruct_SlateFontInfo) == 0x000010, "Member 'BP_QuestItem_C_ToggleSmallScreen::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

}

