#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuestNotificationObjective

#include "Basic.hpp"

#include "man_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_QuestNotificationObjective.BP_QuestNotificationObjective_C.SetText
// 0x0050 (0x0050 - 0x0000)
struct BP_QuestNotificationObjective_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_TextTrimTrailing_ReturnValue;             // 0x0018(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0030(0x0018)()
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_QuestNotificationObjective_C_SetText) == 0x000008, "Wrong alignment on BP_QuestNotificationObjective_C_SetText");
static_assert(sizeof(BP_QuestNotificationObjective_C_SetText) == 0x000050, "Wrong size on BP_QuestNotificationObjective_C_SetText");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetText, InText) == 0x000000, "Member 'BP_QuestNotificationObjective_C_SetText::InText' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetText, CallFunc_TextTrimTrailing_ReturnValue) == 0x000018, "Member 'BP_QuestNotificationObjective_C_SetText::CallFunc_TextTrimTrailing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetText, CallFunc_GetText_ReturnValue) == 0x000030, "Member 'BP_QuestNotificationObjective_C_SetText::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetText, CallFunc_NotEqual_TextText_ReturnValue) == 0x000048, "Member 'BP_QuestNotificationObjective_C_SetText::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");

// Function BP_QuestNotificationObjective.BP_QuestNotificationObjective_C.HighlightObjective
// 0x0008 (0x0008 - 0x0000)
struct BP_QuestNotificationObjective_C_HighlightObjective final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestNotificationObjective_C_HighlightObjective) == 0x000008, "Wrong alignment on BP_QuestNotificationObjective_C_HighlightObjective");
static_assert(sizeof(BP_QuestNotificationObjective_C_HighlightObjective) == 0x000008, "Wrong size on BP_QuestNotificationObjective_C_HighlightObjective");
static_assert(offsetof(BP_QuestNotificationObjective_C_HighlightObjective, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_QuestNotificationObjective_C_HighlightObjective::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_QuestNotificationObjective.BP_QuestNotificationObjective_C.UpdateObjective
// 0x0018 (0x0018 - 0x0000)
struct BP_QuestNotificationObjective_C_UpdateObjective final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_QuestNotificationObjective_C_UpdateObjective) == 0x000008, "Wrong alignment on BP_QuestNotificationObjective_C_UpdateObjective");
static_assert(sizeof(BP_QuestNotificationObjective_C_UpdateObjective) == 0x000018, "Wrong size on BP_QuestNotificationObjective_C_UpdateObjective");
static_assert(offsetof(BP_QuestNotificationObjective_C_UpdateObjective, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'BP_QuestNotificationObjective_C_UpdateObjective::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_UpdateObjective, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_QuestNotificationObjective_C_UpdateObjective::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_UpdateObjective, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_QuestNotificationObjective_C_UpdateObjective::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_UpdateObjective, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'BP_QuestNotificationObjective_C_UpdateObjective::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_QuestNotificationObjective.BP_QuestNotificationObjective_C.SetState
// 0x0040 (0x0040 - 0x0000)
struct BP_QuestNotificationObjective_C_SetState final
{
public:
	EQuestState                                   ObjectiveState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestNotificationObjective_C_SetState) == 0x000008, "Wrong alignment on BP_QuestNotificationObjective_C_SetState");
static_assert(sizeof(BP_QuestNotificationObjective_C_SetState) == 0x000040, "Wrong size on BP_QuestNotificationObjective_C_SetState");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, ObjectiveState) == 0x000000, "Member 'BP_QuestNotificationObjective_C_SetState::ObjectiveState' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, Temp_byte_Variable) == 0x000001, "Member 'BP_QuestNotificationObjective_C_SetState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, Temp_byte_Variable_1) == 0x000002, "Member 'BP_QuestNotificationObjective_C_SetState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, Temp_byte_Variable_2) == 0x000003, "Member 'BP_QuestNotificationObjective_C_SetState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, Temp_byte_Variable_3) == 0x000004, "Member 'BP_QuestNotificationObjective_C_SetState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, Temp_byte_Variable_4) == 0x000005, "Member 'BP_QuestNotificationObjective_C_SetState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, Temp_byte_Variable_5) == 0x000006, "Member 'BP_QuestNotificationObjective_C_SetState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, Temp_byte_Variable_6) == 0x000007, "Member 'BP_QuestNotificationObjective_C_SetState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, Temp_object_Variable) == 0x000008, "Member 'BP_QuestNotificationObjective_C_SetState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, Temp_object_Variable_1) == 0x000010, "Member 'BP_QuestNotificationObjective_C_SetState::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, Temp_object_Variable_2) == 0x000018, "Member 'BP_QuestNotificationObjective_C_SetState::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, Temp_object_Variable_3) == 0x000020, "Member 'BP_QuestNotificationObjective_C_SetState::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, Temp_object_Variable_4) == 0x000028, "Member 'BP_QuestNotificationObjective_C_SetState::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, K2Node_Select_Default) == 0x000030, "Member 'BP_QuestNotificationObjective_C_SetState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_QuestNotificationObjective_C_SetState, K2Node_Select_Default_1) == 0x000038, "Member 'BP_QuestNotificationObjective_C_SetState::K2Node_Select_Default_1' has a wrong offset!");

}

