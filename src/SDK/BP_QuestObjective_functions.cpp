#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuestObjective

#include "Basic.hpp"

#include "BP_QuestObjective_classes.hpp"
#include "BP_QuestObjective_parameters.hpp"


namespace SDK
{

// Function BP_QuestObjective.BP_QuestObjective_C.ExecuteUbergraph_BP_QuestObjective
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_QuestObjective_C::ExecuteUbergraph_BP_QuestObjective(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestObjective_C", "ExecuteUbergraph_BP_QuestObjective");

	Params::BP_QuestObjective_C_ExecuteUbergraph_BP_QuestObjective Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestObjective.BP_QuestObjective_C.OnSetCounterText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InCounterText                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_QuestObjective_C::OnSetCounterText(const class FText& InCounterText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestObjective_C", "OnSetCounterText");

	Params::BP_QuestObjective_C_OnSetCounterText Parms{};

	Parms.InCounterText = std::move(InCounterText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestObjective.BP_QuestObjective_C.OnSetObjectiveState
// (Event, Protected, BlueprintEvent)
// Parameters:
// EQuestState                             InObjectiveState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_QuestObjective_C::OnSetObjectiveState(EQuestState InObjectiveState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestObjective_C", "OnSetObjectiveState");

	Params::BP_QuestObjective_C_OnSetObjectiveState Parms{};

	Parms.InObjectiveState = InObjectiveState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestObjective.BP_QuestObjective_C.OnSetObjectiveText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InObjectiveText                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_QuestObjective_C::OnSetObjectiveText(const class FText& InObjectiveText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestObjective_C", "OnSetObjectiveText");

	Params::BP_QuestObjective_C_OnSetObjectiveText Parms{};

	Parms.InObjectiveText = std::move(InObjectiveText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestObjective.BP_QuestObjective_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_QuestObjective_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestObjective_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QuestObjective.BP_QuestObjective_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_QuestObjective_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestObjective_C", "PreConstruct");

	Params::BP_QuestObjective_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestObjective.BP_QuestObjective_C.SetState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EQuestState                             InObjectiveState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_QuestObjective_C::SetState(EQuestState InObjectiveState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestObjective_C", "SetState");

	Params::BP_QuestObjective_C_SetState Parms{};

	Parms.InObjectiveState = InObjectiveState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestObjective.BP_QuestObjective_C.SetFirstItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTop                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_QuestObjective_C::SetFirstItem(bool IsTop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestObjective_C", "SetFirstItem");

	Params::BP_QuestObjective_C_SetFirstItem Parms{};

	Parms.IsTop = IsTop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestObjective.BP_QuestObjective_C.ShowCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCountVisible                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_QuestObjective_C::ShowCount(bool IsCountVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestObjective_C", "ShowCount");

	Params::BP_QuestObjective_C_ShowCount Parms{};

	Parms.IsCountVisible = IsCountVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QuestObjective.BP_QuestObjective_C.ToggleSmallScreen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsSmallScreen                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_QuestObjective_C::ToggleSmallScreen(bool InIsSmallScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QuestObjective_C", "ToggleSmallScreen");

	Params::BP_QuestObjective_C_ToggleSmallScreen Parms{};

	Parms.InIsSmallScreen = InIsSmallScreen;

	UObject::ProcessEvent(Func, &Parms);
}

}

