#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Quest_ListItem

#include "Basic.hpp"

#include "man_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Quest_ListItem.BP_Quest_ListItem_C.ExecuteUbergraph_BP_Quest_ListItem
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   K2Node_Event_InQuestState;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAnimate_1;                           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InQuestName;                          // 0x0078(0x0018)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInMainQuest;                         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem) == 0x000008, "Wrong alignment on BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem");
static_assert(sizeof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem) == 0x0000A0, "Wrong size on BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, EntryPoint) == 0x000000, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, Temp_bool_Variable) == 0x000004, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, CallFunc_IsVisible_ReturnValue) == 0x000005, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, Temp_float_Variable) == 0x000008, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, Temp_float_Variable_1) == 0x000010, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, K2Node_Event_IsDesignTime) == 0x000014, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, K2Node_Event_MyGeometry) == 0x000018, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, K2Node_Event_InDeltaTime) == 0x000050, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, CallFunc_GetEndTime_ReturnValue) == 0x000054, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, CallFunc_GetEndTime_ReturnValue_1) == 0x000058, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, K2Node_Event_InQuestState) == 0x000060, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::K2Node_Event_InQuestState' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, K2Node_Event_bAnimate_1) == 0x000061, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::K2Node_Event_bAnimate_1' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, K2Node_Event_bAnimate) == 0x000062, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, K2Node_Select_Default) == 0x000064, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, K2Node_Select_Default_1) == 0x000070, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, K2Node_Event_InQuestName) == 0x000078, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::K2Node_Event_InQuestName' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, CallFunc_PlayAnimation_ReturnValue_1) == 0x000090, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem, K2Node_Event_bInMainQuest) == 0x000098, "Member 'BP_Quest_ListItem_C_ExecuteUbergraph_BP_Quest_ListItem::K2Node_Event_bInMainQuest' has a wrong offset!");

// Function BP_Quest_ListItem.BP_Quest_ListItem_C.OnSetType
// 0x0001 (0x0001 - 0x0000)
struct BP_Quest_ListItem_C_OnSetType final
{
public:
	bool                                          bInMainQuest;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Quest_ListItem_C_OnSetType) == 0x000001, "Wrong alignment on BP_Quest_ListItem_C_OnSetType");
static_assert(sizeof(BP_Quest_ListItem_C_OnSetType) == 0x000001, "Wrong size on BP_Quest_ListItem_C_OnSetType");
static_assert(offsetof(BP_Quest_ListItem_C_OnSetType, bInMainQuest) == 0x000000, "Member 'BP_Quest_ListItem_C_OnSetType::bInMainQuest' has a wrong offset!");

// Function BP_Quest_ListItem.BP_Quest_ListItem_C.OnSetName
// 0x0018 (0x0018 - 0x0000)
struct BP_Quest_ListItem_C_OnSetName final
{
public:
	class FText                                   InQuestName;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Quest_ListItem_C_OnSetName) == 0x000008, "Wrong alignment on BP_Quest_ListItem_C_OnSetName");
static_assert(sizeof(BP_Quest_ListItem_C_OnSetName) == 0x000018, "Wrong size on BP_Quest_ListItem_C_OnSetName");
static_assert(offsetof(BP_Quest_ListItem_C_OnSetName, InQuestName) == 0x000000, "Member 'BP_Quest_ListItem_C_OnSetName::InQuestName' has a wrong offset!");

// Function BP_Quest_ListItem.BP_Quest_ListItem_C.OnFocused
// 0x0001 (0x0001 - 0x0000)
struct BP_Quest_ListItem_C_OnFocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Quest_ListItem_C_OnFocused) == 0x000001, "Wrong alignment on BP_Quest_ListItem_C_OnFocused");
static_assert(sizeof(BP_Quest_ListItem_C_OnFocused) == 0x000001, "Wrong size on BP_Quest_ListItem_C_OnFocused");
static_assert(offsetof(BP_Quest_ListItem_C_OnFocused, bAnimate) == 0x000000, "Member 'BP_Quest_ListItem_C_OnFocused::bAnimate' has a wrong offset!");

// Function BP_Quest_ListItem.BP_Quest_ListItem_C.OnUnfocused
// 0x0001 (0x0001 - 0x0000)
struct BP_Quest_ListItem_C_OnUnfocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Quest_ListItem_C_OnUnfocused) == 0x000001, "Wrong alignment on BP_Quest_ListItem_C_OnUnfocused");
static_assert(sizeof(BP_Quest_ListItem_C_OnUnfocused) == 0x000001, "Wrong size on BP_Quest_ListItem_C_OnUnfocused");
static_assert(offsetof(BP_Quest_ListItem_C_OnUnfocused, bAnimate) == 0x000000, "Member 'BP_Quest_ListItem_C_OnUnfocused::bAnimate' has a wrong offset!");

// Function BP_Quest_ListItem.BP_Quest_ListItem_C.OnSetState
// 0x0001 (0x0001 - 0x0000)
struct BP_Quest_ListItem_C_OnSetState final
{
public:
	EQuestState                                   InQuestState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Quest_ListItem_C_OnSetState) == 0x000001, "Wrong alignment on BP_Quest_ListItem_C_OnSetState");
static_assert(sizeof(BP_Quest_ListItem_C_OnSetState) == 0x000001, "Wrong size on BP_Quest_ListItem_C_OnSetState");
static_assert(offsetof(BP_Quest_ListItem_C_OnSetState, InQuestState) == 0x000000, "Member 'BP_Quest_ListItem_C_OnSetState::InQuestState' has a wrong offset!");

// Function BP_Quest_ListItem.BP_Quest_ListItem_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_Quest_ListItem_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Quest_ListItem_C_Tick) == 0x000004, "Wrong alignment on BP_Quest_ListItem_C_Tick");
static_assert(sizeof(BP_Quest_ListItem_C_Tick) == 0x00003C, "Wrong size on BP_Quest_ListItem_C_Tick");
static_assert(offsetof(BP_Quest_ListItem_C_Tick, MyGeometry) == 0x000000, "Member 'BP_Quest_ListItem_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_Quest_ListItem_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Quest_ListItem.BP_Quest_ListItem_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Quest_ListItem_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Quest_ListItem_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Quest_ListItem_C_PreConstruct");
static_assert(sizeof(BP_Quest_ListItem_C_PreConstruct) == 0x000001, "Wrong size on BP_Quest_ListItem_C_PreConstruct");
static_assert(offsetof(BP_Quest_ListItem_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Quest_ListItem_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_Quest_ListItem.BP_Quest_ListItem_C.BP_SetState
// 0x0110 (0x0110 - 0x0000)
struct BP_Quest_ListItem_C_BP_SetState final
{
public:
	EQuestState                                   InQuestState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   Temp_byte_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   Temp_byte_Variable_7;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   Temp_byte_Variable_8;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   Temp_byte_Variable_14;                             // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00D8(0x0028)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Quest_ListItem_C_BP_SetState) == 0x000008, "Wrong alignment on BP_Quest_ListItem_C_BP_SetState");
static_assert(sizeof(BP_Quest_ListItem_C_BP_SetState) == 0x000110, "Wrong size on BP_Quest_ListItem_C_BP_SetState");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, InQuestState) == 0x000000, "Member 'BP_Quest_ListItem_C_BP_SetState::InQuestState' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable) == 0x000001, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_object_Variable) == 0x000008, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_object_Variable_1) == 0x000010, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_object_Variable_2) == 0x000018, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_object_Variable_3) == 0x000020, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_object_Variable_4) == 0x000028, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_1) == 0x000030, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_2) == 0x000031, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_3) == 0x000032, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_4) == 0x000033, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_5) == 0x000034, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_6) == 0x000035, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_7) == 0x000036, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_struct_Variable) == 0x000038, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_struct_Variable_1) == 0x000048, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_struct_Variable_2) == 0x000058, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_struct_Variable_3) == 0x000068, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_struct_Variable_4) == 0x000078, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_8) == 0x000088, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_9) == 0x000089, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_10) == 0x00008A, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_11) == 0x00008B, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_12) == 0x00008C, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_13) == 0x00008D, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_byte_Variable_14) == 0x00008E, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_object_Variable_5) == 0x000090, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_object_Variable_6) == 0x000098, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_object_Variable_7) == 0x0000A0, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_object_Variable_8) == 0x0000A8, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, Temp_object_Variable_9) == 0x0000B0, "Member 'BP_Quest_ListItem_C_BP_SetState::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, K2Node_Select_Default) == 0x0000B8, "Member 'BP_Quest_ListItem_C_BP_SetState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, K2Node_Select_Default_1) == 0x0000C0, "Member 'BP_Quest_ListItem_C_BP_SetState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, K2Node_Select_Default_2) == 0x0000C4, "Member 'BP_Quest_ListItem_C_BP_SetState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, K2Node_MakeStruct_SlateColor) == 0x0000D8, "Member 'BP_Quest_ListItem_C_BP_SetState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, K2Node_Select_Default_3) == 0x000100, "Member 'BP_Quest_ListItem_C_BP_SetState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_BP_SetState, K2Node_Select_Default_4) == 0x000108, "Member 'BP_Quest_ListItem_C_BP_SetState::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_Quest_ListItem.BP_Quest_ListItem_C.Set Type
// 0x0040 (0x0040 - 0x0000)
struct BP_Quest_ListItem_C_Set_Type final
{
public:
	bool                                          InIsMainQuest;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Quest_ListItem_C_Set_Type) == 0x000008, "Wrong alignment on BP_Quest_ListItem_C_Set_Type");
static_assert(sizeof(BP_Quest_ListItem_C_Set_Type) == 0x000040, "Wrong size on BP_Quest_ListItem_C_Set_Type");
static_assert(offsetof(BP_Quest_ListItem_C_Set_Type, InIsMainQuest) == 0x000000, "Member 'BP_Quest_ListItem_C_Set_Type::InIsMainQuest' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_Set_Type, Temp_bool_Variable) == 0x000001, "Member 'BP_Quest_ListItem_C_Set_Type::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_Set_Type, Temp_object_Variable) == 0x000008, "Member 'BP_Quest_ListItem_C_Set_Type::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_Set_Type, Temp_object_Variable_1) == 0x000010, "Member 'BP_Quest_ListItem_C_Set_Type::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_Set_Type, Temp_bool_Variable_1) == 0x000018, "Member 'BP_Quest_ListItem_C_Set_Type::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_Set_Type, Temp_object_Variable_2) == 0x000020, "Member 'BP_Quest_ListItem_C_Set_Type::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_Set_Type, Temp_object_Variable_3) == 0x000028, "Member 'BP_Quest_ListItem_C_Set_Type::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_Set_Type, K2Node_Select_Default) == 0x000030, "Member 'BP_Quest_ListItem_C_Set_Type::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Quest_ListItem_C_Set_Type, K2Node_Select_Default_1) == 0x000038, "Member 'BP_Quest_ListItem_C_Set_Type::K2Node_Select_Default_1' has a wrong offset!");

}

