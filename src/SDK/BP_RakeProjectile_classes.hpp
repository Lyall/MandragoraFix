#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RakeProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RakeProjectile.BP_RakeProjectile_C
// 0x0028 (0x0C50 - 0x0C28)
class ABP_RakeProjectile_C final : public ARakeProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0C30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UManBoxComponent*                       ManProjectileEnviormentalCollider;                 // 0x0C38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AVisualEntity*                          ProjectileVE;                                      // 0x0C40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVisualEntity*                          OnGroundVE;                                        // 0x0C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_RakeProjectile(int32 EntryPoint);
	void BPOnLanded();
	void BPOnRecalled();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RakeProjectile_C">();
	}
	static class ABP_RakeProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RakeProjectile_C>();
	}
};
static_assert(alignof(ABP_RakeProjectile_C) == 0x000008, "Wrong alignment on ABP_RakeProjectile_C");
static_assert(sizeof(ABP_RakeProjectile_C) == 0x000C50, "Wrong size on ABP_RakeProjectile_C");
static_assert(offsetof(ABP_RakeProjectile_C, UberGraphFrame) == 0x000C28, "Member 'ABP_RakeProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RakeProjectile_C, Ak) == 0x000C30, "Member 'ABP_RakeProjectile_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_RakeProjectile_C, ManProjectileEnviormentalCollider) == 0x000C38, "Member 'ABP_RakeProjectile_C::ManProjectileEnviormentalCollider' has a wrong offset!");
static_assert(offsetof(ABP_RakeProjectile_C, ProjectileVE) == 0x000C40, "Member 'ABP_RakeProjectile_C::ProjectileVE' has a wrong offset!");
static_assert(offsetof(ABP_RakeProjectile_C, OnGroundVE) == 0x000C48, "Member 'ABP_RakeProjectile_C::OnGroundVE' has a wrong offset!");

}

