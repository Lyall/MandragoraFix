#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RelicDischargeMarker_VisualEntity

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "man_structs.hpp"


namespace SDK::Params
{

// Function BP_RelicDischargeMarker_VisualEntity.BP_RelicDischargeMarker_VisualEntity_C.ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity
// 0x0058 (0x0058 - 0x0000)
struct BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentRelicCharge_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxRelicCharge_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHeroBase*                              K2Node_DynamicCast_AsHero_Base;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityBase*                           CallFunc_GetOffhandAbilitySlot_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URelicDischargeAbility*                 K2Node_DynamicCast_AsRelic_Discharge_Ability;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity) == 0x000008, "Wrong alignment on BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity");
static_assert(sizeof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity) == 0x000058, "Wrong size on BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, EntryPoint) == 0x000000, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, CallFunc_GetCurrentRelicCharge_ReturnValue) == 0x000004, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::CallFunc_GetCurrentRelicCharge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, CallFunc_GetMaxRelicCharge_ReturnValue) == 0x000008, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::CallFunc_GetMaxRelicCharge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, CallFunc_GetAttachParentActor_ReturnValue) == 0x000010, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, K2Node_DynamicCast_AsHero_Base) == 0x000018, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::K2Node_DynamicCast_AsHero_Base' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, CallFunc_GetOffhandAbilitySlot_ReturnValue) == 0x000028, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::CallFunc_GetOffhandAbilitySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, CallFunc_GetAbilityController_ReturnValue) == 0x000030, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, K2Node_DynamicCast_AsRelic_Discharge_Ability) == 0x000038, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::K2Node_DynamicCast_AsRelic_Discharge_Ability' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, K2Node_Event_DeltaSeconds) == 0x000044, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ExecuteUbergraph_BP_RelicDischargeMarker_VisualEntity::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_RelicDischargeMarker_VisualEntity.BP_RelicDischargeMarker_VisualEntity_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_RelicDischargeMarker_VisualEntity_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RelicDischargeMarker_VisualEntity_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_RelicDischargeMarker_VisualEntity_C_ReceiveTick");
static_assert(sizeof(BP_RelicDischargeMarker_VisualEntity_C_ReceiveTick) == 0x000004, "Wrong size on BP_RelicDischargeMarker_VisualEntity_C_ReceiveTick");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_RelicDischargeMarker_VisualEntity_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_RelicDischargeMarker_VisualEntity.BP_RelicDischargeMarker_VisualEntity_C.SelectVFXAsset
// 0x0060 (0x0060 - 0x0000)
struct BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset final
{
public:
	class UAbilityController*                     OwnerAbilityController;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          ElementFullChargeSound;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          NoChargeSound;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         SelectedNiagaraAsset;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0020(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EDamageType>                           CallFunc_GetRelicChargeDamageType_ReturnValue;     // 0x0038(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset) == 0x000008, "Wrong alignment on BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset");
static_assert(sizeof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset) == 0x000060, "Wrong size on BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, OwnerAbilityController) == 0x000000, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::OwnerAbilityController' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, ElementFullChargeSound) == 0x000008, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::ElementFullChargeSound' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, NoChargeSound) == 0x000010, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::NoChargeSound' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, SelectedNiagaraAsset) == 0x000018, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::SelectedNiagaraAsset' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, Temp_delegate_Variable) == 0x000020, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, Temp_bool_Variable) == 0x000031, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, CallFunc_IsValid_ReturnValue_1) == 0x000032, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, CallFunc_GetRelicChargeDamageType_ReturnValue) == 0x000038, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::CallFunc_GetRelicChargeDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, K2Node_SwitchEnum_CmpSuccess) == 0x000049, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00004A, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, K2Node_Select_Default) == 0x000050, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, CallFunc_IsValid_ReturnValue_2) == 0x000058, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset, CallFunc_PostAkEvent_ReturnValue) == 0x00005C, "Member 'BP_RelicDischargeMarker_VisualEntity_C_SelectVFXAsset::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

}

