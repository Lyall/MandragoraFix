#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RetalentWindow

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_RetalentWindow.BP_RetalentWindow_C.ExecuteUbergraph_BP_RetalentWindow
// 0x0120 (0x0120 - 0x0000)
struct BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0014(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x002C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x003C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_RetalentText;                         // 0x00A0(0x0018)(ConstParm)
	bool                                          K2Node_Event_bDefaultTree;                         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget_3;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget_2;           // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bMinTimeCancel;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget_1;           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0100(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue_3;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget;             // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow) == 0x000008, "Wrong alignment on BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow");
static_assert(sizeof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow) == 0x000120, "Wrong size on BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, EntryPoint) == 0x000000, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, Temp_delegate_Variable) == 0x000004, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, Temp_delegate_Variable_1) == 0x000014, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, CallFunc_PostEvent_ReturnValue) == 0x000024, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, CallFunc_PostEvent_ReturnValue_1) == 0x000028, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, Temp_delegate_Variable_2) == 0x00002C, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, K2Node_Event_MyGeometry) == 0x00003C, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, K2Node_Event_InDeltaTime) == 0x000074, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, CallFunc_PostEvent_ReturnValue_2) == 0x000078, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::CallFunc_PostEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, K2Node_Event_AnimDuration_1) == 0x00007C, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x000080, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, K2Node_Event_AnimDuration) == 0x000084, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, CallFunc_PlayAnimation_ReturnValue) == 0x000088, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000090, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, CallFunc_PlayAnimation_ReturnValue_1) == 0x000098, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, K2Node_Event_RetalentText) == 0x0000A0, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::K2Node_Event_RetalentText' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, K2Node_Event_bDefaultTree) == 0x0000B8, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::K2Node_Event_bDefaultTree' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, K2Node_Event_InteractButtonUserWidget_3) == 0x0000C0, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::K2Node_Event_InteractButtonUserWidget_3' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, K2Node_Event_InteractButtonUserWidget_2) == 0x0000C8, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::K2Node_Event_InteractButtonUserWidget_2' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, K2Node_Event_bMinTimeCancel) == 0x0000D0, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::K2Node_Event_bMinTimeCancel' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, K2Node_Event_InteractButtonUserWidget_1) == 0x0000D8, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::K2Node_Event_InteractButtonUserWidget_1' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000E0, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x0000E8, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, CallFunc_PlayAnimation_ReturnValue_3) == 0x0000F0, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, CallFunc_PlayAnimation_ReturnValue_4) == 0x0000F8, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, Temp_delegate_Variable_3) == 0x000100, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, CallFunc_PostEvent_ReturnValue_3) == 0x000110, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::CallFunc_PostEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow, K2Node_Event_InteractButtonUserWidget) == 0x000118, "Member 'BP_RetalentWindow_C_ExecuteUbergraph_BP_RetalentWindow::K2Node_Event_InteractButtonUserWidget' has a wrong offset!");

// Function BP_RetalentWindow.BP_RetalentWindow_C.OnErrorHiglight
// 0x0008 (0x0008 - 0x0000)
struct BP_RetalentWindow_C_OnErrorHiglight final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RetalentWindow_C_OnErrorHiglight) == 0x000008, "Wrong alignment on BP_RetalentWindow_C_OnErrorHiglight");
static_assert(sizeof(BP_RetalentWindow_C_OnErrorHiglight) == 0x000008, "Wrong size on BP_RetalentWindow_C_OnErrorHiglight");
static_assert(offsetof(BP_RetalentWindow_C_OnErrorHiglight, InteractButtonUserWidget) == 0x000000, "Member 'BP_RetalentWindow_C_OnErrorHiglight::InteractButtonUserWidget' has a wrong offset!");

// Function BP_RetalentWindow.BP_RetalentWindow_C.OnHoldFinished
// 0x0008 (0x0008 - 0x0000)
struct BP_RetalentWindow_C_OnHoldFinished final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RetalentWindow_C_OnHoldFinished) == 0x000008, "Wrong alignment on BP_RetalentWindow_C_OnHoldFinished");
static_assert(sizeof(BP_RetalentWindow_C_OnHoldFinished) == 0x000008, "Wrong size on BP_RetalentWindow_C_OnHoldFinished");
static_assert(offsetof(BP_RetalentWindow_C_OnHoldFinished, InteractButtonUserWidget) == 0x000000, "Member 'BP_RetalentWindow_C_OnHoldFinished::InteractButtonUserWidget' has a wrong offset!");

// Function BP_RetalentWindow.BP_RetalentWindow_C.OnHoldCanceled
// 0x0010 (0x0010 - 0x0000)
struct BP_RetalentWindow_C_OnHoldCanceled final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMinTimeCancel;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RetalentWindow_C_OnHoldCanceled) == 0x000008, "Wrong alignment on BP_RetalentWindow_C_OnHoldCanceled");
static_assert(sizeof(BP_RetalentWindow_C_OnHoldCanceled) == 0x000010, "Wrong size on BP_RetalentWindow_C_OnHoldCanceled");
static_assert(offsetof(BP_RetalentWindow_C_OnHoldCanceled, InteractButtonUserWidget) == 0x000000, "Member 'BP_RetalentWindow_C_OnHoldCanceled::InteractButtonUserWidget' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_OnHoldCanceled, bMinTimeCancel) == 0x000008, "Member 'BP_RetalentWindow_C_OnHoldCanceled::bMinTimeCancel' has a wrong offset!");

// Function BP_RetalentWindow.BP_RetalentWindow_C.OnHoldStarted
// 0x0008 (0x0008 - 0x0000)
struct BP_RetalentWindow_C_OnHoldStarted final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RetalentWindow_C_OnHoldStarted) == 0x000008, "Wrong alignment on BP_RetalentWindow_C_OnHoldStarted");
static_assert(sizeof(BP_RetalentWindow_C_OnHoldStarted) == 0x000008, "Wrong size on BP_RetalentWindow_C_OnHoldStarted");
static_assert(offsetof(BP_RetalentWindow_C_OnHoldStarted, InteractButtonUserWidget) == 0x000000, "Member 'BP_RetalentWindow_C_OnHoldStarted::InteractButtonUserWidget' has a wrong offset!");

// Function BP_RetalentWindow.BP_RetalentWindow_C.OnSetRetalentText
// 0x0020 (0x0020 - 0x0000)
struct BP_RetalentWindow_C_OnSetRetalentText final
{
public:
	class FText                                   RetalentText;                                      // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bDefaultTree;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RetalentWindow_C_OnSetRetalentText) == 0x000008, "Wrong alignment on BP_RetalentWindow_C_OnSetRetalentText");
static_assert(sizeof(BP_RetalentWindow_C_OnSetRetalentText) == 0x000020, "Wrong size on BP_RetalentWindow_C_OnSetRetalentText");
static_assert(offsetof(BP_RetalentWindow_C_OnSetRetalentText, RetalentText) == 0x000000, "Member 'BP_RetalentWindow_C_OnSetRetalentText::RetalentText' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_OnSetRetalentText, bDefaultTree) == 0x000018, "Member 'BP_RetalentWindow_C_OnSetRetalentText::bDefaultTree' has a wrong offset!");

// Function BP_RetalentWindow.BP_RetalentWindow_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_RetalentWindow_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RetalentWindow_C_OnHide) == 0x000004, "Wrong alignment on BP_RetalentWindow_C_OnHide");
static_assert(sizeof(BP_RetalentWindow_C_OnHide) == 0x000004, "Wrong size on BP_RetalentWindow_C_OnHide");
static_assert(offsetof(BP_RetalentWindow_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_RetalentWindow_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_RetalentWindow.BP_RetalentWindow_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_RetalentWindow_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RetalentWindow_C_OnShow) == 0x000004, "Wrong alignment on BP_RetalentWindow_C_OnShow");
static_assert(sizeof(BP_RetalentWindow_C_OnShow) == 0x000004, "Wrong size on BP_RetalentWindow_C_OnShow");
static_assert(offsetof(BP_RetalentWindow_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_RetalentWindow_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_RetalentWindow.BP_RetalentWindow_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_RetalentWindow_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RetalentWindow_C_Tick) == 0x000004, "Wrong alignment on BP_RetalentWindow_C_Tick");
static_assert(sizeof(BP_RetalentWindow_C_Tick) == 0x00003C, "Wrong size on BP_RetalentWindow_C_Tick");
static_assert(offsetof(BP_RetalentWindow_C_Tick, MyGeometry) == 0x000000, "Member 'BP_RetalentWindow_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_RetalentWindow_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_RetalentWindow.BP_RetalentWindow_C.BtnHotkeyBClicked
// 0x0002 (0x0002 - 0x0000)
struct BP_RetalentWindow_C_BtnHotkeyBClicked final
{
public:
	bool                                          OpenPauseMenu;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RetalentWindow_C_BtnHotkeyBClicked) == 0x000001, "Wrong alignment on BP_RetalentWindow_C_BtnHotkeyBClicked");
static_assert(sizeof(BP_RetalentWindow_C_BtnHotkeyBClicked) == 0x000002, "Wrong size on BP_RetalentWindow_C_BtnHotkeyBClicked");
static_assert(offsetof(BP_RetalentWindow_C_BtnHotkeyBClicked, OpenPauseMenu) == 0x000000, "Member 'BP_RetalentWindow_C_BtnHotkeyBClicked::OpenPauseMenu' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_BtnHotkeyBClicked, CallFunc_IsActive_ReturnValue) == 0x000001, "Member 'BP_RetalentWindow_C_BtnHotkeyBClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_RetalentWindow.BP_RetalentWindow_C.SetEssenceTexts
// 0x00C8 (0x00C8 - 0x0000)
struct BP_RetalentWindow_C_SetEssenceTexts final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
	int32                                         CallFunc_GetEssenceRequired_ReturnValue;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroEssence_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEssenceRequired_ReturnValue_1;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0068(0x0018)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0080(0x0028)()
	int32                                         CallFunc_GetHeroEssence_ReturnValue_1;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue_1;                  // 0x00B0(0x0018)()
};
static_assert(alignof(BP_RetalentWindow_C_SetEssenceTexts) == 0x000008, "Wrong alignment on BP_RetalentWindow_C_SetEssenceTexts");
static_assert(sizeof(BP_RetalentWindow_C_SetEssenceTexts) == 0x0000C8, "Wrong size on BP_RetalentWindow_C_SetEssenceTexts");
static_assert(offsetof(BP_RetalentWindow_C_SetEssenceTexts, Temp_bool_Variable) == 0x000000, "Member 'BP_RetalentWindow_C_SetEssenceTexts::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_SetEssenceTexts, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'BP_RetalentWindow_C_SetEssenceTexts::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_SetEssenceTexts, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'BP_RetalentWindow_C_SetEssenceTexts::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_SetEssenceTexts, CallFunc_GetEssenceRequired_ReturnValue) == 0x000058, "Member 'BP_RetalentWindow_C_SetEssenceTexts::CallFunc_GetEssenceRequired_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_SetEssenceTexts, CallFunc_GetHeroEssence_ReturnValue) == 0x00005C, "Member 'BP_RetalentWindow_C_SetEssenceTexts::CallFunc_GetHeroEssence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_SetEssenceTexts, CallFunc_GetEssenceRequired_ReturnValue_1) == 0x000060, "Member 'BP_RetalentWindow_C_SetEssenceTexts::CallFunc_GetEssenceRequired_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_SetEssenceTexts, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_RetalentWindow_C_SetEssenceTexts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_SetEssenceTexts, CallFunc_IntToText_ReturnValue) == 0x000068, "Member 'BP_RetalentWindow_C_SetEssenceTexts::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_SetEssenceTexts, K2Node_Select_Default) == 0x000080, "Member 'BP_RetalentWindow_C_SetEssenceTexts::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_SetEssenceTexts, CallFunc_GetHeroEssence_ReturnValue_1) == 0x0000A8, "Member 'BP_RetalentWindow_C_SetEssenceTexts::CallFunc_GetHeroEssence_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_SetEssenceTexts, CallFunc_IntToText_ReturnValue_1) == 0x0000B0, "Member 'BP_RetalentWindow_C_SetEssenceTexts::CallFunc_IntToText_ReturnValue_1' has a wrong offset!");

// Function BP_RetalentWindow.BP_RetalentWindow_C.Set State
// 0x0010 (0x0010 - 0x0000)
struct BP_RetalentWindow_C_Set_State final
{
public:
	bool                                          IsTreeDefault;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RetalentWindow_C_Set_State) == 0x000004, "Wrong alignment on BP_RetalentWindow_C_Set_State");
static_assert(sizeof(BP_RetalentWindow_C_Set_State) == 0x000010, "Wrong size on BP_RetalentWindow_C_Set_State");
static_assert(offsetof(BP_RetalentWindow_C_Set_State, IsTreeDefault) == 0x000000, "Member 'BP_RetalentWindow_C_Set_State::IsTreeDefault' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_Set_State, Temp_bool_Variable) == 0x000001, "Member 'BP_RetalentWindow_C_Set_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_Set_State, Temp_float_Variable) == 0x000004, "Member 'BP_RetalentWindow_C_Set_State::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_Set_State, Temp_float_Variable_1) == 0x000008, "Member 'BP_RetalentWindow_C_Set_State::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RetalentWindow_C_Set_State, K2Node_Select_Default) == 0x00000C, "Member 'BP_RetalentWindow_C_Set_State::K2Node_Select_Default' has a wrong offset!");

// Function BP_RetalentWindow.BP_RetalentWindow_C.ErrorHighlight
// 0x0008 (0x0008 - 0x0000)
struct BP_RetalentWindow_C_ErrorHighlight final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RetalentWindow_C_ErrorHighlight) == 0x000008, "Wrong alignment on BP_RetalentWindow_C_ErrorHighlight");
static_assert(sizeof(BP_RetalentWindow_C_ErrorHighlight) == 0x000008, "Wrong size on BP_RetalentWindow_C_ErrorHighlight");
static_assert(offsetof(BP_RetalentWindow_C_ErrorHighlight, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_RetalentWindow_C_ErrorHighlight::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

