#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SM_TreeDF_H

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SM_TreeDF_H.BP_SM_TreeDF_H_C.NewFunction_0
// 0x00F0 (0x00F0 - 0x0000)
struct BP_SM_TreeDF_H_C_NewFunction_0 final
{
public:
	struct FTransform                             RelativeTo;                                        // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	class USceneComponent*                        Target_Input;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0038(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0044(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Scale;                                             // 0x0050(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SM_TreeDF_H_C_NewFunction_0) == 0x000010, "Wrong alignment on BP_SM_TreeDF_H_C_NewFunction_0");
static_assert(sizeof(BP_SM_TreeDF_H_C_NewFunction_0) == 0x0000F0, "Wrong size on BP_SM_TreeDF_H_C_NewFunction_0");
static_assert(offsetof(BP_SM_TreeDF_H_C_NewFunction_0, RelativeTo) == 0x000000, "Member 'BP_SM_TreeDF_H_C_NewFunction_0::RelativeTo' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_NewFunction_0, Target_Input) == 0x000030, "Member 'BP_SM_TreeDF_H_C_NewFunction_0::Target_Input' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_NewFunction_0, Location) == 0x000038, "Member 'BP_SM_TreeDF_H_C_NewFunction_0::Location' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_NewFunction_0, Rotation) == 0x000044, "Member 'BP_SM_TreeDF_H_C_NewFunction_0::Rotation' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_NewFunction_0, Scale) == 0x000050, "Member 'BP_SM_TreeDF_H_C_NewFunction_0::Scale' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_NewFunction_0, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000060, "Member 'BP_SM_TreeDF_H_C_NewFunction_0::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_NewFunction_0, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000090, "Member 'BP_SM_TreeDF_H_C_NewFunction_0::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_NewFunction_0, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'BP_SM_TreeDF_H_C_NewFunction_0::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_NewFunction_0, CallFunc_BreakTransform_Rotation) == 0x0000CC, "Member 'BP_SM_TreeDF_H_C_NewFunction_0::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_NewFunction_0, CallFunc_BreakTransform_Scale) == 0x0000D8, "Member 'BP_SM_TreeDF_H_C_NewFunction_0::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BP_SM_TreeDF_H.BP_SM_TreeDF_H_C.TreeDF_A
// 0x0190 (0x0190 - 0x0000)
struct BP_SM_TreeDF_H_C_TreeDF_A final
{
public:
	bool                                          UseRandom;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UserRandom;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UserRandom2;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UserRandom3;                                       // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UserRandom4;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UserRandom5;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UserRandom6;                                       // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x9];                                        // 0x0007(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomVariant_NewRandom;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomVariant_NewRandom_1;                // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomVariant_NewRandom_2;                // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomVariant_NewRandom_3;                // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomVariant_NewRandom_4;                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomVariant_NewRandom_5;                // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue_1;                // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue_2;                // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue_3;                // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue_4;                // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue_5;                // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue_6;                // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomVariant_NewRandom_6;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SM_TreeDF_H_C_TreeDF_A) == 0x000010, "Wrong alignment on BP_SM_TreeDF_H_C_TreeDF_A");
static_assert(sizeof(BP_SM_TreeDF_H_C_TreeDF_A) == 0x000190, "Wrong size on BP_SM_TreeDF_H_C_TreeDF_A");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, UseRandom) == 0x000000, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::UseRandom' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, UserRandom) == 0x000001, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::UserRandom' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, UserRandom2) == 0x000002, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::UserRandom2' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, UserRandom3) == 0x000003, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::UserRandom3' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, UserRandom4) == 0x000004, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::UserRandom4' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, UserRandom5) == 0x000005, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::UserRandom5' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, UserRandom6) == 0x000006, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::UserRandom6' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_MakeTransform_ReturnValue_1) == 0x000040, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_MakeTransform_ReturnValue_2) == 0x000070, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_MakeTransform_ReturnValue_3) == 0x0000A0, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_MakeTransform_ReturnValue_4) == 0x0000D0, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_MakeTransform_ReturnValue_5) == 0x000100, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_MakeTransform_ReturnValue_6) == 0x000130, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_RandomVariant_NewRandom) == 0x000160, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_RandomVariant_NewRandom' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_RandomVariant_NewRandom_1) == 0x000161, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_RandomVariant_NewRandom_1' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_RandomVariant_NewRandom_2) == 0x000162, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_RandomVariant_NewRandom_2' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_RandomVariant_NewRandom_3) == 0x000163, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_RandomVariant_NewRandom_3' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_RandomVariant_NewRandom_4) == 0x000164, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_RandomVariant_NewRandom_4' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_RandomVariant_NewRandom_5) == 0x000165, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_RandomVariant_NewRandom_5' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_AddInstance_ReturnValue) == 0x000168, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_AddInstance_ReturnValue_1) == 0x00016C, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_AddInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_AddInstance_ReturnValue_2) == 0x000170, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_AddInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_AddInstance_ReturnValue_3) == 0x000174, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_AddInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_AddInstance_ReturnValue_4) == 0x000178, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_AddInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_AddInstance_ReturnValue_5) == 0x00017C, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_AddInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_AddInstance_ReturnValue_6) == 0x000180, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_AddInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_TreeDF_A, CallFunc_RandomVariant_NewRandom_6) == 0x000184, "Member 'BP_SM_TreeDF_H_C_TreeDF_A::CallFunc_RandomVariant_NewRandom_6' has a wrong offset!");

// Function BP_SM_TreeDF_H.BP_SM_TreeDF_H_C.RandomVariant
// 0x000C (0x000C - 0x0000)
struct BP_SM_TreeDF_H_C_RandomVariant final
{
public:
	bool                                          UserRandom;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          User;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewRandom;                                         // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomFunction_ReturnValue;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SM_TreeDF_H_C_RandomVariant) == 0x000004, "Wrong alignment on BP_SM_TreeDF_H_C_RandomVariant");
static_assert(sizeof(BP_SM_TreeDF_H_C_RandomVariant) == 0x00000C, "Wrong size on BP_SM_TreeDF_H_C_RandomVariant");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomVariant, UserRandom) == 0x000000, "Member 'BP_SM_TreeDF_H_C_RandomVariant::UserRandom' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomVariant, User) == 0x000001, "Member 'BP_SM_TreeDF_H_C_RandomVariant::User' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomVariant, NewRandom) == 0x000002, "Member 'BP_SM_TreeDF_H_C_RandomVariant::NewRandom' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomVariant, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000004, "Member 'BP_SM_TreeDF_H_C_RandomVariant::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomVariant, CallFunc_Conv_IntToBool_ReturnValue) == 0x000008, "Member 'BP_SM_TreeDF_H_C_RandomVariant::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomVariant, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'BP_SM_TreeDF_H_C_RandomVariant::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomVariant, CallFunc_RandomFunction_ReturnValue) == 0x00000A, "Member 'BP_SM_TreeDF_H_C_RandomVariant::CallFunc_RandomFunction_ReturnValue' has a wrong offset!");

// Function BP_SM_TreeDF_H.BP_SM_TreeDF_H_C.RandomFunction
// 0x0018 (0x0018 - 0x0000)
struct BP_SM_TreeDF_H_C_RandomFunction final
{
public:
	bool                                          UseRandom;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          User;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SM_TreeDF_H_C_RandomFunction) == 0x000004, "Wrong alignment on BP_SM_TreeDF_H_C_RandomFunction");
static_assert(sizeof(BP_SM_TreeDF_H_C_RandomFunction) == 0x000018, "Wrong size on BP_SM_TreeDF_H_C_RandomFunction");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomFunction, UseRandom) == 0x000000, "Member 'BP_SM_TreeDF_H_C_RandomFunction::UseRandom' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomFunction, User) == 0x000001, "Member 'BP_SM_TreeDF_H_C_RandomFunction::User' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomFunction, ReturnValue) == 0x000002, "Member 'BP_SM_TreeDF_H_C_RandomFunction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomFunction, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000004, "Member 'BP_SM_TreeDF_H_C_RandomFunction::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomFunction, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_SM_TreeDF_H_C_RandomFunction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomFunction, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'BP_SM_TreeDF_H_C_RandomFunction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomFunction, CallFunc_Divide_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SM_TreeDF_H_C_RandomFunction::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomFunction, CallFunc_And_IntInt_ReturnValue) == 0x000010, "Member 'BP_SM_TreeDF_H_C_RandomFunction::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomFunction, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_SM_TreeDF_H_C_RandomFunction::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomFunction, CallFunc_BooleanAND_ReturnValue_1) == 0x000015, "Member 'BP_SM_TreeDF_H_C_RandomFunction::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_RandomFunction, CallFunc_BooleanOR_ReturnValue) == 0x000016, "Member 'BP_SM_TreeDF_H_C_RandomFunction::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_SM_TreeDF_H.BP_SM_TreeDF_H_C.UserConstructionScript
// 0x000C (0x000C - 0x0000)
struct BP_SM_TreeDF_H_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SM_TreeDF_H_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_SM_TreeDF_H_C_UserConstructionScript");
static_assert(sizeof(BP_SM_TreeDF_H_C_UserConstructionScript) == 0x00000C, "Wrong size on BP_SM_TreeDF_H_C_UserConstructionScript");
static_assert(offsetof(BP_SM_TreeDF_H_C_UserConstructionScript, Temp_int_Variable) == 0x000000, "Member 'BP_SM_TreeDF_H_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_SM_TreeDF_H_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SM_TreeDF_H_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SM_TreeDF_H_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

