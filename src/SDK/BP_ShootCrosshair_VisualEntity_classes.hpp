#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShootCrosshair_VisualEntity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ShootCrosshair_VisualEntity.BP_ShootCrosshair_VisualEntity_C
// 0x0048 (0x0398 - 0x0350)
class ABP_ShootCrosshair_VisualEntity_C final : public AVisualEntity
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Plane_middle2;                                     // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane_middle1;                                     // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane2;                                            // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube2;                                             // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube1;                                             // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ShootCrosshair_VisualEntity(int32 EntryPoint);
	void OnKill();
	void VisualEntityConstructionFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ShootCrosshair_VisualEntity_C">();
	}
	static class ABP_ShootCrosshair_VisualEntity_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ShootCrosshair_VisualEntity_C>();
	}
};
static_assert(alignof(ABP_ShootCrosshair_VisualEntity_C) == 0x000008, "Wrong alignment on ABP_ShootCrosshair_VisualEntity_C");
static_assert(sizeof(ABP_ShootCrosshair_VisualEntity_C) == 0x000398, "Wrong size on ABP_ShootCrosshair_VisualEntity_C");
static_assert(offsetof(ABP_ShootCrosshair_VisualEntity_C, UberGraphFrame) == 0x000350, "Member 'ABP_ShootCrosshair_VisualEntity_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ShootCrosshair_VisualEntity_C, Plane_middle2) == 0x000358, "Member 'ABP_ShootCrosshair_VisualEntity_C::Plane_middle2' has a wrong offset!");
static_assert(offsetof(ABP_ShootCrosshair_VisualEntity_C, Plane_middle1) == 0x000360, "Member 'ABP_ShootCrosshair_VisualEntity_C::Plane_middle1' has a wrong offset!");
static_assert(offsetof(ABP_ShootCrosshair_VisualEntity_C, Plane) == 0x000368, "Member 'ABP_ShootCrosshair_VisualEntity_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_ShootCrosshair_VisualEntity_C, Plane2) == 0x000370, "Member 'ABP_ShootCrosshair_VisualEntity_C::Plane2' has a wrong offset!");
static_assert(offsetof(ABP_ShootCrosshair_VisualEntity_C, Cube2) == 0x000378, "Member 'ABP_ShootCrosshair_VisualEntity_C::Cube2' has a wrong offset!");
static_assert(offsetof(ABP_ShootCrosshair_VisualEntity_C, Cube1) == 0x000380, "Member 'ABP_ShootCrosshair_VisualEntity_C::Cube1' has a wrong offset!");
static_assert(offsetof(ABP_ShootCrosshair_VisualEntity_C, Cube) == 0x000388, "Member 'ABP_ShootCrosshair_VisualEntity_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_ShootCrosshair_VisualEntity_C, Scene) == 0x000390, "Member 'ABP_ShootCrosshair_VisualEntity_C::Scene' has a wrong offset!");

}

