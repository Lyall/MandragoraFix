#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillPointsSlot_V2

#include "Basic.hpp"

#include "man_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_SkillPointsSlot_V2.BP_SkillPointsSlot_V2_C
// 0x00B8 (0x0318 - 0x0260)
class UBP_SkillPointsSlot_V2_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HideSpendPointsIcon;                               // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SpendPointsAnim;                                   // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HighlightNewValue;                                 // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             CurrentValueText;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NewValueText;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      RichCaption;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpendPointsVFX;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Unit1;                                             // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Unit2;                                             // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ValueArrow;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ShowCurrentValue;                                  // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   AttributeName;                                     // 0x02C0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	float                                         CurrentValue;                                      // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         NewValue;                                          // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsNewValueHighlighted;                             // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Unit;                                              // 0x02E8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMulticastInlineDelegate<void(float CurrentValue, float NewValue)> ValueChange;                                       // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsCurrentValueHighlighted;                         // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	EHeroProperty                                 HeroProperty;                                      // 0x0311(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          RoundedValue;                                      // 0x0312(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          NotEnoughResource;                                 // 0x0313(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSpendPointsVisible;                              // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_SkillPointsSlot_V2(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetCurrentValue(float Value);
	void SetNewValue(float Value);
	void SetShowCurrentValue(bool Show);
	void SetAttributeName(const class FText& Caption);
	void SetNewValueHighlight(bool Highlighted);
	void SetUnit(const class FText& NewUnit);
	void SetValueColors();
	void SetCurrentValueHighlight();
	void ErrorHighlight();
	void ToggleSpendPointsVFX(bool InVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkillPointsSlot_V2_C">();
	}
	static class UBP_SkillPointsSlot_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SkillPointsSlot_V2_C>();
	}
};
static_assert(alignof(UBP_SkillPointsSlot_V2_C) == 0x000008, "Wrong alignment on UBP_SkillPointsSlot_V2_C");
static_assert(sizeof(UBP_SkillPointsSlot_V2_C) == 0x000318, "Wrong size on UBP_SkillPointsSlot_V2_C");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, UberGraphFrame) == 0x000260, "Member 'UBP_SkillPointsSlot_V2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, HideSpendPointsIcon) == 0x000268, "Member 'UBP_SkillPointsSlot_V2_C::HideSpendPointsIcon' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, SpendPointsAnim) == 0x000270, "Member 'UBP_SkillPointsSlot_V2_C::SpendPointsAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, HighlightNewValue) == 0x000278, "Member 'UBP_SkillPointsSlot_V2_C::HighlightNewValue' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, CurrentValueText) == 0x000280, "Member 'UBP_SkillPointsSlot_V2_C::CurrentValueText' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, NewValueText) == 0x000288, "Member 'UBP_SkillPointsSlot_V2_C::NewValueText' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, RichCaption) == 0x000290, "Member 'UBP_SkillPointsSlot_V2_C::RichCaption' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, SpendPointsVFX) == 0x000298, "Member 'UBP_SkillPointsSlot_V2_C::SpendPointsVFX' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, Unit1) == 0x0002A0, "Member 'UBP_SkillPointsSlot_V2_C::Unit1' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, Unit2) == 0x0002A8, "Member 'UBP_SkillPointsSlot_V2_C::Unit2' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, ValueArrow) == 0x0002B0, "Member 'UBP_SkillPointsSlot_V2_C::ValueArrow' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, ShowCurrentValue) == 0x0002B8, "Member 'UBP_SkillPointsSlot_V2_C::ShowCurrentValue' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, AttributeName) == 0x0002C0, "Member 'UBP_SkillPointsSlot_V2_C::AttributeName' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, CurrentValue) == 0x0002D8, "Member 'UBP_SkillPointsSlot_V2_C::CurrentValue' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, NewValue) == 0x0002DC, "Member 'UBP_SkillPointsSlot_V2_C::NewValue' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, IsNewValueHighlighted) == 0x0002E0, "Member 'UBP_SkillPointsSlot_V2_C::IsNewValueHighlighted' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, Unit) == 0x0002E8, "Member 'UBP_SkillPointsSlot_V2_C::Unit' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, ValueChange) == 0x000300, "Member 'UBP_SkillPointsSlot_V2_C::ValueChange' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, IsCurrentValueHighlighted) == 0x000310, "Member 'UBP_SkillPointsSlot_V2_C::IsCurrentValueHighlighted' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, HeroProperty) == 0x000311, "Member 'UBP_SkillPointsSlot_V2_C::HeroProperty' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, RoundedValue) == 0x000312, "Member 'UBP_SkillPointsSlot_V2_C::RoundedValue' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, NotEnoughResource) == 0x000313, "Member 'UBP_SkillPointsSlot_V2_C::NotEnoughResource' has a wrong offset!");
static_assert(offsetof(UBP_SkillPointsSlot_V2_C, IsSpendPointsVisible) == 0x000314, "Member 'UBP_SkillPointsSlot_V2_C::IsSpendPointsVisible' has a wrong offset!");

}

