#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillPointsSlot_V2

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_SkillPointsSlot_V2.BP_SkillPointsSlot_V2_C.ExecuteUbergraph_BP_SkillPointsSlot_V2
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillPointsSlot_V2_C_ExecuteUbergraph_BP_SkillPointsSlot_V2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillPointsSlot_V2_C_ExecuteUbergraph_BP_SkillPointsSlot_V2) == 0x000004, "Wrong alignment on BP_SkillPointsSlot_V2_C_ExecuteUbergraph_BP_SkillPointsSlot_V2");
static_assert(sizeof(BP_SkillPointsSlot_V2_C_ExecuteUbergraph_BP_SkillPointsSlot_V2) == 0x000008, "Wrong size on BP_SkillPointsSlot_V2_C_ExecuteUbergraph_BP_SkillPointsSlot_V2");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_ExecuteUbergraph_BP_SkillPointsSlot_V2, EntryPoint) == 0x000000, "Member 'BP_SkillPointsSlot_V2_C_ExecuteUbergraph_BP_SkillPointsSlot_V2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_ExecuteUbergraph_BP_SkillPointsSlot_V2, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_SkillPointsSlot_V2_C_ExecuteUbergraph_BP_SkillPointsSlot_V2::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_SkillPointsSlot_V2.BP_SkillPointsSlot_V2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillPointsSlot_V2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillPointsSlot_V2_C_PreConstruct) == 0x000001, "Wrong alignment on BP_SkillPointsSlot_V2_C_PreConstruct");
static_assert(sizeof(BP_SkillPointsSlot_V2_C_PreConstruct) == 0x000001, "Wrong size on BP_SkillPointsSlot_V2_C_PreConstruct");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_SkillPointsSlot_V2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_SkillPointsSlot_V2.BP_SkillPointsSlot_V2_C.SetCurrentValue
// 0x0020 (0x0020 - 0x0000)
struct BP_SkillPointsSlot_V2_C_SetCurrentValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FloatToText_ReturnValue;                  // 0x0008(0x0018)()
};
static_assert(alignof(BP_SkillPointsSlot_V2_C_SetCurrentValue) == 0x000008, "Wrong alignment on BP_SkillPointsSlot_V2_C_SetCurrentValue");
static_assert(sizeof(BP_SkillPointsSlot_V2_C_SetCurrentValue) == 0x000020, "Wrong size on BP_SkillPointsSlot_V2_C_SetCurrentValue");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetCurrentValue, Value) == 0x000000, "Member 'BP_SkillPointsSlot_V2_C_SetCurrentValue::Value' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetCurrentValue, CallFunc_FloatToText_ReturnValue) == 0x000008, "Member 'BP_SkillPointsSlot_V2_C_SetCurrentValue::CallFunc_FloatToText_ReturnValue' has a wrong offset!");

// Function BP_SkillPointsSlot_V2.BP_SkillPointsSlot_V2_C.SetNewValue
// 0x0020 (0x0020 - 0x0000)
struct BP_SkillPointsSlot_V2_C_SetNewValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FloatToText_ReturnValue;                  // 0x0008(0x0018)()
};
static_assert(alignof(BP_SkillPointsSlot_V2_C_SetNewValue) == 0x000008, "Wrong alignment on BP_SkillPointsSlot_V2_C_SetNewValue");
static_assert(sizeof(BP_SkillPointsSlot_V2_C_SetNewValue) == 0x000020, "Wrong size on BP_SkillPointsSlot_V2_C_SetNewValue");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValue, Value) == 0x000000, "Member 'BP_SkillPointsSlot_V2_C_SetNewValue::Value' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValue, CallFunc_FloatToText_ReturnValue) == 0x000008, "Member 'BP_SkillPointsSlot_V2_C_SetNewValue::CallFunc_FloatToText_ReturnValue' has a wrong offset!");

// Function BP_SkillPointsSlot_V2.BP_SkillPointsSlot_V2_C.SetShowCurrentValue
// 0x0005 (0x0005 - 0x0000)
struct BP_SkillPointsSlot_V2_C_SetShowCurrentValue final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillPointsSlot_V2_C_SetShowCurrentValue) == 0x000001, "Wrong alignment on BP_SkillPointsSlot_V2_C_SetShowCurrentValue");
static_assert(sizeof(BP_SkillPointsSlot_V2_C_SetShowCurrentValue) == 0x000005, "Wrong size on BP_SkillPointsSlot_V2_C_SetShowCurrentValue");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetShowCurrentValue, Show) == 0x000000, "Member 'BP_SkillPointsSlot_V2_C_SetShowCurrentValue::Show' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetShowCurrentValue, Temp_bool_Variable) == 0x000001, "Member 'BP_SkillPointsSlot_V2_C_SetShowCurrentValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetShowCurrentValue, Temp_byte_Variable) == 0x000002, "Member 'BP_SkillPointsSlot_V2_C_SetShowCurrentValue::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetShowCurrentValue, Temp_byte_Variable_1) == 0x000003, "Member 'BP_SkillPointsSlot_V2_C_SetShowCurrentValue::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetShowCurrentValue, K2Node_Select_Default) == 0x000004, "Member 'BP_SkillPointsSlot_V2_C_SetShowCurrentValue::K2Node_Select_Default' has a wrong offset!");

// Function BP_SkillPointsSlot_V2.BP_SkillPointsSlot_V2_C.SetAttributeName
// 0x0018 (0x0018 - 0x0000)
struct BP_SkillPointsSlot_V2_C_SetAttributeName final
{
public:
	class FText                                   Caption;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SkillPointsSlot_V2_C_SetAttributeName) == 0x000008, "Wrong alignment on BP_SkillPointsSlot_V2_C_SetAttributeName");
static_assert(sizeof(BP_SkillPointsSlot_V2_C_SetAttributeName) == 0x000018, "Wrong size on BP_SkillPointsSlot_V2_C_SetAttributeName");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetAttributeName, Caption) == 0x000000, "Member 'BP_SkillPointsSlot_V2_C_SetAttributeName::Caption' has a wrong offset!");

// Function BP_SkillPointsSlot_V2.BP_SkillPointsSlot_V2_C.SetNewValueHighlight
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SkillPointsSlot_V2_C_SetNewValueHighlight final
{
public:
	bool                                          Highlighted;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0060(0x0028)()
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0098(0x0028)()
};
static_assert(alignof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight) == 0x000008, "Wrong alignment on BP_SkillPointsSlot_V2_C_SetNewValueHighlight");
static_assert(sizeof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight) == 0x0000C0, "Wrong size on BP_SkillPointsSlot_V2_C_SetNewValueHighlight");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, Highlighted) == 0x000000, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::Highlighted' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, Temp_bool_Variable) == 0x000001, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, Temp_struct_Variable) == 0x000004, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, Temp_struct_Variable_1) == 0x000014, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, Temp_bool_Variable_1) == 0x000024, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, Temp_struct_Variable_2) == 0x000028, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, Temp_struct_Variable_3) == 0x000038, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000049, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, K2Node_Select_Default) == 0x00004C, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, K2Node_MakeStruct_SlateColor) == 0x000060, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, K2Node_Select_Default_1) == 0x000088, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetNewValueHighlight, K2Node_MakeStruct_SlateColor_1) == 0x000098, "Member 'BP_SkillPointsSlot_V2_C_SetNewValueHighlight::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function BP_SkillPointsSlot_V2.BP_SkillPointsSlot_V2_C.SetUnit
// 0x0018 (0x0018 - 0x0000)
struct BP_SkillPointsSlot_V2_C_SetUnit final
{
public:
	class FText                                   NewUnit;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SkillPointsSlot_V2_C_SetUnit) == 0x000008, "Wrong alignment on BP_SkillPointsSlot_V2_C_SetUnit");
static_assert(sizeof(BP_SkillPointsSlot_V2_C_SetUnit) == 0x000018, "Wrong size on BP_SkillPointsSlot_V2_C_SetUnit");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetUnit, NewUnit) == 0x000000, "Member 'BP_SkillPointsSlot_V2_C_SetUnit::NewUnit' has a wrong offset!");

// Function BP_SkillPointsSlot_V2.BP_SkillPointsSlot_V2_C.SetValueColors
// 0x0100 (0x0100 - 0x0000)
struct BP_SkillPointsSlot_V2_C_SetValueColors final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0050(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0078(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_4;                    // 0x00A0(0x0028)()
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_5;                    // 0x00D0(0x0028)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillPointsSlot_V2_C_SetValueColors) == 0x000008, "Wrong alignment on BP_SkillPointsSlot_V2_C_SetValueColors");
static_assert(sizeof(BP_SkillPointsSlot_V2_C_SetValueColors) == 0x000100, "Wrong size on BP_SkillPointsSlot_V2_C_SetValueColors");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetValueColors, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'BP_SkillPointsSlot_V2_C_SetValueColors::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetValueColors, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'BP_SkillPointsSlot_V2_C_SetValueColors::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetValueColors, K2Node_MakeStruct_SlateColor_2) == 0x000050, "Member 'BP_SkillPointsSlot_V2_C_SetValueColors::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetValueColors, K2Node_MakeStruct_SlateColor_3) == 0x000078, "Member 'BP_SkillPointsSlot_V2_C_SetValueColors::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetValueColors, K2Node_MakeStruct_SlateColor_4) == 0x0000A0, "Member 'BP_SkillPointsSlot_V2_C_SetValueColors::K2Node_MakeStruct_SlateColor_4' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetValueColors, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_SkillPointsSlot_V2_C_SetValueColors::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetValueColors, K2Node_MakeStruct_SlateColor_5) == 0x0000D0, "Member 'BP_SkillPointsSlot_V2_C_SetValueColors::K2Node_MakeStruct_SlateColor_5' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetValueColors, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000F8, "Member 'BP_SkillPointsSlot_V2_C_SetValueColors::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_SetValueColors, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000F9, "Member 'BP_SkillPointsSlot_V2_C_SetValueColors::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SkillPointsSlot_V2.BP_SkillPointsSlot_V2_C.ErrorHighlight
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillPointsSlot_V2_C_ErrorHighlight final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillPointsSlot_V2_C_ErrorHighlight) == 0x000008, "Wrong alignment on BP_SkillPointsSlot_V2_C_ErrorHighlight");
static_assert(sizeof(BP_SkillPointsSlot_V2_C_ErrorHighlight) == 0x000008, "Wrong size on BP_SkillPointsSlot_V2_C_ErrorHighlight");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_ErrorHighlight, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_SkillPointsSlot_V2_C_ErrorHighlight::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_SkillPointsSlot_V2.BP_SkillPointsSlot_V2_C.ToggleSpendPointsVFX
// 0x0028 (0x0028 - 0x0000)
struct BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX) == 0x000008, "Wrong alignment on BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX");
static_assert(sizeof(BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX) == 0x000028, "Wrong size on BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX, InVisible) == 0x000000, "Member 'BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX::InVisible' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000010, "Member 'BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX, CallFunc_PlayAnimation_ReturnValue_2) == 0x000020, "Member 'BP_SkillPointsSlot_V2_C_ToggleSpendPointsVFX::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");

}

