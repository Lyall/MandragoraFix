#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillTreeNode_V2

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "man_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.ExecuteUbergraph_BP_SkillTreeNode_V2
// 0x00F8 (0x00F8 - 0x0000)
struct BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_NodeName;                             // 0x0010(0x0018)(ConstParm)
	class UTexture2D*                             K2Node_Event_NodeIcon;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAnimate_1;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EAttribute>                            K2Node_Event_UnlockedAttributes;                   // 0x0050(0x0010)(ConstParm, ReferenceParm)
	float                                         Temp_float_Variable_1;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0078(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInLocked;                            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bPlayAkAudioEvent;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkillTreeUserWidget*                   CallFunc_GetSkillTreeUserWidget_ReturnValue;       // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAttributeSelectorVisible_ReturnValue;   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2");
static_assert(sizeof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2) == 0x0000F8, "Wrong size on BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, EntryPoint) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, Temp_bool_Variable) == 0x000004, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, Temp_bool_Variable_1) == 0x000005, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, Temp_float_Variable) == 0x000008, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, K2Node_Event_NodeName) == 0x000010, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::K2Node_Event_NodeName' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, K2Node_Event_NodeIcon) == 0x000028, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::K2Node_Event_NodeIcon' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_GetEndTime_ReturnValue) == 0x000030, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_GetEndTime_ReturnValue_1) == 0x000034, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, K2Node_Event_bAnimate_1) == 0x000038, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::K2Node_Event_bAnimate_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, K2Node_Event_bAnimate) == 0x000039, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, K2Node_Select_Default) == 0x00003C, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, K2Node_Event_UnlockedAttributes) == 0x000050, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::K2Node_Event_UnlockedAttributes' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, Temp_float_Variable_1) == 0x000060, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, K2Node_Select_Default_1) == 0x000064, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000068, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_PlayAnimation_ReturnValue_1) == 0x000070, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, K2Node_Event_MyGeometry) == 0x000078, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, K2Node_Event_InDeltaTime) == 0x0000B0, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x0000B4, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x0000B8, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000C0, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_PlayAnimation_ReturnValue_3) == 0x0000D0, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_PlayAnimation_ReturnValue_4) == 0x0000D8, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, K2Node_Event_bInLocked) == 0x0000E0, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::K2Node_Event_bInLocked' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, K2Node_Event_bPlayAkAudioEvent) == 0x0000E1, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::K2Node_Event_bPlayAkAudioEvent' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_GetSkillTreeUserWidget_ReturnValue) == 0x0000E8, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_GetSkillTreeUserWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2, CallFunc_IsAttributeSelectorVisible_ReturnValue) == 0x0000F0, "Member 'BP_SkillTreeNode_V2_C_ExecuteUbergraph_BP_SkillTreeNode_V2::CallFunc_IsAttributeSelectorVisible_ReturnValue' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.OnSetLocked
// 0x0002 (0x0002 - 0x0000)
struct BP_SkillTreeNode_V2_C_OnSetLocked final
{
public:
	bool                                          bInLocked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPlayAkAudioEvent;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_OnSetLocked) == 0x000001, "Wrong alignment on BP_SkillTreeNode_V2_C_OnSetLocked");
static_assert(sizeof(BP_SkillTreeNode_V2_C_OnSetLocked) == 0x000002, "Wrong size on BP_SkillTreeNode_V2_C_OnSetLocked");
static_assert(offsetof(BP_SkillTreeNode_V2_C_OnSetLocked, bInLocked) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_OnSetLocked::bInLocked' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_OnSetLocked, bPlayAkAudioEvent) == 0x000001, "Member 'BP_SkillTreeNode_V2_C_OnSetLocked::bPlayAkAudioEvent' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_SkillTreeNode_V2_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_Tick) == 0x000004, "Wrong alignment on BP_SkillTreeNode_V2_C_Tick");
static_assert(sizeof(BP_SkillTreeNode_V2_C_Tick) == 0x00003C, "Wrong size on BP_SkillTreeNode_V2_C_Tick");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Tick, MyGeometry) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_SkillTreeNode_V2_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.OnSetLearnedUpgrades
// 0x0010 (0x0010 - 0x0000)
struct BP_SkillTreeNode_V2_C_OnSetLearnedUpgrades final
{
public:
	TArray<EAttribute>                            UnlockedAttributes;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_OnSetLearnedUpgrades) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_OnSetLearnedUpgrades");
static_assert(sizeof(BP_SkillTreeNode_V2_C_OnSetLearnedUpgrades) == 0x000010, "Wrong size on BP_SkillTreeNode_V2_C_OnSetLearnedUpgrades");
static_assert(offsetof(BP_SkillTreeNode_V2_C_OnSetLearnedUpgrades, UnlockedAttributes) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_OnSetLearnedUpgrades::UnlockedAttributes' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.OnUnfocused
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillTreeNode_V2_C_OnUnfocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_OnUnfocused) == 0x000001, "Wrong alignment on BP_SkillTreeNode_V2_C_OnUnfocused");
static_assert(sizeof(BP_SkillTreeNode_V2_C_OnUnfocused) == 0x000001, "Wrong size on BP_SkillTreeNode_V2_C_OnUnfocused");
static_assert(offsetof(BP_SkillTreeNode_V2_C_OnUnfocused, bAnimate) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_OnUnfocused::bAnimate' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.OnFocused
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillTreeNode_V2_C_OnFocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_OnFocused) == 0x000001, "Wrong alignment on BP_SkillTreeNode_V2_C_OnFocused");
static_assert(sizeof(BP_SkillTreeNode_V2_C_OnFocused) == 0x000001, "Wrong size on BP_SkillTreeNode_V2_C_OnFocused");
static_assert(offsetof(BP_SkillTreeNode_V2_C_OnFocused, bAnimate) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_OnFocused::bAnimate' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.OnSetNode
// 0x0020 (0x0020 - 0x0000)
struct BP_SkillTreeNode_V2_C_OnSetNode final
{
public:
	class FText                                   NodeName;                                          // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UTexture2D*                             NodeIcon;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_OnSetNode) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_OnSetNode");
static_assert(sizeof(BP_SkillTreeNode_V2_C_OnSetNode) == 0x000020, "Wrong size on BP_SkillTreeNode_V2_C_OnSetNode");
static_assert(offsetof(BP_SkillTreeNode_V2_C_OnSetNode, NodeName) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_OnSetNode::NodeName' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_OnSetNode, NodeIcon) == 0x000018, "Member 'BP_SkillTreeNode_V2_C_OnSetNode::NodeIcon' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillTreeNode_V2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_PreConstruct) == 0x000001, "Wrong alignment on BP_SkillTreeNode_V2_C_PreConstruct");
static_assert(sizeof(BP_SkillTreeNode_V2_C_PreConstruct) == 0x000001, "Wrong size on BP_SkillTreeNode_V2_C_PreConstruct");
static_assert(offsetof(BP_SkillTreeNode_V2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.SetIcon
// 0x0020 (0x0020 - 0x0000)
struct BP_SkillTreeNode_V2_C_SetIcon final
{
public:
	class UTexture2D*                             InIcon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NodeType;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_SetIcon) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_SetIcon");
static_assert(sizeof(BP_SkillTreeNode_V2_C_SetIcon) == 0x000020, "Wrong size on BP_SkillTreeNode_V2_C_SetIcon");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetIcon, InIcon) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_SetIcon::InIcon' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetIcon, NodeType) == 0x000008, "Member 'BP_SkillTreeNode_V2_C_SetIcon::NodeType' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'BP_SkillTreeNode_V2_C_SetIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetIcon, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SkillTreeNode_V2_C_SetIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.SetupTooltip
// 0x0038 (0x0038 - 0x0000)
struct BP_SkillTreeNode_V2_C_SetupTooltip final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InDescription;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         InCost;                                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_SetupTooltip) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_SetupTooltip");
static_assert(sizeof(BP_SkillTreeNode_V2_C_SetupTooltip) == 0x000038, "Wrong size on BP_SkillTreeNode_V2_C_SetupTooltip");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetupTooltip, InName) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_SetupTooltip::InName' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetupTooltip, InDescription) == 0x000018, "Member 'BP_SkillTreeNode_V2_C_SetupTooltip::InDescription' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetupTooltip, InCost) == 0x000030, "Member 'BP_SkillTreeNode_V2_C_SetupTooltip::InCost' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.UpdateTextures
// 0x0268 (0x0268 - 0x0000)
struct BP_SkillTreeNode_V2_C_UpdateTextures final
{
public:
	EManSkillTreeNodeType                         InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_1;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_6;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_2;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_9;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_3;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_4;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_5;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_11;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_12;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_13;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_6;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_14;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_15;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_16;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_7;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_8;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_7;                            // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_8;                            // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_9;                              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_16;                             // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_17;                            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_18;                            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_19;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_20;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_21;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_22;                            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_17;                             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_23;                            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_24;                            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_25;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_26;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_27;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_28;                            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterClass                               CallFunc_GetNodeRegion_ReturnValue;                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_18;                             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default_4;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AF[0x1];                                      // 0x01AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x01C0(0x0028)()
	struct FLinearColor                           K2Node_Select_Default_6;                           // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x01F8(0x0028)()
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_7;                           // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_8;                           // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_9;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_10;                          // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_11;                          // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_2;          // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_12;                          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_UpdateTextures) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_UpdateTextures");
static_assert(sizeof(BP_SkillTreeNode_V2_C_UpdateTextures) == 0x000268, "Wrong size on BP_SkillTreeNode_V2_C_UpdateTextures");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, InType) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::InType' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_object_Variable) == 0x000008, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_object_Variable_1) == 0x000010, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_object_Variable_2) == 0x000018, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_object_Variable_3) == 0x000020, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable) == 0x000028, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable) == 0x00002C, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_1) == 0x000030, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_2) == 0x000034, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_3) == 0x000038, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_4) == 0x00003C, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_5) == 0x000040, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_1) == 0x000044, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_6) == 0x000048, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_7) == 0x00004C, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_8) == 0x000050, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_2) == 0x000054, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_9) == 0x000058, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_10) == 0x00005C, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_3) == 0x000060, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_struct_Variable) == 0x000064, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_4) == 0x000074, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_struct_Variable_1) == 0x000078, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_struct_Variable_2) == 0x000088, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_5) == 0x000098, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_11) == 0x00009C, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_12) == 0x0000A0, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_13) == 0x0000A4, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_6) == 0x0000A8, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_14) == 0x0000AC, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_15) == 0x0000B0, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_16) == 0x0000B4, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_7) == 0x0000B8, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_object_Variable_4) == 0x0000C0, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_8) == 0x0000C8, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_struct_Variable_3) == 0x0000CC, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_struct_Variable_4) == 0x0000D4, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_struct_Variable_5) == 0x0000DC, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_struct_Variable_6) == 0x0000E4, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_struct_Variable_7) == 0x0000EC, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_struct_Variable_8) == 0x0000F4, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_9) == 0x0000FC, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_10) == 0x0000FD, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_11) == 0x0000FE, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_12) == 0x0000FF, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_13) == 0x000100, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_14) == 0x000101, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_15) == 0x000102, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_16) == 0x000103, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_17) == 0x000104, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_18) == 0x000108, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_19) == 0x00010C, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_20) == 0x000110, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_21) == 0x000114, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_22) == 0x000118, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_17) == 0x00011C, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_23) == 0x000120, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_24) == 0x000124, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_25) == 0x000128, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_26) == 0x00012C, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_27) == 0x000130, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_float_Variable_28) == 0x000134, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_float_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000138, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default) == 0x000140, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_MakeStruct_Margin) == 0x000144, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000158, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default_1) == 0x000160, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default_2) == 0x000164, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default_3) == 0x000168, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_GetNodeRegion_ReturnValue) == 0x00016C, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_GetNodeRegion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_SwitchEnum_CmpSuccess) == 0x00016D, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_MakeStruct_Margin_1) == 0x000170, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000180, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_object_Variable_5) == 0x000188, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_object_Variable_6) == 0x000190, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, Temp_byte_Variable_18) == 0x000198, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default_4) == 0x0001A0, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001A8, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001A9, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0001AA, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_BooleanOR_ReturnValue) == 0x0001AB, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0001AC, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0001AD, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_BooleanOR_ReturnValue_1) == 0x0001AE, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default_5) == 0x0001B0, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_MakeStruct_SlateColor) == 0x0001C0, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default_6) == 0x0001E8, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_MakeStruct_SlateColor_1) == 0x0001F8, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000220, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default_7) == 0x000228, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default_8) == 0x00022C, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default_9) == 0x000230, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default_10) == 0x000238, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default_11) == 0x00023C, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_MakeStruct_Margin_2) == 0x000240, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_SlotAsOverlaySlot_ReturnValue_2) == 0x000250, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_SlotAsOverlaySlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, K2Node_Select_Default_12) == 0x000258, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_UpdateTextures, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000260, "Member 'BP_SkillTreeNode_V2_C_UpdateTextures::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.Set Upgrades
// 0x0060 (0x0060 - 0x0000)
struct BP_SkillTreeNode_V2_C_Set_Upgrades final
{
public:
	TArray<EAttribute>                            InUnlockedAttributes;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 K2Node_DynamicCast_AsImage;                        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_Set_Upgrades) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_Set_Upgrades");
static_assert(sizeof(BP_SkillTreeNode_V2_C_Set_Upgrades) == 0x000060, "Wrong size on BP_SkillTreeNode_V2_C_Set_Upgrades");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, InUnlockedAttributes) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::InUnlockedAttributes' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, Temp_bool_Variable) == 0x000010, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, Temp_byte_Variable) == 0x000011, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, Temp_byte_Variable_1) == 0x000012, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, CallFunc_GetAllChildren_ReturnValue) == 0x000028, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, K2Node_DynamicCast_AsImage) == 0x000048, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::K2Node_DynamicCast_AsImage' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, K2Node_Select_Default) == 0x000051, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_Set_Upgrades, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_SkillTreeNode_V2_C_Set_Upgrades::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.SetHereticTextures
// 0x0140 (0x0140 - 0x0000)
struct BP_SkillTreeNode_V2_C_SetHereticTextures final
{
public:
	EManSkillTreeNodeType                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_10;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_11;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_2;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_16;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_17;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_3;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_18;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_19;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_20;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_21;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_22;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_23;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_4;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_24;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_25;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_26;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_27;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_28;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_29;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_Select_Default;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_SetHereticTextures) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_SetHereticTextures");
static_assert(sizeof(BP_SkillTreeNode_V2_C_SetHereticTextures) == 0x000140, "Wrong size on BP_SkillTreeNode_V2_C_SetHereticTextures");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_byte_Variable) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable) == 0x000008, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_1) == 0x000010, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_2) == 0x000018, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_3) == 0x000020, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_4) == 0x000028, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_5) == 0x000030, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_byte_Variable_1) == 0x000038, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_6) == 0x000040, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_7) == 0x000048, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_8) == 0x000050, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_9) == 0x000058, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_10) == 0x000060, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_11) == 0x000068, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_byte_Variable_2) == 0x000070, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_12) == 0x000078, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_13) == 0x000080, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_14) == 0x000088, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_15) == 0x000090, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_16) == 0x000098, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_17) == 0x0000A0, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_byte_Variable_3) == 0x0000A8, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_18) == 0x0000B0, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_19) == 0x0000B8, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_20) == 0x0000C0, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_21) == 0x0000C8, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_22) == 0x0000D0, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_23) == 0x0000D8, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_byte_Variable_4) == 0x0000E0, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_24) == 0x0000E8, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_25) == 0x0000F0, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_26) == 0x0000F8, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_27) == 0x000100, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_28) == 0x000108, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, Temp_object_Variable_29) == 0x000110, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, K2Node_Select_Default) == 0x000118, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, K2Node_Select_Default_1) == 0x000120, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, K2Node_Select_Default_2) == 0x000128, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, K2Node_Select_Default_3) == 0x000130, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetHereticTextures, K2Node_Select_Default_4) == 0x000138, "Member 'BP_SkillTreeNode_V2_C_SetHereticTextures::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.SetArmsmanTextures
// 0x0140 (0x0140 - 0x0000)
struct BP_SkillTreeNode_V2_C_SetArmsmanTextures final
{
public:
	EManSkillTreeNodeType                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_10;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_11;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_2;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_16;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_17;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_3;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_18;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_19;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_20;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_21;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_22;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_23;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_4;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_24;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_25;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_26;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_27;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_28;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_29;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_Select_Default;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_SetArmsmanTextures) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_SetArmsmanTextures");
static_assert(sizeof(BP_SkillTreeNode_V2_C_SetArmsmanTextures) == 0x000140, "Wrong size on BP_SkillTreeNode_V2_C_SetArmsmanTextures");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_byte_Variable) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable) == 0x000008, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_1) == 0x000010, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_2) == 0x000018, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_3) == 0x000020, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_4) == 0x000028, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_5) == 0x000030, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_byte_Variable_1) == 0x000038, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_6) == 0x000040, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_7) == 0x000048, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_8) == 0x000050, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_9) == 0x000058, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_10) == 0x000060, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_11) == 0x000068, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_byte_Variable_2) == 0x000070, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_12) == 0x000078, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_13) == 0x000080, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_14) == 0x000088, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_15) == 0x000090, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_16) == 0x000098, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_17) == 0x0000A0, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_byte_Variable_3) == 0x0000A8, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_18) == 0x0000B0, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_19) == 0x0000B8, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_20) == 0x0000C0, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_21) == 0x0000C8, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_22) == 0x0000D0, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_23) == 0x0000D8, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_byte_Variable_4) == 0x0000E0, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_24) == 0x0000E8, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_25) == 0x0000F0, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_26) == 0x0000F8, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_27) == 0x000100, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_28) == 0x000108, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, Temp_object_Variable_29) == 0x000110, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, K2Node_Select_Default) == 0x000118, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, K2Node_Select_Default_1) == 0x000120, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, K2Node_Select_Default_2) == 0x000128, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, K2Node_Select_Default_3) == 0x000130, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetArmsmanTextures, K2Node_Select_Default_4) == 0x000138, "Member 'BP_SkillTreeNode_V2_C_SetArmsmanTextures::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.SetCharlatanTextures
// 0x0140 (0x0140 - 0x0000)
struct BP_SkillTreeNode_V2_C_SetCharlatanTextures final
{
public:
	EManSkillTreeNodeType                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_10;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_11;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_2;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_16;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_17;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_3;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_18;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_19;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_20;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_21;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_22;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_23;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_4;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_24;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_25;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_26;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_27;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_28;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_29;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_Select_Default;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_SetCharlatanTextures) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_SetCharlatanTextures");
static_assert(sizeof(BP_SkillTreeNode_V2_C_SetCharlatanTextures) == 0x000140, "Wrong size on BP_SkillTreeNode_V2_C_SetCharlatanTextures");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_byte_Variable) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable) == 0x000008, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_1) == 0x000010, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_2) == 0x000018, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_3) == 0x000020, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_4) == 0x000028, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_5) == 0x000030, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_byte_Variable_1) == 0x000038, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_6) == 0x000040, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_7) == 0x000048, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_8) == 0x000050, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_9) == 0x000058, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_10) == 0x000060, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_11) == 0x000068, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_byte_Variable_2) == 0x000070, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_12) == 0x000078, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_13) == 0x000080, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_14) == 0x000088, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_15) == 0x000090, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_16) == 0x000098, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_17) == 0x0000A0, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_byte_Variable_3) == 0x0000A8, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_18) == 0x0000B0, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_19) == 0x0000B8, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_20) == 0x0000C0, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_21) == 0x0000C8, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_22) == 0x0000D0, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_23) == 0x0000D8, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_byte_Variable_4) == 0x0000E0, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_24) == 0x0000E8, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_25) == 0x0000F0, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_26) == 0x0000F8, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_27) == 0x000100, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_28) == 0x000108, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, Temp_object_Variable_29) == 0x000110, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, K2Node_Select_Default) == 0x000118, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, K2Node_Select_Default_1) == 0x000120, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, K2Node_Select_Default_2) == 0x000128, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, K2Node_Select_Default_3) == 0x000130, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetCharlatanTextures, K2Node_Select_Default_4) == 0x000138, "Member 'BP_SkillTreeNode_V2_C_SetCharlatanTextures::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.SetLarcenistTextures
// 0x0140 (0x0140 - 0x0000)
struct BP_SkillTreeNode_V2_C_SetLarcenistTextures final
{
public:
	EManSkillTreeNodeType                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_10;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_11;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_2;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_16;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_17;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_3;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_18;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_19;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_20;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_21;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_22;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_23;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_4;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_24;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_25;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_26;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_27;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_28;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_29;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_Select_Default;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_SetLarcenistTextures) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_SetLarcenistTextures");
static_assert(sizeof(BP_SkillTreeNode_V2_C_SetLarcenistTextures) == 0x000140, "Wrong size on BP_SkillTreeNode_V2_C_SetLarcenistTextures");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_byte_Variable) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable) == 0x000008, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_1) == 0x000010, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_2) == 0x000018, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_3) == 0x000020, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_4) == 0x000028, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_5) == 0x000030, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_byte_Variable_1) == 0x000038, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_6) == 0x000040, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_7) == 0x000048, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_8) == 0x000050, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_9) == 0x000058, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_10) == 0x000060, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_11) == 0x000068, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_byte_Variable_2) == 0x000070, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_12) == 0x000078, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_13) == 0x000080, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_14) == 0x000088, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_15) == 0x000090, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_16) == 0x000098, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_17) == 0x0000A0, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_byte_Variable_3) == 0x0000A8, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_18) == 0x0000B0, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_19) == 0x0000B8, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_20) == 0x0000C0, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_21) == 0x0000C8, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_22) == 0x0000D0, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_23) == 0x0000D8, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_byte_Variable_4) == 0x0000E0, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_24) == 0x0000E8, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_25) == 0x0000F0, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_26) == 0x0000F8, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_27) == 0x000100, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_28) == 0x000108, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, Temp_object_Variable_29) == 0x000110, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, K2Node_Select_Default) == 0x000118, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, K2Node_Select_Default_1) == 0x000120, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, K2Node_Select_Default_2) == 0x000128, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, K2Node_Select_Default_3) == 0x000130, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLarcenistTextures, K2Node_Select_Default_4) == 0x000138, "Member 'BP_SkillTreeNode_V2_C_SetLarcenistTextures::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.SetWardenTextures
// 0x0140 (0x0140 - 0x0000)
struct BP_SkillTreeNode_V2_C_SetWardenTextures final
{
public:
	EManSkillTreeNodeType                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_10;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_11;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_2;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_16;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_17;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_3;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_18;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_19;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_20;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_21;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_22;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_23;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_4;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_24;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_25;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_26;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_27;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_28;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_29;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_Select_Default;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_SetWardenTextures) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_SetWardenTextures");
static_assert(sizeof(BP_SkillTreeNode_V2_C_SetWardenTextures) == 0x000140, "Wrong size on BP_SkillTreeNode_V2_C_SetWardenTextures");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_byte_Variable) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable) == 0x000008, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_1) == 0x000010, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_2) == 0x000018, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_3) == 0x000020, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_4) == 0x000028, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_5) == 0x000030, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_byte_Variable_1) == 0x000038, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_6) == 0x000040, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_7) == 0x000048, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_8) == 0x000050, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_9) == 0x000058, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_10) == 0x000060, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_11) == 0x000068, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_byte_Variable_2) == 0x000070, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_12) == 0x000078, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_13) == 0x000080, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_14) == 0x000088, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_15) == 0x000090, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_16) == 0x000098, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_17) == 0x0000A0, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_byte_Variable_3) == 0x0000A8, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_18) == 0x0000B0, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_19) == 0x0000B8, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_20) == 0x0000C0, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_21) == 0x0000C8, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_22) == 0x0000D0, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_23) == 0x0000D8, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_byte_Variable_4) == 0x0000E0, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_24) == 0x0000E8, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_25) == 0x0000F0, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_26) == 0x0000F8, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_27) == 0x000100, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_28) == 0x000108, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, Temp_object_Variable_29) == 0x000110, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, K2Node_Select_Default) == 0x000118, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, K2Node_Select_Default_1) == 0x000120, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, K2Node_Select_Default_2) == 0x000128, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, K2Node_Select_Default_3) == 0x000130, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetWardenTextures, K2Node_Select_Default_4) == 0x000138, "Member 'BP_SkillTreeNode_V2_C_SetWardenTextures::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.SetPriestTextures
// 0x0140 (0x0140 - 0x0000)
struct BP_SkillTreeNode_V2_C_SetPriestTextures final
{
public:
	EManSkillTreeNodeType                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_10;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_11;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_2;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_16;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_17;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_3;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_18;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_19;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_20;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_21;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_22;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_23;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_4;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_24;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_25;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_26;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_27;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_28;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_29;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_Select_Default;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_SetPriestTextures) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_SetPriestTextures");
static_assert(sizeof(BP_SkillTreeNode_V2_C_SetPriestTextures) == 0x000140, "Wrong size on BP_SkillTreeNode_V2_C_SetPriestTextures");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_byte_Variable) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable) == 0x000008, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_1) == 0x000010, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_2) == 0x000018, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_3) == 0x000020, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_4) == 0x000028, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_5) == 0x000030, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_byte_Variable_1) == 0x000038, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_6) == 0x000040, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_7) == 0x000048, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_8) == 0x000050, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_9) == 0x000058, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_10) == 0x000060, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_11) == 0x000068, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_byte_Variable_2) == 0x000070, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_12) == 0x000078, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_13) == 0x000080, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_14) == 0x000088, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_15) == 0x000090, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_16) == 0x000098, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_17) == 0x0000A0, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_byte_Variable_3) == 0x0000A8, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_18) == 0x0000B0, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_19) == 0x0000B8, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_20) == 0x0000C0, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_21) == 0x0000C8, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_22) == 0x0000D0, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_23) == 0x0000D8, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_byte_Variable_4) == 0x0000E0, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_24) == 0x0000E8, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_25) == 0x0000F0, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_26) == 0x0000F8, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_27) == 0x000100, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_28) == 0x000108, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, Temp_object_Variable_29) == 0x000110, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, K2Node_Select_Default) == 0x000118, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, K2Node_Select_Default_1) == 0x000120, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, K2Node_Select_Default_2) == 0x000128, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, K2Node_Select_Default_3) == 0x000130, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetPriestTextures, K2Node_Select_Default_4) == 0x000138, "Member 'BP_SkillTreeNode_V2_C_SetPriestTextures::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.SetLocked
// 0x0005 (0x0005 - 0x0000)
struct BP_SkillTreeNode_V2_C_SetLocked final
{
public:
	bool                                          InIsLocked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_SetLocked) == 0x000001, "Wrong alignment on BP_SkillTreeNode_V2_C_SetLocked");
static_assert(sizeof(BP_SkillTreeNode_V2_C_SetLocked) == 0x000005, "Wrong size on BP_SkillTreeNode_V2_C_SetLocked");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLocked, InIsLocked) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_SetLocked::InIsLocked' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLocked, Temp_bool_Variable) == 0x000001, "Member 'BP_SkillTreeNode_V2_C_SetLocked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLocked, Temp_byte_Variable) == 0x000002, "Member 'BP_SkillTreeNode_V2_C_SetLocked::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLocked, Temp_byte_Variable_1) == 0x000003, "Member 'BP_SkillTreeNode_V2_C_SetLocked::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillTreeNode_V2_C_SetLocked, K2Node_Select_Default) == 0x000004, "Member 'BP_SkillTreeNode_V2_C_SetLocked::K2Node_Select_Default' has a wrong offset!");

// Function BP_SkillTreeNode_V2.BP_SkillTreeNode_V2_C.PlayBreakLockAnim
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillTreeNode_V2_C_PlayBreakLockAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillTreeNode_V2_C_PlayBreakLockAnim) == 0x000008, "Wrong alignment on BP_SkillTreeNode_V2_C_PlayBreakLockAnim");
static_assert(sizeof(BP_SkillTreeNode_V2_C_PlayBreakLockAnim) == 0x000008, "Wrong size on BP_SkillTreeNode_V2_C_PlayBreakLockAnim");
static_assert(offsetof(BP_SkillTreeNode_V2_C_PlayBreakLockAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_SkillTreeNode_V2_C_PlayBreakLockAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

