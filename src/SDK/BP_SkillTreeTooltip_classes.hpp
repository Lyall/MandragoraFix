#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillTreeTooltip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_SkillTreeTooltip.BP_SkillTreeTooltip_C
// 0x0060 (0x02C0 - 0x0260)
class UBP_SkillTreeTooltip_C final : public USkillTreeTooltipUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ErrorAnim;                                         // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Frame;                                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header;                                            // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Cost;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      Text_Description;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Name;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Warning;                                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             WarningText;                                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsSmallScreen;                                     // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_SkillTreeTooltip(int32 EntryPoint);
	void OnSetup(ESkillTreeNodeState SkillTreeNodeState, const class FText& Name_0, const class FText& Description, const class FText& CostText, const class FText& WarningText_0, ECharacterClass NodeRegion);
	void PreConstruct(bool IsDesignTime);
	void FadeOut();
	void FadeIn();
	void Setup(ESkillTreeNodeState InSkillTreeNodeState, const class FText& InName, const class FText& InDescription, const class FText& InCost, const class FText& InWarning, ECharacterClass InNodeRegion);
	void Set_State(ESkillTreeNodeState InState, ECharacterClass InNodeRegion);
	void ErrorHighlight();
	void ToggleSmallScreen(bool InIsSmallScreen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkillTreeTooltip_C">();
	}
	static class UBP_SkillTreeTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SkillTreeTooltip_C>();
	}
};
static_assert(alignof(UBP_SkillTreeTooltip_C) == 0x000008, "Wrong alignment on UBP_SkillTreeTooltip_C");
static_assert(sizeof(UBP_SkillTreeTooltip_C) == 0x0002C0, "Wrong size on UBP_SkillTreeTooltip_C");
static_assert(offsetof(UBP_SkillTreeTooltip_C, UberGraphFrame) == 0x000260, "Member 'UBP_SkillTreeTooltip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeTooltip_C, ErrorAnim) == 0x000268, "Member 'UBP_SkillTreeTooltip_C::ErrorAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeTooltip_C, FadeInAnim) == 0x000270, "Member 'UBP_SkillTreeTooltip_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeTooltip_C, Frame) == 0x000278, "Member 'UBP_SkillTreeTooltip_C::Frame' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeTooltip_C, Header) == 0x000280, "Member 'UBP_SkillTreeTooltip_C::Header' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeTooltip_C, SizeBox_0) == 0x000288, "Member 'UBP_SkillTreeTooltip_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeTooltip_C, Text_Cost) == 0x000290, "Member 'UBP_SkillTreeTooltip_C::Text_Cost' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeTooltip_C, Text_Description) == 0x000298, "Member 'UBP_SkillTreeTooltip_C::Text_Description' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeTooltip_C, Text_Name) == 0x0002A0, "Member 'UBP_SkillTreeTooltip_C::Text_Name' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeTooltip_C, Warning) == 0x0002A8, "Member 'UBP_SkillTreeTooltip_C::Warning' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeTooltip_C, WarningText) == 0x0002B0, "Member 'UBP_SkillTreeTooltip_C::WarningText' has a wrong offset!");
static_assert(offsetof(UBP_SkillTreeTooltip_C, IsSmallScreen) == 0x0002B8, "Member 'UBP_SkillTreeTooltip_C::IsSmallScreen' has a wrong offset!");

}

