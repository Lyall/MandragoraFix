#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillTree_SelectorNode

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_SkillTree_SelectorNode.BP_SkillTree_SelectorNode_C
// 0x0098 (0x0378 - 0x02E0)
class UBP_SkillTree_SelectorNode_C final : public USkillTreeSelectorNodeUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       LearnProgressAnim;                                 // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ChangeIconAnim;                                    // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LearnEndAnim;                                      // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Bg;                                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame;                                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HoldVFX_1;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HoldVFX_2;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconImage;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_32;                                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnlockVFX;                                         // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnlockVFX_1;                                       // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnlockVFX_2;                                       // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnlockVFX_3;                                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnlockVFX_4;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnlockVFX_5;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnlockVFX_6;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             IconTexture;                                       // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SkillTree_SelectorNode(int32 EntryPoint);
	void OnLearnStop();
	void OnLearnStart();
	void OnPlayUnlockVFX(bool bAnimate);
	void OnSetSelectorNode(ESkillTreeNodeState InSkillTreeNodeState, ECharacterClass InCharacterClass, class UTexture2D* InNodeIcon);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void SetIcon(class UTexture2D* InIcon);
	void Setup(ESkillTreeNodeState InState, ECharacterClass InClass);
	void PlayUnlockVFX(bool Animate);
	void PlayUnlockVFXFinished();
	void SetHereticTextures();
	void SetArmsmanTextures();
	void SetCharlatanTextures();
	void SetLarcenistTextures();
	void SetWardenTextures();
	void SetPriestTextures();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkillTree_SelectorNode_C">();
	}
	static class UBP_SkillTree_SelectorNode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SkillTree_SelectorNode_C>();
	}
};
static_assert(alignof(UBP_SkillTree_SelectorNode_C) == 0x000008, "Wrong alignment on UBP_SkillTree_SelectorNode_C");
static_assert(sizeof(UBP_SkillTree_SelectorNode_C) == 0x000378, "Wrong size on UBP_SkillTree_SelectorNode_C");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, UberGraphFrame) == 0x0002E0, "Member 'UBP_SkillTree_SelectorNode_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, LearnProgressAnim) == 0x0002E8, "Member 'UBP_SkillTree_SelectorNode_C::LearnProgressAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, ChangeIconAnim) == 0x0002F0, "Member 'UBP_SkillTree_SelectorNode_C::ChangeIconAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, LearnEndAnim) == 0x0002F8, "Member 'UBP_SkillTree_SelectorNode_C::LearnEndAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, Bg) == 0x000300, "Member 'UBP_SkillTree_SelectorNode_C::Bg' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, CanvasPanel_0) == 0x000308, "Member 'UBP_SkillTree_SelectorNode_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, Frame) == 0x000310, "Member 'UBP_SkillTree_SelectorNode_C::Frame' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, HoldVFX_1) == 0x000318, "Member 'UBP_SkillTree_SelectorNode_C::HoldVFX_1' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, HoldVFX_2) == 0x000320, "Member 'UBP_SkillTree_SelectorNode_C::HoldVFX_2' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, IconImage) == 0x000328, "Member 'UBP_SkillTree_SelectorNode_C::IconImage' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, Overlay_32) == 0x000330, "Member 'UBP_SkillTree_SelectorNode_C::Overlay_32' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, UnlockVFX) == 0x000338, "Member 'UBP_SkillTree_SelectorNode_C::UnlockVFX' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, UnlockVFX_1) == 0x000340, "Member 'UBP_SkillTree_SelectorNode_C::UnlockVFX_1' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, UnlockVFX_2) == 0x000348, "Member 'UBP_SkillTree_SelectorNode_C::UnlockVFX_2' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, UnlockVFX_3) == 0x000350, "Member 'UBP_SkillTree_SelectorNode_C::UnlockVFX_3' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, UnlockVFX_4) == 0x000358, "Member 'UBP_SkillTree_SelectorNode_C::UnlockVFX_4' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, UnlockVFX_5) == 0x000360, "Member 'UBP_SkillTree_SelectorNode_C::UnlockVFX_5' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, UnlockVFX_6) == 0x000368, "Member 'UBP_SkillTree_SelectorNode_C::UnlockVFX_6' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_SelectorNode_C, IconTexture) == 0x000370, "Member 'UBP_SkillTree_SelectorNode_C::IconTexture' has a wrong offset!");

}

