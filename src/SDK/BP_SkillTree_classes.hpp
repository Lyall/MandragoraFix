#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillTree

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"
#include "AkAudio_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_SkillTree.BP_SkillTree_C
// 0x03D0 (0x09D8 - 0x0608)
class UBP_SkillTree_C final : public USkillTreeUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0608(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SelectorAllUnlockedAnim;                           // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SelectorBonusUnlockedAnim;                         // 0x0618(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowSelectorAnim;                                  // 0x0620(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BlurSkillTreeAnim;                                 // 0x0628(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOutAnim;                                       // 0x0630(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x0638(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 AllUnlockedVFX;                                    // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Arrows;                                            // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Armor;                                   // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Bleed;                                   // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Bleed_StatusEffect;                      // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Burn_StatusEffect;                       // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_CarryWeight_C*   Attribute_CarryWeight;                             // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_CCEffectReduction;                       // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_ComboPoints;                             // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Constitution;                            // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_CriticalChance;                          // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_CriticalDamage;                          // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Defense;                                 // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Dexterity;                               // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Endurance;                               // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Energy;                                  // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Essence;                                 // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_EssenceRequired;                         // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Attribute_EssenceRequiredText;                     // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_FallDamageReduction;                     // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Fire;                                    // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Frost;                                   // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Hitpoint;                                // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Knowledge;                               // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Lightbrand_StatusEffect;                 // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Physical;                                // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Poise;                                   // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Poison;                                  // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Poison_StatusEffect;                     // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Power;                                   // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Rage;                                    // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Recovery;                                // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Root_StatusEffect;                       // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillPointsSlot_V2_C*               Attribute_SkillPoints;                             // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_SpellCriticalChance;                     // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_SpellPower;                              // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Spirit;                                  // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_SpiritForce;                             // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Stagger;                                 // 0x0770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Stamina;                                 // 0x0778(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_StaminaRegeneration;                     // 0x0780(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Strength;                                // 0x0788(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Void;                                    // 0x0790(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Weakness_StatusEffect;                   // 0x0798(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_WeaponDamage;                            // 0x07A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AttributeSlotSmall_V2_C*            Attribute_Wild;                                    // 0x07A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                AttributeNodesBg;                                  // 0x07B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Attributes;                                        // 0x07B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_SelectableSelectorNode_C* AttributeSelectorNode0;                            // 0x07C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_SelectableSelectorNode_C* AttributeSelectorNode1;                            // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_SelectableSelectorNode_C* AttributeSelectorNode2;                            // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_SelectableSelectorNode_C* AttributeSelectorNode3;                            // 0x07D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_0;                                  // 0x07E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      BonusText;                                         // 0x07E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BonusUnlockedVFX;                                  // 0x07F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BottomScreenFrame;                                 // 0x07F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_Tree_Armsman_C*           BP_SkillTree_Tree_Armsman;                         // 0x0800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_Tree_Charlatan_C*         BP_SkillTree_Tree_Charlatan;                       // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_Tree_Heretic_C*           BP_SkillTree_Tree_Heretic;                         // 0x0810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_Tree_Larcenist_C*         BP_SkillTree_Tree_Larcenist;                       // 0x0818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_Tree_Priest_C*            BP_SkillTree_Tree_Priest;                          // 0x0820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_Tree_Warden_C*            BP_SkillTree_Tree_Warden;                          // 0x0828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTreeTooltip_C*                 BP_SkillTreeTooltip;                               // 0x0830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyA;                                        // 0x0838(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyB;                                        // 0x0840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyHoldA;                                    // 0x0848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyLS;                                       // 0x0850(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyLT;                                       // 0x0858(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyRT;                                       // 0x0860(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnNextTab;                                        // 0x0868(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnPreviousTab;                                    // 0x0870(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Class_0;                                           // 0x0878(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Classes;                                           // 0x0880(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Classes_SizeBox;                                   // 0x0888(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_ClassIcon_C*              ClassIcon_Armsman;                                 // 0x0890(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_ClassIcon_C*              ClassIcon_Charlatan;                               // 0x0898(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_ClassIcon_C*              ClassIcon_Heretic;                                 // 0x08A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_ClassIcon_C*              ClassIcon_Larcenist;                               // 0x08A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_ClassIcon_C*              ClassIcon_Priest;                                  // 0x08B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_ClassIcon_C*              ClassIcon_Warden;                                  // 0x08B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         classIcons;                                        // 0x08C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ClassName;                                         // 0x08C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Defense;                                           // 0x08D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      FullUnlockBonusText;                               // 0x08D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x08E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_39;                                          // 0x08E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label_CharacterLevel;                              // 0x08F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LoopTimerPlaceholder;                              // 0x08F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ModalDarkening;                                    // 0x0900(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_SelectorNode_C*           NodeSelection0;                                    // 0x0908(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_SelectorNode_C*           NodeSelection1;                                    // 0x0910(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTree_SelectorNode_C*           NodeSelection2;                                    // 0x0918(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NotAvailableInDemo;                                // 0x0920(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Offense;                                           // 0x0928(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Resistences;                                       // 0x0930(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Resources;                                         // 0x0938(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ScreenBg2;                                         // 0x0940(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ScreenBg2_1;                                       // 0x0948(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SkillPoints;                                       // 0x0950(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBackgroundBlur*                        SkillTreeBlur;                                     // 0x0958(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                StatusEffects;                                     // 0x0960(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Attributes;                                    // 0x0968(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Character;                                     // 0x0970(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Inventory;                                     // 0x0978(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_LevelUp;                                       // 0x0980(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Map;                                           // 0x0988(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Quests;                                        // 0x0990(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Retalent;                                      // 0x0998(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Skills;                                        // 0x09A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_SkillUpgrade;                                  // 0x09A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_WitchLantern;                                  // 0x09B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Tabs;                                              // 0x09B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TopScreenFrame;                                    // 0x09C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USkillTreeNodeUserWidget*               FocusedNode;                                       // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     AnimLoop;                                          // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SkillTree(int32 EntryPoint);
	void OnSetCharacterClassName(const class FText& CharacterClassName);
	void OnCultureChanged();
	void OnErrorHiglight(class UInteractButtonUserWidget* InteractButtonUserWidget);
	void BndEvt__BP_WitchLantern_Tab_SkillUpgrade_1_K2Node_ComponentBoundEvent_22_OnClicked__DelegateSignature();
	void BndEvt__BP_WitchLantern_Tab_Retalent_1_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature();
	void OnIngameMenuEvent();
	void BndEvt__BP_ActiveAbilitiesWindow_v3_BtnHotkeyRT_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void BndEvt__BP_ActiveAbilitiesWindow_v3_BtnHotkeyLT_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void OnSetAttributeSelector(const class FText& BonusText_0, bool bPlayBonusUnlockedAnim, bool bAllUnlocked);
	void BndEvt__BP_SkillTree_Tab_Map_1_K2Node_ComponentBoundEvent_25_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_Tab_Quests_1_K2Node_ComponentBoundEvent_24_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_Tab_WitchLantern_1_K2Node_ComponentBoundEvent_23_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_Tab_Skills_1_K2Node_ComponentBoundEvent_22_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_Tab_Attributes_1_K2Node_ComponentBoundEvent_21_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_Tab_Inventory_1_K2Node_ComponentBoundEvent_20_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_Tab_Character_1_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_Tab_LevelUp_1_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature();
	void OnHideAttributeSelector(bool bPlayAnim);
	void OnShowAttributeSelector(int32 NodeNum);
	void OnGamepadAEvent();
	void BndEvt__BP_SkillTree_BtnHotkeyA_K2Node_ComponentBoundEvent_13_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_ClassIcon_Warden_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_ClassIcon_Priest_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_ClassIcon_Armsman_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_ClassIcon_Heretic_K2Node_ComponentBoundEvent_12_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_ClassIcon_Charlatan_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature();
	void BndEvt__BP_SkillTree_ClassIcon_Larcenist_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnShowPanel(float InAnimDuration, const class FText& CharacterClassName, class USkillTreeClassUserWidget* InCurrentSkillTreeClass, class USkillTreeClassUserWidget* InNextSkillTreeClass, class USkillTreeClassUserWidget* InPrevSkillTreeClass);
	void OnSetTooltipPosition(ESkillTreeTooltipPosition TooltipPosition);
	void OnGamepadRTEvent();
	void OnGamepadLTEvent();
	void BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature();
	void BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature();
	void OnInit();
	void OnGamepadRBEvent();
	void OnGamepadLBEvent();
	void OnHide(float AnimDuration);
	void OnShow(float AnimDuration);
	void BndEvt__BtnHotkeyB_1_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature();
	void OnPropertyChanged(EHeroProperty PropertyType, float Value, float RoundedFloatValue, int32 RoundedIntValue, bool bAnimate);
	void OnGamepadBEvent();
	void BtnHotkeyBClicked(bool OpenPauseMenu);
	void BP_PropertyChanged(EHeroProperty PropertyType, float Value, float RoundedFloatValue, int32 RoundedIntValue, bool Animate);
	void BlurSkillTree();
	void UnblurSkillTree();
	void UpdateClassIcons(ECharacterClass InSelectedClass);
	void BtnHotkeyAClicked();
	void SetAttributeSelectorSize(int32 InNodes);
	void PlaySelectorBonusUnlockedVFX();
	void PlayHideAttributeSelectorAnim(bool PlayAnim);
	void ToggleAllUnlockedVFX(bool IsUnlocked);
	void SetSelectorState(bool AllUnlocked);
	void ErrorHighlight();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkillTree_C">();
	}
	static class UBP_SkillTree_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SkillTree_C>();
	}
};
static_assert(alignof(UBP_SkillTree_C) == 0x000008, "Wrong alignment on UBP_SkillTree_C");
static_assert(sizeof(UBP_SkillTree_C) == 0x0009D8, "Wrong size on UBP_SkillTree_C");
static_assert(offsetof(UBP_SkillTree_C, UberGraphFrame) == 0x000608, "Member 'UBP_SkillTree_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, SelectorAllUnlockedAnim) == 0x000610, "Member 'UBP_SkillTree_C::SelectorAllUnlockedAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, SelectorBonusUnlockedAnim) == 0x000618, "Member 'UBP_SkillTree_C::SelectorBonusUnlockedAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, ShowSelectorAnim) == 0x000620, "Member 'UBP_SkillTree_C::ShowSelectorAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BlurSkillTreeAnim) == 0x000628, "Member 'UBP_SkillTree_C::BlurSkillTreeAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, FadeOutAnim) == 0x000630, "Member 'UBP_SkillTree_C::FadeOutAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, FadeInAnim) == 0x000638, "Member 'UBP_SkillTree_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, AllUnlockedVFX) == 0x000640, "Member 'UBP_SkillTree_C::AllUnlockedVFX' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Arrows) == 0x000648, "Member 'UBP_SkillTree_C::Arrows' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Armor) == 0x000650, "Member 'UBP_SkillTree_C::Attribute_Armor' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Bleed) == 0x000658, "Member 'UBP_SkillTree_C::Attribute_Bleed' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Bleed_StatusEffect) == 0x000660, "Member 'UBP_SkillTree_C::Attribute_Bleed_StatusEffect' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Burn_StatusEffect) == 0x000668, "Member 'UBP_SkillTree_C::Attribute_Burn_StatusEffect' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_CarryWeight) == 0x000670, "Member 'UBP_SkillTree_C::Attribute_CarryWeight' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_CCEffectReduction) == 0x000678, "Member 'UBP_SkillTree_C::Attribute_CCEffectReduction' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_ComboPoints) == 0x000680, "Member 'UBP_SkillTree_C::Attribute_ComboPoints' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Constitution) == 0x000688, "Member 'UBP_SkillTree_C::Attribute_Constitution' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_CriticalChance) == 0x000690, "Member 'UBP_SkillTree_C::Attribute_CriticalChance' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_CriticalDamage) == 0x000698, "Member 'UBP_SkillTree_C::Attribute_CriticalDamage' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Defense) == 0x0006A0, "Member 'UBP_SkillTree_C::Attribute_Defense' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Dexterity) == 0x0006A8, "Member 'UBP_SkillTree_C::Attribute_Dexterity' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Endurance) == 0x0006B0, "Member 'UBP_SkillTree_C::Attribute_Endurance' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Energy) == 0x0006B8, "Member 'UBP_SkillTree_C::Attribute_Energy' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Essence) == 0x0006C0, "Member 'UBP_SkillTree_C::Attribute_Essence' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_EssenceRequired) == 0x0006C8, "Member 'UBP_SkillTree_C::Attribute_EssenceRequired' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_EssenceRequiredText) == 0x0006D0, "Member 'UBP_SkillTree_C::Attribute_EssenceRequiredText' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_FallDamageReduction) == 0x0006D8, "Member 'UBP_SkillTree_C::Attribute_FallDamageReduction' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Fire) == 0x0006E0, "Member 'UBP_SkillTree_C::Attribute_Fire' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Frost) == 0x0006E8, "Member 'UBP_SkillTree_C::Attribute_Frost' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Hitpoint) == 0x0006F0, "Member 'UBP_SkillTree_C::Attribute_Hitpoint' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Knowledge) == 0x0006F8, "Member 'UBP_SkillTree_C::Attribute_Knowledge' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Lightbrand_StatusEffect) == 0x000700, "Member 'UBP_SkillTree_C::Attribute_Lightbrand_StatusEffect' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Physical) == 0x000708, "Member 'UBP_SkillTree_C::Attribute_Physical' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Poise) == 0x000710, "Member 'UBP_SkillTree_C::Attribute_Poise' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Poison) == 0x000718, "Member 'UBP_SkillTree_C::Attribute_Poison' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Poison_StatusEffect) == 0x000720, "Member 'UBP_SkillTree_C::Attribute_Poison_StatusEffect' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Power) == 0x000728, "Member 'UBP_SkillTree_C::Attribute_Power' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Rage) == 0x000730, "Member 'UBP_SkillTree_C::Attribute_Rage' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Recovery) == 0x000738, "Member 'UBP_SkillTree_C::Attribute_Recovery' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Root_StatusEffect) == 0x000740, "Member 'UBP_SkillTree_C::Attribute_Root_StatusEffect' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_SkillPoints) == 0x000748, "Member 'UBP_SkillTree_C::Attribute_SkillPoints' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_SpellCriticalChance) == 0x000750, "Member 'UBP_SkillTree_C::Attribute_SpellCriticalChance' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_SpellPower) == 0x000758, "Member 'UBP_SkillTree_C::Attribute_SpellPower' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Spirit) == 0x000760, "Member 'UBP_SkillTree_C::Attribute_Spirit' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_SpiritForce) == 0x000768, "Member 'UBP_SkillTree_C::Attribute_SpiritForce' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Stagger) == 0x000770, "Member 'UBP_SkillTree_C::Attribute_Stagger' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Stamina) == 0x000778, "Member 'UBP_SkillTree_C::Attribute_Stamina' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_StaminaRegeneration) == 0x000780, "Member 'UBP_SkillTree_C::Attribute_StaminaRegeneration' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Strength) == 0x000788, "Member 'UBP_SkillTree_C::Attribute_Strength' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Void) == 0x000790, "Member 'UBP_SkillTree_C::Attribute_Void' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Weakness_StatusEffect) == 0x000798, "Member 'UBP_SkillTree_C::Attribute_Weakness_StatusEffect' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_WeaponDamage) == 0x0007A0, "Member 'UBP_SkillTree_C::Attribute_WeaponDamage' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attribute_Wild) == 0x0007A8, "Member 'UBP_SkillTree_C::Attribute_Wild' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, AttributeNodesBg) == 0x0007B0, "Member 'UBP_SkillTree_C::AttributeNodesBg' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Attributes) == 0x0007B8, "Member 'UBP_SkillTree_C::Attributes' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, AttributeSelectorNode0) == 0x0007C0, "Member 'UBP_SkillTree_C::AttributeSelectorNode0' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, AttributeSelectorNode1) == 0x0007C8, "Member 'UBP_SkillTree_C::AttributeSelectorNode1' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, AttributeSelectorNode2) == 0x0007D0, "Member 'UBP_SkillTree_C::AttributeSelectorNode2' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, AttributeSelectorNode3) == 0x0007D8, "Member 'UBP_SkillTree_C::AttributeSelectorNode3' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BackgroundBlur_0) == 0x0007E0, "Member 'UBP_SkillTree_C::BackgroundBlur_0' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BonusText) == 0x0007E8, "Member 'UBP_SkillTree_C::BonusText' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BonusUnlockedVFX) == 0x0007F0, "Member 'UBP_SkillTree_C::BonusUnlockedVFX' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BottomScreenFrame) == 0x0007F8, "Member 'UBP_SkillTree_C::BottomScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BP_SkillTree_Tree_Armsman) == 0x000800, "Member 'UBP_SkillTree_C::BP_SkillTree_Tree_Armsman' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BP_SkillTree_Tree_Charlatan) == 0x000808, "Member 'UBP_SkillTree_C::BP_SkillTree_Tree_Charlatan' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BP_SkillTree_Tree_Heretic) == 0x000810, "Member 'UBP_SkillTree_C::BP_SkillTree_Tree_Heretic' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BP_SkillTree_Tree_Larcenist) == 0x000818, "Member 'UBP_SkillTree_C::BP_SkillTree_Tree_Larcenist' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BP_SkillTree_Tree_Priest) == 0x000820, "Member 'UBP_SkillTree_C::BP_SkillTree_Tree_Priest' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BP_SkillTree_Tree_Warden) == 0x000828, "Member 'UBP_SkillTree_C::BP_SkillTree_Tree_Warden' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BP_SkillTreeTooltip) == 0x000830, "Member 'UBP_SkillTree_C::BP_SkillTreeTooltip' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BtnHotkeyA) == 0x000838, "Member 'UBP_SkillTree_C::BtnHotkeyA' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BtnHotkeyB) == 0x000840, "Member 'UBP_SkillTree_C::BtnHotkeyB' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BtnHotkeyHoldA) == 0x000848, "Member 'UBP_SkillTree_C::BtnHotkeyHoldA' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BtnHotkeyLS) == 0x000850, "Member 'UBP_SkillTree_C::BtnHotkeyLS' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BtnHotkeyLT) == 0x000858, "Member 'UBP_SkillTree_C::BtnHotkeyLT' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BtnHotkeyRT) == 0x000860, "Member 'UBP_SkillTree_C::BtnHotkeyRT' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BtnNextTab) == 0x000868, "Member 'UBP_SkillTree_C::BtnNextTab' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, BtnPreviousTab) == 0x000870, "Member 'UBP_SkillTree_C::BtnPreviousTab' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Class_0) == 0x000878, "Member 'UBP_SkillTree_C::Class_0' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Classes) == 0x000880, "Member 'UBP_SkillTree_C::Classes' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Classes_SizeBox) == 0x000888, "Member 'UBP_SkillTree_C::Classes_SizeBox' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, ClassIcon_Armsman) == 0x000890, "Member 'UBP_SkillTree_C::ClassIcon_Armsman' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, ClassIcon_Charlatan) == 0x000898, "Member 'UBP_SkillTree_C::ClassIcon_Charlatan' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, ClassIcon_Heretic) == 0x0008A0, "Member 'UBP_SkillTree_C::ClassIcon_Heretic' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, ClassIcon_Larcenist) == 0x0008A8, "Member 'UBP_SkillTree_C::ClassIcon_Larcenist' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, ClassIcon_Priest) == 0x0008B0, "Member 'UBP_SkillTree_C::ClassIcon_Priest' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, ClassIcon_Warden) == 0x0008B8, "Member 'UBP_SkillTree_C::ClassIcon_Warden' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, classIcons) == 0x0008C0, "Member 'UBP_SkillTree_C::classIcons' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, ClassName) == 0x0008C8, "Member 'UBP_SkillTree_C::ClassName' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Defense) == 0x0008D0, "Member 'UBP_SkillTree_C::Defense' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, FullUnlockBonusText) == 0x0008D8, "Member 'UBP_SkillTree_C::FullUnlockBonusText' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Image) == 0x0008E0, "Member 'UBP_SkillTree_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Image_39) == 0x0008E8, "Member 'UBP_SkillTree_C::Image_39' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Label_CharacterLevel) == 0x0008F0, "Member 'UBP_SkillTree_C::Label_CharacterLevel' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, LoopTimerPlaceholder) == 0x0008F8, "Member 'UBP_SkillTree_C::LoopTimerPlaceholder' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, ModalDarkening) == 0x000900, "Member 'UBP_SkillTree_C::ModalDarkening' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, NodeSelection0) == 0x000908, "Member 'UBP_SkillTree_C::NodeSelection0' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, NodeSelection1) == 0x000910, "Member 'UBP_SkillTree_C::NodeSelection1' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, NodeSelection2) == 0x000918, "Member 'UBP_SkillTree_C::NodeSelection2' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, NotAvailableInDemo) == 0x000920, "Member 'UBP_SkillTree_C::NotAvailableInDemo' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Offense) == 0x000928, "Member 'UBP_SkillTree_C::Offense' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Resistences) == 0x000930, "Member 'UBP_SkillTree_C::Resistences' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Resources) == 0x000938, "Member 'UBP_SkillTree_C::Resources' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, ScreenBg2) == 0x000940, "Member 'UBP_SkillTree_C::ScreenBg2' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, ScreenBg2_1) == 0x000948, "Member 'UBP_SkillTree_C::ScreenBg2_1' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, SkillPoints) == 0x000950, "Member 'UBP_SkillTree_C::SkillPoints' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, SkillTreeBlur) == 0x000958, "Member 'UBP_SkillTree_C::SkillTreeBlur' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, StatusEffects) == 0x000960, "Member 'UBP_SkillTree_C::StatusEffects' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Tab_Attributes) == 0x000968, "Member 'UBP_SkillTree_C::Tab_Attributes' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Tab_Character) == 0x000970, "Member 'UBP_SkillTree_C::Tab_Character' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Tab_Inventory) == 0x000978, "Member 'UBP_SkillTree_C::Tab_Inventory' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Tab_LevelUp) == 0x000980, "Member 'UBP_SkillTree_C::Tab_LevelUp' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Tab_Map) == 0x000988, "Member 'UBP_SkillTree_C::Tab_Map' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Tab_Quests) == 0x000990, "Member 'UBP_SkillTree_C::Tab_Quests' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Tab_Retalent) == 0x000998, "Member 'UBP_SkillTree_C::Tab_Retalent' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Tab_Skills) == 0x0009A0, "Member 'UBP_SkillTree_C::Tab_Skills' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Tab_SkillUpgrade) == 0x0009A8, "Member 'UBP_SkillTree_C::Tab_SkillUpgrade' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Tab_WitchLantern) == 0x0009B0, "Member 'UBP_SkillTree_C::Tab_WitchLantern' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, Tabs) == 0x0009B8, "Member 'UBP_SkillTree_C::Tabs' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, TopScreenFrame) == 0x0009C0, "Member 'UBP_SkillTree_C::TopScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, FocusedNode) == 0x0009C8, "Member 'UBP_SkillTree_C::FocusedNode' has a wrong offset!");
static_assert(offsetof(UBP_SkillTree_C, AnimLoop) == 0x0009D0, "Member 'UBP_SkillTree_C::AnimLoop' has a wrong offset!");

}

