#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillUpgradeSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_SkillUpgradeSlot.BP_SkillUpgradeSlot_C
// 0x0158 (0x0420 - 0x02C8)
class UBP_SkillUpgradeSlot_C final : public USkillUpgradeSlotUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       LearnAbilityAnim;                                  // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoverAnim;                                         // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HighlightAnim;                                     // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Bg;                                                // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ButtonFrame;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClockWipeVFX;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Equip1;                                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Equip2;                                            // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Equips;                                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExplosionVFX1;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExplosionVFX2;                                     // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExplosionVFX3;                                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Focused;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Hovered;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Normal;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GlowVFX;                                           // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconImage;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ShockwaveVFX;                                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SkillBook_Bg;                                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SkillBookLearnOverlay;                             // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SlotOverlay;                                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Upgrade1;                                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Upgrade2;                                          // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Upgrade3;                                          // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Upgrade4;                                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Upgrade5;                                          // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Upgrades;                                          // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnUpdate;                                          // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UTexture2D*                             Icon_0;                                            // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsHighlighted;                                     // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UBP_SkillUpgradeSlot_C* ItemReference)> OnFocus;                                           // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsSelected;                                        // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LockedLevel;                                       // 0x03E0(0x0018)(Edit, BlueprintVisible)
	bool                                          IsSwapped;                                         // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCrossHighlighted;                                // 0x03F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShowLockedLevel;                                   // 0x03FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IsEquipState;                                      // 0x03FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             FrameTextureNormal;                                // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             FrameTextureHighlight;                             // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             FrameTextureSelection;                             // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             FrameTextureLearn;                                 // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SkillUpgradeSlot(int32 EntryPoint);
	void OnSetEquips(bool bAbilitySet1Contain, bool bAbilitySet2Contain);
	void OnFilterChanged();
	void OnPlayLearnAbilityAnim(bool bPlayAnim);
	void OnSetUpgrades(int32 InMaxUpgrades, int32 InLearnedUpgrades);
	void OnUnfocused(bool bAnimate);
	void OnFocused(bool bAnimate);
	void OnToggleEquipState(bool bEquipState);
	void BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ButtonFrame_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void OnSetSlot(const class UTexture2D* InIcon, bool bGhostIcon);
	void OnToggleSwapped(bool bSwapped);
	void OnToggleSelected(bool bSelected, bool bPlayAnim);
	void OnToggleCrossHighlight(bool bCrossHighlight);
	void OnToggleLocked(bool bLocked, const class FText& LockedLevel_0);
	void OnToggleActive(bool bActive);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void ToggleActive(bool InIsActive);
	void BP_Set_Slot(class UTexture2D* InIcon);
	void SetIcon(class UTexture2D* InIcon);
	void Set_Highlighted(bool PlayAnim);
	void SetUnhighlighted(bool PlayAnim);
	void ToggleLocked(bool InIsLocked, const class FText& InLockedLevel);
	void ToggleSelected(bool InIsSelected, bool PlayAnim);
	void SetPassiveSkill(bool InIsPassiveSkill);
	void ToggleSwapped(bool inIsSwapped);
	void ToggleCrossHighlight(bool inIsCrossHighlighted);
	void ToggleEquipState(bool InEquipState);
	void InitTextures();
	void SetUpgrades(int32 InMaxUpgrades, int32 InLearnedUpgrades);
	void PlayLearnAbilityAnim(bool PlayAnim);
	void SetEquips(bool InSlot1Equipped, bool InSlot2Equipped);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkillUpgradeSlot_C">();
	}
	static class UBP_SkillUpgradeSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SkillUpgradeSlot_C>();
	}
};
static_assert(alignof(UBP_SkillUpgradeSlot_C) == 0x000008, "Wrong alignment on UBP_SkillUpgradeSlot_C");
static_assert(sizeof(UBP_SkillUpgradeSlot_C) == 0x000420, "Wrong size on UBP_SkillUpgradeSlot_C");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, UberGraphFrame) == 0x0002C8, "Member 'UBP_SkillUpgradeSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, LearnAbilityAnim) == 0x0002D0, "Member 'UBP_SkillUpgradeSlot_C::LearnAbilityAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, HoverAnim) == 0x0002D8, "Member 'UBP_SkillUpgradeSlot_C::HoverAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, HighlightAnim) == 0x0002E0, "Member 'UBP_SkillUpgradeSlot_C::HighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Bg) == 0x0002E8, "Member 'UBP_SkillUpgradeSlot_C::Bg' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, ButtonFrame) == 0x0002F0, "Member 'UBP_SkillUpgradeSlot_C::ButtonFrame' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, ClockWipeVFX) == 0x0002F8, "Member 'UBP_SkillUpgradeSlot_C::ClockWipeVFX' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Equip1) == 0x000300, "Member 'UBP_SkillUpgradeSlot_C::Equip1' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Equip2) == 0x000308, "Member 'UBP_SkillUpgradeSlot_C::Equip2' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Equips) == 0x000310, "Member 'UBP_SkillUpgradeSlot_C::Equips' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, ExplosionVFX1) == 0x000318, "Member 'UBP_SkillUpgradeSlot_C::ExplosionVFX1' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, ExplosionVFX2) == 0x000320, "Member 'UBP_SkillUpgradeSlot_C::ExplosionVFX2' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, ExplosionVFX3) == 0x000328, "Member 'UBP_SkillUpgradeSlot_C::ExplosionVFX3' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Frame_Focused) == 0x000330, "Member 'UBP_SkillUpgradeSlot_C::Frame_Focused' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Frame_Hovered) == 0x000338, "Member 'UBP_SkillUpgradeSlot_C::Frame_Hovered' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Frame_Normal) == 0x000340, "Member 'UBP_SkillUpgradeSlot_C::Frame_Normal' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, GlowVFX) == 0x000348, "Member 'UBP_SkillUpgradeSlot_C::GlowVFX' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, IconImage) == 0x000350, "Member 'UBP_SkillUpgradeSlot_C::IconImage' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, ShockwaveVFX) == 0x000358, "Member 'UBP_SkillUpgradeSlot_C::ShockwaveVFX' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, SkillBook_Bg) == 0x000360, "Member 'UBP_SkillUpgradeSlot_C::SkillBook_Bg' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, SkillBookLearnOverlay) == 0x000368, "Member 'UBP_SkillUpgradeSlot_C::SkillBookLearnOverlay' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, SlotOverlay) == 0x000370, "Member 'UBP_SkillUpgradeSlot_C::SlotOverlay' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Upgrade1) == 0x000378, "Member 'UBP_SkillUpgradeSlot_C::Upgrade1' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Upgrade2) == 0x000380, "Member 'UBP_SkillUpgradeSlot_C::Upgrade2' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Upgrade3) == 0x000388, "Member 'UBP_SkillUpgradeSlot_C::Upgrade3' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Upgrade4) == 0x000390, "Member 'UBP_SkillUpgradeSlot_C::Upgrade4' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Upgrade5) == 0x000398, "Member 'UBP_SkillUpgradeSlot_C::Upgrade5' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Upgrades) == 0x0003A0, "Member 'UBP_SkillUpgradeSlot_C::Upgrades' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, OnUpdate) == 0x0003A8, "Member 'UBP_SkillUpgradeSlot_C::OnUpdate' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, Icon_0) == 0x0003B8, "Member 'UBP_SkillUpgradeSlot_C::Icon_0' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, IsHighlighted) == 0x0003C0, "Member 'UBP_SkillUpgradeSlot_C::IsHighlighted' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, OnFocus) == 0x0003C8, "Member 'UBP_SkillUpgradeSlot_C::OnFocus' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, IsSelected) == 0x0003D8, "Member 'UBP_SkillUpgradeSlot_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, LockedLevel) == 0x0003E0, "Member 'UBP_SkillUpgradeSlot_C::LockedLevel' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, IsSwapped) == 0x0003F8, "Member 'UBP_SkillUpgradeSlot_C::IsSwapped' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, IsCrossHighlighted) == 0x0003F9, "Member 'UBP_SkillUpgradeSlot_C::IsCrossHighlighted' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, ShowLockedLevel) == 0x0003FA, "Member 'UBP_SkillUpgradeSlot_C::ShowLockedLevel' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, IsEquipState) == 0x0003FB, "Member 'UBP_SkillUpgradeSlot_C::IsEquipState' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, FrameTextureNormal) == 0x000400, "Member 'UBP_SkillUpgradeSlot_C::FrameTextureNormal' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, FrameTextureHighlight) == 0x000408, "Member 'UBP_SkillUpgradeSlot_C::FrameTextureHighlight' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, FrameTextureSelection) == 0x000410, "Member 'UBP_SkillUpgradeSlot_C::FrameTextureSelection' has a wrong offset!");
static_assert(offsetof(UBP_SkillUpgradeSlot_C, FrameTextureLearn) == 0x000418, "Member 'UBP_SkillUpgradeSlot_C::FrameTextureLearn' has a wrong offset!");

}

