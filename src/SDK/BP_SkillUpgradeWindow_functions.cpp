#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillUpgradeWindow

#include "Basic.hpp"

#include "BP_SkillUpgradeWindow_classes.hpp"
#include "BP_SkillUpgradeWindow_parameters.hpp"


namespace SDK
{

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.ExecuteUbergraph_BP_SkillUpgradeWindow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::ExecuteUbergraph_BP_SkillUpgradeWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "ExecuteUbergraph_BP_SkillUpgradeWindow");

	Params::BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnSetInputDisplay
// (Event, Public, BlueprintEvent)
// Parameters:
// EInputDisplay                           InInputDisplay                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInputDisplay                           InControlDisplay                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::OnSetInputDisplay(EInputDisplay InInputDisplay, EInputDisplay InControlDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnSetInputDisplay");

	Params::BP_SkillUpgradeWindow_C_OnSetInputDisplay Parms{};

	Parms.InInputDisplay = InInputDisplay;
	Parms.InControlDisplay = InControlDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_SkillUpgradeWindow_BP_CloseButton_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_SkillUpgradeWindow_BP_CloseButton_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_SkillUpgradeWindow_BP_CloseButton_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnErrorHiglight
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UInteractButtonUserWidget*        InteractButtonUserWidget                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::OnErrorHiglight(class UInteractButtonUserWidget* InteractButtonUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnErrorHiglight");

	Params::BP_SkillUpgradeWindow_C_OnErrorHiglight Parms{};

	Parms.InteractButtonUserWidget = InteractButtonUserWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_WitchLantern_Tab_Attributes_1_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_WitchLantern_Tab_Attributes_1_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_WitchLantern_Tab_Attributes_1_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.Temp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EntryKey                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::Temp(class FName EntryKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "Temp");

	Params::BP_SkillUpgradeWindow_C_Temp Parms{};

	Parms.EntryKey = EntryKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnIngameMenuEvent
// (Event, Public, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::OnIngameMenuEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnIngameMenuEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnUpdateUpgradeDetails
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Description                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Cost                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::OnUpdateUpgradeDetails(const class FText& Description, int32 Cost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnUpdateUpgradeDetails");

	Params::BP_SkillUpgradeWindow_C_OnUpdateUpgradeDetails Parms{};

	Parms.Description = std::move(Description);
	Parms.Cost = Cost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnHasEnoughResource
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHasEnoughResource                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SkillUpgradeWindow_C::OnHasEnoughResource(bool bHasEnoughResource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnHasEnoughResource");

	Params::BP_SkillUpgradeWindow_C_OnHasEnoughResource Parms{};

	Parms.bHasEnoughResource = bHasEnoughResource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnHoldCanceled
// (Event, Public, BlueprintEvent)
// Parameters:
// class UInteractButtonUserWidget*        InteractButtonUserWidget                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMinTimeCancel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SkillUpgradeWindow_C::OnHoldCanceled(class UInteractButtonUserWidget* InteractButtonUserWidget, bool bMinTimeCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnHoldCanceled");

	Params::BP_SkillUpgradeWindow_C_OnHoldCanceled Parms{};

	Parms.InteractButtonUserWidget = InteractButtonUserWidget;
	Parms.bMinTimeCancel = bMinTimeCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnHoldFinished
// (Event, Public, BlueprintEvent)
// Parameters:
// class UInteractButtonUserWidget*        InteractButtonUserWidget                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::OnHoldFinished(class UInteractButtonUserWidget* InteractButtonUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnHoldFinished");

	Params::BP_SkillUpgradeWindow_C_OnHoldFinished Parms{};

	Parms.InteractButtonUserWidget = InteractButtonUserWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnHoldStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class UInteractButtonUserWidget*        InteractButtonUserWidget                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::OnHoldStarted(class UInteractButtonUserWidget* InteractButtonUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnHoldStarted");

	Params::BP_SkillUpgradeWindow_C_OnHoldStarted Parms{};

	Parms.InteractButtonUserWidget = InteractButtonUserWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnPropertyChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EHeroProperty                           PropertyType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RoundedFloatValue                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RoundedIntValue                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SkillUpgradeWindow_C::OnPropertyChanged(EHeroProperty PropertyType, float Value, float RoundedFloatValue, int32 RoundedIntValue, bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnPropertyChanged");

	Params::BP_SkillUpgradeWindow_C_OnPropertyChanged Parms{};

	Parms.PropertyType = PropertyType;
	Parms.Value = Value;
	Parms.RoundedFloatValue = RoundedFloatValue;
	Parms.RoundedIntValue = RoundedIntValue;
	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnSetSkillsView
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInSkillsView                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SkillUpgradeWindow_C::OnSetSkillsView(bool bInSkillsView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnSetSkillsView");

	Params::BP_SkillUpgradeWindow_C_OnSetSkillsView Parms{};

	Parms.bInSkillsView = bInSkillsView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_SkillUpgradeWindow_BtnHotkeyA2_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_SkillUpgradeWindow_BtnHotkeyA2_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_SkillUpgradeWindow_BtnHotkeyA2_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SkillUpgradeWindow_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "PreConstruct");

	Params::BP_SkillUpgradeWindow_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnUpdateUpgradesPanel
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class FText>                     Upgrades                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             Requirements                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_SkillUpgradeWindow_C::OnUpdateUpgradesPanel(const TArray<class FText>& Upgrades, const class FText& Requirements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnUpdateUpgradesPanel");

	Params::BP_SkillUpgradeWindow_C_OnUpdateUpgradesPanel Parms{};

	Parms.Upgrades = std::move(Upgrades);
	Parms.Requirements = std::move(Requirements);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Relic_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UWidget*                          WidgetReference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Relic_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature(class UWidget* WidgetReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Relic_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature");

	Params::BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Relic_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature Parms{};

	Parms.WidgetReference = WidgetReference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_WyldRune_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UWidget*                          WidgetReference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_WyldRune_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature(class UWidget* WidgetReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_WyldRune_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature");

	Params::BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_WyldRune_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature Parms{};

	Parms.WidgetReference = WidgetReference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Crossbow_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UWidget*                          WidgetReference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Crossbow_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature(class UWidget* WidgetReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Crossbow_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature");

	Params::BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Crossbow_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature Parms{};

	Parms.WidgetReference = WidgetReference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_ChaosRune_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UWidget*                          WidgetReference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_ChaosRune_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature(class UWidget* WidgetReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_ChaosRune_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");

	Params::BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_ChaosRune_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature Parms{};

	Parms.WidgetReference = WidgetReference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_FireRune_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UWidget*                          WidgetReference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_FireRune_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature(class UWidget* WidgetReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_FireRune_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");

	Params::BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_FireRune_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature Parms{};

	Parms.WidgetReference = WidgetReference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_PhysicalWeapons_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UWidget*                          WidgetReference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_PhysicalWeapons_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(class UWidget* WidgetReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_PhysicalWeapons_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");

	Params::BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_PhysicalWeapons_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature Parms{};

	Parms.WidgetReference = WidgetReference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_BtnHotkeyRT_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow_v3_BtnHotkeyRT_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow_v3_BtnHotkeyRT_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_BtnHotkeyLT_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow_v3_BtnHotkeyLT_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow_v3_BtnHotkeyLT_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow2_Tab_WitchLantern_1_K2Node_ComponentBoundEvent_29_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow2_Tab_WitchLantern_1_K2Node_ComponentBoundEvent_29_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow2_Tab_WitchLantern_1_K2Node_ComponentBoundEvent_29_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow2_Tab_Skills_1_K2Node_ComponentBoundEvent_28_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow2_Tab_Skills_1_K2Node_ComponentBoundEvent_28_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow2_Tab_Skills_1_K2Node_ComponentBoundEvent_28_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow2_Tab_Attributes_1_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow2_Tab_Attributes_1_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow2_Tab_Attributes_1_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow2_BtnNextTab_1_K2Node_ComponentBoundEvent_24_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow2_BtnNextTab_1_K2Node_ComponentBoundEvent_24_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow2_BtnNextTab_1_K2Node_ComponentBoundEvent_24_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow2_BtnPreviousTab_1_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BndEvt__BP_ActiveAbilitiesWindow2_BtnPreviousTab_1_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BP_ActiveAbilitiesWindow2_BtnPreviousTab_1_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnSetUpgrades
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   MaxUpgrades                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LearnedUpgrades                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::OnSetUpgrades(int32 MaxUpgrades, int32 LearnedUpgrades)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnSetUpgrades");

	Params::BP_SkillUpgradeWindow_C_OnSetUpgrades Parms{};

	Parms.MaxUpgrades = MaxUpgrades;
	Parms.LearnedUpgrades = LearnedUpgrades;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnSetFilterName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             FilterName_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// EWeaponType                             InWeaponTypeFilter                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPlayChangeFilterSound                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SkillUpgradeWindow_C::OnSetFilterName(const class FText& FilterName_0, EWeaponType InWeaponTypeFilter, bool bPlayChangeFilterSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnSetFilterName");

	Params::BP_SkillUpgradeWindow_C_OnSetFilterName Parms{};

	Parms.FilterName_0 = std::move(FilterName_0);
	Parms.InWeaponTypeFilter = InWeaponTypeFilter;
	Parms.bPlayChangeFilterSound = bPlayChangeFilterSound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnUpdateDetailsPanel
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Name_0                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             Description                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             FlavorText                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             CostText                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             Requirements                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UTexture2D*                       Icon                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class UAbilityBase>         AbilityClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int32                                   MaxUpgrades                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LearnedUpgrades                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::OnUpdateDetailsPanel(const class FText& Name_0, const class FText& Description, const class FText& FlavorText, const class FText& CostText, const class FText& Requirements, const class UTexture2D* Icon, TSubclassOf<class UAbilityBase> AbilityClass, int32 MaxUpgrades, int32 LearnedUpgrades)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnUpdateDetailsPanel");

	Params::BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Description = std::move(Description);
	Parms.FlavorText = std::move(FlavorText);
	Parms.CostText = std::move(CostText);
	Parms.Requirements = std::move(Requirements);
	Parms.Icon = Icon;
	Parms.AbilityClass = AbilityClass;
	Parms.MaxUpgrades = MaxUpgrades;
	Parms.LearnedUpgrades = LearnedUpgrades;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "Tick");

	Params::BP_SkillUpgradeWindow_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnGamepadRBEvent
// (Event, Public, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::OnGamepadRBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnGamepadRBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnGamepadLBEvent
// (Event, Public, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::OnGamepadLBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnGamepadLBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnGamepadRTEvent
// (Event, Public, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::OnGamepadRTEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnGamepadRTEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnHide
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::OnHide(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnHide");

	Params::BP_SkillUpgradeWindow_C_OnHide Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnShow
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillUpgradeWindow_C::OnShow(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnShow");

	Params::BP_SkillUpgradeWindow_C_OnShow Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnGamepadLTEvent
// (Event, Public, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::OnGamepadLTEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnGamepadLTEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnGamepadAEvent
// (Event, Public, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::OnGamepadAEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnGamepadAEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BtnClose_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BndEvt__BtnClose_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BndEvt__BtnClose_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnGamepadBEvent
// (Event, Public, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::OnGamepadBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "OnGamepadBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BtnHotkeyBClicked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OpenPauseMenu                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SkillUpgradeWindow_C::BtnHotkeyBClicked(bool OpenPauseMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BtnHotkeyBClicked");

	Params::BP_SkillUpgradeWindow_C_BtnHotkeyBClicked Parms{};

	Parms.OpenPauseMenu = OpenPauseMenu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.Btn Hotkey AClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::Btn_Hotkey_AClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "Btn Hotkey AClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BtnHotkeyLTClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BtnHotkeyLTClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BtnHotkeyLTClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BtnHotkeyRTClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BtnHotkeyRTClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BtnHotkeyRTClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BtnHotkeyRBClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BtnHotkeyRBClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BtnHotkeyRBClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BtnHotkeyLBClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::BtnHotkeyLBClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "BtnHotkeyLBClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.SetUpgradesPanel
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     Upgrades                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             Requirements                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_SkillUpgradeWindow_C::SetUpgradesPanel(TArray<class FText>& Upgrades, const class FText& Requirements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "SetUpgradesPanel");

	Params::BP_SkillUpgradeWindow_C_SetUpgradesPanel Parms{};

	Parms.Upgrades = std::move(Upgrades);
	Parms.Requirements = std::move(Requirements);

	UObject::ProcessEvent(Func, &Parms);

	Upgrades = std::move(Parms.Upgrades);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.SetBtnHotkeyRSState
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::SetBtnHotkeyRSState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "SetBtnHotkeyRSState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.SetUpdateRequirementsState
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::SetUpdateRequirementsState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "SetUpdateRequirementsState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.SetSkillsView
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InSkillsView                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SkillUpgradeWindow_C::SetSkillsView(bool InSkillsView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "SetSkillsView");

	Params::BP_SkillUpgradeWindow_C_SetSkillsView Parms{};

	Parms.InSkillsView = InSkillsView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.ErrorHighlight
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::ErrorHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "ErrorHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.SetBtnCloseVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SkillUpgradeWindow_C::SetBtnCloseVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillUpgradeWindow_C", "SetBtnCloseVisibility");

	UObject::ProcessEvent(Func, nullptr);
}

}

