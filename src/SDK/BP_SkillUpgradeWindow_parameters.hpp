#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillUpgradeWindow

#include "Basic.hpp"

#include "man_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.ExecuteUbergraph_BP_SkillUpgradeWindow
// 0x0380 (0x0380 - 0x0000)
struct BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName EntryKey)>         K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GlobalDictionarySetBool_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0050(0x0028)()
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00A0(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Name;                                 // 0x00E0(0x0018)(ConstParm)
	class FText                                   K2Node_Event_Description_1;                        // 0x00F8(0x0018)(ConstParm)
	class FText                                   K2Node_Event_FlavorText;                           // 0x0110(0x0018)(ConstParm)
	class FText                                   K2Node_Event_CostText;                             // 0x0128(0x0018)(ConstParm)
	class FText                                   K2Node_Event_Requirements_1;                       // 0x0140(0x0018)(ConstParm)
	const class UTexture2D*                       K2Node_Event_Icon;                                 // 0x0158(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UAbilityBase>               K2Node_Event_AbilityClass;                         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         K2Node_Event_MaxUpgrades_1;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_LearnedUpgrades_1;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_FilterName;                           // 0x0178(0x0018)(ConstParm)
	EWeaponType                                   K2Node_Event_InWeaponTypeFilter;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPlayChangeFilterSound;               // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MaxUpgrades;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_LearnedUpgrades;                      // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_ComponentBoundEvent_WidgetReference_5;      // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_ComponentBoundEvent_WidgetReference_4;      // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ActiveAbilitiesWindow_FilterSlot_v3_C* K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3; // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ActiveAbilitiesWindow_FilterSlot_v3_C* K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_1; // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponType                                   CallFunc_GetAbilityWeaponType_ReturnValue;         // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponType                                   CallFunc_GetAbilityWeaponType_ReturnValue_1;       // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB[0x5];                                      // 0x01CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_ComponentBoundEvent_WidgetReference_3;      // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_ComponentBoundEvent_WidgetReference_2;      // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ActiveAbilitiesWindow_FilterSlot_v3_C* K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_2; // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ActiveAbilitiesWindow_FilterSlot_v3_C* K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_3; // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponType                                   CallFunc_GetAbilityWeaponType_ReturnValue_2;       // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponType                                   CallFunc_GetAbilityWeaponType_ReturnValue_3;       // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB[0x5];                                      // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_ComponentBoundEvent_WidgetReference_1;      // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_ComponentBoundEvent_WidgetReference;        // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ActiveAbilitiesWindow_FilterSlot_v3_C* K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_4; // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ActiveAbilitiesWindow_FilterSlot_v3_C* K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_5; // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponType                                   CallFunc_GetAbilityWeaponType_ReturnValue_4;       // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponType                                   CallFunc_GetAbilityWeaponType_ReturnValue_5;       // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22B[0x5];                                      // 0x022B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_Event_Upgrades;                             // 0x0230(0x0010)(ConstParm, ReferenceParm)
	class FText                                   K2Node_Event_Requirements;                         // 0x0240(0x0018)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInSkillsView;                        // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHeroProperty                                 K2Node_Event_PropertyType;                         // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_277[0x1];                                      // 0x0277(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Value;                                // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RoundedFloatValue;                    // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_RoundedIntValue;                      // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAnimate;                             // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_286[0x2];                                      // 0x0286(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0288(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroEntropicEssence_ReturnValue;       // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget_3;           // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_IntToText_ReturnValue_1;                  // 0x02B0(0x0018)()
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget_2;           // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget_1;           // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bMinTimeCancel;                       // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetFocusedWidget_ReturnValue;             // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetFocusedWidget_ReturnValue_1;           // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AbilityUpgradeSlot_v3_C*            K2Node_DynamicCast_AsBP_Ability_Upgrade_Slot_V_3;  // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AbilityUpgradeSlot_v3_C*            K2Node_DynamicCast_AsBP_Ability_Upgrade_Slot_V_3_1; // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetFocusedWidget_ReturnValue_2;           // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AbilityUpgradeSlot_v3_C*            K2Node_DynamicCast_AsBP_Ability_Upgrade_Slot_V_3_2; // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHasEnoughResource;                   // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_323[0x5];                                      // 0x0323(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Description;                          // 0x0328(0x0018)(ConstParm)
	int32                                         K2Node_Event_Cost;                                 // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue_2;                  // 0x0348(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGlobalBool_ReturnValue;                // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362[0x2];                                      // 0x0362(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_EntryKey;                       // 0x0364(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget;             // 0x0370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InInputDisplay;                       // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InControlDisplay;                     // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow");
static_assert(sizeof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow) == 0x000380, "Wrong size on BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, EntryPoint) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, Temp_bool_Variable) == 0x000004, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, Temp_byte_Variable) == 0x000005, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, Temp_bool_Variable_1) == 0x000006, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, Temp_struct_Variable) == 0x000008, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, Temp_struct_Variable_1) == 0x000018, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, Temp_bool_Variable_2) == 0x000028, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, Temp_byte_Variable_1) == 0x000029, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, Temp_byte_Variable_2) == 0x00002A, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GlobalDictionarySetBool_ReturnValue) == 0x00003C, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GlobalDictionarySetBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Select_Default) == 0x000040, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_MakeStruct_SlateColor) == 0x000050, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_AnimDuration_1) == 0x000078, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x00007C, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_AnimDuration) == 0x000080, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_PlayAnimation_ReturnValue) == 0x000088, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000090, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_PlayAnimation_ReturnValue_1) == 0x000098, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_MyGeometry) == 0x0000A0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_InDeltaTime) == 0x0000D8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_Name) == 0x0000E0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_Description_1) == 0x0000F8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_Description_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_FlavorText) == 0x000110, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_FlavorText' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_CostText) == 0x000128, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_CostText' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_Requirements_1) == 0x000140, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_Requirements_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_Icon) == 0x000158, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_Icon' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_AbilityClass) == 0x000160, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_AbilityClass' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_MaxUpgrades_1) == 0x000168, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_MaxUpgrades_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_LearnedUpgrades_1) == 0x00016C, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_LearnedUpgrades_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_IsValidClass_ReturnValue) == 0x000170, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_TextIsEmpty_ReturnValue) == 0x000171, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_FilterName) == 0x000178, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_FilterName' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_InWeaponTypeFilter) == 0x000190, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_InWeaponTypeFilter' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_bPlayChangeFilterSound) == 0x000191, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_bPlayChangeFilterSound' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_MaxUpgrades) == 0x000194, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_MaxUpgrades' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_LearnedUpgrades) == 0x000198, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_LearnedUpgrades' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_SwitchEnum_CmpSuccess) == 0x00019C, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_ComponentBoundEvent_WidgetReference_5) == 0x0001A0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_ComponentBoundEvent_WidgetReference_5' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_ComponentBoundEvent_WidgetReference_4) == 0x0001A8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_ComponentBoundEvent_WidgetReference_4' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3) == 0x0001B0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_1) == 0x0001C0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_bSuccess_1) == 0x0001C8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetAbilityWeaponType_ReturnValue) == 0x0001C9, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetAbilityWeaponType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetAbilityWeaponType_ReturnValue_1) == 0x0001CA, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetAbilityWeaponType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_ComponentBoundEvent_WidgetReference_3) == 0x0001D0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_ComponentBoundEvent_WidgetReference_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_ComponentBoundEvent_WidgetReference_2) == 0x0001D8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_ComponentBoundEvent_WidgetReference_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_2) == 0x0001E0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_bSuccess_2) == 0x0001E8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_3) == 0x0001F0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_bSuccess_3) == 0x0001F8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetAbilityWeaponType_ReturnValue_2) == 0x0001F9, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetAbilityWeaponType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetAbilityWeaponType_ReturnValue_3) == 0x0001FA, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetAbilityWeaponType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_ComponentBoundEvent_WidgetReference_1) == 0x000200, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_ComponentBoundEvent_WidgetReference_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_ComponentBoundEvent_WidgetReference) == 0x000208, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_ComponentBoundEvent_WidgetReference' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_4) == 0x000210, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_4' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_bSuccess_4) == 0x000218, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_5) == 0x000220, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_AsBP_Active_Abilities_Window_Filter_Slot_V_3_5' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_bSuccess_5) == 0x000228, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetAbilityWeaponType_ReturnValue_4) == 0x000229, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetAbilityWeaponType_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetAbilityWeaponType_ReturnValue_5) == 0x00022A, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetAbilityWeaponType_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_Upgrades) == 0x000230, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_Upgrades' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_Requirements) == 0x000240, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_Requirements' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_IsDesignTime) == 0x000258, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, Temp_byte_Variable_3) == 0x000259, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, Temp_bool_Variable_3) == 0x00025A, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, Temp_byte_Variable_4) == 0x00025B, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Select_Default_1) == 0x00025C, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_Array_Add_ReturnValue) == 0x000260, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_Array_Add_ReturnValue_1) == 0x000264, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_Array_Add_ReturnValue_2) == 0x000268, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_Array_Add_ReturnValue_3) == 0x00026C, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_Array_Add_ReturnValue_4) == 0x000270, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_bInSkillsView) == 0x000274, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_bInSkillsView' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, Temp_byte_Variable_5) == 0x000275, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_PropertyType) == 0x000276, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_PropertyType' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_Value) == 0x000278, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_RoundedFloatValue) == 0x00027C, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_RoundedFloatValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_RoundedIntValue) == 0x000280, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_RoundedIntValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_bAnimate) == 0x000284, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Select_Default_2) == 0x000285, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_IntToText_ReturnValue) == 0x000288, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_SwitchEnum_CmpSuccess_1) == 0x0002A0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetHeroEntropicEssence_ReturnValue) == 0x0002A4, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetHeroEntropicEssence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_InteractButtonUserWidget_3) == 0x0002A8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_InteractButtonUserWidget_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_IntToText_ReturnValue_1) == 0x0002B0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_InteractButtonUserWidget_2) == 0x0002C8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_InteractButtonUserWidget_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_InteractButtonUserWidget_1) == 0x0002D0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_InteractButtonUserWidget_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_bMinTimeCancel) == 0x0002D8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_bMinTimeCancel' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetFocusedWidget_ReturnValue) == 0x0002E0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetFocusedWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetFocusedWidget_ReturnValue_1) == 0x0002E8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetFocusedWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_AsBP_Ability_Upgrade_Slot_V_3) == 0x0002F0, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_AsBP_Ability_Upgrade_Slot_V_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_bSuccess_6) == 0x0002F8, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_AsBP_Ability_Upgrade_Slot_V_3_1) == 0x000300, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_AsBP_Ability_Upgrade_Slot_V_3_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_bSuccess_7) == 0x000308, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetFocusedWidget_ReturnValue_2) == 0x000310, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetFocusedWidget_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_AsBP_Ability_Upgrade_Slot_V_3_2) == 0x000318, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_AsBP_Ability_Upgrade_Slot_V_3_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_DynamicCast_bSuccess_8) == 0x000320, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_bHasEnoughResource) == 0x000321, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_bHasEnoughResource' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_Not_PreBool_ReturnValue) == 0x000322, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_Description) == 0x000328, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_Description' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_Cost) == 0x000340, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_Cost' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_Greater_IntInt_ReturnValue) == 0x000344, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_IntToText_ReturnValue_2) == 0x000348, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Select_Default_3) == 0x000360, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, CallFunc_GetGlobalBool_ReturnValue) == 0x000361, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::CallFunc_GetGlobalBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_CustomEvent_EntryKey) == 0x000364, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_CustomEvent_EntryKey' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_InteractButtonUserWidget) == 0x000370, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_InteractButtonUserWidget' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_InInputDisplay) == 0x000378, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow, K2Node_Event_InControlDisplay) == 0x000379, "Member 'BP_SkillUpgradeWindow_C_ExecuteUbergraph_BP_SkillUpgradeWindow::K2Node_Event_InControlDisplay' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnSetInputDisplay
// 0x0002 (0x0002 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnSetInputDisplay final
{
public:
	EInputDisplay                                 InInputDisplay;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 InControlDisplay;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnSetInputDisplay) == 0x000001, "Wrong alignment on BP_SkillUpgradeWindow_C_OnSetInputDisplay");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnSetInputDisplay) == 0x000002, "Wrong size on BP_SkillUpgradeWindow_C_OnSetInputDisplay");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnSetInputDisplay, InInputDisplay) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnSetInputDisplay::InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnSetInputDisplay, InControlDisplay) == 0x000001, "Member 'BP_SkillUpgradeWindow_C_OnSetInputDisplay::InControlDisplay' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnErrorHiglight
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnErrorHiglight final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnErrorHiglight) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_OnErrorHiglight");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnErrorHiglight) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_OnErrorHiglight");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnErrorHiglight, InteractButtonUserWidget) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnErrorHiglight::InteractButtonUserWidget' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.Temp
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_Temp final
{
public:
	class FName                                   EntryKey;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_Temp) == 0x000004, "Wrong alignment on BP_SkillUpgradeWindow_C_Temp");
static_assert(sizeof(BP_SkillUpgradeWindow_C_Temp) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_Temp");
static_assert(offsetof(BP_SkillUpgradeWindow_C_Temp, EntryKey) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_Temp::EntryKey' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnUpdateUpgradeDetails
// 0x0020 (0x0020 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnUpdateUpgradeDetails final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Cost;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnUpdateUpgradeDetails) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_OnUpdateUpgradeDetails");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnUpdateUpgradeDetails) == 0x000020, "Wrong size on BP_SkillUpgradeWindow_C_OnUpdateUpgradeDetails");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateUpgradeDetails, Description) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnUpdateUpgradeDetails::Description' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateUpgradeDetails, Cost) == 0x000018, "Member 'BP_SkillUpgradeWindow_C_OnUpdateUpgradeDetails::Cost' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnHasEnoughResource
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnHasEnoughResource final
{
public:
	bool                                          bHasEnoughResource;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnHasEnoughResource) == 0x000001, "Wrong alignment on BP_SkillUpgradeWindow_C_OnHasEnoughResource");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnHasEnoughResource) == 0x000001, "Wrong size on BP_SkillUpgradeWindow_C_OnHasEnoughResource");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnHasEnoughResource, bHasEnoughResource) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnHasEnoughResource::bHasEnoughResource' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnHoldCanceled
// 0x0010 (0x0010 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnHoldCanceled final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMinTimeCancel;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnHoldCanceled) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_OnHoldCanceled");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnHoldCanceled) == 0x000010, "Wrong size on BP_SkillUpgradeWindow_C_OnHoldCanceled");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnHoldCanceled, InteractButtonUserWidget) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnHoldCanceled::InteractButtonUserWidget' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnHoldCanceled, bMinTimeCancel) == 0x000008, "Member 'BP_SkillUpgradeWindow_C_OnHoldCanceled::bMinTimeCancel' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnHoldFinished
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnHoldFinished final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnHoldFinished) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_OnHoldFinished");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnHoldFinished) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_OnHoldFinished");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnHoldFinished, InteractButtonUserWidget) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnHoldFinished::InteractButtonUserWidget' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnHoldStarted
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnHoldStarted final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnHoldStarted) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_OnHoldStarted");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnHoldStarted) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_OnHoldStarted");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnHoldStarted, InteractButtonUserWidget) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnHoldStarted::InteractButtonUserWidget' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnPropertyChanged
// 0x0014 (0x0014 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnPropertyChanged final
{
public:
	EHeroProperty                                 PropertyType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RoundedFloatValue;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RoundedIntValue;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAnimate;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnPropertyChanged) == 0x000004, "Wrong alignment on BP_SkillUpgradeWindow_C_OnPropertyChanged");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnPropertyChanged) == 0x000014, "Wrong size on BP_SkillUpgradeWindow_C_OnPropertyChanged");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnPropertyChanged, PropertyType) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnPropertyChanged::PropertyType' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnPropertyChanged, Value) == 0x000004, "Member 'BP_SkillUpgradeWindow_C_OnPropertyChanged::Value' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnPropertyChanged, RoundedFloatValue) == 0x000008, "Member 'BP_SkillUpgradeWindow_C_OnPropertyChanged::RoundedFloatValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnPropertyChanged, RoundedIntValue) == 0x00000C, "Member 'BP_SkillUpgradeWindow_C_OnPropertyChanged::RoundedIntValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnPropertyChanged, bAnimate) == 0x000010, "Member 'BP_SkillUpgradeWindow_C_OnPropertyChanged::bAnimate' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnSetSkillsView
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnSetSkillsView final
{
public:
	bool                                          bInSkillsView;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnSetSkillsView) == 0x000001, "Wrong alignment on BP_SkillUpgradeWindow_C_OnSetSkillsView");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnSetSkillsView) == 0x000001, "Wrong size on BP_SkillUpgradeWindow_C_OnSetSkillsView");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnSetSkillsView, bInSkillsView) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnSetSkillsView::bInSkillsView' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillUpgradeWindow_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_PreConstruct) == 0x000001, "Wrong alignment on BP_SkillUpgradeWindow_C_PreConstruct");
static_assert(sizeof(BP_SkillUpgradeWindow_C_PreConstruct) == 0x000001, "Wrong size on BP_SkillUpgradeWindow_C_PreConstruct");
static_assert(offsetof(BP_SkillUpgradeWindow_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnUpdateUpgradesPanel
// 0x0028 (0x0028 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnUpdateUpgradesPanel final
{
public:
	TArray<class FText>                           Upgrades;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Requirements;                                      // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnUpdateUpgradesPanel) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_OnUpdateUpgradesPanel");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnUpdateUpgradesPanel) == 0x000028, "Wrong size on BP_SkillUpgradeWindow_C_OnUpdateUpgradesPanel");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateUpgradesPanel, Upgrades) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnUpdateUpgradesPanel::Upgrades' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateUpgradesPanel, Requirements) == 0x000010, "Member 'BP_SkillUpgradeWindow_C_OnUpdateUpgradesPanel::Requirements' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Relic_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Relic_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature final
{
public:
	class UWidget*                                WidgetReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Relic_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Relic_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature");
static_assert(sizeof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Relic_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Relic_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature");
static_assert(offsetof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Relic_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature, WidgetReference) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Relic_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature::WidgetReference' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_WyldRune_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_WyldRune_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature final
{
public:
	class UWidget*                                WidgetReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_WyldRune_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_WyldRune_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature");
static_assert(sizeof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_WyldRune_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_WyldRune_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature");
static_assert(offsetof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_WyldRune_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature, WidgetReference) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_WyldRune_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature::WidgetReference' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Crossbow_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Crossbow_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature final
{
public:
	class UWidget*                                WidgetReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Crossbow_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Crossbow_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature");
static_assert(sizeof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Crossbow_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Crossbow_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature");
static_assert(offsetof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Crossbow_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature, WidgetReference) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_Crossbow_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature::WidgetReference' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_ChaosRune_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_ChaosRune_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature final
{
public:
	class UWidget*                                WidgetReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_ChaosRune_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_ChaosRune_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");
static_assert(sizeof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_ChaosRune_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_ChaosRune_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");
static_assert(offsetof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_ChaosRune_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature, WidgetReference) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_ChaosRune_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature::WidgetReference' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_FireRune_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_FireRune_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature final
{
public:
	class UWidget*                                WidgetReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_FireRune_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_FireRune_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");
static_assert(sizeof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_FireRune_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_FireRune_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");
static_assert(offsetof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_FireRune_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature, WidgetReference) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_FireRune_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature::WidgetReference' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_PhysicalWeapons_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_PhysicalWeapons_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature final
{
public:
	class UWidget*                                WidgetReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_PhysicalWeapons_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_PhysicalWeapons_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(sizeof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_PhysicalWeapons_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_PhysicalWeapons_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(offsetof(BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_PhysicalWeapons_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature, WidgetReference) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_BndEvt__BP_ActiveAbilitiesWindow_v3_FilterSlot_PhysicalWeapons_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature::WidgetReference' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnSetUpgrades
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnSetUpgrades final
{
public:
	int32                                         MaxUpgrades;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LearnedUpgrades;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnSetUpgrades) == 0x000004, "Wrong alignment on BP_SkillUpgradeWindow_C_OnSetUpgrades");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnSetUpgrades) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_OnSetUpgrades");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnSetUpgrades, MaxUpgrades) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnSetUpgrades::MaxUpgrades' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnSetUpgrades, LearnedUpgrades) == 0x000004, "Member 'BP_SkillUpgradeWindow_C_OnSetUpgrades::LearnedUpgrades' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnSetFilterName
// 0x0020 (0x0020 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnSetFilterName final
{
public:
	class FText                                   FilterName_0;                                      // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EWeaponType                                   InWeaponTypeFilter;                                // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayChangeFilterSound;                            // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnSetFilterName) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_OnSetFilterName");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnSetFilterName) == 0x000020, "Wrong size on BP_SkillUpgradeWindow_C_OnSetFilterName");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnSetFilterName, FilterName_0) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnSetFilterName::FilterName_0' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnSetFilterName, InWeaponTypeFilter) == 0x000018, "Member 'BP_SkillUpgradeWindow_C_OnSetFilterName::InWeaponTypeFilter' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnSetFilterName, bPlayChangeFilterSound) == 0x000019, "Member 'BP_SkillUpgradeWindow_C_OnSetFilterName::bPlayChangeFilterSound' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnUpdateDetailsPanel
// 0x0090 (0x0090 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Description;                                       // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   FlavorText;                                        // 0x0030(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   CostText;                                          // 0x0048(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Requirements;                                      // 0x0060(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	const class UTexture2D*                       Icon;                                              // 0x0078(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UAbilityBase>               AbilityClass;                                      // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         MaxUpgrades;                                       // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LearnedUpgrades;                                   // 0x008C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel) == 0x000090, "Wrong size on BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel, Name_0) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel::Name_0' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel, Description) == 0x000018, "Member 'BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel::Description' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel, FlavorText) == 0x000030, "Member 'BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel::FlavorText' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel, CostText) == 0x000048, "Member 'BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel::CostText' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel, Requirements) == 0x000060, "Member 'BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel::Requirements' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel, Icon) == 0x000078, "Member 'BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel::Icon' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel, AbilityClass) == 0x000080, "Member 'BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel::AbilityClass' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel, MaxUpgrades) == 0x000088, "Member 'BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel::MaxUpgrades' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel, LearnedUpgrades) == 0x00008C, "Member 'BP_SkillUpgradeWindow_C_OnUpdateDetailsPanel::LearnedUpgrades' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_SkillUpgradeWindow_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_Tick) == 0x000004, "Wrong alignment on BP_SkillUpgradeWindow_C_Tick");
static_assert(sizeof(BP_SkillUpgradeWindow_C_Tick) == 0x00003C, "Wrong size on BP_SkillUpgradeWindow_C_Tick");
static_assert(offsetof(BP_SkillUpgradeWindow_C_Tick, MyGeometry) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_SkillUpgradeWindow_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnHide) == 0x000004, "Wrong alignment on BP_SkillUpgradeWindow_C_OnHide");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnHide) == 0x000004, "Wrong size on BP_SkillUpgradeWindow_C_OnHide");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_SkillUpgradeWindow_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_OnShow) == 0x000004, "Wrong alignment on BP_SkillUpgradeWindow_C_OnShow");
static_assert(sizeof(BP_SkillUpgradeWindow_C_OnShow) == 0x000004, "Wrong size on BP_SkillUpgradeWindow_C_OnShow");
static_assert(offsetof(BP_SkillUpgradeWindow_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BtnHotkeyBClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillUpgradeWindow_C_BtnHotkeyBClicked final
{
public:
	bool                                          OpenPauseMenu;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_BtnHotkeyBClicked) == 0x000001, "Wrong alignment on BP_SkillUpgradeWindow_C_BtnHotkeyBClicked");
static_assert(sizeof(BP_SkillUpgradeWindow_C_BtnHotkeyBClicked) == 0x000001, "Wrong size on BP_SkillUpgradeWindow_C_BtnHotkeyBClicked");
static_assert(offsetof(BP_SkillUpgradeWindow_C_BtnHotkeyBClicked, OpenPauseMenu) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_BtnHotkeyBClicked::OpenPauseMenu' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.Btn Hotkey AClicked
// 0x0002 (0x0002 - 0x0000)
struct BP_SkillUpgradeWindow_C_Btn_Hotkey_AClicked final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_Btn_Hotkey_AClicked) == 0x000001, "Wrong alignment on BP_SkillUpgradeWindow_C_Btn_Hotkey_AClicked");
static_assert(sizeof(BP_SkillUpgradeWindow_C_Btn_Hotkey_AClicked) == 0x000002, "Wrong size on BP_SkillUpgradeWindow_C_Btn_Hotkey_AClicked");
static_assert(offsetof(BP_SkillUpgradeWindow_C_Btn_Hotkey_AClicked, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_Btn_Hotkey_AClicked::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_Btn_Hotkey_AClicked, CallFunc_IsActive_ReturnValue) == 0x000001, "Member 'BP_SkillUpgradeWindow_C_Btn_Hotkey_AClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BtnHotkeyRBClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillUpgradeWindow_C_BtnHotkeyRBClicked final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_BtnHotkeyRBClicked) == 0x000001, "Wrong alignment on BP_SkillUpgradeWindow_C_BtnHotkeyRBClicked");
static_assert(sizeof(BP_SkillUpgradeWindow_C_BtnHotkeyRBClicked) == 0x000001, "Wrong size on BP_SkillUpgradeWindow_C_BtnHotkeyRBClicked");
static_assert(offsetof(BP_SkillUpgradeWindow_C_BtnHotkeyRBClicked, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_BtnHotkeyRBClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.BtnHotkeyLBClicked
// 0x0001 (0x0001 - 0x0000)
struct BP_SkillUpgradeWindow_C_BtnHotkeyLBClicked final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_BtnHotkeyLBClicked) == 0x000001, "Wrong alignment on BP_SkillUpgradeWindow_C_BtnHotkeyLBClicked");
static_assert(sizeof(BP_SkillUpgradeWindow_C_BtnHotkeyLBClicked) == 0x000001, "Wrong size on BP_SkillUpgradeWindow_C_BtnHotkeyLBClicked");
static_assert(offsetof(BP_SkillUpgradeWindow_C_BtnHotkeyLBClicked, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_BtnHotkeyLBClicked::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.SetUpgradesPanel
// 0x0088 (0x0088 - 0x0000)
struct BP_SkillUpgradeWindow_C_SetUpgradesPanel final
{
public:
	TArray<class FText>                           Upgrades;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Requirements;                                      // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0038(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0058(0x0018)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UManRichTextBlock*                      CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_SetUpgradesPanel) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_SetUpgradesPanel");
static_assert(sizeof(BP_SkillUpgradeWindow_C_SetUpgradesPanel) == 0x000088, "Wrong size on BP_SkillUpgradeWindow_C_SetUpgradesPanel");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpgradesPanel, Upgrades) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_SetUpgradesPanel::Upgrades' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpgradesPanel, Requirements) == 0x000010, "Member 'BP_SkillUpgradeWindow_C_SetUpgradesPanel::Requirements' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpgradesPanel, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_SkillUpgradeWindow_C_SetUpgradesPanel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpgradesPanel, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_SkillUpgradeWindow_C_SetUpgradesPanel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpgradesPanel, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_SkillUpgradeWindow_C_SetUpgradesPanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpgradesPanel, CallFunc_GetEmptyText_ReturnValue) == 0x000038, "Member 'BP_SkillUpgradeWindow_C_SetUpgradesPanel::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpgradesPanel, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'BP_SkillUpgradeWindow_C_SetUpgradesPanel::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpgradesPanel, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_SkillUpgradeWindow_C_SetUpgradesPanel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpgradesPanel, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000070, "Member 'BP_SkillUpgradeWindow_C_SetUpgradesPanel::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpgradesPanel, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_SkillUpgradeWindow_C_SetUpgradesPanel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpgradesPanel, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_SkillUpgradeWindow_C_SetUpgradesPanel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpgradesPanel, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_SkillUpgradeWindow_C_SetUpgradesPanel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.SetBtnHotkeyRSState
// 0x0010 (0x0010 - 0x0000)
struct BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState final
{
public:
	float                                         CallFunc_GetScrollOffsetOfEnd_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffsetOfEnd_ReturnValue_1;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollOffsetOfEnd_ReturnValue_2;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState) == 0x000004, "Wrong alignment on BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState");
static_assert(sizeof(BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState) == 0x000010, "Wrong size on BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState, CallFunc_GetScrollOffsetOfEnd_ReturnValue) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState::CallFunc_GetScrollOffsetOfEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState, CallFunc_GetScrollOffsetOfEnd_ReturnValue_1) == 0x000004, "Member 'BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState::CallFunc_GetScrollOffsetOfEnd_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState, CallFunc_GetScrollOffsetOfEnd_ReturnValue_2) == 0x00000C, "Member 'BP_SkillUpgradeWindow_C_SetBtnHotkeyRSState::CallFunc_GetScrollOffsetOfEnd_ReturnValue_2' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.SetUpdateRequirementsState
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_SetUpdateRequirementsState final
{
public:
	float                                         CallFunc_GetScrollOffsetOfEnd_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_SetUpdateRequirementsState) == 0x000004, "Wrong alignment on BP_SkillUpgradeWindow_C_SetUpdateRequirementsState");
static_assert(sizeof(BP_SkillUpgradeWindow_C_SetUpdateRequirementsState) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_SetUpdateRequirementsState");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpdateRequirementsState, CallFunc_GetScrollOffsetOfEnd_ReturnValue) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_SetUpdateRequirementsState::CallFunc_GetScrollOffsetOfEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetUpdateRequirementsState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_SkillUpgradeWindow_C_SetUpdateRequirementsState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.SetSkillsView
// 0x0060 (0x0060 - 0x0000)
struct BP_SkillUpgradeWindow_C_SetSkillsView final
{
public:
	bool                                          InSkillsView;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_2;                           // 0x0040(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_SetSkillsView) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_SetSkillsView");
static_assert(sizeof(BP_SkillUpgradeWindow_C_SetSkillsView) == 0x000060, "Wrong size on BP_SkillUpgradeWindow_C_SetSkillsView");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, InSkillsView) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::InSkillsView' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_bool_Variable) == 0x000001, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_byte_Variable) == 0x000002, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_byte_Variable_1) == 0x000003, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_bool_Variable_1) == 0x000004, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_byte_Variable_2) == 0x000005, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_byte_Variable_3) == 0x000006, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_bool_Variable_2) == 0x000007, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_text_Variable) == 0x000008, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_text_Variable_1) == 0x000020, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_bool_Variable_3) == 0x000038, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_byte_Variable_4) == 0x000039, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_byte_Variable_5) == 0x00003A, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_bool_Variable_4) == 0x00003B, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_byte_Variable_6) == 0x00003C, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, Temp_byte_Variable_7) == 0x00003D, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, K2Node_Select_Default) == 0x00003E, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, K2Node_Select_Default_1) == 0x00003F, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, K2Node_Select_Default_2) == 0x000040, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, K2Node_Select_Default_3) == 0x000058, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetSkillsView, K2Node_Select_Default_4) == 0x000059, "Member 'BP_SkillUpgradeWindow_C_SetSkillsView::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.ErrorHighlight
// 0x0008 (0x0008 - 0x0000)
struct BP_SkillUpgradeWindow_C_ErrorHighlight final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_ErrorHighlight) == 0x000008, "Wrong alignment on BP_SkillUpgradeWindow_C_ErrorHighlight");
static_assert(sizeof(BP_SkillUpgradeWindow_C_ErrorHighlight) == 0x000008, "Wrong size on BP_SkillUpgradeWindow_C_ErrorHighlight");
static_assert(offsetof(BP_SkillUpgradeWindow_C_ErrorHighlight, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_ErrorHighlight::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_SkillUpgradeWindow.BP_SkillUpgradeWindow_C.SetBtnCloseVisibility
// 0x000B (0x000B - 0x0000)
struct BP_SkillUpgradeWindow_C_SetBtnCloseVisibility final
{
public:
	EInputDisplay                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 CallFunc_GetInputDisplay_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility) == 0x000001, "Wrong alignment on BP_SkillUpgradeWindow_C_SetBtnCloseVisibility");
static_assert(sizeof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility) == 0x00000B, "Wrong size on BP_SkillUpgradeWindow_C_SetBtnCloseVisibility");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility, Temp_byte_Variable) == 0x000000, "Member 'BP_SkillUpgradeWindow_C_SetBtnCloseVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_1) == 0x000001, "Member 'BP_SkillUpgradeWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_2) == 0x000002, "Member 'BP_SkillUpgradeWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_3) == 0x000003, "Member 'BP_SkillUpgradeWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_4) == 0x000004, "Member 'BP_SkillUpgradeWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_5) == 0x000005, "Member 'BP_SkillUpgradeWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_6) == 0x000006, "Member 'BP_SkillUpgradeWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_7) == 0x000007, "Member 'BP_SkillUpgradeWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility, Temp_byte_Variable_8) == 0x000008, "Member 'BP_SkillUpgradeWindow_C_SetBtnCloseVisibility::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility, CallFunc_GetInputDisplay_ReturnValue) == 0x000009, "Member 'BP_SkillUpgradeWindow_C_SetBtnCloseVisibility::CallFunc_GetInputDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SkillUpgradeWindow_C_SetBtnCloseVisibility, K2Node_Select_Default) == 0x00000A, "Member 'BP_SkillUpgradeWindow_C_SetBtnCloseVisibility::K2Node_Select_Default' has a wrong offset!");

}

