#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SmashBase_VisualEntity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SmashBase_VisualEntity.BP_SmashBase_VisualEntity_C
// 0x0088 (0x03D8 - 0x0350)
class ABP_SmashBase_VisualEntity_C : public AVisualEntity
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      BodyParts;                                         // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ACharacterBase*                         Character;                                         // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BodypartColor;                                     // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BloodColor;                                        // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Force;                                             // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForceVariance;                                     // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfChunks;                                    // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfChunksVaraince;                            // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChunkBounciness;                                   // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceHitImpactPoint;                               // 0x039C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TEMP_COUNTER;                                      // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     DecalMaterial;                                     // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CharacterBloodColor;                               // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FNameAndColor>                  BloodColArr;                                       // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void GetCharacter(class ACharacterBase** Character_0);
	void VisualEntityConstructionFinished();
	void SpawnDecals();
	void ReceiveParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem);
	void ExecuteUbergraph_BP_SmashBase_VisualEntity(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SmashBase_VisualEntity_C">();
	}
	static class ABP_SmashBase_VisualEntity_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SmashBase_VisualEntity_C>();
	}
};
static_assert(alignof(ABP_SmashBase_VisualEntity_C) == 0x000008, "Wrong alignment on ABP_SmashBase_VisualEntity_C");
static_assert(sizeof(ABP_SmashBase_VisualEntity_C) == 0x0003D8, "Wrong size on ABP_SmashBase_VisualEntity_C");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, UberGraphFrame) == 0x000350, "Member 'ABP_SmashBase_VisualEntity_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, BodyParts) == 0x000358, "Member 'ABP_SmashBase_VisualEntity_C::BodyParts' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, Character) == 0x000360, "Member 'ABP_SmashBase_VisualEntity_C::Character' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, BodypartColor) == 0x000368, "Member 'ABP_SmashBase_VisualEntity_C::BodypartColor' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, BloodColor) == 0x000378, "Member 'ABP_SmashBase_VisualEntity_C::BloodColor' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, Force) == 0x000388, "Member 'ABP_SmashBase_VisualEntity_C::Force' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, ForceVariance) == 0x00038C, "Member 'ABP_SmashBase_VisualEntity_C::ForceVariance' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, NumberOfChunks) == 0x000390, "Member 'ABP_SmashBase_VisualEntity_C::NumberOfChunks' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, NumberOfChunksVaraince) == 0x000394, "Member 'ABP_SmashBase_VisualEntity_C::NumberOfChunksVaraince' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, ChunkBounciness) == 0x000398, "Member 'ABP_SmashBase_VisualEntity_C::ChunkBounciness' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, TraceHitImpactPoint) == 0x00039C, "Member 'ABP_SmashBase_VisualEntity_C::TraceHitImpactPoint' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, TEMP_COUNTER) == 0x0003A8, "Member 'ABP_SmashBase_VisualEntity_C::TEMP_COUNTER' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, DecalMaterial) == 0x0003B0, "Member 'ABP_SmashBase_VisualEntity_C::DecalMaterial' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, CharacterBloodColor) == 0x0003B8, "Member 'ABP_SmashBase_VisualEntity_C::CharacterBloodColor' has a wrong offset!");
static_assert(offsetof(ABP_SmashBase_VisualEntity_C, BloodColArr) == 0x0003C8, "Member 'ABP_SmashBase_VisualEntity_C::BloodColArr' has a wrong offset!");

}

