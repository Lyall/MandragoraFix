#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpeechBubble

#include "Basic.hpp"

#include "BP_SpeechBubble_classes.hpp"
#include "BP_SpeechBubble_parameters.hpp"


namespace SDK
{

// Function BP_SpeechBubble.BP_SpeechBubble_C.ExecuteUbergraph_BP_SpeechBubble
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SpeechBubble_C::ExecuteUbergraph_BP_SpeechBubble(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpeechBubble_C", "ExecuteUbergraph_BP_SpeechBubble");

	Params::BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpeechBubble.BP_SpeechBubble_C.OnShowText
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SpeechBubble_C::OnShowText(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpeechBubble_C", "OnShowText");

	Params::BP_SpeechBubble_C_OnShowText Parms{};

	Parms.bInShow = bInShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpeechBubble.BP_SpeechBubble_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SpeechBubble_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpeechBubble_C", "Tick");

	Params::BP_SpeechBubble_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpeechBubble.BP_SpeechBubble_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_SpeechBubble_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpeechBubble_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpeechBubble.BP_SpeechBubble_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SpeechBubble_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpeechBubble_C", "PreConstruct");

	Params::BP_SpeechBubble_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpeechBubble.BP_SpeechBubble_C.SetType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDialogueBubbleType                     InDialogueType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SpeechBubble_C::SetType(EDialogueBubbleType InDialogueType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpeechBubble_C", "SetType");

	Params::BP_SpeechBubble_C_SetType Parms{};

	Parms.InDialogueType = InDialogueType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpeechBubble.BP_SpeechBubble_C.SetText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InCaption                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             InLineIDText                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_SpeechBubble_C::SetText(const class FText& InCaption, const class FText& InLineIDText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpeechBubble_C", "SetText");

	Params::BP_SpeechBubble_C_SetText Parms{};

	Parms.InCaption = std::move(InCaption);
	Parms.InLineIDText = std::move(InLineIDText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpeechBubble.BP_SpeechBubble_C.Fade In
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SpeechBubble_C::Fade_In()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpeechBubble_C", "Fade In");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpeechBubble.BP_SpeechBubble_C.FadeOut
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SpeechBubble_C::FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpeechBubble_C", "FadeOut");

	UObject::ProcessEvent(Func, nullptr);
}

}

