#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpeechBubble

#include "Basic.hpp"

#include "man_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SpeechBubble.BP_SpeechBubble_C.ExecuteUbergraph_BP_SpeechBubble
// 0x0088 (0x0088 - 0x0000)
struct BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetUIScale_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetUIScale_ReturnValue_1;                 // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0068(0x0018)()
	bool                                          K2Node_Event_bInShow;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble) == 0x000008, "Wrong alignment on BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble");
static_assert(sizeof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble) == 0x000088, "Wrong size on BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, EntryPoint) == 0x000000, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, Temp_bool_Variable) == 0x000004, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, Temp_float_Variable) == 0x000008, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, Temp_float_Variable_1) == 0x00000C, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, K2Node_Event_IsDesignTime) == 0x000010, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, K2Node_Event_MyGeometry) == 0x000014, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, K2Node_Event_InDeltaTime) == 0x00004C, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, CallFunc_GetUIScale_ReturnValue) == 0x000050, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::CallFunc_GetUIScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, CallFunc_GetUIScale_ReturnValue_1) == 0x00005C, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::CallFunc_GetUIScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000064, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, CallFunc_GetEmptyText_ReturnValue) == 0x000068, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, K2Node_Event_bInShow) == 0x000080, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::K2Node_Event_bInShow' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble, K2Node_Select_Default) == 0x000084, "Member 'BP_SpeechBubble_C_ExecuteUbergraph_BP_SpeechBubble::K2Node_Select_Default' has a wrong offset!");

// Function BP_SpeechBubble.BP_SpeechBubble_C.OnShowText
// 0x0001 (0x0001 - 0x0000)
struct BP_SpeechBubble_C_OnShowText final
{
public:
	bool                                          bInShow;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpeechBubble_C_OnShowText) == 0x000001, "Wrong alignment on BP_SpeechBubble_C_OnShowText");
static_assert(sizeof(BP_SpeechBubble_C_OnShowText) == 0x000001, "Wrong size on BP_SpeechBubble_C_OnShowText");
static_assert(offsetof(BP_SpeechBubble_C_OnShowText, bInShow) == 0x000000, "Member 'BP_SpeechBubble_C_OnShowText::bInShow' has a wrong offset!");

// Function BP_SpeechBubble.BP_SpeechBubble_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_SpeechBubble_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpeechBubble_C_Tick) == 0x000004, "Wrong alignment on BP_SpeechBubble_C_Tick");
static_assert(sizeof(BP_SpeechBubble_C_Tick) == 0x00003C, "Wrong size on BP_SpeechBubble_C_Tick");
static_assert(offsetof(BP_SpeechBubble_C_Tick, MyGeometry) == 0x000000, "Member 'BP_SpeechBubble_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_SpeechBubble_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_SpeechBubble.BP_SpeechBubble_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_SpeechBubble_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpeechBubble_C_PreConstruct) == 0x000001, "Wrong alignment on BP_SpeechBubble_C_PreConstruct");
static_assert(sizeof(BP_SpeechBubble_C_PreConstruct) == 0x000001, "Wrong size on BP_SpeechBubble_C_PreConstruct");
static_assert(offsetof(BP_SpeechBubble_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_SpeechBubble_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_SpeechBubble.BP_SpeechBubble_C.SetType
// 0x0002 (0x0002 - 0x0000)
struct BP_SpeechBubble_C_SetType final
{
public:
	EDialogueBubbleType                           InDialogueType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpeechBubble_C_SetType) == 0x000001, "Wrong alignment on BP_SpeechBubble_C_SetType");
static_assert(sizeof(BP_SpeechBubble_C_SetType) == 0x000002, "Wrong size on BP_SpeechBubble_C_SetType");
static_assert(offsetof(BP_SpeechBubble_C_SetType, InDialogueType) == 0x000000, "Member 'BP_SpeechBubble_C_SetType::InDialogueType' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_SetType, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_SpeechBubble_C_SetType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SpeechBubble.BP_SpeechBubble_C.SetText
// 0x0030 (0x0030 - 0x0000)
struct BP_SpeechBubble_C_SetText final
{
public:
	class FText                                   InCaption;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InLineIDText;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SpeechBubble_C_SetText) == 0x000008, "Wrong alignment on BP_SpeechBubble_C_SetText");
static_assert(sizeof(BP_SpeechBubble_C_SetText) == 0x000030, "Wrong size on BP_SpeechBubble_C_SetText");
static_assert(offsetof(BP_SpeechBubble_C_SetText, InCaption) == 0x000000, "Member 'BP_SpeechBubble_C_SetText::InCaption' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_SetText, InLineIDText) == 0x000018, "Member 'BP_SpeechBubble_C_SetText::InLineIDText' has a wrong offset!");

// Function BP_SpeechBubble.BP_SpeechBubble_C.Fade In
// 0x0010 (0x0010 - 0x0000)
struct BP_SpeechBubble_C_Fade_In final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpeechBubble_C_Fade_In) == 0x000008, "Wrong alignment on BP_SpeechBubble_C_Fade_In");
static_assert(sizeof(BP_SpeechBubble_C_Fade_In) == 0x000010, "Wrong size on BP_SpeechBubble_C_Fade_In");
static_assert(offsetof(BP_SpeechBubble_C_Fade_In, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_SpeechBubble_C_Fade_In::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_Fade_In, CallFunc_TextIsEmpty_ReturnValue) == 0x000001, "Member 'BP_SpeechBubble_C_Fade_In::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_Fade_In, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_SpeechBubble_C_Fade_In::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_SpeechBubble.BP_SpeechBubble_C.FadeOut
// 0x0018 (0x0018 - 0x0000)
struct BP_SpeechBubble_C_FadeOut final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpeechBubble_C_FadeOut) == 0x000008, "Wrong alignment on BP_SpeechBubble_C_FadeOut");
static_assert(sizeof(BP_SpeechBubble_C_FadeOut) == 0x000018, "Wrong size on BP_SpeechBubble_C_FadeOut");
static_assert(offsetof(BP_SpeechBubble_C_FadeOut, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'BP_SpeechBubble_C_FadeOut::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_FadeOut, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_SpeechBubble_C_FadeOut::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_FadeOut, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_SpeechBubble_C_FadeOut::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpeechBubble_C_FadeOut, CallFunc_TextIsEmpty_ReturnValue) == 0x000010, "Member 'BP_SpeechBubble_C_FadeOut::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

}

