#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpiritWolf_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SpiritWolf_Anim.BP_SpiritWolf_Anim_C.ExecuteUbergraph_BP_SpiritWolf_Anim
// 0x00D8 (0x00D8 - 0x0000)
struct BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_6;                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFacing_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bForced;                              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimToggled_ReturnValue;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimToggled_ReturnValue_1;              // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimToggled_ReturnValue_2;              // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimToggled_ReturnValue_3;              // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim) == 0x000004, "Wrong alignment on BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim");
static_assert(sizeof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim) == 0x0000D8, "Wrong size on BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, EntryPoint) == 0x000000, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeRotator_ReturnValue) == 0x000008, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeRotator_ReturnValue_1) == 0x000020, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeVector_ReturnValue_1) == 0x00002C, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeRotator_ReturnValue_2) == 0x000038, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeVector_ReturnValue_2) == 0x000044, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeRotator_ReturnValue_3) == 0x000050, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeVector_ReturnValue_3) == 0x00005C, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_SelectInt_ReturnValue) == 0x000068, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeRotator_ReturnValue_4) == 0x00006C, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeVector_ReturnValue_4) == 0x000078, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeRotator_ReturnValue_5) == 0x000084, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeVector_ReturnValue_5) == 0x000090, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, K2Node_Event_DeltaTimeX) == 0x00009C, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeRotator_ReturnValue_6) == 0x0000A0, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_MakeVector_ReturnValue_6) == 0x0000AC, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x0000B8, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x0000C0, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_GetFacing_ReturnValue) == 0x0000C8, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_GetFacing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, K2Node_Event_bForced) == 0x0000CC, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::K2Node_Event_bForced' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000D0, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_IsAnimToggled_ReturnValue) == 0x0000D4, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_IsAnimToggled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_IsAnimToggled_ReturnValue_1) == 0x0000D5, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_IsAnimToggled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_IsAnimToggled_ReturnValue_2) == 0x0000D6, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_IsAnimToggled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim, CallFunc_IsAnimToggled_ReturnValue_3) == 0x0000D7, "Member 'BP_SpiritWolf_Anim_C_ExecuteUbergraph_BP_SpiritWolf_Anim::CallFunc_IsAnimToggled_ReturnValue_3' has a wrong offset!");

// Function BP_SpiritWolf_Anim.BP_SpiritWolf_Anim_C.OnFacingChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_SpiritWolf_Anim_C_OnFacingChanged final
{
public:
	bool                                          bForced;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpiritWolf_Anim_C_OnFacingChanged) == 0x000001, "Wrong alignment on BP_SpiritWolf_Anim_C_OnFacingChanged");
static_assert(sizeof(BP_SpiritWolf_Anim_C_OnFacingChanged) == 0x000001, "Wrong size on BP_SpiritWolf_Anim_C_OnFacingChanged");
static_assert(offsetof(BP_SpiritWolf_Anim_C_OnFacingChanged, bForced) == 0x000000, "Member 'BP_SpiritWolf_Anim_C_OnFacingChanged::bForced' has a wrong offset!");

// Function BP_SpiritWolf_Anim.BP_SpiritWolf_Anim_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct BP_SpiritWolf_Anim_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpiritWolf_Anim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on BP_SpiritWolf_Anim_C_BlueprintUpdateAnimation");
static_assert(sizeof(BP_SpiritWolf_Anim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on BP_SpiritWolf_Anim_C_BlueprintUpdateAnimation");
static_assert(offsetof(BP_SpiritWolf_Anim_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'BP_SpiritWolf_Anim_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function BP_SpiritWolf_Anim.BP_SpiritWolf_Anim_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct BP_SpiritWolf_Anim_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BP_SpiritWolf_Anim_C_AnimGraph) == 0x000008, "Wrong alignment on BP_SpiritWolf_Anim_C_AnimGraph");
static_assert(sizeof(BP_SpiritWolf_Anim_C_AnimGraph) == 0x000010, "Wrong size on BP_SpiritWolf_Anim_C_AnimGraph");
static_assert(offsetof(BP_SpiritWolf_Anim_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'BP_SpiritWolf_Anim_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

