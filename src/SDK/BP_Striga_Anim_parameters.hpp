#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Striga_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Striga_Anim.BP_Striga_Anim_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct BP_Striga_Anim_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BP_Striga_Anim_C_AnimGraph) == 0x000008, "Wrong alignment on BP_Striga_Anim_C_AnimGraph");
static_assert(sizeof(BP_Striga_Anim_C_AnimGraph) == 0x000010, "Wrong size on BP_Striga_Anim_C_AnimGraph");
static_assert(offsetof(BP_Striga_Anim_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'BP_Striga_Anim_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function BP_Striga_Anim.BP_Striga_Anim_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct BP_Striga_Anim_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Striga_Anim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on BP_Striga_Anim_C_BlueprintUpdateAnimation");
static_assert(sizeof(BP_Striga_Anim_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on BP_Striga_Anim_C_BlueprintUpdateAnimation");
static_assert(offsetof(BP_Striga_Anim_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'BP_Striga_Anim_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function BP_Striga_Anim.BP_Striga_Anim_C.OnFacingChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Striga_Anim_C_OnFacingChanged final
{
public:
	bool                                          bForced;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Striga_Anim_C_OnFacingChanged) == 0x000001, "Wrong alignment on BP_Striga_Anim_C_OnFacingChanged");
static_assert(sizeof(BP_Striga_Anim_C_OnFacingChanged) == 0x000001, "Wrong size on BP_Striga_Anim_C_OnFacingChanged");
static_assert(offsetof(BP_Striga_Anim_C_OnFacingChanged, bForced) == 0x000000, "Member 'BP_Striga_Anim_C_OnFacingChanged::bForced' has a wrong offset!");

// Function BP_Striga_Anim.BP_Striga_Anim_C.OnAnimStartRequest
// 0x0008 (0x0008 - 0x0000)
struct BP_Striga_Anim_C_OnAnimStartRequest final
{
public:
	class UAnimID*                                AnimID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Striga_Anim_C_OnAnimStartRequest) == 0x000008, "Wrong alignment on BP_Striga_Anim_C_OnAnimStartRequest");
static_assert(sizeof(BP_Striga_Anim_C_OnAnimStartRequest) == 0x000008, "Wrong size on BP_Striga_Anim_C_OnAnimStartRequest");
static_assert(offsetof(BP_Striga_Anim_C_OnAnimStartRequest, AnimID) == 0x000000, "Member 'BP_Striga_Anim_C_OnAnimStartRequest::AnimID' has a wrong offset!");

// Function BP_Striga_Anim.BP_Striga_Anim_C.OnAnimStopRequest
// 0x0008 (0x0008 - 0x0000)
struct BP_Striga_Anim_C_OnAnimStopRequest final
{
public:
	class UAnimID*                                AnimID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Striga_Anim_C_OnAnimStopRequest) == 0x000008, "Wrong alignment on BP_Striga_Anim_C_OnAnimStopRequest");
static_assert(sizeof(BP_Striga_Anim_C_OnAnimStopRequest) == 0x000008, "Wrong size on BP_Striga_Anim_C_OnAnimStopRequest");
static_assert(offsetof(BP_Striga_Anim_C_OnAnimStopRequest, AnimID) == 0x000000, "Member 'BP_Striga_Anim_C_OnAnimStopRequest::AnimID' has a wrong offset!");

// Function BP_Striga_Anim.BP_Striga_Anim_C.ExecuteUbergraph_BP_Striga_Anim
// 0x0048 (0x0048 - 0x0000)
struct BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bForced;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFacing_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimToggled_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimToggled_ReturnValue_1;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimToggled_ReturnValue_2;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimToggled_ReturnValue_3;              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimID*                                K2Node_Event_AnimID_1;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimID*                                K2Node_Event_AnimID;                               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim) == 0x000008, "Wrong alignment on BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim");
static_assert(sizeof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim) == 0x000048, "Wrong size on BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, EntryPoint) == 0x000000, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, CallFunc_SelectInt_ReturnValue) == 0x000004, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, K2Node_Event_DeltaTimeX) == 0x000008, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, K2Node_Event_bForced) == 0x00000C, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::K2Node_Event_bForced' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000014, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, CallFunc_GetFacing_ReturnValue) == 0x00001C, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::CallFunc_GetFacing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, CallFunc_IsAnimToggled_ReturnValue) == 0x000020, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::CallFunc_IsAnimToggled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, CallFunc_IsAnimToggled_ReturnValue_1) == 0x000021, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::CallFunc_IsAnimToggled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, CallFunc_IsAnimToggled_ReturnValue_2) == 0x000022, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::CallFunc_IsAnimToggled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, CallFunc_IsAnimToggled_ReturnValue_3) == 0x000023, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::CallFunc_IsAnimToggled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, K2Node_Event_AnimID_1) == 0x000028, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::K2Node_Event_AnimID_1' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, K2Node_Event_AnimID) == 0x000038, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::K2Node_Event_AnimID' has a wrong offset!");
static_assert(offsetof(BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000040, "Member 'BP_Striga_Anim_C_ExecuteUbergraph_BP_Striga_Anim::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

}

