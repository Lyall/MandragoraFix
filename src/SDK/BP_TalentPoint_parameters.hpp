#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TalentPoint

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_TalentPoint.BP_TalentPoint_C.ExecuteUbergraph_BP_TalentPoint
// 0x0030 (0x0030 - 0x0000)
struct BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint) == 0x000008, "Wrong alignment on BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint");
static_assert(sizeof(BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint) == 0x000030, "Wrong size on BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint");
static_assert(offsetof(BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint, EntryPoint) == 0x000000, "Member 'BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint, K2Node_Event_AnimDuration_1) == 0x000008, "Member 'BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x00000C, "Member 'BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint, K2Node_Event_AnimDuration) == 0x000010, "Member 'BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000020, "Member 'BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'BP_TalentPoint_C_ExecuteUbergraph_BP_TalentPoint::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function BP_TalentPoint.BP_TalentPoint_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_TalentPoint_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalentPoint_C_OnShow) == 0x000004, "Wrong alignment on BP_TalentPoint_C_OnShow");
static_assert(sizeof(BP_TalentPoint_C_OnShow) == 0x000004, "Wrong size on BP_TalentPoint_C_OnShow");
static_assert(offsetof(BP_TalentPoint_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_TalentPoint_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_TalentPoint.BP_TalentPoint_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_TalentPoint_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalentPoint_C_OnHide) == 0x000004, "Wrong alignment on BP_TalentPoint_C_OnHide");
static_assert(sizeof(BP_TalentPoint_C_OnHide) == 0x000004, "Wrong size on BP_TalentPoint_C_OnHide");
static_assert(offsetof(BP_TalentPoint_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_TalentPoint_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_TalentPoint.BP_TalentPoint_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_TalentPoint_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalentPoint_C_PreConstruct) == 0x000001, "Wrong alignment on BP_TalentPoint_C_PreConstruct");
static_assert(sizeof(BP_TalentPoint_C_PreConstruct) == 0x000001, "Wrong size on BP_TalentPoint_C_PreConstruct");
static_assert(offsetof(BP_TalentPoint_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_TalentPoint_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

