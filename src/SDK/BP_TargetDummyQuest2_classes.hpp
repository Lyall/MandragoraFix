#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TargetDummyQuest2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TargetDummyQuest2.BP_TargetDummyQuest2_C
// 0x00E0 (0x1BA0 - 0x1AC0)
class ABP_TargetDummyQuest2_C final : public AEnemyCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1AC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UManVisualController*                   ManVisualController;                               // 0x1AC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_VampireCastle_Plank041;                         // 0x1AD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x1AD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x1AE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SpeechBubbleComponent_C*            BP_SpeechBubbleComponent;                          // 0x1AE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHurtCapsule*                           HurtCapsule_Static;                                // 0x1AF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitBox*                                ShowHitBox;                                        // 0x1AF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SS1_pos0;                                          // 0x1B00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SS1_pos2;                                          // 0x1B08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SS1_pos1;                                          // 0x1B10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SSword;                                            // 0x1B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHurtCapsule*                           Arm_Right_Lower;                                   // 0x1B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHurtCapsule*                           Arm_Left_Lower;                                    // 0x1B28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHurtCapsule*                           Arm_Right_Upper;                                   // 0x1B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHurtCapsule*                           Arm_Left_Upper;                                    // 0x1B38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHurtCapsule*                           Head;                                              // 0x1B40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHurtCapsule*                           Leg_Left_Lower;                                    // 0x1B48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHurtCapsule*                           Leg_Right_Lower;                                   // 0x1B50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHurtCapsule*                           Leg_Left;                                          // 0x1B58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHurtCapsule*                           Leg_Right;                                         // 0x1B60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHurtCapsule*                           Torso;                                             // 0x1B68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTimerRunning;                                    // 0x1B70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B71[0x3];                                     // 0x1B71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DamageTimer;                                       // 0x1B74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviousGameTime;                                  // 0x1B78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TemporalSamplingPerFrame;                          // 0x1B7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Random1;                                           // 0x1B80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Random2;                                           // 0x1B84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Random3;                                           // 0x1B88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Random4;                                           // 0x1B8C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindIntensity;                                     // 0x1B90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x1B94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TargetDummyQuest2(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void CustomDamageReceivedEvent(class AActorSoul* Source, class AActorSoul* Target, class UAbilityBase* Ability, class UAnimID* Anim, float effectiveDamage, const struct FDamageValue& OriginalDamageValue, const struct FDamageValue& DamageValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TargetDummyQuest2_C">();
	}
	static class ABP_TargetDummyQuest2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TargetDummyQuest2_C>();
	}
};
static_assert(alignof(ABP_TargetDummyQuest2_C) == 0x000010, "Wrong alignment on ABP_TargetDummyQuest2_C");
static_assert(sizeof(ABP_TargetDummyQuest2_C) == 0x001BA0, "Wrong size on ABP_TargetDummyQuest2_C");
static_assert(offsetof(ABP_TargetDummyQuest2_C, UberGraphFrame) == 0x001AC0, "Member 'ABP_TargetDummyQuest2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, ManVisualController) == 0x001AC8, "Member 'ABP_TargetDummyQuest2_C::ManVisualController' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, SM_VampireCastle_Plank041) == 0x001AD0, "Member 'ABP_TargetDummyQuest2_C::SM_VampireCastle_Plank041' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, StaticMesh) == 0x001AD8, "Member 'ABP_TargetDummyQuest2_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Scene) == 0x001AE0, "Member 'ABP_TargetDummyQuest2_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, BP_SpeechBubbleComponent) == 0x001AE8, "Member 'ABP_TargetDummyQuest2_C::BP_SpeechBubbleComponent' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, HurtCapsule_Static) == 0x001AF0, "Member 'ABP_TargetDummyQuest2_C::HurtCapsule_Static' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, ShowHitBox) == 0x001AF8, "Member 'ABP_TargetDummyQuest2_C::ShowHitBox' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, SS1_pos0) == 0x001B00, "Member 'ABP_TargetDummyQuest2_C::SS1_pos0' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, SS1_pos2) == 0x001B08, "Member 'ABP_TargetDummyQuest2_C::SS1_pos2' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, SS1_pos1) == 0x001B10, "Member 'ABP_TargetDummyQuest2_C::SS1_pos1' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, SSword) == 0x001B18, "Member 'ABP_TargetDummyQuest2_C::SSword' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Arm_Right_Lower) == 0x001B20, "Member 'ABP_TargetDummyQuest2_C::Arm_Right_Lower' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Arm_Left_Lower) == 0x001B28, "Member 'ABP_TargetDummyQuest2_C::Arm_Left_Lower' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Arm_Right_Upper) == 0x001B30, "Member 'ABP_TargetDummyQuest2_C::Arm_Right_Upper' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Arm_Left_Upper) == 0x001B38, "Member 'ABP_TargetDummyQuest2_C::Arm_Left_Upper' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Head) == 0x001B40, "Member 'ABP_TargetDummyQuest2_C::Head' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Leg_Left_Lower) == 0x001B48, "Member 'ABP_TargetDummyQuest2_C::Leg_Left_Lower' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Leg_Right_Lower) == 0x001B50, "Member 'ABP_TargetDummyQuest2_C::Leg_Right_Lower' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Leg_Left) == 0x001B58, "Member 'ABP_TargetDummyQuest2_C::Leg_Left' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Leg_Right) == 0x001B60, "Member 'ABP_TargetDummyQuest2_C::Leg_Right' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Torso) == 0x001B68, "Member 'ABP_TargetDummyQuest2_C::Torso' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, IsTimerRunning) == 0x001B70, "Member 'ABP_TargetDummyQuest2_C::IsTimerRunning' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, DamageTimer) == 0x001B74, "Member 'ABP_TargetDummyQuest2_C::DamageTimer' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, PreviousGameTime) == 0x001B78, "Member 'ABP_TargetDummyQuest2_C::PreviousGameTime' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, TemporalSamplingPerFrame) == 0x001B7C, "Member 'ABP_TargetDummyQuest2_C::TemporalSamplingPerFrame' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Random1) == 0x001B80, "Member 'ABP_TargetDummyQuest2_C::Random1' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Random2) == 0x001B84, "Member 'ABP_TargetDummyQuest2_C::Random2' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Random3) == 0x001B88, "Member 'ABP_TargetDummyQuest2_C::Random3' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Random4) == 0x001B8C, "Member 'ABP_TargetDummyQuest2_C::Random4' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, WindIntensity) == 0x001B90, "Member 'ABP_TargetDummyQuest2_C::WindIntensity' has a wrong offset!");
static_assert(offsetof(ABP_TargetDummyQuest2_C, Time) == 0x001B94, "Member 'ABP_TargetDummyQuest2_C::Time' has a wrong offset!");

}

