#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TargetDummyQuest2

#include "Basic.hpp"

#include "BP_TargetDummyQuest2_classes.hpp"
#include "BP_TargetDummyQuest2_parameters.hpp"


namespace SDK
{

// Function BP_TargetDummyQuest2.BP_TargetDummyQuest2_C.ExecuteUbergraph_BP_TargetDummyQuest2
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TargetDummyQuest2_C::ExecuteUbergraph_BP_TargetDummyQuest2(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TargetDummyQuest2_C", "ExecuteUbergraph_BP_TargetDummyQuest2");

	Params::BP_TargetDummyQuest2_C_ExecuteUbergraph_BP_TargetDummyQuest2 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TargetDummyQuest2.BP_TargetDummyQuest2_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TargetDummyQuest2_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TargetDummyQuest2_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TargetDummyQuest2.BP_TargetDummyQuest2_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TargetDummyQuest2_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TargetDummyQuest2_C", "ReceiveTick");

	Params::BP_TargetDummyQuest2_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TargetDummyQuest2.BP_TargetDummyQuest2_C.CustomDamageReceivedEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActorSoul*                       Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActorSoul*                       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilityBase*                     Ability                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimID*                          Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   effectiveDamage                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDamageValue                     OriginalDamageValue                                    (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// struct FDamageValue                     DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_TargetDummyQuest2_C::CustomDamageReceivedEvent(class AActorSoul* Source, class AActorSoul* Target, class UAbilityBase* Ability, class UAnimID* Anim, float effectiveDamage, const struct FDamageValue& OriginalDamageValue, const struct FDamageValue& DamageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TargetDummyQuest2_C", "CustomDamageReceivedEvent");

	Params::BP_TargetDummyQuest2_C_CustomDamageReceivedEvent Parms{};

	Parms.Source = Source;
	Parms.Target = Target;
	Parms.Ability = Ability;
	Parms.Anim = Anim;
	Parms.effectiveDamage = effectiveDamage;
	Parms.OriginalDamageValue = std::move(OriginalDamageValue);
	Parms.DamageValue = std::move(DamageValue);

	UObject::ProcessEvent(Func, &Parms);
}

}

