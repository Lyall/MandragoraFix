#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThorndanceThorn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ThorndanceThorn.BP_ThorndanceThorn_C
// 0x0030 (0x0A38 - 0x0A08)
class ABP_ThorndanceThorn_C final : public AThornDanceDamager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A08(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        VisualFallback;                                    // 0x0A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Visual;                                            // 0x0A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitBox*                                HitBox;                                            // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AVisualEntity*                          Precursor;                                         // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ThorndanceThorn(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ThornTriggered();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ThorndanceThorn_C">();
	}
	static class ABP_ThorndanceThorn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ThorndanceThorn_C>();
	}
};
static_assert(alignof(ABP_ThorndanceThorn_C) == 0x000008, "Wrong alignment on ABP_ThorndanceThorn_C");
static_assert(sizeof(ABP_ThorndanceThorn_C) == 0x000A38, "Wrong size on ABP_ThorndanceThorn_C");
static_assert(offsetof(ABP_ThorndanceThorn_C, UberGraphFrame) == 0x000A08, "Member 'ABP_ThorndanceThorn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ThorndanceThorn_C, VisualFallback) == 0x000A10, "Member 'ABP_ThorndanceThorn_C::VisualFallback' has a wrong offset!");
static_assert(offsetof(ABP_ThorndanceThorn_C, Visual) == 0x000A18, "Member 'ABP_ThorndanceThorn_C::Visual' has a wrong offset!");
static_assert(offsetof(ABP_ThorndanceThorn_C, HitBox) == 0x000A20, "Member 'ABP_ThorndanceThorn_C::HitBox' has a wrong offset!");
static_assert(offsetof(ABP_ThorndanceThorn_C, Scene) == 0x000A28, "Member 'ABP_ThorndanceThorn_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_ThorndanceThorn_C, Precursor) == 0x000A30, "Member 'ABP_ThorndanceThorn_C::Precursor' has a wrong offset!");

}

