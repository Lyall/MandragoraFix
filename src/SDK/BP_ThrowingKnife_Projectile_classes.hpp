#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThrowingKnife_Projectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ThrowingKnife_Projectile.BP_ThrowingKnife_Projectile_C
// 0x0030 (0x0B20 - 0x0AF0)
class ABP_ThrowingKnife_Projectile_C : public AManProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AF0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0AF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0B00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Rotator;                                           // 0x0B08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AVisualEntity>              TrailVE;                                           // 0x0B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Left;                                              // 0x0B18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BP_ThrowingKnife_Projectile(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ThrowingKnife_Projectile_C">();
	}
	static class ABP_ThrowingKnife_Projectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ThrowingKnife_Projectile_C>();
	}
};
static_assert(alignof(ABP_ThrowingKnife_Projectile_C) == 0x000008, "Wrong alignment on ABP_ThrowingKnife_Projectile_C");
static_assert(sizeof(ABP_ThrowingKnife_Projectile_C) == 0x000B20, "Wrong size on ABP_ThrowingKnife_Projectile_C");
static_assert(offsetof(ABP_ThrowingKnife_Projectile_C, UberGraphFrame) == 0x000AF0, "Member 'ABP_ThrowingKnife_Projectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ThrowingKnife_Projectile_C, Ak) == 0x000AF8, "Member 'ABP_ThrowingKnife_Projectile_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_ThrowingKnife_Projectile_C, SkeletalMesh) == 0x000B00, "Member 'ABP_ThrowingKnife_Projectile_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_ThrowingKnife_Projectile_C, Rotator) == 0x000B08, "Member 'ABP_ThrowingKnife_Projectile_C::Rotator' has a wrong offset!");
static_assert(offsetof(ABP_ThrowingKnife_Projectile_C, TrailVE) == 0x000B10, "Member 'ABP_ThrowingKnife_Projectile_C::TrailVE' has a wrong offset!");
static_assert(offsetof(ABP_ThrowingKnife_Projectile_C, Left) == 0x000B18, "Member 'ABP_ThrowingKnife_Projectile_C::Left' has a wrong offset!");

}

