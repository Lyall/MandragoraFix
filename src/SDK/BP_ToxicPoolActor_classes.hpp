#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ToxicPoolActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ToxicPoolActor.BP_ToxicPoolActor_C
// 0x0060 (0x0838 - 0x07D8)
class ABP_ToxicPoolActor_C final : public AActorBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Visual;                                            // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitBox*                                HitBox;                                            // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           DamageAbility;                                     // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SurfaceXVector;                                    // 0x0808(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SurfaceZVector;                                    // 0x0814(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SurfaceStartX;                                     // 0x0820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SurfaceEndX;                                       // 0x0824(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PoisonWidth;                                       // 0x0828(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PoisonHeight;                                      // 0x082C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PoisonTickRate;                                    // 0x0830(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ToxicPoolActor(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void AdjustToSurface();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ToxicPoolActor_C">();
	}
	static class ABP_ToxicPoolActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ToxicPoolActor_C>();
	}
};
static_assert(alignof(ABP_ToxicPoolActor_C) == 0x000008, "Wrong alignment on ABP_ToxicPoolActor_C");
static_assert(sizeof(ABP_ToxicPoolActor_C) == 0x000838, "Wrong size on ABP_ToxicPoolActor_C");
static_assert(offsetof(ABP_ToxicPoolActor_C, UberGraphFrame) == 0x0007D8, "Member 'ABP_ToxicPoolActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ToxicPoolActor_C, Ak) == 0x0007E0, "Member 'ABP_ToxicPoolActor_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_ToxicPoolActor_C, Visual) == 0x0007E8, "Member 'ABP_ToxicPoolActor_C::Visual' has a wrong offset!");
static_assert(offsetof(ABP_ToxicPoolActor_C, HitBox) == 0x0007F0, "Member 'ABP_ToxicPoolActor_C::HitBox' has a wrong offset!");
static_assert(offsetof(ABP_ToxicPoolActor_C, DefaultSceneRoot) == 0x0007F8, "Member 'ABP_ToxicPoolActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ToxicPoolActor_C, DamageAbility) == 0x000800, "Member 'ABP_ToxicPoolActor_C::DamageAbility' has a wrong offset!");
static_assert(offsetof(ABP_ToxicPoolActor_C, SurfaceXVector) == 0x000808, "Member 'ABP_ToxicPoolActor_C::SurfaceXVector' has a wrong offset!");
static_assert(offsetof(ABP_ToxicPoolActor_C, SurfaceZVector) == 0x000814, "Member 'ABP_ToxicPoolActor_C::SurfaceZVector' has a wrong offset!");
static_assert(offsetof(ABP_ToxicPoolActor_C, SurfaceStartX) == 0x000820, "Member 'ABP_ToxicPoolActor_C::SurfaceStartX' has a wrong offset!");
static_assert(offsetof(ABP_ToxicPoolActor_C, SurfaceEndX) == 0x000824, "Member 'ABP_ToxicPoolActor_C::SurfaceEndX' has a wrong offset!");
static_assert(offsetof(ABP_ToxicPoolActor_C, PoisonWidth) == 0x000828, "Member 'ABP_ToxicPoolActor_C::PoisonWidth' has a wrong offset!");
static_assert(offsetof(ABP_ToxicPoolActor_C, PoisonHeight) == 0x00082C, "Member 'ABP_ToxicPoolActor_C::PoisonHeight' has a wrong offset!");
static_assert(offsetof(ABP_ToxicPoolActor_C, PoisonTickRate) == 0x000830, "Member 'ABP_ToxicPoolActor_C::PoisonTickRate' has a wrong offset!");

}

