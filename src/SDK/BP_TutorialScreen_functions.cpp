#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TutorialScreen

#include "Basic.hpp"

#include "BP_TutorialScreen_classes.hpp"
#include "BP_TutorialScreen_parameters.hpp"


namespace SDK
{

// Function BP_TutorialScreen.BP_TutorialScreen_C.ExecuteUbergraph_BP_TutorialScreen
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TutorialScreen_C::ExecuteUbergraph_BP_TutorialScreen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "ExecuteUbergraph_BP_TutorialScreen");

	Params::BP_TutorialScreen_C_ExecuteUbergraph_BP_TutorialScreen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.BndEvt__BP_TutorialScreen_BtnUp_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_TutorialScreen_C::BndEvt__BP_TutorialScreen_BtnUp_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "BndEvt__BP_TutorialScreen_BtnUp_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.OnSetReplayBtnsState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bUpEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDownEnabled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_TutorialScreen_C::OnSetReplayBtnsState(bool bUpEnabled, bool bDownEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "OnSetReplayBtnsState");

	Params::BP_TutorialScreen_C_OnSetReplayBtnsState Parms{};

	Parms.bUpEnabled = bUpEnabled;
	Parms.bDownEnabled = bDownEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.OnGamepadDPadDownEvent
// (Event, Public, BlueprintEvent)

void UBP_TutorialScreen_C::OnGamepadDPadDownEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "OnGamepadDPadDownEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.OnGamepadDPadUpEvent
// (Event, Public, BlueprintEvent)

void UBP_TutorialScreen_C::OnGamepadDPadUpEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "OnGamepadDPadUpEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.OnSetInputDisplay
// (Event, Public, BlueprintEvent)
// Parameters:
// EInputDisplay                           InInputDisplay                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInputDisplay                           InControlDisplay                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TutorialScreen_C::OnSetInputDisplay(EInputDisplay InInputDisplay, EInputDisplay InControlDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "OnSetInputDisplay");

	Params::BP_TutorialScreen_C_OnSetInputDisplay Parms{};

	Parms.InInputDisplay = InInputDisplay;
	Parms.InControlDisplay = InControlDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.OnGamepadDPadRightEvent
// (Event, Public, BlueprintEvent)

void UBP_TutorialScreen_C::OnGamepadDPadRightEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "OnGamepadDPadRightEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.OnGamepadDPadLeftEvent
// (Event, Public, BlueprintEvent)

void UBP_TutorialScreen_C::OnGamepadDPadLeftEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "OnGamepadDPadLeftEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.OnSetDescription
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Description                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_TutorialScreen_C::OnSetDescription(const class FText& Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "OnSetDescription");

	Params::BP_TutorialScreen_C_OnSetDescription Parms{};

	Parms.Description = std::move(Description);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.OnSetPage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Title_0                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             InPageNumber                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   CurrentPage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxPage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFade                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_TutorialScreen_C::OnSetPage(const class FText& Title_0, const class FText& InPageNumber, int32 CurrentPage, int32 MaxPage, bool bFade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "OnSetPage");

	Params::BP_TutorialScreen_C_OnSetPage Parms{};

	Parms.Title_0 = std::move(Title_0);
	Parms.InPageNumber = std::move(InPageNumber);
	Parms.CurrentPage = CurrentPage;
	Parms.MaxPage = MaxPage;
	Parms.bFade = bFade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.BndEvt__BP_Tutorial_BtnDown_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_TutorialScreen_C::BndEvt__BP_Tutorial_BtnDown_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "BndEvt__BP_Tutorial_BtnDown_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.BndEvt__BP_Tutorial_BtnRight_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_TutorialScreen_C::BndEvt__BP_Tutorial_BtnRight_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "BndEvt__BP_Tutorial_BtnRight_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.BndEvt__BP_Tutorial_BtnLeft_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_TutorialScreen_C::BndEvt__BP_Tutorial_BtnLeft_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "BndEvt__BP_Tutorial_BtnLeft_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.OnHide
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TutorialScreen_C::OnHide(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "OnHide");

	Params::BP_TutorialScreen_C_OnHide Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.OnShow
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TutorialScreen_C::OnShow(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "OnShow");

	Params::BP_TutorialScreen_C_OnShow Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.BndEvt__BP_Collection_BtnClose_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_TutorialScreen_C::BndEvt__BP_Collection_BtnClose_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "BndEvt__BP_Collection_BtnClose_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.BndEvt__BP_Glossary_BtnHotkeyB_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// (BlueprintEvent)

void UBP_TutorialScreen_C::BndEvt__BP_Glossary_BtnHotkeyB_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "BndEvt__BP_Glossary_BtnHotkeyB_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.OnGamepadBEvent
// (Event, Public, BlueprintEvent)

void UBP_TutorialScreen_C::OnGamepadBEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "OnGamepadBEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.BtnHotkeyBClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_TutorialScreen_C::BtnHotkeyBClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "BtnHotkeyBClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.SetBtnCloseVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_TutorialScreen_C::SetBtnCloseVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "SetBtnCloseVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.BtnHotkeyDPadUpClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_TutorialScreen_C::BtnHotkeyDPadUpClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "BtnHotkeyDPadUpClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.BtnHotkeyDPadDownClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_TutorialScreen_C::BtnHotkeyDPadDownClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "BtnHotkeyDPadDownClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.BtnHotkeyDpadLeftClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_TutorialScreen_C::BtnHotkeyDpadLeftClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "BtnHotkeyDpadLeftClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.BtnHotkeyDpadRightClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_TutorialScreen_C::BtnHotkeyDpadRightClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "BtnHotkeyDpadRightClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.SetPageBtnsState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentPage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxPage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TutorialScreen_C::SetPageBtnsState(int32 CurrentPage, int32 MaxPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "SetPageBtnsState");

	Params::BP_TutorialScreen_C_SetPageBtnsState Parms{};

	Parms.CurrentPage = CurrentPage;
	Parms.MaxPage = MaxPage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialScreen.BP_TutorialScreen_C.SetPage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Title_0                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             InPageNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   CurrentPage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxPage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Fade                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_TutorialScreen_C::SetPage(const class FText& Title_0, const class FText& InPageNumber, int32 CurrentPage, int32 MaxPage, bool Fade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialScreen_C", "SetPage");

	Params::BP_TutorialScreen_C_SetPage Parms{};

	Parms.Title_0 = std::move(Title_0);
	Parms.InPageNumber = std::move(InPageNumber);
	Parms.CurrentPage = CurrentPage;
	Parms.MaxPage = MaxPage;
	Parms.Fade = Fade;

	UObject::ProcessEvent(Func, &Parms);
}

}

