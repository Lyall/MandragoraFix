#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TwinFangsProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TwinFangsProjectile.BP_TwinFangsProjectile_C
// 0x0030 (0x0B78 - 0x0B48)
class ABP_TwinFangsProjectile_C final : public ATwinFangsProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B48(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0B50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0B58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AVisualEntity*                          Projectile;                                        // 0x0B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVisualEntity*                          Ricochet;                                          // 0x0B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StoredFacing;                                      // 0x0B70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TwinFangsProjectile(int32 EntryPoint);
	void ReceiveBeginPlay();
	void BndEvt__BP_TwinFangsProjectile_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void StartRicochet();
	void HitGround();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TwinFangsProjectile_C">();
	}
	static class ABP_TwinFangsProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TwinFangsProjectile_C>();
	}
};
static_assert(alignof(ABP_TwinFangsProjectile_C) == 0x000008, "Wrong alignment on ABP_TwinFangsProjectile_C");
static_assert(sizeof(ABP_TwinFangsProjectile_C) == 0x000B78, "Wrong size on ABP_TwinFangsProjectile_C");
static_assert(offsetof(ABP_TwinFangsProjectile_C, UberGraphFrame) == 0x000B48, "Member 'ABP_TwinFangsProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TwinFangsProjectile_C, Ak) == 0x000B50, "Member 'ABP_TwinFangsProjectile_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_TwinFangsProjectile_C, Sphere) == 0x000B58, "Member 'ABP_TwinFangsProjectile_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_TwinFangsProjectile_C, Projectile) == 0x000B60, "Member 'ABP_TwinFangsProjectile_C::Projectile' has a wrong offset!");
static_assert(offsetof(ABP_TwinFangsProjectile_C, Ricochet) == 0x000B68, "Member 'ABP_TwinFangsProjectile_C::Ricochet' has a wrong offset!");
static_assert(offsetof(ABP_TwinFangsProjectile_C, StoredFacing) == 0x000B70, "Member 'ABP_TwinFangsProjectile_C::StoredFacing' has a wrong offset!");

}

