#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UseItemNotification

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "man_structs.hpp"


namespace SDK::Params
{

// Function BP_UseItemNotification.BP_UseItemNotification_C.ExecuteUbergraph_BP_UseItemNotification
// 0x000C (0x000C - 0x0000)
struct BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESmallScreenMode                              CallFunc_GetSmallScreenMode_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESmallScreenMode                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification) == 0x000004, "Wrong alignment on BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification");
static_assert(sizeof(BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification) == 0x00000C, "Wrong size on BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification");
static_assert(offsetof(BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification, EntryPoint) == 0x000000, "Member 'BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification, CallFunc_GetSmallScreenMode_ReturnValue) == 0x000004, "Member 'BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification::CallFunc_GetSmallScreenMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification, Temp_byte_Variable) == 0x000005, "Member 'BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification, Temp_bool_Variable) == 0x000006, "Member 'BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification, Temp_bool_Variable_1) == 0x000007, "Member 'BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification, Temp_bool_Variable_2) == 0x000008, "Member 'BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification, Temp_bool_Variable_3) == 0x000009, "Member 'BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification, K2Node_Event_IsDesignTime) == 0x00000A, "Member 'BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification, K2Node_Select_Default) == 0x00000B, "Member 'BP_UseItemNotification_C_ExecuteUbergraph_BP_UseItemNotification::K2Node_Select_Default' has a wrong offset!");

// Function BP_UseItemNotification.BP_UseItemNotification_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_UseItemNotification_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemNotification_C_PreConstruct) == 0x000001, "Wrong alignment on BP_UseItemNotification_C_PreConstruct");
static_assert(sizeof(BP_UseItemNotification_C_PreConstruct) == 0x000001, "Wrong size on BP_UseItemNotification_C_PreConstruct");
static_assert(offsetof(BP_UseItemNotification_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_UseItemNotification_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_UseItemNotification.BP_UseItemNotification_C.SetData
// 0x0070 (0x0070 - 0x0000)
struct BP_UseItemNotification_C_SetData final
{
public:
	class FText                                   Param_Name_0;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             Icon_0;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0058(0x0018)()
};
static_assert(alignof(BP_UseItemNotification_C_SetData) == 0x000008, "Wrong alignment on BP_UseItemNotification_C_SetData");
static_assert(sizeof(BP_UseItemNotification_C_SetData) == 0x000070, "Wrong size on BP_UseItemNotification_C_SetData");
static_assert(offsetof(BP_UseItemNotification_C_SetData, Param_Name_0) == 0x000000, "Member 'BP_UseItemNotification_C_SetData::Param_Name_0' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_SetData, Icon_0) == 0x000018, "Member 'BP_UseItemNotification_C_SetData::Icon_0' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_SetData, Number) == 0x000020, "Member 'BP_UseItemNotification_C_SetData::Number' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_SetData, Temp_int_Variable) == 0x000024, "Member 'BP_UseItemNotification_C_SetData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_SetData, Temp_object_Variable) == 0x000028, "Member 'BP_UseItemNotification_C_SetData::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_SetData, Temp_object_Variable_1) == 0x000030, "Member 'BP_UseItemNotification_C_SetData::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_SetData, Temp_object_Variable_2) == 0x000038, "Member 'BP_UseItemNotification_C_SetData::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_SetData, CallFunc_RandomInteger_ReturnValue) == 0x000040, "Member 'BP_UseItemNotification_C_SetData::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_SetData, K2Node_Select_Default) == 0x000048, "Member 'BP_UseItemNotification_C_SetData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_SetData, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_UseItemNotification_C_SetData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_SetData, CallFunc_IntToText_ReturnValue) == 0x000058, "Member 'BP_UseItemNotification_C_SetData::CallFunc_IntToText_ReturnValue' has a wrong offset!");

// Function BP_UseItemNotification.BP_UseItemNotification_C.ShowNotification
// 0x0020 (0x0020 - 0x0000)
struct BP_UseItemNotification_C_ShowNotification final
{
public:
	float                                         Timeout;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemNotification_C_ShowNotification) == 0x000008, "Wrong alignment on BP_UseItemNotification_C_ShowNotification");
static_assert(sizeof(BP_UseItemNotification_C_ShowNotification) == 0x000020, "Wrong size on BP_UseItemNotification_C_ShowNotification");
static_assert(offsetof(BP_UseItemNotification_C_ShowNotification, Timeout) == 0x000000, "Member 'BP_UseItemNotification_C_ShowNotification::Timeout' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ShowNotification, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'BP_UseItemNotification_C_ShowNotification::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ShowNotification, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000010, "Member 'BP_UseItemNotification_C_ShowNotification::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ShowNotification, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'BP_UseItemNotification_C_ShowNotification::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_UseItemNotification.BP_UseItemNotification_C.HideNotification
// 0x0008 (0x0008 - 0x0000)
struct BP_UseItemNotification_C_HideNotification final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemNotification_C_HideNotification) == 0x000008, "Wrong alignment on BP_UseItemNotification_C_HideNotification");
static_assert(sizeof(BP_UseItemNotification_C_HideNotification) == 0x000008, "Wrong size on BP_UseItemNotification_C_HideNotification");
static_assert(offsetof(BP_UseItemNotification_C_HideNotification, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_UseItemNotification_C_HideNotification::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_UseItemNotification.BP_UseItemNotification_C.ToggleSmallScreen
// 0x0068 (0x0068 - 0x0000)
struct BP_UseItemNotification_C_ToggleSmallScreen final
{
public:
	bool                                          InIsSmallScreen;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0010(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemNotification_C_ToggleSmallScreen) == 0x000008, "Wrong alignment on BP_UseItemNotification_C_ToggleSmallScreen");
static_assert(sizeof(BP_UseItemNotification_C_ToggleSmallScreen) == 0x000068, "Wrong size on BP_UseItemNotification_C_ToggleSmallScreen");
static_assert(offsetof(BP_UseItemNotification_C_ToggleSmallScreen, InIsSmallScreen) == 0x000000, "Member 'BP_UseItemNotification_C_ToggleSmallScreen::InIsSmallScreen' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ToggleSmallScreen, Temp_bool_Variable) == 0x000001, "Member 'BP_UseItemNotification_C_ToggleSmallScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ToggleSmallScreen, Temp_int_Variable) == 0x000004, "Member 'BP_UseItemNotification_C_ToggleSmallScreen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ToggleSmallScreen, Temp_int_Variable_1) == 0x000008, "Member 'BP_UseItemNotification_C_ToggleSmallScreen::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ToggleSmallScreen, K2Node_Select_Default) == 0x00000C, "Member 'BP_UseItemNotification_C_ToggleSmallScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UseItemNotification_C_ToggleSmallScreen, K2Node_MakeStruct_SlateFontInfo) == 0x000010, "Member 'BP_UseItemNotification_C_ToggleSmallScreen::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

}

