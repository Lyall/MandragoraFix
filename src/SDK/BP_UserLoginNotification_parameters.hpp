#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UserLoginNotification

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_UserLoginNotification.BP_UserLoginNotification_C.HideNotification
// 0x0008 (0x0008 - 0x0000)
struct BP_UserLoginNotification_C_HideNotification final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UserLoginNotification_C_HideNotification) == 0x000008, "Wrong alignment on BP_UserLoginNotification_C_HideNotification");
static_assert(sizeof(BP_UserLoginNotification_C_HideNotification) == 0x000008, "Wrong size on BP_UserLoginNotification_C_HideNotification");
static_assert(offsetof(BP_UserLoginNotification_C_HideNotification, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_UserLoginNotification_C_HideNotification::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_UserLoginNotification.BP_UserLoginNotification_C.ShowNotification
// 0x0008 (0x0008 - 0x0000)
struct BP_UserLoginNotification_C_ShowNotification final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UserLoginNotification_C_ShowNotification) == 0x000008, "Wrong alignment on BP_UserLoginNotification_C_ShowNotification");
static_assert(sizeof(BP_UserLoginNotification_C_ShowNotification) == 0x000008, "Wrong size on BP_UserLoginNotification_C_ShowNotification");
static_assert(offsetof(BP_UserLoginNotification_C_ShowNotification, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_UserLoginNotification_C_ShowNotification::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_UserLoginNotification.BP_UserLoginNotification_C.SetData
// 0x0030 (0x0030 - 0x0000)
struct BP_UserLoginNotification_C_SetData final
{
public:
	class FText                                   Param_Name_0;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             FrameSpecial;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             FrameNormal;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar_0;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UserLoginNotification_C_SetData) == 0x000008, "Wrong alignment on BP_UserLoginNotification_C_SetData");
static_assert(sizeof(BP_UserLoginNotification_C_SetData) == 0x000030, "Wrong size on BP_UserLoginNotification_C_SetData");
static_assert(offsetof(BP_UserLoginNotification_C_SetData, Param_Name_0) == 0x000000, "Member 'BP_UserLoginNotification_C_SetData::Param_Name_0' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_SetData, FrameSpecial) == 0x000018, "Member 'BP_UserLoginNotification_C_SetData::FrameSpecial' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_SetData, FrameNormal) == 0x000020, "Member 'BP_UserLoginNotification_C_SetData::FrameNormal' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_SetData, NewLocalVar_0) == 0x000028, "Member 'BP_UserLoginNotification_C_SetData::NewLocalVar_0' has a wrong offset!");

// Function BP_UserLoginNotification.BP_UserLoginNotification_C.OnSetData
// 0x0048 (0x0048 - 0x0000)
struct BP_UserLoginNotification_C_OnSetData final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   InDescription;                                     // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UTexture2D*                             InIcon;                                            // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InNumber;                                          // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemAbility*                           InItemAbility;                                     // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UserLoginNotification_C_OnSetData) == 0x000008, "Wrong alignment on BP_UserLoginNotification_C_OnSetData");
static_assert(sizeof(BP_UserLoginNotification_C_OnSetData) == 0x000048, "Wrong size on BP_UserLoginNotification_C_OnSetData");
static_assert(offsetof(BP_UserLoginNotification_C_OnSetData, InName) == 0x000000, "Member 'BP_UserLoginNotification_C_OnSetData::InName' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_OnSetData, InDescription) == 0x000018, "Member 'BP_UserLoginNotification_C_OnSetData::InDescription' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_OnSetData, InIcon) == 0x000030, "Member 'BP_UserLoginNotification_C_OnSetData::InIcon' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_OnSetData, InNumber) == 0x000038, "Member 'BP_UserLoginNotification_C_OnSetData::InNumber' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_OnSetData, InItemAbility) == 0x000040, "Member 'BP_UserLoginNotification_C_OnSetData::InItemAbility' has a wrong offset!");

// Function BP_UserLoginNotification.BP_UserLoginNotification_C.ExecuteUbergraph_BP_UserLoginNotification
// 0x0088 (0x0088 - 0x0000)
struct BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InName;                               // 0x0008(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InDescription;                        // 0x0020(0x0018)(ConstParm)
	class UTexture2D*                             K2Node_Event_InIcon;                               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InNumber;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemAbility*                           K2Node_Event_InItemAbility;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXbox_ReturnValue;                       // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification) == 0x000008, "Wrong alignment on BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification");
static_assert(sizeof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification) == 0x000088, "Wrong size on BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification");
static_assert(offsetof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification, EntryPoint) == 0x000000, "Member 'BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification, K2Node_Event_InName) == 0x000008, "Member 'BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification, K2Node_Event_InDescription) == 0x000020, "Member 'BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification::K2Node_Event_InDescription' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification, K2Node_Event_InIcon) == 0x000038, "Member 'BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification::K2Node_Event_InIcon' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification, K2Node_Event_InNumber) == 0x000040, "Member 'BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification::K2Node_Event_InNumber' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification, K2Node_Event_InItemAbility) == 0x000048, "Member 'BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification::K2Node_Event_InItemAbility' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification, CallFunc_GetPlayerController_ReturnValue) == 0x000050, "Member 'BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification, CallFunc_GetPlayerName_ReturnValue) == 0x000058, "Member 'BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification, K2Node_Event_IsDesignTime) == 0x000080, "Member 'BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification, CallFunc_IsXbox_ReturnValue) == 0x000081, "Member 'BP_UserLoginNotification_C_ExecuteUbergraph_BP_UserLoginNotification::CallFunc_IsXbox_ReturnValue' has a wrong offset!");

// Function BP_UserLoginNotification.BP_UserLoginNotification_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_UserLoginNotification_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UserLoginNotification_C_PreConstruct) == 0x000001, "Wrong alignment on BP_UserLoginNotification_C_PreConstruct");
static_assert(sizeof(BP_UserLoginNotification_C_PreConstruct) == 0x000001, "Wrong size on BP_UserLoginNotification_C_PreConstruct");
static_assert(offsetof(BP_UserLoginNotification_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_UserLoginNotification_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

