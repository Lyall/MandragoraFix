#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VFXHandlerAbility

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_VFXHandlerAbility.BP_VFXHandlerAbility_C.ExecuteUbergraph_BP_VFXHandlerAbility
// 0x0040 (0x0040 - 0x0000)
struct BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bMatchHasStarted)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMandragoraGameMode*                    CallFunc_GetGameMode_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMatchHasStarted;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility) == 0x000008, "Wrong alignment on BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility");
static_assert(sizeof(BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility) == 0x000040, "Wrong size on BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility");
static_assert(offsetof(BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility, EntryPoint) == 0x000000, "Member 'BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility, CallFunc_GetAbilityController_ReturnValue) == 0x000028, "Member 'BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility, CallFunc_GetGameMode_ReturnValue) == 0x000030, "Member 'BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility, K2Node_CustomEvent_bMatchHasStarted) == 0x000038, "Member 'BP_VFXHandlerAbility_C_ExecuteUbergraph_BP_VFXHandlerAbility::K2Node_CustomEvent_bMatchHasStarted' has a wrong offset!");

// Function BP_VFXHandlerAbility.BP_VFXHandlerAbility_C.CustomLevelUpIndicatorEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_VFXHandlerAbility_C_CustomLevelUpIndicatorEvent final
{
public:
	bool                                          bMatchHasStarted;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VFXHandlerAbility_C_CustomLevelUpIndicatorEvent) == 0x000001, "Wrong alignment on BP_VFXHandlerAbility_C_CustomLevelUpIndicatorEvent");
static_assert(sizeof(BP_VFXHandlerAbility_C_CustomLevelUpIndicatorEvent) == 0x000001, "Wrong size on BP_VFXHandlerAbility_C_CustomLevelUpIndicatorEvent");
static_assert(offsetof(BP_VFXHandlerAbility_C_CustomLevelUpIndicatorEvent, bMatchHasStarted) == 0x000000, "Member 'BP_VFXHandlerAbility_C_CustomLevelUpIndicatorEvent::bMatchHasStarted' has a wrong offset!");

}

