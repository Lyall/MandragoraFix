#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VendorPortraits

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_VendorPortraits.BP_VendorPortraits_C.ExecuteUbergraph_BP_VendorPortraits
// 0x0090 (0x0090 - 0x0000)
struct BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UConversationPortraitUserWidget*        K2Node_Event_ConversationPortraitUserWidget;       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Conversation_Portrait_C*            K2Node_DynamicCast_AsBP_Conversation_Portrait;     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits) == 0x000008, "Wrong alignment on BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits");
static_assert(sizeof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits) == 0x000090, "Wrong size on BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, EntryPoint) == 0x000000, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, K2Node_Event_MyGeometry) == 0x000008, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, K2Node_Event_InDeltaTime) == 0x000040, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, K2Node_Event_AnimDuration_1) == 0x000044, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, K2Node_Event_AnimDuration) == 0x000048, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x00004C, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x000050, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, CallFunc_PlayAnimation_ReturnValue_1) == 0x000060, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, K2Node_Event_ConversationPortraitUserWidget) == 0x000070, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::K2Node_Event_ConversationPortraitUserWidget' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000078, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000079, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, K2Node_DynamicCast_AsBP_Conversation_Portrait) == 0x000080, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::K2Node_DynamicCast_AsBP_Conversation_Portrait' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000089, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, CallFunc_BooleanOR_ReturnValue) == 0x00008A, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits, CallFunc_BooleanOR_ReturnValue_1) == 0x00008B, "Member 'BP_VendorPortraits_C_ExecuteUbergraph_BP_VendorPortraits::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_VendorPortraits.BP_VendorPortraits_C.OnShowSlot
// 0x0008 (0x0008 - 0x0000)
struct BP_VendorPortraits_C_OnShowSlot final
{
public:
	class UConversationPortraitUserWidget*        ConversationPortraitUserWidget;                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorPortraits_C_OnShowSlot) == 0x000008, "Wrong alignment on BP_VendorPortraits_C_OnShowSlot");
static_assert(sizeof(BP_VendorPortraits_C_OnShowSlot) == 0x000008, "Wrong size on BP_VendorPortraits_C_OnShowSlot");
static_assert(offsetof(BP_VendorPortraits_C_OnShowSlot, ConversationPortraitUserWidget) == 0x000000, "Member 'BP_VendorPortraits_C_OnShowSlot::ConversationPortraitUserWidget' has a wrong offset!");

// Function BP_VendorPortraits.BP_VendorPortraits_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_VendorPortraits_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorPortraits_C_OnHide) == 0x000004, "Wrong alignment on BP_VendorPortraits_C_OnHide");
static_assert(sizeof(BP_VendorPortraits_C_OnHide) == 0x000004, "Wrong size on BP_VendorPortraits_C_OnHide");
static_assert(offsetof(BP_VendorPortraits_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_VendorPortraits_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_VendorPortraits.BP_VendorPortraits_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_VendorPortraits_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorPortraits_C_OnShow) == 0x000004, "Wrong alignment on BP_VendorPortraits_C_OnShow");
static_assert(sizeof(BP_VendorPortraits_C_OnShow) == 0x000004, "Wrong size on BP_VendorPortraits_C_OnShow");
static_assert(offsetof(BP_VendorPortraits_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_VendorPortraits_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_VendorPortraits.BP_VendorPortraits_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_VendorPortraits_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorPortraits_C_Tick) == 0x000004, "Wrong alignment on BP_VendorPortraits_C_Tick");
static_assert(sizeof(BP_VendorPortraits_C_Tick) == 0x00003C, "Wrong size on BP_VendorPortraits_C_Tick");
static_assert(offsetof(BP_VendorPortraits_C_Tick, MyGeometry) == 0x000000, "Member 'BP_VendorPortraits_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_VendorPortraits_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_VendorPortraits.BP_VendorPortraits_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_VendorPortraits_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VendorPortraits_C_PreConstruct) == 0x000001, "Wrong alignment on BP_VendorPortraits_C_PreConstruct");
static_assert(sizeof(BP_VendorPortraits_C_PreConstruct) == 0x000001, "Wrong size on BP_VendorPortraits_C_PreConstruct");
static_assert(offsetof(BP_VendorPortraits_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_VendorPortraits_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_VendorPortraits.BP_VendorPortraits_C.ArrangeSlots
// 0x00E0 (0x00E0 - 0x0000)
struct BP_VendorPortraits_C_ArrangeSlots final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_3;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_4;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_5;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_6;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_3;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_7;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_8;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_4;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_5;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_9;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_6;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_10;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_11;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_12;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_13;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_7;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VendorPortraits_C_ArrangeSlots) == 0x000008, "Wrong alignment on BP_VendorPortraits_C_ArrangeSlots");
static_assert(sizeof(BP_VendorPortraits_C_ArrangeSlots) == 0x0000E0, "Wrong size on BP_VendorPortraits_C_ArrangeSlots");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000010, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000018, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x000020, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_3) == 0x000028, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_4) == 0x000030, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_5) == 0x000038, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_6) == 0x000040, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000048, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, Temp_bool_Variable) == 0x000050, "Member 'BP_VendorPortraits_C_ArrangeSlots::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000051, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000052, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000053, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationForward_ReturnValue_3) == 0x000058, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationForward_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_7) == 0x000060, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_8) == 0x000068, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationForward_ReturnValue_4) == 0x000070, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationForward_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, Temp_bool_Variable_1) == 0x000078, "Member 'BP_VendorPortraits_C_ArrangeSlots::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000079, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, K2Node_Select_Default) == 0x000080, "Member 'BP_VendorPortraits_C_ArrangeSlots::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationForward_ReturnValue_5) == 0x000088, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationForward_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_9) == 0x000090, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, K2Node_Select_Default_1) == 0x000098, "Member 'BP_VendorPortraits_C_ArrangeSlots::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationForward_ReturnValue_6) == 0x0000A0, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationForward_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_10) == 0x0000A8, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x0000B0, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_11) == 0x0000B8, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_12) == 0x0000C0, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationReverse_ReturnValue_13) == 0x0000C8, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationReverse_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_PlayAnimationForward_ReturnValue_7) == 0x0000D0, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_PlayAnimationForward_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ArrangeSlots, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x0000D8, "Member 'BP_VendorPortraits_C_ArrangeSlots::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");

// Function BP_VendorPortraits.BP_VendorPortraits_C.ResetSlots
// 0x0030 (0x0030 - 0x0000)
struct BP_VendorPortraits_C_ResetSlots final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_3;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorPortraits_C_ResetSlots) == 0x000008, "Wrong alignment on BP_VendorPortraits_C_ResetSlots");
static_assert(sizeof(BP_VendorPortraits_C_ResetSlots) == 0x000030, "Wrong size on BP_VendorPortraits_C_ResetSlots");
static_assert(offsetof(BP_VendorPortraits_C_ResetSlots, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000000, "Member 'BP_VendorPortraits_C_ResetSlots::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ResetSlots, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000008, "Member 'BP_VendorPortraits_C_ResetSlots::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ResetSlots, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'BP_VendorPortraits_C_ResetSlots::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ResetSlots, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x000018, "Member 'BP_VendorPortraits_C_ResetSlots::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ResetSlots, CallFunc_PlayAnimationReverse_ReturnValue_3) == 0x000020, "Member 'BP_VendorPortraits_C_ResetSlots::CallFunc_PlayAnimationReverse_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_ResetSlots, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000028, "Member 'BP_VendorPortraits_C_ResetSlots::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");

// Function BP_VendorPortraits.BP_VendorPortraits_C.SetCurrentTalker
// 0x0010 (0x0010 - 0x0000)
struct BP_VendorPortraits_C_SetCurrentTalker final
{
public:
	class UBP_Conversation_Portrait_C*            NewTalker;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VendorPortraits_C_SetCurrentTalker) == 0x000008, "Wrong alignment on BP_VendorPortraits_C_SetCurrentTalker");
static_assert(sizeof(BP_VendorPortraits_C_SetCurrentTalker) == 0x000010, "Wrong size on BP_VendorPortraits_C_SetCurrentTalker");
static_assert(offsetof(BP_VendorPortraits_C_SetCurrentTalker, NewTalker) == 0x000000, "Member 'BP_VendorPortraits_C_SetCurrentTalker::NewTalker' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_SetCurrentTalker, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_VendorPortraits_C_SetCurrentTalker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_SetCurrentTalker, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'BP_VendorPortraits_C_SetCurrentTalker::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_SetCurrentTalker, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'BP_VendorPortraits_C_SetCurrentTalker::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_VendorPortraits.BP_VendorPortraits_C.Set Bg Darkening
// 0x0018 (0x0018 - 0x0000)
struct BP_VendorPortraits_C_Set_Bg_Darkening final
{
public:
	bool                                          IsRightSide;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorPortraits_C_Set_Bg_Darkening) == 0x000004, "Wrong alignment on BP_VendorPortraits_C_Set_Bg_Darkening");
static_assert(sizeof(BP_VendorPortraits_C_Set_Bg_Darkening) == 0x000018, "Wrong size on BP_VendorPortraits_C_Set_Bg_Darkening");
static_assert(offsetof(BP_VendorPortraits_C_Set_Bg_Darkening, IsRightSide) == 0x000000, "Member 'BP_VendorPortraits_C_Set_Bg_Darkening::IsRightSide' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_Set_Bg_Darkening, Temp_bool_Variable) == 0x000001, "Member 'BP_VendorPortraits_C_Set_Bg_Darkening::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_Set_Bg_Darkening, Temp_float_Variable) == 0x000004, "Member 'BP_VendorPortraits_C_Set_Bg_Darkening::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_Set_Bg_Darkening, Temp_float_Variable_1) == 0x000008, "Member 'BP_VendorPortraits_C_Set_Bg_Darkening::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_Set_Bg_Darkening, K2Node_Select_Default) == 0x00000C, "Member 'BP_VendorPortraits_C_Set_Bg_Darkening::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VendorPortraits_C_Set_Bg_Darkening, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'BP_VendorPortraits_C_Set_Bg_Darkening::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

