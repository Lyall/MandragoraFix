#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Vendor_Alchemist_GardenSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Vendor_Alchemist_GardenSlot.BP_Vendor_Alchemist_GardenSlot_C
// 0x0130 (0x03D0 - 0x02A0)
class UBP_Vendor_Alchemist_GardenSlot_C final : public UVendorAlchemistSlotUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HarvestAnimProgress;                               // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HarvestAnimEnd;                                    // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CompletedAnim;                                     // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EquipStateAnim;                                    // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SelectAnim;                                        // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Bg;                                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ButtonFrame;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CompletedVFX;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Countdown;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CountdownBar;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CountdownCaption;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EndVFX_1;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EndVFX_2;                                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_EquipState;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_HarvestHighlight;                            // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_HarvestHighlight2;                           // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Highlight;                                   // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Hovered;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Normal;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Selected;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HarvestIconImage;                                  // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HoldVFX_1;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconCompleted;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconImage;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NameCaption;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnUpdate;                                          // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UTexture2D*                             Icon;                                              // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UBP_Vendor_Alchemist_GardenSlot_C* ItemReference)> OnFocus;                                           // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsSelected;                                        // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEquipState;                                      // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCountdown;                                       // 0x039A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IsEmpty;                                           // 0x039B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         CountdownPercentLeft;                              // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   CountdownTimeLeft;                                 // 0x03A0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   ItemName;                                          // 0x03B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_Vendor_Alchemist_GardenSlot(int32 EntryPoint);
	void OnHighlighted(bool bHighlighted, bool bAnimate);
	void OnHarvestFinished();
	void OnHarvestStop();
	void OnHarvestStart();
	void OnUnfocused(bool bAnimate);
	void OnFocused(bool bAnimate);
	void OnToggleEquipState(bool bEquipState);
	void OnToggleCompleted(bool bCompleted);
	void OnToggleLocked(bool bInLocked, const class FText& LockedLevel);
	void OnSetCountdown(float ElapsedCooldownPercent, const class FText& TimeLeft);
	void OnSetSlot(const class FText& Name_0, const class UTexture2D* Icon_0, bool bPlayAkAudioEvent);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void SetIcon(class UTexture2D* InIcon);
	void ToggleLocked(bool InLocked, const class FText& LockedLevel);
	void ToggleSelected(bool InIsSelected, bool PlayAnim);
	void ToggleEquipState(bool InEquipState);
	void ToggleCompleted(bool InIsCompleted);
	void SetCountdown(float PercentLeft, const class FText& TimeLeft);
	void ToggleEnabled(bool InIsEnabled);
	void ToggleCountdown(bool InIsCountdown);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Vendor_Alchemist_GardenSlot_C">();
	}
	static class UBP_Vendor_Alchemist_GardenSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Vendor_Alchemist_GardenSlot_C>();
	}
};
static_assert(alignof(UBP_Vendor_Alchemist_GardenSlot_C) == 0x000008, "Wrong alignment on UBP_Vendor_Alchemist_GardenSlot_C");
static_assert(sizeof(UBP_Vendor_Alchemist_GardenSlot_C) == 0x0003D0, "Wrong size on UBP_Vendor_Alchemist_GardenSlot_C");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, UberGraphFrame) == 0x0002A0, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, HarvestAnimProgress) == 0x0002A8, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::HarvestAnimProgress' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, HarvestAnimEnd) == 0x0002B0, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::HarvestAnimEnd' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, CompletedAnim) == 0x0002B8, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::CompletedAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, EquipStateAnim) == 0x0002C0, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::EquipStateAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, SelectAnim) == 0x0002C8, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::SelectAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, Bg) == 0x0002D0, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::Bg' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, ButtonFrame) == 0x0002D8, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::ButtonFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, CompletedVFX) == 0x0002E0, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::CompletedVFX' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, Countdown) == 0x0002E8, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::Countdown' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, CountdownBar) == 0x0002F0, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::CountdownBar' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, CountdownCaption) == 0x0002F8, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::CountdownCaption' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, EndVFX_1) == 0x000300, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::EndVFX_1' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, EndVFX_2) == 0x000308, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::EndVFX_2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, Frame_EquipState) == 0x000310, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::Frame_EquipState' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, Frame_HarvestHighlight) == 0x000318, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::Frame_HarvestHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, Frame_HarvestHighlight2) == 0x000320, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::Frame_HarvestHighlight2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, Frame_Highlight) == 0x000328, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::Frame_Highlight' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, Frame_Hovered) == 0x000330, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::Frame_Hovered' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, Frame_Normal) == 0x000338, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::Frame_Normal' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, Frame_Selected) == 0x000340, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::Frame_Selected' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, HarvestIconImage) == 0x000348, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::HarvestIconImage' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, HoldVFX_1) == 0x000350, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::HoldVFX_1' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, IconCompleted) == 0x000358, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::IconCompleted' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, IconImage) == 0x000360, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::IconImage' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, NameCaption) == 0x000368, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::NameCaption' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, OnUpdate) == 0x000370, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::OnUpdate' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, Icon) == 0x000380, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::Icon' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, OnFocus) == 0x000388, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::OnFocus' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, IsSelected) == 0x000398, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, IsEquipState) == 0x000399, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::IsEquipState' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, IsCountdown) == 0x00039A, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::IsCountdown' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, IsEmpty) == 0x00039B, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::IsEmpty' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, CountdownPercentLeft) == 0x00039C, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::CountdownPercentLeft' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, CountdownTimeLeft) == 0x0003A0, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::CountdownTimeLeft' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_GardenSlot_C, ItemName) == 0x0003B8, "Member 'UBP_Vendor_Alchemist_GardenSlot_C::ItemName' has a wrong offset!");

}

