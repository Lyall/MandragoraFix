#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Vendor_Alchemist

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Vendor_Alchemist.BP_Vendor_Alchemist_C
// 0x01A8 (0x0750 - 0x05A8)
class UBP_Vendor_Alchemist_C final : public UVendorAlchemistUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOutAnim;                                       // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x05B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BgTexture;                                         // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BottomScreenFrame;                                 // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CloseButton_C*                      BtnClose;                                          // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyA;                                        // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyB;                                        // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyHoldX;                                    // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyHoldY;                                    // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Double_C*            BtnHotkeyLS_Press;                                 // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyRS_Up_Down;                               // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyY;                                        // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnNextTab;                                        // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnPreviousTab;                                    // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ContentFrame;                                      // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Garden_ItemsHandler_C*       GardenItemsHandler;                                // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot0;                                       // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot1;                                       // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot10;                                      // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot11;                                      // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot12;                                      // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot13;                                      // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot14;                                      // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot2;                                       // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot3;                                       // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot4;                                       // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot5;                                       // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot6;                                       // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot7;                                       // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot8;                                       // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Alchemist_GardenSlot_C*      GardenSlot9;                                       // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           GardenSlots;                                       // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               LeftPanel;                                         // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ScreenBg2;                                         // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SlotFrame;                                         // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Bestiary;                                      // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Buy;                                           // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Craft;                                         // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Enchant;                                       // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Garden;                                        // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_MapFragments;                                  // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Sell;                                          // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Talk;                                          // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Transmog;                                      // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Upgrade;                                       // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Tabs;                                              // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TopScreenFrame;                                    // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VendorLevel;                                       // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VendorName;                                        // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              BtnCloseClickedEvent;                              // 0x0738(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsItemLoreVisible;                                 // 0x0748(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Vendor_Alchemist(int32 EntryPoint);
	void OnSetInputDisplay(EInputDisplay InInputDisplay, EInputDisplay InControlDisplay);
	void BndEvt__BP_Vendor_Alchemist_BtnClose_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature();
	void OnGamepadRightStickDownEvent();
	void OnGamepadRightStickUpEvent();
	void BndEvt__BP_Conversation_Tab_Transmog_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature();
	void OnSortChanged(const class FText& SortName);
	void BndEvt__BP_Vendor_Sell_BtnHotkeyDPadUpDown_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void BndEvt__BP_Conversation_Tab_MapFragments_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void OnEndRemoveSeedState();
	void OnStartRemoveSeedState();
	void OnEndPlantSeedState();
	void OnGamepadYEvent();
	void BndEvt__BP_Vendor_Alchemist_BtnHotkeyY_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Alchemist_BtnHotkeyA_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Alchemist_Tab_Talk_1_K2Node_ComponentBoundEvent_22_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Alchemist_Tab_Bestiary_1_K2Node_ComponentBoundEvent_21_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Alchemist_Tab_Garden_1_K2Node_ComponentBoundEvent_20_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Alchemist_Tab_Upgrade_1_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Alchemist_Tab_Enchant_1_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Alchemist_Tab_Craft_1_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Alchemist_Tab_Sell_1_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Alchemist_Tab_Buy_1_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature();
	void OnGamepadLeftStickBtnEvent();
	void OnStartPlantSeedState();
	void BndEvt__BtnHotkeyRS_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature();
	void OnGamepadRBEvent();
	void OnGamepadLBEvent();
	void OnGamepadAEvent();
	void BndEvt__BtnNextTab_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature();
	void BndEvt__BtnPreviousTab_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature();
	void BndEvt__BtnClose_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void OnGamepadBEvent();
	void OnHide(float AnimDuration);
	void OnShow(float AnimDuration);
	void OnInitialized();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void BtnHotkeyBClicked();
	void ShowItemLore();
	void HideItemLore();
	void BtnHotkeyAClicked();
	void BtnHotkeyLS_PressClicked();
	void BtnHotkeyYClicked();
	void SetPlantSeedState(bool InPlantSeedState);
	void SetRemoveSeedState(bool InRemoveSeedState);
	void BtnHotkeyRSUpClicked();
	void BtnHotkeyRSDownClicked();
	void SetBtnCloseVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Vendor_Alchemist_C">();
	}
	static class UBP_Vendor_Alchemist_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Vendor_Alchemist_C>();
	}
};
static_assert(alignof(UBP_Vendor_Alchemist_C) == 0x000008, "Wrong alignment on UBP_Vendor_Alchemist_C");
static_assert(sizeof(UBP_Vendor_Alchemist_C) == 0x000750, "Wrong size on UBP_Vendor_Alchemist_C");
static_assert(offsetof(UBP_Vendor_Alchemist_C, UberGraphFrame) == 0x0005A8, "Member 'UBP_Vendor_Alchemist_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, FadeOutAnim) == 0x0005B0, "Member 'UBP_Vendor_Alchemist_C::FadeOutAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, FadeInAnim) == 0x0005B8, "Member 'UBP_Vendor_Alchemist_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BgTexture) == 0x0005C0, "Member 'UBP_Vendor_Alchemist_C::BgTexture' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BottomScreenFrame) == 0x0005C8, "Member 'UBP_Vendor_Alchemist_C::BottomScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BtnClose) == 0x0005D0, "Member 'UBP_Vendor_Alchemist_C::BtnClose' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BtnHotkeyA) == 0x0005D8, "Member 'UBP_Vendor_Alchemist_C::BtnHotkeyA' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BtnHotkeyB) == 0x0005E0, "Member 'UBP_Vendor_Alchemist_C::BtnHotkeyB' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BtnHotkeyHoldX) == 0x0005E8, "Member 'UBP_Vendor_Alchemist_C::BtnHotkeyHoldX' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BtnHotkeyHoldY) == 0x0005F0, "Member 'UBP_Vendor_Alchemist_C::BtnHotkeyHoldY' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BtnHotkeyLS_Press) == 0x0005F8, "Member 'UBP_Vendor_Alchemist_C::BtnHotkeyLS_Press' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BtnHotkeyRS_Up_Down) == 0x000600, "Member 'UBP_Vendor_Alchemist_C::BtnHotkeyRS_Up_Down' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BtnHotkeyY) == 0x000608, "Member 'UBP_Vendor_Alchemist_C::BtnHotkeyY' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BtnNextTab) == 0x000610, "Member 'UBP_Vendor_Alchemist_C::BtnNextTab' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BtnPreviousTab) == 0x000618, "Member 'UBP_Vendor_Alchemist_C::BtnPreviousTab' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, ContentFrame) == 0x000620, "Member 'UBP_Vendor_Alchemist_C::ContentFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenItemsHandler) == 0x000628, "Member 'UBP_Vendor_Alchemist_C::GardenItemsHandler' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot0) == 0x000630, "Member 'UBP_Vendor_Alchemist_C::GardenSlot0' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot1) == 0x000638, "Member 'UBP_Vendor_Alchemist_C::GardenSlot1' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot10) == 0x000640, "Member 'UBP_Vendor_Alchemist_C::GardenSlot10' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot11) == 0x000648, "Member 'UBP_Vendor_Alchemist_C::GardenSlot11' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot12) == 0x000650, "Member 'UBP_Vendor_Alchemist_C::GardenSlot12' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot13) == 0x000658, "Member 'UBP_Vendor_Alchemist_C::GardenSlot13' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot14) == 0x000660, "Member 'UBP_Vendor_Alchemist_C::GardenSlot14' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot2) == 0x000668, "Member 'UBP_Vendor_Alchemist_C::GardenSlot2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot3) == 0x000670, "Member 'UBP_Vendor_Alchemist_C::GardenSlot3' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot4) == 0x000678, "Member 'UBP_Vendor_Alchemist_C::GardenSlot4' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot5) == 0x000680, "Member 'UBP_Vendor_Alchemist_C::GardenSlot5' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot6) == 0x000688, "Member 'UBP_Vendor_Alchemist_C::GardenSlot6' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot7) == 0x000690, "Member 'UBP_Vendor_Alchemist_C::GardenSlot7' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot8) == 0x000698, "Member 'UBP_Vendor_Alchemist_C::GardenSlot8' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlot9) == 0x0006A0, "Member 'UBP_Vendor_Alchemist_C::GardenSlot9' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, GardenSlots) == 0x0006A8, "Member 'UBP_Vendor_Alchemist_C::GardenSlots' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, LeftPanel) == 0x0006B0, "Member 'UBP_Vendor_Alchemist_C::LeftPanel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, ScreenBg2) == 0x0006B8, "Member 'UBP_Vendor_Alchemist_C::ScreenBg2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, SlotFrame) == 0x0006C0, "Member 'UBP_Vendor_Alchemist_C::SlotFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, Tab_Bestiary) == 0x0006C8, "Member 'UBP_Vendor_Alchemist_C::Tab_Bestiary' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, Tab_Buy) == 0x0006D0, "Member 'UBP_Vendor_Alchemist_C::Tab_Buy' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, Tab_Craft) == 0x0006D8, "Member 'UBP_Vendor_Alchemist_C::Tab_Craft' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, Tab_Enchant) == 0x0006E0, "Member 'UBP_Vendor_Alchemist_C::Tab_Enchant' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, Tab_Garden) == 0x0006E8, "Member 'UBP_Vendor_Alchemist_C::Tab_Garden' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, Tab_MapFragments) == 0x0006F0, "Member 'UBP_Vendor_Alchemist_C::Tab_MapFragments' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, Tab_Sell) == 0x0006F8, "Member 'UBP_Vendor_Alchemist_C::Tab_Sell' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, Tab_Talk) == 0x000700, "Member 'UBP_Vendor_Alchemist_C::Tab_Talk' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, Tab_Transmog) == 0x000708, "Member 'UBP_Vendor_Alchemist_C::Tab_Transmog' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, Tab_Upgrade) == 0x000710, "Member 'UBP_Vendor_Alchemist_C::Tab_Upgrade' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, Tabs) == 0x000718, "Member 'UBP_Vendor_Alchemist_C::Tabs' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, TopScreenFrame) == 0x000720, "Member 'UBP_Vendor_Alchemist_C::TopScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, VendorLevel) == 0x000728, "Member 'UBP_Vendor_Alchemist_C::VendorLevel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, VendorName) == 0x000730, "Member 'UBP_Vendor_Alchemist_C::VendorName' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, BtnCloseClickedEvent) == 0x000738, "Member 'UBP_Vendor_Alchemist_C::BtnCloseClickedEvent' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Alchemist_C, IsItemLoreVisible) == 0x000748, "Member 'UBP_Vendor_Alchemist_C::IsItemLoreVisible' has a wrong offset!");

}

