#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Vendor_Enchant

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Vendor_Enchant.BP_Vendor_Enchant_C
// 0x02F8 (0x0870 - 0x0578)
class UBP_Vendor_Enchant_C final : public UVendorEnchantUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0578(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Balance2ErrorAnim;                                 // 0x0580(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Balance1ErrorAnim;                                 // 0x0588(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RuneSlotSelection;                                 // 0x0590(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ItemSlotSelection;                                 // 0x0598(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LevelUp;                                           // 0x05A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DestroyAnim;                                       // 0x05A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UpgradeAnim;                                       // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOutAnim;                                       // 0x05B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x05C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_0;                                  // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Balance;                                           // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Balance2;                                          // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Balance2Text;                                      // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Balance2Value;                                     // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BalanceBox;                                        // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BalanceText;                                       // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BalanceValue;                                      // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BottomScreenFrame;                                 // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CloseButton_C*                      BtnClose;                                          // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Double_C*            BtnHotkeyA;                                        // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyB;                                        // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyHoldX;                                    // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyHoldY;                                    // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Double_C*            BtnHotkeyLS_Press;                                 // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyLT;                                       // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyRS_Up_Down;                               // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyRT;                                       // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnNextTab;                                        // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnPreviousTab;                                    // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ContentFrame;                                      // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                CostBox;                                           // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               CurrencyGoldSizeBox;                               // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CurrencyIconBalance;                               // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CurrencyIconBalance2;                              // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CurrencyIconPrice;                                 // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CurrencyIconPrice2;                                // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentXP;                                         // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      EnchantDescription;                                // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_Enchant_ItemsHandler_C*      EnchantItemsHandler;                               // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             EquippedLabel;                                     // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Inventory_FilterSlot_C*             Filter_Chest;                                      // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Inventory_FilterSlot_C*             Filter_Head;                                       // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Inventory_FilterSlot_C*             Filter_MainHand;                                   // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Inventory_FilterSlot_C*             Filter_Materials;                                  // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Filters;                                           // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_534;                                         // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           InventoryView;                                     // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ItemDetails;                                       // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NormalFrame;                                       // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               NPCInfoBox;                                        // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Price2;                                            // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PriceText;                                         // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PriceValue;                                        // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PriceValue2;                                       // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RequiredXP;                                        // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               RequirementBox;                                    // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               RewardBox;                                         // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RewardLabel;                                       // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      RewardValue;                                       // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RightFrame;                                        // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ScreenBg2;                                         // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Character_ItemDetails2_C*           SelectedItemDetails;                               // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SelectedItemLore;                                  // 0x0770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      SelectedItemLoreRichText;                          // 0x0778(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SlotBox;                                           // 0x0780(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Bestiary;                                      // 0x0788(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Buy;                                           // 0x0790(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Craft;                                         // 0x0798(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Enchant;                                       // 0x07A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Garden;                                        // 0x07A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_MapFragments;                                  // 0x07B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Sell;                                          // 0x07B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Talk;                                          // 0x07C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Transmog;                                      // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Upgrade;                                       // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Tabs;                                              // 0x07D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TopScreenFrame;                                    // 0x07E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_ItemSlot_C*                  UpgradeAnimItemSlot;                               // 0x07E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_ItemSlot_C*                  UpgradeAnimRuneStoneSlot;                          // 0x07F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_ItemSlot_C*                  UpgradeItemSlot;                                   // 0x07F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpgradeItemSlotSelection;                          // 0x0800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_ItemSlot_C*                  UpgradeRuneStoneItemSlot;                          // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpgradeRuneStoneItemSlotSelection;                 // 0x0810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VendorLevel;                                       // 0x0818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VendorLevelText;                                   // 0x0820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VendorName;                                        // 0x0828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBarVendorXPNew_C*   XPBar;                                             // 0x0830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBarVendorXPNew_C*   XPBarIncrement;                                    // 0x0838(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XPBg;                                              // 0x0840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XPFrame;                                           // 0x0848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              BtnCloseClickedEvent;                              // 0x0850(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsItemLoreVisible;                                 // 0x0860(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_861[0x3];                                      // 0x0861(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentVendorLevel;                                // 0x0864(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayXPLevelUpAnim;                                 // 0x0868(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RuneSlotSelected;                                  // 0x0869(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NotEnoughGold;                                     // 0x086A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NotEnoughEssence;                                  // 0x086B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PlayEnchantAnim;                                   // 0x086C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Vendor_Enchant(int32 EntryPoint);
	void OnSetItem(class UItemAbility* Item);
	void OnSetInputDisplay(EInputDisplay InInputDisplay, EInputDisplay InControlDisplay);
	void BndEvt__BP_Vendor_Alchemist_BtnClose_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature();
	void OnCultureChanged();
	void OnSetRuneStone(class UItemAbility* RuneStoneItem);
	void OnErrorHiglight(class UInteractButtonUserWidget* InteractButtonUserWidget);
	void OnGamepadRightStickDownEvent();
	void OnGamepadRightStickUpEvent();
	void OnSetRightPanelSlots(class UItemAbility* UpgradeItem, class UItemAbility* RuneStoneItem);
	void OnGamepadAEvent();
	void BndEvt__BP_Conversation_Tab_Transmog_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature();
	void BndEvt__BP_Conversation_Tab_MapFragments_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void OnDestroyRune(const class UTexture2D* DestroyRuneIcon);
	void OnUpdateUpgradeItemDetailsPanel(const class FText& ItemRequirementText, class UItemAbility* InItem, class UItemAbility* InComparedItem, class UItemAbility* InEnchantItem, bool bEquipped, bool bAnimate);
	void BndEvt__BP_Vendor_Enchant_Tab_Upgrade_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature();
	void OnGamepadLeftStickBtnEvent();
	void OnSetEnchantText(const class FText& EnchantName, const class FText& EnchantDescription_0);
	void BndEvt__BP_InventoryWindow_Filter_Materials_K2Node_ComponentBoundEvent_23_OnClicked__DelegateSignature(class UVendorFilterSlotUserWidget* WidgetReference);
	void BndEvt__BP_InventoryWindow_Filter_Head_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature(class UVendorFilterSlotUserWidget* WidgetReference);
	void BndEvt__BP_InventoryWindow_Filter_Chest_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature(class UVendorFilterSlotUserWidget* WidgetReference);
	void BndEvt__BP_InventoryWindow_Filter_MainHand_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature(class UVendorFilterSlotUserWidget* WidgetReference);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__BP_Vendor_Craft_BtnHotkeyRT_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Craft_BtnHotkeyLT_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Craft_BtnNextTab_1_K2Node_ComponentBoundEvent_22_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Craft_BtnPreviousTab_1_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature();
	void OnGamepadLTEvent();
	void OnGamepadRTEvent();
	void OnGamepadRBEvent();
	void OnGamepadLBEvent();
	void BndEvt__BP_Vendor_Sell_BtnHotkeyDPadUpDown_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void OnSetFilterSlot(EItemSlot ItemSlot, const class FText& FilterName);
	void OnSortChanged(const class FText& SortName);
	void OnSetSelectedItemProperty(class UTexture2D* InItemIcon, const class FText& InItemName, int32 InSelectedCount, int32 InMaxCount, const class FText& InPriceText, const class FText& InPriceGoldValue, const class FText& InPriceEssenceValue, const class FText& InRequirementText, const class FText& InItemTypeText, bool bHasEnoughGold, bool bHasEnoughEssence);
	void OnSetVendorName(const class FText& VendorName_0);
	void BndEvt__BP_Vendor_Upgrade_Tab_Talk_1_K2Node_ComponentBoundEvent_20_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Upgrade_Tab_Bestiary_1_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Upgrade_Tab_Garden_1_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Upgrade_Tab_Upgrade_1_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Upgrade_Tab_Craft_1_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Upgrade_Tab_Sell_1_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Upgrade_Tab_Buy_1_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Upgrade_BtnHotkeyA_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature();
	void OnUpgradeItem(const class UTexture2D* UpgradeItemIcon, const class UTexture2D* UpgradeRuneStoneIcon);
	void BndEvt__BtnHotkeyRS_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature();
	void BndEvt__BtnClose_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void OnGamepadBEvent();
	void OnHide(float AnimDuration);
	void OnShow(float AnimDuration);
	void OnInitialized();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BtnHotkeyBClicked();
	void ShowItemLore();
	void HideItemLore();
	void BtnHotkeyAClicked();
	void BtnHotkeyLS_PressClicked();
	void BtnHotkeyRTClicked();
	void BtnHotkeyLTClicked();
	void SetHeroResource();
	void BtnHotkeyRSUpClicked();
	void BtnHotkeyRSDownClicked();
	void SetVendorParams(bool PlayAnim);
	void SetXP(float InCurrentXP, float InCurrentLevelXP, float InNextLevelXP, bool PlayAnim);
	void SetXPLevelUp();
	void SetSelectedItemProperty(class UTexture2D* InItemIcon, int32 InSelectedCount, int32 InMaxCount, const class FText& InPriceText, const class FText& InPriceGoldValue, const class FText& InPriceEssenceValue, const class FText& InRequirementText, bool HasEnoughGold, bool HasEnoughEssence);
	void SetCurrency(const class FText& InPriceText, const class FText& InPriceGoldValue, const class FText& InPriceEssenceValue);
	void SetRightPanelDisabled(bool InDisabled, bool InHasEnoughGold, bool InHasEnoughEssence, bool IsUnavailableByResource);
	void SetSlotSelection(bool InRuneSlotSelected);
	void Balance1ErrorHighlight();
	void Balance2ErrorHighlight();
	void UpgradeFinished();
	void SetBtnCloseVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Vendor_Enchant_C">();
	}
	static class UBP_Vendor_Enchant_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Vendor_Enchant_C>();
	}
};
static_assert(alignof(UBP_Vendor_Enchant_C) == 0x000008, "Wrong alignment on UBP_Vendor_Enchant_C");
static_assert(sizeof(UBP_Vendor_Enchant_C) == 0x000870, "Wrong size on UBP_Vendor_Enchant_C");
static_assert(offsetof(UBP_Vendor_Enchant_C, UberGraphFrame) == 0x000578, "Member 'UBP_Vendor_Enchant_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Balance2ErrorAnim) == 0x000580, "Member 'UBP_Vendor_Enchant_C::Balance2ErrorAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Balance1ErrorAnim) == 0x000588, "Member 'UBP_Vendor_Enchant_C::Balance1ErrorAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, RuneSlotSelection) == 0x000590, "Member 'UBP_Vendor_Enchant_C::RuneSlotSelection' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, ItemSlotSelection) == 0x000598, "Member 'UBP_Vendor_Enchant_C::ItemSlotSelection' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, LevelUp) == 0x0005A0, "Member 'UBP_Vendor_Enchant_C::LevelUp' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, DestroyAnim) == 0x0005A8, "Member 'UBP_Vendor_Enchant_C::DestroyAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, UpgradeAnim) == 0x0005B0, "Member 'UBP_Vendor_Enchant_C::UpgradeAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, FadeOutAnim) == 0x0005B8, "Member 'UBP_Vendor_Enchant_C::FadeOutAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, FadeInAnim) == 0x0005C0, "Member 'UBP_Vendor_Enchant_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BackgroundBlur_0) == 0x0005C8, "Member 'UBP_Vendor_Enchant_C::BackgroundBlur_0' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Balance) == 0x0005D0, "Member 'UBP_Vendor_Enchant_C::Balance' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Balance2) == 0x0005D8, "Member 'UBP_Vendor_Enchant_C::Balance2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Balance2Text) == 0x0005E0, "Member 'UBP_Vendor_Enchant_C::Balance2Text' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Balance2Value) == 0x0005E8, "Member 'UBP_Vendor_Enchant_C::Balance2Value' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BalanceBox) == 0x0005F0, "Member 'UBP_Vendor_Enchant_C::BalanceBox' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BalanceText) == 0x0005F8, "Member 'UBP_Vendor_Enchant_C::BalanceText' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BalanceValue) == 0x000600, "Member 'UBP_Vendor_Enchant_C::BalanceValue' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BottomScreenFrame) == 0x000608, "Member 'UBP_Vendor_Enchant_C::BottomScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BtnClose) == 0x000610, "Member 'UBP_Vendor_Enchant_C::BtnClose' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BtnHotkeyA) == 0x000618, "Member 'UBP_Vendor_Enchant_C::BtnHotkeyA' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BtnHotkeyB) == 0x000620, "Member 'UBP_Vendor_Enchant_C::BtnHotkeyB' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BtnHotkeyHoldX) == 0x000628, "Member 'UBP_Vendor_Enchant_C::BtnHotkeyHoldX' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BtnHotkeyHoldY) == 0x000630, "Member 'UBP_Vendor_Enchant_C::BtnHotkeyHoldY' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BtnHotkeyLS_Press) == 0x000638, "Member 'UBP_Vendor_Enchant_C::BtnHotkeyLS_Press' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BtnHotkeyLT) == 0x000640, "Member 'UBP_Vendor_Enchant_C::BtnHotkeyLT' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BtnHotkeyRS_Up_Down) == 0x000648, "Member 'UBP_Vendor_Enchant_C::BtnHotkeyRS_Up_Down' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BtnHotkeyRT) == 0x000650, "Member 'UBP_Vendor_Enchant_C::BtnHotkeyRT' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BtnNextTab) == 0x000658, "Member 'UBP_Vendor_Enchant_C::BtnNextTab' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BtnPreviousTab) == 0x000660, "Member 'UBP_Vendor_Enchant_C::BtnPreviousTab' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, ContentFrame) == 0x000668, "Member 'UBP_Vendor_Enchant_C::ContentFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, CostBox) == 0x000670, "Member 'UBP_Vendor_Enchant_C::CostBox' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, CurrencyGoldSizeBox) == 0x000678, "Member 'UBP_Vendor_Enchant_C::CurrencyGoldSizeBox' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, CurrencyIconBalance) == 0x000680, "Member 'UBP_Vendor_Enchant_C::CurrencyIconBalance' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, CurrencyIconBalance2) == 0x000688, "Member 'UBP_Vendor_Enchant_C::CurrencyIconBalance2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, CurrencyIconPrice) == 0x000690, "Member 'UBP_Vendor_Enchant_C::CurrencyIconPrice' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, CurrencyIconPrice2) == 0x000698, "Member 'UBP_Vendor_Enchant_C::CurrencyIconPrice2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, CurrentXP) == 0x0006A0, "Member 'UBP_Vendor_Enchant_C::CurrentXP' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, EnchantDescription) == 0x0006A8, "Member 'UBP_Vendor_Enchant_C::EnchantDescription' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, EnchantItemsHandler) == 0x0006B0, "Member 'UBP_Vendor_Enchant_C::EnchantItemsHandler' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, EquippedLabel) == 0x0006B8, "Member 'UBP_Vendor_Enchant_C::EquippedLabel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Filter_Chest) == 0x0006C0, "Member 'UBP_Vendor_Enchant_C::Filter_Chest' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Filter_Head) == 0x0006C8, "Member 'UBP_Vendor_Enchant_C::Filter_Head' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Filter_MainHand) == 0x0006D0, "Member 'UBP_Vendor_Enchant_C::Filter_MainHand' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Filter_Materials) == 0x0006D8, "Member 'UBP_Vendor_Enchant_C::Filter_Materials' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Filters) == 0x0006E0, "Member 'UBP_Vendor_Enchant_C::Filters' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Image_534) == 0x0006E8, "Member 'UBP_Vendor_Enchant_C::Image_534' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, InventoryView) == 0x0006F0, "Member 'UBP_Vendor_Enchant_C::InventoryView' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, ItemDetails) == 0x0006F8, "Member 'UBP_Vendor_Enchant_C::ItemDetails' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, NormalFrame) == 0x000700, "Member 'UBP_Vendor_Enchant_C::NormalFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, NPCInfoBox) == 0x000708, "Member 'UBP_Vendor_Enchant_C::NPCInfoBox' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Price2) == 0x000710, "Member 'UBP_Vendor_Enchant_C::Price2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, PriceText) == 0x000718, "Member 'UBP_Vendor_Enchant_C::PriceText' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, PriceValue) == 0x000720, "Member 'UBP_Vendor_Enchant_C::PriceValue' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, PriceValue2) == 0x000728, "Member 'UBP_Vendor_Enchant_C::PriceValue2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, RequiredXP) == 0x000730, "Member 'UBP_Vendor_Enchant_C::RequiredXP' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, RequirementBox) == 0x000738, "Member 'UBP_Vendor_Enchant_C::RequirementBox' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, RewardBox) == 0x000740, "Member 'UBP_Vendor_Enchant_C::RewardBox' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, RewardLabel) == 0x000748, "Member 'UBP_Vendor_Enchant_C::RewardLabel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, RewardValue) == 0x000750, "Member 'UBP_Vendor_Enchant_C::RewardValue' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, RightFrame) == 0x000758, "Member 'UBP_Vendor_Enchant_C::RightFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, ScreenBg2) == 0x000760, "Member 'UBP_Vendor_Enchant_C::ScreenBg2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, SelectedItemDetails) == 0x000768, "Member 'UBP_Vendor_Enchant_C::SelectedItemDetails' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, SelectedItemLore) == 0x000770, "Member 'UBP_Vendor_Enchant_C::SelectedItemLore' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, SelectedItemLoreRichText) == 0x000778, "Member 'UBP_Vendor_Enchant_C::SelectedItemLoreRichText' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, SlotBox) == 0x000780, "Member 'UBP_Vendor_Enchant_C::SlotBox' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Tab_Bestiary) == 0x000788, "Member 'UBP_Vendor_Enchant_C::Tab_Bestiary' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Tab_Buy) == 0x000790, "Member 'UBP_Vendor_Enchant_C::Tab_Buy' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Tab_Craft) == 0x000798, "Member 'UBP_Vendor_Enchant_C::Tab_Craft' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Tab_Enchant) == 0x0007A0, "Member 'UBP_Vendor_Enchant_C::Tab_Enchant' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Tab_Garden) == 0x0007A8, "Member 'UBP_Vendor_Enchant_C::Tab_Garden' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Tab_MapFragments) == 0x0007B0, "Member 'UBP_Vendor_Enchant_C::Tab_MapFragments' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Tab_Sell) == 0x0007B8, "Member 'UBP_Vendor_Enchant_C::Tab_Sell' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Tab_Talk) == 0x0007C0, "Member 'UBP_Vendor_Enchant_C::Tab_Talk' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Tab_Transmog) == 0x0007C8, "Member 'UBP_Vendor_Enchant_C::Tab_Transmog' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Tab_Upgrade) == 0x0007D0, "Member 'UBP_Vendor_Enchant_C::Tab_Upgrade' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, Tabs) == 0x0007D8, "Member 'UBP_Vendor_Enchant_C::Tabs' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, TopScreenFrame) == 0x0007E0, "Member 'UBP_Vendor_Enchant_C::TopScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, UpgradeAnimItemSlot) == 0x0007E8, "Member 'UBP_Vendor_Enchant_C::UpgradeAnimItemSlot' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, UpgradeAnimRuneStoneSlot) == 0x0007F0, "Member 'UBP_Vendor_Enchant_C::UpgradeAnimRuneStoneSlot' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, UpgradeItemSlot) == 0x0007F8, "Member 'UBP_Vendor_Enchant_C::UpgradeItemSlot' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, UpgradeItemSlotSelection) == 0x000800, "Member 'UBP_Vendor_Enchant_C::UpgradeItemSlotSelection' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, UpgradeRuneStoneItemSlot) == 0x000808, "Member 'UBP_Vendor_Enchant_C::UpgradeRuneStoneItemSlot' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, UpgradeRuneStoneItemSlotSelection) == 0x000810, "Member 'UBP_Vendor_Enchant_C::UpgradeRuneStoneItemSlotSelection' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, VendorLevel) == 0x000818, "Member 'UBP_Vendor_Enchant_C::VendorLevel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, VendorLevelText) == 0x000820, "Member 'UBP_Vendor_Enchant_C::VendorLevelText' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, VendorName) == 0x000828, "Member 'UBP_Vendor_Enchant_C::VendorName' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, XPBar) == 0x000830, "Member 'UBP_Vendor_Enchant_C::XPBar' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, XPBarIncrement) == 0x000838, "Member 'UBP_Vendor_Enchant_C::XPBarIncrement' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, XPBg) == 0x000840, "Member 'UBP_Vendor_Enchant_C::XPBg' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, XPFrame) == 0x000848, "Member 'UBP_Vendor_Enchant_C::XPFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, BtnCloseClickedEvent) == 0x000850, "Member 'UBP_Vendor_Enchant_C::BtnCloseClickedEvent' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, IsItemLoreVisible) == 0x000860, "Member 'UBP_Vendor_Enchant_C::IsItemLoreVisible' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, CurrentVendorLevel) == 0x000864, "Member 'UBP_Vendor_Enchant_C::CurrentVendorLevel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, PlayXPLevelUpAnim) == 0x000868, "Member 'UBP_Vendor_Enchant_C::PlayXPLevelUpAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, RuneSlotSelected) == 0x000869, "Member 'UBP_Vendor_Enchant_C::RuneSlotSelected' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, NotEnoughGold) == 0x00086A, "Member 'UBP_Vendor_Enchant_C::NotEnoughGold' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, NotEnoughEssence) == 0x00086B, "Member 'UBP_Vendor_Enchant_C::NotEnoughEssence' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_Enchant_C, PlayEnchantAnim) == 0x00086C, "Member 'UBP_Vendor_Enchant_C::PlayEnchantAnim' has a wrong offset!");

}

