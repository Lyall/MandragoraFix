#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Vendor_MapFragments_FragmentHighlight

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Vendor_MapFragments_FragmentHighlight.BP_Vendor_MapFragments_FragmentHighlight_C.ExecuteUbergraph_BP_Vendor_MapFragments_FragmentHighlight
// 0x0008 (0x0008 - 0x0000)
struct BP_Vendor_MapFragments_FragmentHighlight_C_ExecuteUbergraph_BP_Vendor_MapFragments_FragmentHighlight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Vendor_MapFragments_FragmentHighlight_C_ExecuteUbergraph_BP_Vendor_MapFragments_FragmentHighlight) == 0x000004, "Wrong alignment on BP_Vendor_MapFragments_FragmentHighlight_C_ExecuteUbergraph_BP_Vendor_MapFragments_FragmentHighlight");
static_assert(sizeof(BP_Vendor_MapFragments_FragmentHighlight_C_ExecuteUbergraph_BP_Vendor_MapFragments_FragmentHighlight) == 0x000008, "Wrong size on BP_Vendor_MapFragments_FragmentHighlight_C_ExecuteUbergraph_BP_Vendor_MapFragments_FragmentHighlight");
static_assert(offsetof(BP_Vendor_MapFragments_FragmentHighlight_C_ExecuteUbergraph_BP_Vendor_MapFragments_FragmentHighlight, EntryPoint) == 0x000000, "Member 'BP_Vendor_MapFragments_FragmentHighlight_C_ExecuteUbergraph_BP_Vendor_MapFragments_FragmentHighlight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_FragmentHighlight_C_ExecuteUbergraph_BP_Vendor_MapFragments_FragmentHighlight, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_Vendor_MapFragments_FragmentHighlight_C_ExecuteUbergraph_BP_Vendor_MapFragments_FragmentHighlight::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_FragmentHighlight_C_ExecuteUbergraph_BP_Vendor_MapFragments_FragmentHighlight, K2Node_Event_bAnimate) == 0x000005, "Member 'BP_Vendor_MapFragments_FragmentHighlight_C_ExecuteUbergraph_BP_Vendor_MapFragments_FragmentHighlight::K2Node_Event_bAnimate' has a wrong offset!");

// Function BP_Vendor_MapFragments_FragmentHighlight.BP_Vendor_MapFragments_FragmentHighlight_C.OnUnlock
// 0x0001 (0x0001 - 0x0000)
struct BP_Vendor_MapFragments_FragmentHighlight_C_OnUnlock final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Vendor_MapFragments_FragmentHighlight_C_OnUnlock) == 0x000001, "Wrong alignment on BP_Vendor_MapFragments_FragmentHighlight_C_OnUnlock");
static_assert(sizeof(BP_Vendor_MapFragments_FragmentHighlight_C_OnUnlock) == 0x000001, "Wrong size on BP_Vendor_MapFragments_FragmentHighlight_C_OnUnlock");
static_assert(offsetof(BP_Vendor_MapFragments_FragmentHighlight_C_OnUnlock, bAnimate) == 0x000000, "Member 'BP_Vendor_MapFragments_FragmentHighlight_C_OnUnlock::bAnimate' has a wrong offset!");

// Function BP_Vendor_MapFragments_FragmentHighlight.BP_Vendor_MapFragments_FragmentHighlight_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Vendor_MapFragments_FragmentHighlight_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Vendor_MapFragments_FragmentHighlight_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Vendor_MapFragments_FragmentHighlight_C_PreConstruct");
static_assert(sizeof(BP_Vendor_MapFragments_FragmentHighlight_C_PreConstruct) == 0x000001, "Wrong size on BP_Vendor_MapFragments_FragmentHighlight_C_PreConstruct");
static_assert(offsetof(BP_Vendor_MapFragments_FragmentHighlight_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Vendor_MapFragments_FragmentHighlight_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_Vendor_MapFragments_FragmentHighlight.BP_Vendor_MapFragments_FragmentHighlight_C.SetTexture
// 0x0010 (0x0010 - 0x0000)
struct BP_Vendor_MapFragments_FragmentHighlight_C_SetTexture final
{
public:
	class UTexture2D*                             CallFunc_GetTexture_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_MapFragments_FragmentHighlight_C_SetTexture) == 0x000008, "Wrong alignment on BP_Vendor_MapFragments_FragmentHighlight_C_SetTexture");
static_assert(sizeof(BP_Vendor_MapFragments_FragmentHighlight_C_SetTexture) == 0x000010, "Wrong size on BP_Vendor_MapFragments_FragmentHighlight_C_SetTexture");
static_assert(offsetof(BP_Vendor_MapFragments_FragmentHighlight_C_SetTexture, CallFunc_GetTexture_ReturnValue) == 0x000000, "Member 'BP_Vendor_MapFragments_FragmentHighlight_C_SetTexture::CallFunc_GetTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_FragmentHighlight_C_SetTexture, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'BP_Vendor_MapFragments_FragmentHighlight_C_SetTexture::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function BP_Vendor_MapFragments_FragmentHighlight.BP_Vendor_MapFragments_FragmentHighlight_C.Unlock
// 0x0008 (0x0008 - 0x0000)
struct BP_Vendor_MapFragments_FragmentHighlight_C_Unlock final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_MapFragments_FragmentHighlight_C_Unlock) == 0x000008, "Wrong alignment on BP_Vendor_MapFragments_FragmentHighlight_C_Unlock");
static_assert(sizeof(BP_Vendor_MapFragments_FragmentHighlight_C_Unlock) == 0x000008, "Wrong size on BP_Vendor_MapFragments_FragmentHighlight_C_Unlock");
static_assert(offsetof(BP_Vendor_MapFragments_FragmentHighlight_C_Unlock, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_Vendor_MapFragments_FragmentHighlight_C_Unlock::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_Vendor_MapFragments_FragmentHighlight.BP_Vendor_MapFragments_FragmentHighlight_C.ReleaseTexture
// 0x0008 (0x0008 - 0x0000)
struct BP_Vendor_MapFragments_FragmentHighlight_C_ReleaseTexture final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_MapFragments_FragmentHighlight_C_ReleaseTexture) == 0x000008, "Wrong alignment on BP_Vendor_MapFragments_FragmentHighlight_C_ReleaseTexture");
static_assert(sizeof(BP_Vendor_MapFragments_FragmentHighlight_C_ReleaseTexture) == 0x000008, "Wrong size on BP_Vendor_MapFragments_FragmentHighlight_C_ReleaseTexture");
static_assert(offsetof(BP_Vendor_MapFragments_FragmentHighlight_C_ReleaseTexture, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'BP_Vendor_MapFragments_FragmentHighlight_C_ReleaseTexture::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

