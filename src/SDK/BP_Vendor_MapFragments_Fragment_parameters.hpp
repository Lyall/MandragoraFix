#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Vendor_MapFragments_Fragment

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_Vendor_MapFragments_Fragment.BP_Vendor_MapFragments_Fragment_C.ExecuteUbergraph_BP_Vendor_MapFragments_Fragment
// 0x0028 (0x0028 - 0x0000)
struct BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Vendor_MapFragments_FragmentHighlight_C* K2Node_DynamicCast_AsBP_Vendor_Map_Fragments_Fragment_Highlight; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSet;                                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Vendor_MapFragments_FragmentHighlight_C* K2Node_DynamicCast_AsBP_Vendor_Map_Fragments_Fragment_Highlight_1; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment) == 0x000008, "Wrong alignment on BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment");
static_assert(sizeof(BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment) == 0x000028, "Wrong size on BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment, EntryPoint) == 0x000000, "Member 'BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment, K2Node_DynamicCast_AsBP_Vendor_Map_Fragments_Fragment_Highlight) == 0x000008, "Member 'BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment::K2Node_DynamicCast_AsBP_Vendor_Map_Fragments_Fragment_Highlight' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment, K2Node_Event_IsDesignTime) == 0x000011, "Member 'BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment, K2Node_Event_bAnimate) == 0x000012, "Member 'BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment, K2Node_Event_bSet) == 0x000013, "Member 'BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment::K2Node_Event_bSet' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment, K2Node_DynamicCast_AsBP_Vendor_Map_Fragments_Fragment_Highlight_1) == 0x000018, "Member 'BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment::K2Node_DynamicCast_AsBP_Vendor_Map_Fragments_Fragment_Highlight_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'BP_Vendor_MapFragments_Fragment_C_ExecuteUbergraph_BP_Vendor_MapFragments_Fragment::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_Vendor_MapFragments_Fragment.BP_Vendor_MapFragments_Fragment_C.OnSetTexture
// 0x0001 (0x0001 - 0x0000)
struct BP_Vendor_MapFragments_Fragment_C_OnSetTexture final
{
public:
	bool                                          bSet;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Vendor_MapFragments_Fragment_C_OnSetTexture) == 0x000001, "Wrong alignment on BP_Vendor_MapFragments_Fragment_C_OnSetTexture");
static_assert(sizeof(BP_Vendor_MapFragments_Fragment_C_OnSetTexture) == 0x000001, "Wrong size on BP_Vendor_MapFragments_Fragment_C_OnSetTexture");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_OnSetTexture, bSet) == 0x000000, "Member 'BP_Vendor_MapFragments_Fragment_C_OnSetTexture::bSet' has a wrong offset!");

// Function BP_Vendor_MapFragments_Fragment.BP_Vendor_MapFragments_Fragment_C.OnUnlock
// 0x0001 (0x0001 - 0x0000)
struct BP_Vendor_MapFragments_Fragment_C_OnUnlock final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Vendor_MapFragments_Fragment_C_OnUnlock) == 0x000001, "Wrong alignment on BP_Vendor_MapFragments_Fragment_C_OnUnlock");
static_assert(sizeof(BP_Vendor_MapFragments_Fragment_C_OnUnlock) == 0x000001, "Wrong size on BP_Vendor_MapFragments_Fragment_C_OnUnlock");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_OnUnlock, bAnimate) == 0x000000, "Member 'BP_Vendor_MapFragments_Fragment_C_OnUnlock::bAnimate' has a wrong offset!");

// Function BP_Vendor_MapFragments_Fragment.BP_Vendor_MapFragments_Fragment_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Vendor_MapFragments_Fragment_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Vendor_MapFragments_Fragment_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Vendor_MapFragments_Fragment_C_PreConstruct");
static_assert(sizeof(BP_Vendor_MapFragments_Fragment_C_PreConstruct) == 0x000001, "Wrong size on BP_Vendor_MapFragments_Fragment_C_PreConstruct");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Vendor_MapFragments_Fragment_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_Vendor_MapFragments_Fragment.BP_Vendor_MapFragments_Fragment_C.SetVisible
// 0x0006 (0x0006 - 0x0000)
struct BP_Vendor_MapFragments_Fragment_C_SetVisible final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Animate;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_MapFragments_Fragment_C_SetVisible) == 0x000001, "Wrong alignment on BP_Vendor_MapFragments_Fragment_C_SetVisible");
static_assert(sizeof(BP_Vendor_MapFragments_Fragment_C_SetVisible) == 0x000006, "Wrong size on BP_Vendor_MapFragments_Fragment_C_SetVisible");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_SetVisible, InVisible) == 0x000000, "Member 'BP_Vendor_MapFragments_Fragment_C_SetVisible::InVisible' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_SetVisible, Animate) == 0x000001, "Member 'BP_Vendor_MapFragments_Fragment_C_SetVisible::Animate' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_SetVisible, Temp_bool_Variable) == 0x000002, "Member 'BP_Vendor_MapFragments_Fragment_C_SetVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_SetVisible, Temp_byte_Variable) == 0x000003, "Member 'BP_Vendor_MapFragments_Fragment_C_SetVisible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_SetVisible, Temp_byte_Variable_1) == 0x000004, "Member 'BP_Vendor_MapFragments_Fragment_C_SetVisible::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_MapFragments_Fragment_C_SetVisible, K2Node_Select_Default) == 0x000005, "Member 'BP_Vendor_MapFragments_Fragment_C_SetVisible::K2Node_Select_Default' has a wrong offset!");

}

