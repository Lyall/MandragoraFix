#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Vendor_MapFragments_MapLabel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Vendor_MapFragments_MapLabel.BP_Vendor_MapFragments_MapLabel_C
// 0x0088 (0x02F0 - 0x0268)
class UBP_Vendor_MapFragments_MapLabel_C final : public UVendorMapFragmentLabelUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HighlightAnim;                                     // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_1;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label;                                             // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkerCenter;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkerCenterHighlight;                             // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               MarkerCenterOverlay;                               // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkerLeft;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkerLeftHighlight;                               // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               MarkerLeftOverlay;                                 // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkerRight;                                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkerRightHighlight;                              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               MarkerRightOverlay;                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Caption;                                           // 0x02D0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	EHorizontalAlignment                          Alignment;                                         // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x02E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_Vendor_MapFragments_MapLabel(int32 EntryPoint);
	void OnUnlock(bool bAnimate);
	void PreConstruct(bool IsDesignTime);
	void SetLabel(const class FText& InCaption, EHorizontalAlignment InAlign);
	void SetVisible(bool InVisible, bool Animate);
	void Unlock();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Vendor_MapFragments_MapLabel_C">();
	}
	static class UBP_Vendor_MapFragments_MapLabel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Vendor_MapFragments_MapLabel_C>();
	}
};
static_assert(alignof(UBP_Vendor_MapFragments_MapLabel_C) == 0x000008, "Wrong alignment on UBP_Vendor_MapFragments_MapLabel_C");
static_assert(sizeof(UBP_Vendor_MapFragments_MapLabel_C) == 0x0002F0, "Wrong size on UBP_Vendor_MapFragments_MapLabel_C");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, UberGraphFrame) == 0x000268, "Member 'UBP_Vendor_MapFragments_MapLabel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, HighlightAnim) == 0x000270, "Member 'UBP_Vendor_MapFragments_MapLabel_C::HighlightAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, Border_1) == 0x000278, "Member 'UBP_Vendor_MapFragments_MapLabel_C::Border_1' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, Label) == 0x000280, "Member 'UBP_Vendor_MapFragments_MapLabel_C::Label' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, MarkerCenter) == 0x000288, "Member 'UBP_Vendor_MapFragments_MapLabel_C::MarkerCenter' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, MarkerCenterHighlight) == 0x000290, "Member 'UBP_Vendor_MapFragments_MapLabel_C::MarkerCenterHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, MarkerCenterOverlay) == 0x000298, "Member 'UBP_Vendor_MapFragments_MapLabel_C::MarkerCenterOverlay' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, MarkerLeft) == 0x0002A0, "Member 'UBP_Vendor_MapFragments_MapLabel_C::MarkerLeft' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, MarkerLeftHighlight) == 0x0002A8, "Member 'UBP_Vendor_MapFragments_MapLabel_C::MarkerLeftHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, MarkerLeftOverlay) == 0x0002B0, "Member 'UBP_Vendor_MapFragments_MapLabel_C::MarkerLeftOverlay' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, MarkerRight) == 0x0002B8, "Member 'UBP_Vendor_MapFragments_MapLabel_C::MarkerRight' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, MarkerRightHighlight) == 0x0002C0, "Member 'UBP_Vendor_MapFragments_MapLabel_C::MarkerRightHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, MarkerRightOverlay) == 0x0002C8, "Member 'UBP_Vendor_MapFragments_MapLabel_C::MarkerRightOverlay' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, Caption) == 0x0002D0, "Member 'UBP_Vendor_MapFragments_MapLabel_C::Caption' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, Alignment) == 0x0002E8, "Member 'UBP_Vendor_MapFragments_MapLabel_C::Alignment' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_MapLabel_C, Visible) == 0x0002E9, "Member 'UBP_Vendor_MapFragments_MapLabel_C::Visible' has a wrong offset!");

}

