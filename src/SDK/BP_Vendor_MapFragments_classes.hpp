#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Vendor_MapFragments

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Vendor_MapFragments.BP_Vendor_MapFragments_C
// 0x03F8 (0x0968 - 0x0570)
class UBP_Vendor_MapFragments_C final : public UVendorMapFragmentUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0570(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UpgradeProgressAnim;                               // 0x0578(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UpgradeEndAnim;                                    // 0x0580(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MapFragmentsAddedAnim;                             // 0x0588(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LevelJumpAnimEnd;                                  // 0x0590(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LevelNumberJumpAnim;                               // 0x0598(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LevelJumpAnim;                                     // 0x05A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LevelUp;                                           // 0x05A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOutAnim;                                       // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x05B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Base;                                              // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BottomScreenFrame;                                 // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CloseButton_C*                      BtnClose;                                          // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyB;                                        // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnHotkeyHoldA;                                    // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnNextTab;                                        // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InteractButton_Normal_C*            BtnPreviousTab;                                    // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ContentFrame;                                      // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentLevel;                                      // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         CurrentLevelBox;                                   // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentXP;                                         // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      DiagramNum;                                        // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      DiagramXP;                                         // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_BraerCastleDungeons;                      // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_BraerCastleGarden;                        // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_BraerCastleLeftWing;                      // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_BraerCastleRightWing;                     // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_DilapidatedMausoleum;                     // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_DrakkedenCitadel;                         // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_DriftingRock;                             // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_ForgottenCatacombs;                       // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_ForsakenMine;                             // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_FrostbitePass;                            // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_GloomrootWoods;                           // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_GravseepSwamp;                            // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_Hinterlands;                              // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_InnerCity;                                // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_LochmuirVillage;                          // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_OldWickhamMonastery;                      // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_Palaces;                                  // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_TombstoneHollows;                         // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_WestWickham;                              // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_Fragment_C*     Fragment_Wickham;                                  // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_BraerCastleDungeons;             // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_BraerCastleGarden;               // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_BraerCastleLeftWing;             // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_BraerCastleRightWing;            // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_DilapidatedMausoleum;            // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_DrakkedenCitadel;                // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_DriftingRock;                    // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_ForgottenCatacombs;              // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_ForsakenMine;                    // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_FrostbitePass;                   // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_GloomrootWoods;                  // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_GravseepSwamp;                   // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_Hinterlands;                     // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_InnerCity;                       // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_LochmuirVillage;                 // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_OldWickhamMonastery;             // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_Palaces;                         // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_TombstoneHollows;                // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_WestWickham;                     // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_FragmentHighlight_C* FragmentHighlight_Wickham;                         // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             JumpLevel;                                         // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             JumpLevelText;                                     // 0x0770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_MapLabel_C*     Label_BraerIsland;                                 // 0x0778(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_MapLabel_C*     Label_CrimsonCity;                                 // 0x0780(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_MapLabel_C*     Label_DrakkedenCitadel;                            // 0x0788(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_MapLabel_C*     Label_GloomrootWoods;                              // 0x0790(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_MapLabel_C*     Label_GravseepSwamp;                               // 0x0798(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_MapLabel_C*     Label_LochmuirVillage;                             // 0x07A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_MapLabel_C*     Label_TheDriftingRock;                             // 0x07A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_MapLabel_C*     Label_TheWitchTree;                                // 0x07B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Vendor_MapFragments_MapLabel_C*     Label_Wickham;                                     // 0x07B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftAstroDecor;                                    // 0x07C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftCaptionFrames;                                 // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftDisc;                                          // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftExplosion2;                                    // 0x07D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftExplosion4;                                    // 0x07E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftExplosion5;                                    // 0x07E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftExplosion6;                                    // 0x07F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftExplosionGlow;                                 // 0x07F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           LeftFrame;                                         // 0x0800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftMapFragment;                                   // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftRing;                                          // 0x0810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftRingDark;                                      // 0x0818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftWindup;                                        // 0x0820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LevelJumpAnimBox;                                  // 0x0828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LevelUpArrow;                                      // 0x0830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MapHighlight;                                      // 0x0838(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           MapMask;                                           // 0x0840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               MouseGiveMapFragmentSizeBox;                       // 0x0848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NextLevel;                                         // 0x0850(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NormalFrame;                                       // 0x0858(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               NPCInfoBox;                                        // 0x0860(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RequiredXP;                                        // 0x0868(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RevealableLabels;                                  // 0x0870(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RevealedMap;                                       // 0x0878(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RightFrame;                                        // 0x0880(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ScreenBg2;                                         // 0x0888(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           StaticLabels;                                      // 0x0890(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Bestiary;                                      // 0x0898(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Buy;                                           // 0x08A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Craft;                                         // 0x08A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Enchant;                                       // 0x08B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Garden;                                        // 0x08B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_MapFragments;                                  // 0x08C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Sell;                                          // 0x08C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Talk;                                          // 0x08D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Transmog;                                      // 0x08D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tab_Button_New_C*                   Tab_Upgrade;                                       // 0x08E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Tabs;                                              // 0x08E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TopScreenFrame;                                    // 0x08F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VendorLevel;                                       // 0x08F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VendorLevelText;                                   // 0x0900(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VendorName;                                        // 0x0908(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      VendorXPCaption;                                   // 0x0910(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBarVendorXPNew_C*   XPBar;                                             // 0x0918(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XPBarHighlight;                                    // 0x0920(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AnimatedProgressBarVendorXPNew_C*   XPBarIncrement;                                    // 0x0928(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XPFrame;                                           // 0x0930(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XPFrameHighlight;                                  // 0x0938(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               XPOverlay;                                         // 0x0940(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              BtnCloseClickedEvent;                              // 0x0948(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         DisplayedLevel;                                    // 0x0958(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReachedLevel;                                      // 0x095C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AnimateLevelDisplayHandle;                         // 0x0960(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Vendor_MapFragments(int32 EntryPoint);
	void OnSetInputDisplay(EInputDisplay InInputDisplay, EInputDisplay InControlDisplay);
	void BndEvt__BP_Vendor_Alchemist_BtnClose_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature();
	void OnHoldFinished(class UInteractButtonUserWidget* InteractButtonUserWidget);
	void OnHoldCanceled(class UInteractButtonUserWidget* InteractButtonUserWidget, bool bMinTimeCancel);
	void OnHoldStarted(class UInteractButtonUserWidget* InteractButtonUserWidget);
	void BndEvt__BP_Conversation_Tab_Transmog_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature();
	void OnLearnMapFragment(bool LevelUp_0);
	void OnSetMapFragmentParams(const class FText& MapFragmentsNum, const class FText& MapFragmentsXpText, float MapFragmentsXpValue, bool bMapFragmentsAvailable);
	void BndEvt__BP_Vendor_MapFragments_Tab_MapFragments_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Craft_BtnNextTab_1_K2Node_ComponentBoundEvent_22_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Craft_BtnPreviousTab_1_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature();
	void OnGamepadRBEvent();
	void OnGamepadLBEvent();
	void WidgetAnimationEvt_LevelJumpAnim_K2Node_WidgetAnimationEvent_0();
	void BndEvt__BP_Vendor_Upgrade_New_Tab_Upgrade_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature();
	void OnSetVendorName(const class FText& VendorName_0);
	void BndEvt__BP_Vendor_Craft_Tab_Talk_1_K2Node_ComponentBoundEvent_21_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Craft_Tab_Bestiary_1_K2Node_ComponentBoundEvent_20_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Craft_Tab_Garden_1_K2Node_ComponentBoundEvent_19_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Craft_Tab_Upgrade_1_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Craft_Tab_Craft_1_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Craft_Tab_Sell_1_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature();
	void BndEvt__BP_Vendor_Craft_Tab_Buy_1_K2Node_ComponentBoundEvent_13_OnClicked__DelegateSignature();
	void BndEvt__BtnClose_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void OnGamepadBEvent();
	void OnHide(float AnimDuration);
	void OnShow(float AnimDuration);
	void OnInitialized();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void BtnHotkeyBClicked();
	void SetVendorParams(bool PlayAnim);
	void SetXP(float InCurrentXP, float InCurrentLevelXP, float InNextLevelXP, bool PlayAnim);
	void SetMapFragmentParams(const class FText& MapFragmentsNum, const class FText& MapFragmentsXpText, float MapFragmentsXpValue, bool MapFragmentsAvailable);
	void PlayLevelJumpAnim(int32 CurrentLevel_0, int32 ReachedLevel_0);
	void AnimateLevelDisplay();
	void ToggleFragmentsAvailable(bool InFragmentsAvailable);
	void SetBtnCloseVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Vendor_MapFragments_C">();
	}
	static class UBP_Vendor_MapFragments_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Vendor_MapFragments_C>();
	}
};
static_assert(alignof(UBP_Vendor_MapFragments_C) == 0x000008, "Wrong alignment on UBP_Vendor_MapFragments_C");
static_assert(sizeof(UBP_Vendor_MapFragments_C) == 0x000968, "Wrong size on UBP_Vendor_MapFragments_C");
static_assert(offsetof(UBP_Vendor_MapFragments_C, UberGraphFrame) == 0x000570, "Member 'UBP_Vendor_MapFragments_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, UpgradeProgressAnim) == 0x000578, "Member 'UBP_Vendor_MapFragments_C::UpgradeProgressAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, UpgradeEndAnim) == 0x000580, "Member 'UBP_Vendor_MapFragments_C::UpgradeEndAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, MapFragmentsAddedAnim) == 0x000588, "Member 'UBP_Vendor_MapFragments_C::MapFragmentsAddedAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LevelJumpAnimEnd) == 0x000590, "Member 'UBP_Vendor_MapFragments_C::LevelJumpAnimEnd' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LevelNumberJumpAnim) == 0x000598, "Member 'UBP_Vendor_MapFragments_C::LevelNumberJumpAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LevelJumpAnim) == 0x0005A0, "Member 'UBP_Vendor_MapFragments_C::LevelJumpAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LevelUp) == 0x0005A8, "Member 'UBP_Vendor_MapFragments_C::LevelUp' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FadeOutAnim) == 0x0005B0, "Member 'UBP_Vendor_MapFragments_C::FadeOutAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FadeInAnim) == 0x0005B8, "Member 'UBP_Vendor_MapFragments_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Base) == 0x0005C0, "Member 'UBP_Vendor_MapFragments_C::Base' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, BottomScreenFrame) == 0x0005C8, "Member 'UBP_Vendor_MapFragments_C::BottomScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, BtnClose) == 0x0005D0, "Member 'UBP_Vendor_MapFragments_C::BtnClose' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, BtnHotkeyB) == 0x0005D8, "Member 'UBP_Vendor_MapFragments_C::BtnHotkeyB' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, BtnHotkeyHoldA) == 0x0005E0, "Member 'UBP_Vendor_MapFragments_C::BtnHotkeyHoldA' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, BtnNextTab) == 0x0005E8, "Member 'UBP_Vendor_MapFragments_C::BtnNextTab' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, BtnPreviousTab) == 0x0005F0, "Member 'UBP_Vendor_MapFragments_C::BtnPreviousTab' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, ContentFrame) == 0x0005F8, "Member 'UBP_Vendor_MapFragments_C::ContentFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, CurrentLevel) == 0x000600, "Member 'UBP_Vendor_MapFragments_C::CurrentLevel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, CurrentLevelBox) == 0x000608, "Member 'UBP_Vendor_MapFragments_C::CurrentLevelBox' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, CurrentXP) == 0x000610, "Member 'UBP_Vendor_MapFragments_C::CurrentXP' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, DiagramNum) == 0x000618, "Member 'UBP_Vendor_MapFragments_C::DiagramNum' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, DiagramXP) == 0x000620, "Member 'UBP_Vendor_MapFragments_C::DiagramXP' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_BraerCastleDungeons) == 0x000628, "Member 'UBP_Vendor_MapFragments_C::Fragment_BraerCastleDungeons' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_BraerCastleGarden) == 0x000630, "Member 'UBP_Vendor_MapFragments_C::Fragment_BraerCastleGarden' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_BraerCastleLeftWing) == 0x000638, "Member 'UBP_Vendor_MapFragments_C::Fragment_BraerCastleLeftWing' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_BraerCastleRightWing) == 0x000640, "Member 'UBP_Vendor_MapFragments_C::Fragment_BraerCastleRightWing' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_DilapidatedMausoleum) == 0x000648, "Member 'UBP_Vendor_MapFragments_C::Fragment_DilapidatedMausoleum' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_DrakkedenCitadel) == 0x000650, "Member 'UBP_Vendor_MapFragments_C::Fragment_DrakkedenCitadel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_DriftingRock) == 0x000658, "Member 'UBP_Vendor_MapFragments_C::Fragment_DriftingRock' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_ForgottenCatacombs) == 0x000660, "Member 'UBP_Vendor_MapFragments_C::Fragment_ForgottenCatacombs' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_ForsakenMine) == 0x000668, "Member 'UBP_Vendor_MapFragments_C::Fragment_ForsakenMine' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_FrostbitePass) == 0x000670, "Member 'UBP_Vendor_MapFragments_C::Fragment_FrostbitePass' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_GloomrootWoods) == 0x000678, "Member 'UBP_Vendor_MapFragments_C::Fragment_GloomrootWoods' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_GravseepSwamp) == 0x000680, "Member 'UBP_Vendor_MapFragments_C::Fragment_GravseepSwamp' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_Hinterlands) == 0x000688, "Member 'UBP_Vendor_MapFragments_C::Fragment_Hinterlands' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_InnerCity) == 0x000690, "Member 'UBP_Vendor_MapFragments_C::Fragment_InnerCity' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_LochmuirVillage) == 0x000698, "Member 'UBP_Vendor_MapFragments_C::Fragment_LochmuirVillage' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_OldWickhamMonastery) == 0x0006A0, "Member 'UBP_Vendor_MapFragments_C::Fragment_OldWickhamMonastery' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_Palaces) == 0x0006A8, "Member 'UBP_Vendor_MapFragments_C::Fragment_Palaces' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_TombstoneHollows) == 0x0006B0, "Member 'UBP_Vendor_MapFragments_C::Fragment_TombstoneHollows' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_WestWickham) == 0x0006B8, "Member 'UBP_Vendor_MapFragments_C::Fragment_WestWickham' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Fragment_Wickham) == 0x0006C0, "Member 'UBP_Vendor_MapFragments_C::Fragment_Wickham' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_BraerCastleDungeons) == 0x0006C8, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_BraerCastleDungeons' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_BraerCastleGarden) == 0x0006D0, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_BraerCastleGarden' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_BraerCastleLeftWing) == 0x0006D8, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_BraerCastleLeftWing' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_BraerCastleRightWing) == 0x0006E0, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_BraerCastleRightWing' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_DilapidatedMausoleum) == 0x0006E8, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_DilapidatedMausoleum' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_DrakkedenCitadel) == 0x0006F0, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_DrakkedenCitadel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_DriftingRock) == 0x0006F8, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_DriftingRock' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_ForgottenCatacombs) == 0x000700, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_ForgottenCatacombs' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_ForsakenMine) == 0x000708, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_ForsakenMine' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_FrostbitePass) == 0x000710, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_FrostbitePass' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_GloomrootWoods) == 0x000718, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_GloomrootWoods' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_GravseepSwamp) == 0x000720, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_GravseepSwamp' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_Hinterlands) == 0x000728, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_Hinterlands' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_InnerCity) == 0x000730, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_InnerCity' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_LochmuirVillage) == 0x000738, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_LochmuirVillage' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_OldWickhamMonastery) == 0x000740, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_OldWickhamMonastery' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_Palaces) == 0x000748, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_Palaces' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_TombstoneHollows) == 0x000750, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_TombstoneHollows' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_WestWickham) == 0x000758, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_WestWickham' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, FragmentHighlight_Wickham) == 0x000760, "Member 'UBP_Vendor_MapFragments_C::FragmentHighlight_Wickham' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, JumpLevel) == 0x000768, "Member 'UBP_Vendor_MapFragments_C::JumpLevel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, JumpLevelText) == 0x000770, "Member 'UBP_Vendor_MapFragments_C::JumpLevelText' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Label_BraerIsland) == 0x000778, "Member 'UBP_Vendor_MapFragments_C::Label_BraerIsland' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Label_CrimsonCity) == 0x000780, "Member 'UBP_Vendor_MapFragments_C::Label_CrimsonCity' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Label_DrakkedenCitadel) == 0x000788, "Member 'UBP_Vendor_MapFragments_C::Label_DrakkedenCitadel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Label_GloomrootWoods) == 0x000790, "Member 'UBP_Vendor_MapFragments_C::Label_GloomrootWoods' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Label_GravseepSwamp) == 0x000798, "Member 'UBP_Vendor_MapFragments_C::Label_GravseepSwamp' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Label_LochmuirVillage) == 0x0007A0, "Member 'UBP_Vendor_MapFragments_C::Label_LochmuirVillage' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Label_TheDriftingRock) == 0x0007A8, "Member 'UBP_Vendor_MapFragments_C::Label_TheDriftingRock' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Label_TheWitchTree) == 0x0007B0, "Member 'UBP_Vendor_MapFragments_C::Label_TheWitchTree' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Label_Wickham) == 0x0007B8, "Member 'UBP_Vendor_MapFragments_C::Label_Wickham' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftAstroDecor) == 0x0007C0, "Member 'UBP_Vendor_MapFragments_C::LeftAstroDecor' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftCaptionFrames) == 0x0007C8, "Member 'UBP_Vendor_MapFragments_C::LeftCaptionFrames' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftDisc) == 0x0007D0, "Member 'UBP_Vendor_MapFragments_C::LeftDisc' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftExplosion2) == 0x0007D8, "Member 'UBP_Vendor_MapFragments_C::LeftExplosion2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftExplosion4) == 0x0007E0, "Member 'UBP_Vendor_MapFragments_C::LeftExplosion4' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftExplosion5) == 0x0007E8, "Member 'UBP_Vendor_MapFragments_C::LeftExplosion5' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftExplosion6) == 0x0007F0, "Member 'UBP_Vendor_MapFragments_C::LeftExplosion6' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftExplosionGlow) == 0x0007F8, "Member 'UBP_Vendor_MapFragments_C::LeftExplosionGlow' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftFrame) == 0x000800, "Member 'UBP_Vendor_MapFragments_C::LeftFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftMapFragment) == 0x000808, "Member 'UBP_Vendor_MapFragments_C::LeftMapFragment' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftRing) == 0x000810, "Member 'UBP_Vendor_MapFragments_C::LeftRing' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftRingDark) == 0x000818, "Member 'UBP_Vendor_MapFragments_C::LeftRingDark' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LeftWindup) == 0x000820, "Member 'UBP_Vendor_MapFragments_C::LeftWindup' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LevelJumpAnimBox) == 0x000828, "Member 'UBP_Vendor_MapFragments_C::LevelJumpAnimBox' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, LevelUpArrow) == 0x000830, "Member 'UBP_Vendor_MapFragments_C::LevelUpArrow' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, MapHighlight) == 0x000838, "Member 'UBP_Vendor_MapFragments_C::MapHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, MapMask) == 0x000840, "Member 'UBP_Vendor_MapFragments_C::MapMask' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, MouseGiveMapFragmentSizeBox) == 0x000848, "Member 'UBP_Vendor_MapFragments_C::MouseGiveMapFragmentSizeBox' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, NextLevel) == 0x000850, "Member 'UBP_Vendor_MapFragments_C::NextLevel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, NormalFrame) == 0x000858, "Member 'UBP_Vendor_MapFragments_C::NormalFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, NPCInfoBox) == 0x000860, "Member 'UBP_Vendor_MapFragments_C::NPCInfoBox' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, RequiredXP) == 0x000868, "Member 'UBP_Vendor_MapFragments_C::RequiredXP' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, RevealableLabels) == 0x000870, "Member 'UBP_Vendor_MapFragments_C::RevealableLabels' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, RevealedMap) == 0x000878, "Member 'UBP_Vendor_MapFragments_C::RevealedMap' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, RightFrame) == 0x000880, "Member 'UBP_Vendor_MapFragments_C::RightFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, ScreenBg2) == 0x000888, "Member 'UBP_Vendor_MapFragments_C::ScreenBg2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, StaticLabels) == 0x000890, "Member 'UBP_Vendor_MapFragments_C::StaticLabels' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Tab_Bestiary) == 0x000898, "Member 'UBP_Vendor_MapFragments_C::Tab_Bestiary' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Tab_Buy) == 0x0008A0, "Member 'UBP_Vendor_MapFragments_C::Tab_Buy' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Tab_Craft) == 0x0008A8, "Member 'UBP_Vendor_MapFragments_C::Tab_Craft' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Tab_Enchant) == 0x0008B0, "Member 'UBP_Vendor_MapFragments_C::Tab_Enchant' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Tab_Garden) == 0x0008B8, "Member 'UBP_Vendor_MapFragments_C::Tab_Garden' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Tab_MapFragments) == 0x0008C0, "Member 'UBP_Vendor_MapFragments_C::Tab_MapFragments' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Tab_Sell) == 0x0008C8, "Member 'UBP_Vendor_MapFragments_C::Tab_Sell' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Tab_Talk) == 0x0008D0, "Member 'UBP_Vendor_MapFragments_C::Tab_Talk' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Tab_Transmog) == 0x0008D8, "Member 'UBP_Vendor_MapFragments_C::Tab_Transmog' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Tab_Upgrade) == 0x0008E0, "Member 'UBP_Vendor_MapFragments_C::Tab_Upgrade' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, Tabs) == 0x0008E8, "Member 'UBP_Vendor_MapFragments_C::Tabs' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, TopScreenFrame) == 0x0008F0, "Member 'UBP_Vendor_MapFragments_C::TopScreenFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, VendorLevel) == 0x0008F8, "Member 'UBP_Vendor_MapFragments_C::VendorLevel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, VendorLevelText) == 0x000900, "Member 'UBP_Vendor_MapFragments_C::VendorLevelText' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, VendorName) == 0x000908, "Member 'UBP_Vendor_MapFragments_C::VendorName' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, VendorXPCaption) == 0x000910, "Member 'UBP_Vendor_MapFragments_C::VendorXPCaption' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, XPBar) == 0x000918, "Member 'UBP_Vendor_MapFragments_C::XPBar' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, XPBarHighlight) == 0x000920, "Member 'UBP_Vendor_MapFragments_C::XPBarHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, XPBarIncrement) == 0x000928, "Member 'UBP_Vendor_MapFragments_C::XPBarIncrement' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, XPFrame) == 0x000930, "Member 'UBP_Vendor_MapFragments_C::XPFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, XPFrameHighlight) == 0x000938, "Member 'UBP_Vendor_MapFragments_C::XPFrameHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, XPOverlay) == 0x000940, "Member 'UBP_Vendor_MapFragments_C::XPOverlay' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, BtnCloseClickedEvent) == 0x000948, "Member 'UBP_Vendor_MapFragments_C::BtnCloseClickedEvent' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, DisplayedLevel) == 0x000958, "Member 'UBP_Vendor_MapFragments_C::DisplayedLevel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, ReachedLevel) == 0x00095C, "Member 'UBP_Vendor_MapFragments_C::ReachedLevel' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_MapFragments_C, AnimateLevelDisplayHandle) == 0x000960, "Member 'UBP_Vendor_MapFragments_C::AnimateLevelDisplayHandle' has a wrong offset!");

}

