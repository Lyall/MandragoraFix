#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Vendor_UpgradeSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "man_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C
// 0x00F8 (0x0360 - 0x0268)
class UBP_Vendor_UpgradeSlot_C final : public UVendorUpgradeSlotUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ErrorAnim;                                         // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UpgradeEndAnim;                                    // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UpgradeProgressAnim;                               // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Bg;                                                // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CaptionRequirement;                                // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CaptionUnlocked;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UManRichTextBlock*                      Description;                                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Name_0;                                            // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpgradeHighlight;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpgradeHighlightVFX;                               // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpgradeMouseHighlight;                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpgradeVFX_Flare1;                                 // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpgradeVFX_Flare2;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpgradeVFX_Wipe1;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpgradeVFX_Wipe2;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpgradeVFX_Wipe3;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpgradeVFX_Wipe4;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_0;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnHovered;                                         // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnUnhovered;                                       // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnReleased;                                        // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnPressed;                                         // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnUnfocus;                                         // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsUnlocked;                                        // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IsSmallScreen;                                     // 0x0359(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_Vendor_UpgradeSlot(int32 EntryPoint);
	void OnHighlighted(bool bHighlighted, bool bAnimate);
	void OnSetSlot(const class FText& InName, const class FText& InDescription, const class FText& InRequirements, bool bInUnlocked);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void SetSlot();
	void SetState(bool InUnlocked);
	void PlayUpgradeProgressAnim();
	void PlayUpgradeCancelledAnim();
	void PlayUpgradeFinishedAnim();
	void UpgradeAnimFinished();
	void ErrorHighlight();
	void ToggleSmallScreen(bool InIsSmallScreen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Vendor_UpgradeSlot_C">();
	}
	static class UBP_Vendor_UpgradeSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Vendor_UpgradeSlot_C>();
	}
};
static_assert(alignof(UBP_Vendor_UpgradeSlot_C) == 0x000008, "Wrong alignment on UBP_Vendor_UpgradeSlot_C");
static_assert(sizeof(UBP_Vendor_UpgradeSlot_C) == 0x000360, "Wrong size on UBP_Vendor_UpgradeSlot_C");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, UberGraphFrame) == 0x000268, "Member 'UBP_Vendor_UpgradeSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, ErrorAnim) == 0x000270, "Member 'UBP_Vendor_UpgradeSlot_C::ErrorAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, UpgradeEndAnim) == 0x000278, "Member 'UBP_Vendor_UpgradeSlot_C::UpgradeEndAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, UpgradeProgressAnim) == 0x000280, "Member 'UBP_Vendor_UpgradeSlot_C::UpgradeProgressAnim' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, Bg) == 0x000288, "Member 'UBP_Vendor_UpgradeSlot_C::Bg' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, CaptionRequirement) == 0x000290, "Member 'UBP_Vendor_UpgradeSlot_C::CaptionRequirement' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, CaptionUnlocked) == 0x000298, "Member 'UBP_Vendor_UpgradeSlot_C::CaptionUnlocked' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, Description) == 0x0002A0, "Member 'UBP_Vendor_UpgradeSlot_C::Description' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, Name_0) == 0x0002A8, "Member 'UBP_Vendor_UpgradeSlot_C::Name_0' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, Overlay_0) == 0x0002B0, "Member 'UBP_Vendor_UpgradeSlot_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, UpgradeHighlight) == 0x0002B8, "Member 'UBP_Vendor_UpgradeSlot_C::UpgradeHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, UpgradeHighlightVFX) == 0x0002C0, "Member 'UBP_Vendor_UpgradeSlot_C::UpgradeHighlightVFX' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, UpgradeMouseHighlight) == 0x0002C8, "Member 'UBP_Vendor_UpgradeSlot_C::UpgradeMouseHighlight' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, UpgradeVFX_Flare1) == 0x0002D0, "Member 'UBP_Vendor_UpgradeSlot_C::UpgradeVFX_Flare1' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, UpgradeVFX_Flare2) == 0x0002D8, "Member 'UBP_Vendor_UpgradeSlot_C::UpgradeVFX_Flare2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, UpgradeVFX_Wipe1) == 0x0002E0, "Member 'UBP_Vendor_UpgradeSlot_C::UpgradeVFX_Wipe1' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, UpgradeVFX_Wipe2) == 0x0002E8, "Member 'UBP_Vendor_UpgradeSlot_C::UpgradeVFX_Wipe2' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, UpgradeVFX_Wipe3) == 0x0002F0, "Member 'UBP_Vendor_UpgradeSlot_C::UpgradeVFX_Wipe3' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, UpgradeVFX_Wipe4) == 0x0002F8, "Member 'UBP_Vendor_UpgradeSlot_C::UpgradeVFX_Wipe4' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, VerticalBox_0) == 0x000300, "Member 'UBP_Vendor_UpgradeSlot_C::VerticalBox_0' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, OnHovered) == 0x000308, "Member 'UBP_Vendor_UpgradeSlot_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, OnUnhovered) == 0x000318, "Member 'UBP_Vendor_UpgradeSlot_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, OnReleased) == 0x000328, "Member 'UBP_Vendor_UpgradeSlot_C::OnReleased' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, OnPressed) == 0x000338, "Member 'UBP_Vendor_UpgradeSlot_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, OnUnfocus) == 0x000348, "Member 'UBP_Vendor_UpgradeSlot_C::OnUnfocus' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, IsUnlocked) == 0x000358, "Member 'UBP_Vendor_UpgradeSlot_C::IsUnlocked' has a wrong offset!");
static_assert(offsetof(UBP_Vendor_UpgradeSlot_C, IsSmallScreen) == 0x000359, "Member 'UBP_Vendor_UpgradeSlot_C::IsSmallScreen' has a wrong offset!");

}

