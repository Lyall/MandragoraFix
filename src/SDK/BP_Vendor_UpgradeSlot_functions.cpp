#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Vendor_UpgradeSlot

#include "Basic.hpp"

#include "BP_Vendor_UpgradeSlot_classes.hpp"
#include "BP_Vendor_UpgradeSlot_parameters.hpp"


namespace SDK
{

// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.ExecuteUbergraph_BP_Vendor_UpgradeSlot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Vendor_UpgradeSlot_C::ExecuteUbergraph_BP_Vendor_UpgradeSlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "ExecuteUbergraph_BP_Vendor_UpgradeSlot");

	Params::BP_Vendor_UpgradeSlot_C_ExecuteUbergraph_BP_Vendor_UpgradeSlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.OnHighlighted
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHighlighted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAnimate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Vendor_UpgradeSlot_C::OnHighlighted(bool bHighlighted, bool bAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "OnHighlighted");

	Params::BP_Vendor_UpgradeSlot_C_OnHighlighted Parms{};

	Parms.bHighlighted = bHighlighted;
	Parms.bAnimate = bAnimate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.OnSetSlot
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InName                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             InDescription                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             InRequirements                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bInUnlocked                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Vendor_UpgradeSlot_C::OnSetSlot(const class FText& InName, const class FText& InDescription, const class FText& InRequirements, bool bInUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "OnSetSlot");

	Params::BP_Vendor_UpgradeSlot_C_OnSetSlot Parms{};

	Parms.InName = std::move(InName);
	Parms.InDescription = std::move(InDescription);
	Parms.InRequirements = std::move(InRequirements);
	Parms.bInUnlocked = bInUnlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_Vendor_UpgradeSlot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Vendor_UpgradeSlot_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "Tick");

	Params::BP_Vendor_UpgradeSlot_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Vendor_UpgradeSlot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "PreConstruct");

	Params::BP_Vendor_UpgradeSlot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.SetSlot
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Vendor_UpgradeSlot_C::SetSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "SetSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.SetState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InUnlocked                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Vendor_UpgradeSlot_C::SetState(bool InUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "SetState");

	Params::BP_Vendor_UpgradeSlot_C_SetState Parms{};

	Parms.InUnlocked = InUnlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.PlayUpgradeProgressAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Vendor_UpgradeSlot_C::PlayUpgradeProgressAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "PlayUpgradeProgressAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.PlayUpgradeCancelledAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Vendor_UpgradeSlot_C::PlayUpgradeCancelledAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "PlayUpgradeCancelledAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.PlayUpgradeFinishedAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Vendor_UpgradeSlot_C::PlayUpgradeFinishedAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "PlayUpgradeFinishedAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.UpgradeAnimFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Vendor_UpgradeSlot_C::UpgradeAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "UpgradeAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.ErrorHighlight
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Vendor_UpgradeSlot_C::ErrorHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "ErrorHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vendor_UpgradeSlot.BP_Vendor_UpgradeSlot_C.ToggleSmallScreen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsSmallScreen                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Vendor_UpgradeSlot_C::ToggleSmallScreen(bool InIsSmallScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vendor_UpgradeSlot_C", "ToggleSmallScreen");

	Params::BP_Vendor_UpgradeSlot_C_ToggleSmallScreen Parms{};

	Parms.InIsSmallScreen = InIsSmallScreen;

	UObject::ProcessEvent(Func, &Parms);
}

}

