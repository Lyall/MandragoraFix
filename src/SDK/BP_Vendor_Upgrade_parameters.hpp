#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Vendor_Upgrade

#include "Basic.hpp"

#include "man_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.ExecuteUbergraph_BP_Vendor_Upgrade
// 0x0320 (0x0320 - 0x0000)
struct BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0028)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x006C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration_1;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue;         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AnimDuration;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimPlaybackSpeed_ReturnValue_1;       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_VendorName;                           // 0x00D0(0x0018)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0190(0x0018)()
	class FText                                   K2Node_Event_DiagramsNum;                          // 0x01A8(0x0018)(ConstParm)
	class FText                                   K2Node_Event_DiagramsXpText;                       // 0x01C0(0x0018)(ConstParm)
	float                                         K2Node_Event_DiagramsXpValue;                      // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDiagramsAvailable;                   // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_LevelUp;                              // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DE[0x2];                                      // 0x01DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVendorNextLevel_ReturnValue;           // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroGold_ReturnValue;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x01F8(0x0018)()
	bool                                          K2Node_Event_bShowUpgradeCost;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_UpgradeCost;                          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_IntToText_ReturnValue_1;                  // 0x0218(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroGold_ReturnValue_1;                // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget_3;           // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget_2;           // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bMinTimeCancel;                       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget_1;           // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x026B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26E[0x2];                                      // 0x026E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCurrencyText_ReturnValue;              // 0x0270(0x0018)()
	class FText                                   K2Node_Event_UpgradeTitle;                         // 0x0288(0x0018)(ConstParm)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractButtonUserWidget*              K2Node_Event_InteractButtonUserWidget;             // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x02D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CraftingCost_Item_New_C*            K2Node_DynamicCast_AsBP_Crafting_Cost_Item_New;    // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB[0x5];                                      // 0x02FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCurrencyText_ReturnValue_1;            // 0x0300(0x0018)()
	EInputDisplay                                 K2Node_Event_InInputDisplay;                       // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 K2Node_Event_InControlDisplay;                     // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade");
static_assert(sizeof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade) == 0x000320, "Wrong size on BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, EntryPoint) == 0x000000, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, Temp_bool_Variable) == 0x000004, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, Temp_struct_Variable) == 0x000008, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, Temp_struct_Variable_1) == 0x000018, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Select_Default) == 0x00002C, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, Temp_byte_Variable) == 0x000068, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_IsDesignTime) == 0x000069, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_MyGeometry) == 0x00006C, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_InDeltaTime) == 0x0000A4, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_AnimDuration_1) == 0x0000A8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_AnimDuration_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_GetAnimPlaybackSpeed_ReturnValue) == 0x0000AC, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_GetAnimPlaybackSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_AnimDuration) == 0x0000B0, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_AnimDuration' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_PlayAnimation_ReturnValue) == 0x0000B8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_GetAnimPlaybackSpeed_ReturnValue_1) == 0x0000C0, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_GetAnimPlaybackSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000C8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_VendorName) == 0x0000D0, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_VendorName' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_MakeStruct_FormatArgumentData) == 0x0000E8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_Format_ReturnValue) == 0x000140, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_Conv_TextToString_ReturnValue) == 0x000158, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_Add_IntInt_ReturnValue) == 0x000168, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_Concat_StrStr_ReturnValue) == 0x000170, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000180, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_Conv_StringToText_ReturnValue) == 0x000190, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_DiagramsNum) == 0x0001A8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_DiagramsNum' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_DiagramsXpText) == 0x0001C0, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_DiagramsXpText' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_DiagramsXpValue) == 0x0001D8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_DiagramsXpValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_bDiagramsAvailable) == 0x0001DC, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_bDiagramsAvailable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_LevelUp) == 0x0001DD, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_LevelUp' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_GetVendorNextLevel_ReturnValue) == 0x0001E0, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_GetVendorNextLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001E4, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_PlayAnimation_ReturnValue_2) == 0x0001E8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_GetHeroGold_ReturnValue) == 0x0001F0, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_GetHeroGold_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_IntToText_ReturnValue) == 0x0001F8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_bShowUpgradeCost) == 0x000210, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_bShowUpgradeCost' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_UpgradeCost) == 0x000214, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_UpgradeCost' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_IntToText_ReturnValue_1) == 0x000218, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, Temp_byte_Variable_1) == 0x000230, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_GetHeroGold_ReturnValue_1) == 0x000234, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_GetHeroGold_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_Less_IntInt_ReturnValue) == 0x000238, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_InteractButtonUserWidget_3) == 0x000240, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_InteractButtonUserWidget_3' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_InteractButtonUserWidget_2) == 0x000248, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_InteractButtonUserWidget_2' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_bMinTimeCancel) == 0x000250, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_bMinTimeCancel' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_InteractButtonUserWidget_1) == 0x000258, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_InteractButtonUserWidget_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_PlayAnimation_ReturnValue_3) == 0x000260, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000268, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000269, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00026A, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x00026B, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x00026C, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x00026D, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_GetCurrencyText_ReturnValue) == 0x000270, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_GetCurrencyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_UpgradeTitle) == 0x000288, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_UpgradeTitle' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x0002A0, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x0002A4, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_PlayAnimation_ReturnValue_4) == 0x0002A8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0002B0, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, Temp_bool_Variable_1) == 0x0002B4, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_PlayAnimation_ReturnValue_5) == 0x0002B8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Select_Default_1) == 0x0002C0, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_InteractButtonUserWidget) == 0x0002C8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_InteractButtonUserWidget' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_GetAllChildren_ReturnValue) == 0x0002D0, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_Array_Get_Item) == 0x0002E0, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_Array_Length_ReturnValue) == 0x0002E8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_DynamicCast_AsBP_Crafting_Cost_Item_New) == 0x0002F0, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_DynamicCast_AsBP_Crafting_Cost_Item_New' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_DynamicCast_bSuccess) == 0x0002F8, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002F9, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x0002FA, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, CallFunc_GetCurrencyText_ReturnValue_1) == 0x000300, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::CallFunc_GetCurrencyText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_InInputDisplay) == 0x000318, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade, K2Node_Event_InControlDisplay) == 0x000319, "Member 'BP_Vendor_Upgrade_C_ExecuteUbergraph_BP_Vendor_Upgrade::K2Node_Event_InControlDisplay' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.OnSetInputDisplay
// 0x0002 (0x0002 - 0x0000)
struct BP_Vendor_Upgrade_C_OnSetInputDisplay final
{
public:
	EInputDisplay                                 InInputDisplay;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 InControlDisplay;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_OnSetInputDisplay) == 0x000001, "Wrong alignment on BP_Vendor_Upgrade_C_OnSetInputDisplay");
static_assert(sizeof(BP_Vendor_Upgrade_C_OnSetInputDisplay) == 0x000002, "Wrong size on BP_Vendor_Upgrade_C_OnSetInputDisplay");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnSetInputDisplay, InInputDisplay) == 0x000000, "Member 'BP_Vendor_Upgrade_C_OnSetInputDisplay::InInputDisplay' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnSetInputDisplay, InControlDisplay) == 0x000001, "Member 'BP_Vendor_Upgrade_C_OnSetInputDisplay::InControlDisplay' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.OnErrorHiglight
// 0x0008 (0x0008 - 0x0000)
struct BP_Vendor_Upgrade_C_OnErrorHiglight final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_OnErrorHiglight) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_OnErrorHiglight");
static_assert(sizeof(BP_Vendor_Upgrade_C_OnErrorHiglight) == 0x000008, "Wrong size on BP_Vendor_Upgrade_C_OnErrorHiglight");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnErrorHiglight, InteractButtonUserWidget) == 0x000000, "Member 'BP_Vendor_Upgrade_C_OnErrorHiglight::InteractButtonUserWidget' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.OnSetUpgradeTitle
// 0x0018 (0x0018 - 0x0000)
struct BP_Vendor_Upgrade_C_OnSetUpgradeTitle final
{
public:
	class FText                                   UpgradeTitle_0;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Vendor_Upgrade_C_OnSetUpgradeTitle) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_OnSetUpgradeTitle");
static_assert(sizeof(BP_Vendor_Upgrade_C_OnSetUpgradeTitle) == 0x000018, "Wrong size on BP_Vendor_Upgrade_C_OnSetUpgradeTitle");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnSetUpgradeTitle, UpgradeTitle_0) == 0x000000, "Member 'BP_Vendor_Upgrade_C_OnSetUpgradeTitle::UpgradeTitle_0' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.OnHoldFinished
// 0x0008 (0x0008 - 0x0000)
struct BP_Vendor_Upgrade_C_OnHoldFinished final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_OnHoldFinished) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_OnHoldFinished");
static_assert(sizeof(BP_Vendor_Upgrade_C_OnHoldFinished) == 0x000008, "Wrong size on BP_Vendor_Upgrade_C_OnHoldFinished");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnHoldFinished, InteractButtonUserWidget) == 0x000000, "Member 'BP_Vendor_Upgrade_C_OnHoldFinished::InteractButtonUserWidget' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.OnHoldCanceled
// 0x0010 (0x0010 - 0x0000)
struct BP_Vendor_Upgrade_C_OnHoldCanceled final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMinTimeCancel;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Vendor_Upgrade_C_OnHoldCanceled) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_OnHoldCanceled");
static_assert(sizeof(BP_Vendor_Upgrade_C_OnHoldCanceled) == 0x000010, "Wrong size on BP_Vendor_Upgrade_C_OnHoldCanceled");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnHoldCanceled, InteractButtonUserWidget) == 0x000000, "Member 'BP_Vendor_Upgrade_C_OnHoldCanceled::InteractButtonUserWidget' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnHoldCanceled, bMinTimeCancel) == 0x000008, "Member 'BP_Vendor_Upgrade_C_OnHoldCanceled::bMinTimeCancel' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.OnHoldStarted
// 0x0008 (0x0008 - 0x0000)
struct BP_Vendor_Upgrade_C_OnHoldStarted final
{
public:
	class UInteractButtonUserWidget*              InteractButtonUserWidget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_OnHoldStarted) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_OnHoldStarted");
static_assert(sizeof(BP_Vendor_Upgrade_C_OnHoldStarted) == 0x000008, "Wrong size on BP_Vendor_Upgrade_C_OnHoldStarted");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnHoldStarted, InteractButtonUserWidget) == 0x000000, "Member 'BP_Vendor_Upgrade_C_OnHoldStarted::InteractButtonUserWidget' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.OnSetUpgradeCost
// 0x0008 (0x0008 - 0x0000)
struct BP_Vendor_Upgrade_C_OnSetUpgradeCost final
{
public:
	bool                                          bShowUpgradeCost;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UpgradeCost;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_OnSetUpgradeCost) == 0x000004, "Wrong alignment on BP_Vendor_Upgrade_C_OnSetUpgradeCost");
static_assert(sizeof(BP_Vendor_Upgrade_C_OnSetUpgradeCost) == 0x000008, "Wrong size on BP_Vendor_Upgrade_C_OnSetUpgradeCost");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnSetUpgradeCost, bShowUpgradeCost) == 0x000000, "Member 'BP_Vendor_Upgrade_C_OnSetUpgradeCost::bShowUpgradeCost' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnSetUpgradeCost, UpgradeCost) == 0x000004, "Member 'BP_Vendor_Upgrade_C_OnSetUpgradeCost::UpgradeCost' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.OnLearnDiagram
// 0x0001 (0x0001 - 0x0000)
struct BP_Vendor_Upgrade_C_OnLearnDiagram final
{
public:
	bool                                          LevelUp_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Vendor_Upgrade_C_OnLearnDiagram) == 0x000001, "Wrong alignment on BP_Vendor_Upgrade_C_OnLearnDiagram");
static_assert(sizeof(BP_Vendor_Upgrade_C_OnLearnDiagram) == 0x000001, "Wrong size on BP_Vendor_Upgrade_C_OnLearnDiagram");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnLearnDiagram, LevelUp_0) == 0x000000, "Member 'BP_Vendor_Upgrade_C_OnLearnDiagram::LevelUp_0' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.OnSetDiagramParams
// 0x0038 (0x0038 - 0x0000)
struct BP_Vendor_Upgrade_C_OnSetDiagramParams final
{
public:
	class FText                                   DiagramsNum;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   DiagramsXpText;                                    // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         DiagramsXpValue;                                   // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDiagramsAvailable;                                // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Vendor_Upgrade_C_OnSetDiagramParams) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_OnSetDiagramParams");
static_assert(sizeof(BP_Vendor_Upgrade_C_OnSetDiagramParams) == 0x000038, "Wrong size on BP_Vendor_Upgrade_C_OnSetDiagramParams");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnSetDiagramParams, DiagramsNum) == 0x000000, "Member 'BP_Vendor_Upgrade_C_OnSetDiagramParams::DiagramsNum' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnSetDiagramParams, DiagramsXpText) == 0x000018, "Member 'BP_Vendor_Upgrade_C_OnSetDiagramParams::DiagramsXpText' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnSetDiagramParams, DiagramsXpValue) == 0x000030, "Member 'BP_Vendor_Upgrade_C_OnSetDiagramParams::DiagramsXpValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnSetDiagramParams, bDiagramsAvailable) == 0x000034, "Member 'BP_Vendor_Upgrade_C_OnSetDiagramParams::bDiagramsAvailable' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.OnSetVendorName
// 0x0018 (0x0018 - 0x0000)
struct BP_Vendor_Upgrade_C_OnSetVendorName final
{
public:
	class FText                                   VendorName_0;                                      // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Vendor_Upgrade_C_OnSetVendorName) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_OnSetVendorName");
static_assert(sizeof(BP_Vendor_Upgrade_C_OnSetVendorName) == 0x000018, "Wrong size on BP_Vendor_Upgrade_C_OnSetVendorName");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnSetVendorName, VendorName_0) == 0x000000, "Member 'BP_Vendor_Upgrade_C_OnSetVendorName::VendorName_0' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.OnHide
// 0x0004 (0x0004 - 0x0000)
struct BP_Vendor_Upgrade_C_OnHide final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_OnHide) == 0x000004, "Wrong alignment on BP_Vendor_Upgrade_C_OnHide");
static_assert(sizeof(BP_Vendor_Upgrade_C_OnHide) == 0x000004, "Wrong size on BP_Vendor_Upgrade_C_OnHide");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnHide, AnimDuration) == 0x000000, "Member 'BP_Vendor_Upgrade_C_OnHide::AnimDuration' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.OnShow
// 0x0004 (0x0004 - 0x0000)
struct BP_Vendor_Upgrade_C_OnShow final
{
public:
	float                                         AnimDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_OnShow) == 0x000004, "Wrong alignment on BP_Vendor_Upgrade_C_OnShow");
static_assert(sizeof(BP_Vendor_Upgrade_C_OnShow) == 0x000004, "Wrong size on BP_Vendor_Upgrade_C_OnShow");
static_assert(offsetof(BP_Vendor_Upgrade_C_OnShow, AnimDuration) == 0x000000, "Member 'BP_Vendor_Upgrade_C_OnShow::AnimDuration' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_Vendor_Upgrade_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_Tick) == 0x000004, "Wrong alignment on BP_Vendor_Upgrade_C_Tick");
static_assert(sizeof(BP_Vendor_Upgrade_C_Tick) == 0x00003C, "Wrong size on BP_Vendor_Upgrade_C_Tick");
static_assert(offsetof(BP_Vendor_Upgrade_C_Tick, MyGeometry) == 0x000000, "Member 'BP_Vendor_Upgrade_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_Vendor_Upgrade_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Vendor_Upgrade_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Vendor_Upgrade_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Vendor_Upgrade_C_PreConstruct");
static_assert(sizeof(BP_Vendor_Upgrade_C_PreConstruct) == 0x000001, "Wrong size on BP_Vendor_Upgrade_C_PreConstruct");
static_assert(offsetof(BP_Vendor_Upgrade_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Vendor_Upgrade_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.SetVendorParams
// 0x00F8 (0x00F8 - 0x0000)
struct BP_Vendor_Upgrade_C_SetVendorParams final
{
public:
	bool                                          PlayAnim;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVendorLevelByDiagrams_ReturnValue;     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVendorCurrentLevel_ReturnValue;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLevelText_ReturnValue;                 // 0x0050(0x0018)()
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0080(0x0028)()
	int32                                         K2Node_Select_Default_2;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLevelText_ReturnValue_1;               // 0x00B0(0x0018)()
	float                                         CallFunc_GetVendorExperienceForNextLevel_ReturnValue; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVendorCurrentLevel_ReturnValue_1;      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x00D8(0x0018)()
	float                                         CallFunc_GetVendorExperienceForCurrentLevel_ReturnValue; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVendorCurrentExperience_ReturnValue;   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_SetVendorParams) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_SetVendorParams");
static_assert(sizeof(BP_Vendor_Upgrade_C_SetVendorParams) == 0x0000F8, "Wrong size on BP_Vendor_Upgrade_C_SetVendorParams");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, PlayAnim) == 0x000000, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::PlayAnim' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, Temp_object_Variable) == 0x000008, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, Temp_object_Variable_1) == 0x000010, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, Temp_bool_Variable) == 0x000018, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, Temp_struct_Variable) == 0x00001C, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, Temp_struct_Variable_1) == 0x00002C, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, Temp_bool_Variable_1) == 0x00003C, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, Temp_bool_Variable_2) == 0x00003D, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, CallFunc_GetVendorLevelByDiagrams_ReturnValue) == 0x000040, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::CallFunc_GetVendorLevelByDiagrams_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, CallFunc_GetVendorCurrentLevel_ReturnValue) == 0x000048, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::CallFunc_GetVendorCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, CallFunc_GetLevelText_ReturnValue) == 0x000050, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::CallFunc_GetLevelText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, K2Node_Select_Default) == 0x000068, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, K2Node_Select_Default_1) == 0x000070, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, K2Node_MakeStruct_SlateColor) == 0x000080, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, K2Node_Select_Default_2) == 0x0000A8, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, CallFunc_GetLevelText_ReturnValue_1) == 0x0000B0, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::CallFunc_GetLevelText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, CallFunc_GetVendorExperienceForNextLevel_ReturnValue) == 0x0000C8, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::CallFunc_GetVendorExperienceForNextLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, CallFunc_IsValid_ReturnValue) == 0x0000CC, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, CallFunc_GetVendorCurrentLevel_ReturnValue_1) == 0x0000D0, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::CallFunc_GetVendorCurrentLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, CallFunc_IntToText_ReturnValue) == 0x0000D8, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, CallFunc_GetVendorExperienceForCurrentLevel_ReturnValue) == 0x0000F0, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::CallFunc_GetVendorExperienceForCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetVendorParams, CallFunc_GetVendorCurrentExperience_ReturnValue) == 0x0000F4, "Member 'BP_Vendor_Upgrade_C_SetVendorParams::CallFunc_GetVendorCurrentExperience_ReturnValue' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.SetXP
// 0x0040 (0x0040 - 0x0000)
struct BP_Vendor_Upgrade_C_SetXP final
{
public:
	float                                         InCurrentXP;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InCurrentLevelXP;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InNextLevelXP;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAnim;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FloatToText_ReturnValue;                  // 0x0010(0x0018)()
	class FText                                   CallFunc_FloatToText_ReturnValue_1;                // 0x0028(0x0018)()
};
static_assert(alignof(BP_Vendor_Upgrade_C_SetXP) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_SetXP");
static_assert(sizeof(BP_Vendor_Upgrade_C_SetXP) == 0x000040, "Wrong size on BP_Vendor_Upgrade_C_SetXP");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetXP, InCurrentXP) == 0x000000, "Member 'BP_Vendor_Upgrade_C_SetXP::InCurrentXP' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetXP, InCurrentLevelXP) == 0x000004, "Member 'BP_Vendor_Upgrade_C_SetXP::InCurrentLevelXP' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetXP, InNextLevelXP) == 0x000008, "Member 'BP_Vendor_Upgrade_C_SetXP::InNextLevelXP' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetXP, PlayAnim) == 0x00000C, "Member 'BP_Vendor_Upgrade_C_SetXP::PlayAnim' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetXP, CallFunc_FloatToText_ReturnValue) == 0x000010, "Member 'BP_Vendor_Upgrade_C_SetXP::CallFunc_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetXP, CallFunc_FloatToText_ReturnValue_1) == 0x000028, "Member 'BP_Vendor_Upgrade_C_SetXP::CallFunc_FloatToText_ReturnValue_1' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.SetDiagramParams
// 0x0040 (0x0040 - 0x0000)
struct BP_Vendor_Upgrade_C_SetDiagramParams final
{
public:
	class FText                                   DiagramsNum;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   DiagramsXpText;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         DiagramsXpValue;                                   // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DiagramsAvailable;                                 // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVendorCurrentExperience_ReturnValue;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_SetDiagramParams) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_SetDiagramParams");
static_assert(sizeof(BP_Vendor_Upgrade_C_SetDiagramParams) == 0x000040, "Wrong size on BP_Vendor_Upgrade_C_SetDiagramParams");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetDiagramParams, DiagramsNum) == 0x000000, "Member 'BP_Vendor_Upgrade_C_SetDiagramParams::DiagramsNum' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetDiagramParams, DiagramsXpText) == 0x000018, "Member 'BP_Vendor_Upgrade_C_SetDiagramParams::DiagramsXpText' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetDiagramParams, DiagramsXpValue) == 0x000030, "Member 'BP_Vendor_Upgrade_C_SetDiagramParams::DiagramsXpValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetDiagramParams, DiagramsAvailable) == 0x000034, "Member 'BP_Vendor_Upgrade_C_SetDiagramParams::DiagramsAvailable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetDiagramParams, CallFunc_GetVendorCurrentExperience_ReturnValue) == 0x000038, "Member 'BP_Vendor_Upgrade_C_SetDiagramParams::CallFunc_GetVendorCurrentExperience_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetDiagramParams, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_Vendor_Upgrade_C_SetDiagramParams::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.PlayLevelJumpAnim
// 0x0058 (0x0058 - 0x0000)
struct BP_Vendor_Upgrade_C_PlayLevelJumpAnim final
{
public:
	int32                                         CurrentLevel_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReachedLevel_0;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0008(0x0018)()
	float                                         CallFunc_GetVendorExperienceForCurrentLevel_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FloatToText_ReturnValue;                  // 0x0028(0x0018)()
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_PlayLevelJumpAnim) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_PlayLevelJumpAnim");
static_assert(sizeof(BP_Vendor_Upgrade_C_PlayLevelJumpAnim) == 0x000058, "Wrong size on BP_Vendor_Upgrade_C_PlayLevelJumpAnim");
static_assert(offsetof(BP_Vendor_Upgrade_C_PlayLevelJumpAnim, CurrentLevel_0) == 0x000000, "Member 'BP_Vendor_Upgrade_C_PlayLevelJumpAnim::CurrentLevel_0' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_PlayLevelJumpAnim, ReachedLevel_0) == 0x000004, "Member 'BP_Vendor_Upgrade_C_PlayLevelJumpAnim::ReachedLevel_0' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_PlayLevelJumpAnim, CallFunc_IntToText_ReturnValue) == 0x000008, "Member 'BP_Vendor_Upgrade_C_PlayLevelJumpAnim::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_PlayLevelJumpAnim, CallFunc_GetVendorExperienceForCurrentLevel_ReturnValue) == 0x000020, "Member 'BP_Vendor_Upgrade_C_PlayLevelJumpAnim::CallFunc_GetVendorExperienceForCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_PlayLevelJumpAnim, CallFunc_FloatToText_ReturnValue) == 0x000028, "Member 'BP_Vendor_Upgrade_C_PlayLevelJumpAnim::CallFunc_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_PlayLevelJumpAnim, CallFunc_K2_SetTimer_ReturnValue) == 0x000040, "Member 'BP_Vendor_Upgrade_C_PlayLevelJumpAnim::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_PlayLevelJumpAnim, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BP_Vendor_Upgrade_C_PlayLevelJumpAnim::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_PlayLevelJumpAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'BP_Vendor_Upgrade_C_PlayLevelJumpAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.AnimateLevelDisplay
// 0x0030 (0x0030 - 0x0000)
struct BP_Vendor_Upgrade_C_AnimateLevelDisplay final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IntToText_ReturnValue;                    // 0x0010(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Vendor_Upgrade_C_AnimateLevelDisplay) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_AnimateLevelDisplay");
static_assert(sizeof(BP_Vendor_Upgrade_C_AnimateLevelDisplay) == 0x000030, "Wrong size on BP_Vendor_Upgrade_C_AnimateLevelDisplay");
static_assert(offsetof(BP_Vendor_Upgrade_C_AnimateLevelDisplay, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_Vendor_Upgrade_C_AnimateLevelDisplay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_AnimateLevelDisplay, Temp_int_Variable) == 0x000008, "Member 'BP_Vendor_Upgrade_C_AnimateLevelDisplay::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_AnimateLevelDisplay, CallFunc_IntToText_ReturnValue) == 0x000010, "Member 'BP_Vendor_Upgrade_C_AnimateLevelDisplay::CallFunc_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_AnimateLevelDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_Vendor_Upgrade_C_AnimateLevelDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_AnimateLevelDisplay, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Vendor_Upgrade_C_AnimateLevelDisplay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.ToggleDiagramsAvailable
// 0x0040 (0x0040 - 0x0000)
struct BP_Vendor_Upgrade_C_ToggleDiagramsAvailable final
{
public:
	bool                                          InDiagramsAvailable;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_ToggleDiagramsAvailable");
static_assert(sizeof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable) == 0x000040, "Wrong size on BP_Vendor_Upgrade_C_ToggleDiagramsAvailable");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, InDiagramsAvailable) == 0x000000, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::InDiagramsAvailable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, Temp_bool_Variable) == 0x000001, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, Temp_float_Variable) == 0x000004, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, Temp_float_Variable_1) == 0x000008, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, Temp_float_Variable_2) == 0x000010, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, Temp_float_Variable_3) == 0x000014, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, Temp_bool_Variable_2) == 0x000018, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, Temp_float_Variable_4) == 0x00001C, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, Temp_float_Variable_5) == 0x000020, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, Temp_bool_Variable_3) == 0x000024, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, Temp_byte_Variable) == 0x000025, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, Temp_byte_Variable_1) == 0x000026, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, K2Node_Select_Default) == 0x000027, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, K2Node_Select_Default_1) == 0x000028, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, K2Node_Select_Default_2) == 0x00002C, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, K2Node_Select_Default_3) == 0x000030, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_ToggleDiagramsAvailable, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000038, "Member 'BP_Vendor_Upgrade_C_ToggleDiagramsAvailable::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.BalanceErrorHighlight
// 0x0008 (0x0008 - 0x0000)
struct BP_Vendor_Upgrade_C_BalanceErrorHighlight final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_BalanceErrorHighlight) == 0x000008, "Wrong alignment on BP_Vendor_Upgrade_C_BalanceErrorHighlight");
static_assert(sizeof(BP_Vendor_Upgrade_C_BalanceErrorHighlight) == 0x000008, "Wrong size on BP_Vendor_Upgrade_C_BalanceErrorHighlight");
static_assert(offsetof(BP_Vendor_Upgrade_C_BalanceErrorHighlight, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BP_Vendor_Upgrade_C_BalanceErrorHighlight::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BP_Vendor_Upgrade.BP_Vendor_Upgrade_C.SetBtnCloseVisibility
// 0x000B (0x000B - 0x0000)
struct BP_Vendor_Upgrade_C_SetBtnCloseVisibility final
{
public:
	EInputDisplay                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputDisplay                                 CallFunc_GetInputDisplay_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility) == 0x000001, "Wrong alignment on BP_Vendor_Upgrade_C_SetBtnCloseVisibility");
static_assert(sizeof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility) == 0x00000B, "Wrong size on BP_Vendor_Upgrade_C_SetBtnCloseVisibility");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility, Temp_byte_Variable) == 0x000000, "Member 'BP_Vendor_Upgrade_C_SetBtnCloseVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility, Temp_byte_Variable_1) == 0x000001, "Member 'BP_Vendor_Upgrade_C_SetBtnCloseVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility, Temp_byte_Variable_2) == 0x000002, "Member 'BP_Vendor_Upgrade_C_SetBtnCloseVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility, Temp_byte_Variable_3) == 0x000003, "Member 'BP_Vendor_Upgrade_C_SetBtnCloseVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility, Temp_byte_Variable_4) == 0x000004, "Member 'BP_Vendor_Upgrade_C_SetBtnCloseVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility, Temp_byte_Variable_5) == 0x000005, "Member 'BP_Vendor_Upgrade_C_SetBtnCloseVisibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility, Temp_byte_Variable_6) == 0x000006, "Member 'BP_Vendor_Upgrade_C_SetBtnCloseVisibility::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility, Temp_byte_Variable_7) == 0x000007, "Member 'BP_Vendor_Upgrade_C_SetBtnCloseVisibility::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility, Temp_byte_Variable_8) == 0x000008, "Member 'BP_Vendor_Upgrade_C_SetBtnCloseVisibility::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility, CallFunc_GetInputDisplay_ReturnValue) == 0x000009, "Member 'BP_Vendor_Upgrade_C_SetBtnCloseVisibility::CallFunc_GetInputDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Vendor_Upgrade_C_SetBtnCloseVisibility, K2Node_Select_Default) == 0x00000A, "Member 'BP_Vendor_Upgrade_C_SetBtnCloseVisibility::K2Node_Select_Default' has a wrong offset!");

}

