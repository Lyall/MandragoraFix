#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VfxComponentBase

#include "Basic.hpp"

#include "BP_VfxComponentBase_classes.hpp"
#include "BP_VfxComponentBase_parameters.hpp"


namespace SDK
{

// Function BP_VfxComponentBase.BP_VfxComponentBase_C.ExecuteUbergraph_BP_VfxComponentBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VfxComponentBase_C::ExecuteUbergraph_BP_VfxComponentBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VfxComponentBase_C", "ExecuteUbergraph_BP_VfxComponentBase");

	Params::BP_VfxComponentBase_C_ExecuteUbergraph_BP_VfxComponentBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VfxComponentBase.BP_VfxComponentBase_C.BPTick
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VfxComponentBase_C::BPTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VfxComponentBase_C", "BPTick");

	Params::BP_VfxComponentBase_C_BPTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VfxComponentBase.BP_VfxComponentBase_C.BPForceKill
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_VfxComponentBase_C::BPForceKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VfxComponentBase_C", "BPForceKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VfxComponentBase.BP_VfxComponentBase_C.BPStart
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_VfxComponentBase_C::BPStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VfxComponentBase_C", "BPStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VfxComponentBase.BP_VfxComponentBase_C.RenderTargetProperties
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           RenderTargetInput                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETexturePowerOfTwoSetting               Pow2                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETextureAddress                         TileX                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETextureAddress                         TileY                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETextureFilter                          Filter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VfxComponentBase_C::RenderTargetProperties(class UTextureRenderTarget2D* RenderTargetInput, ETexturePowerOfTwoSetting Pow2, ETextureAddress TileX, ETextureAddress TileY, ETextureFilter Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VfxComponentBase_C", "RenderTargetProperties");

	Params::BP_VfxComponentBase_C_RenderTargetProperties Parms{};

	Parms.RenderTargetInput = RenderTargetInput;
	Parms.Pow2 = Pow2;
	Parms.TileX = TileX;
	Parms.TileY = TileY;
	Parms.Filter = Filter;

	UObject::ProcessEvent(Func, &Parms);
}

}

