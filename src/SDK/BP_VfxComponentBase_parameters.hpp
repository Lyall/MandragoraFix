#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VfxComponentBase

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_VfxComponentBase.BP_VfxComponentBase_C.ExecuteUbergraph_BP_VfxComponentBase
// 0x0008 (0x0008 - 0x0000)
struct BP_VfxComponentBase_C_ExecuteUbergraph_BP_VfxComponentBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VfxComponentBase_C_ExecuteUbergraph_BP_VfxComponentBase) == 0x000004, "Wrong alignment on BP_VfxComponentBase_C_ExecuteUbergraph_BP_VfxComponentBase");
static_assert(sizeof(BP_VfxComponentBase_C_ExecuteUbergraph_BP_VfxComponentBase) == 0x000008, "Wrong size on BP_VfxComponentBase_C_ExecuteUbergraph_BP_VfxComponentBase");
static_assert(offsetof(BP_VfxComponentBase_C_ExecuteUbergraph_BP_VfxComponentBase, EntryPoint) == 0x000000, "Member 'BP_VfxComponentBase_C_ExecuteUbergraph_BP_VfxComponentBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VfxComponentBase_C_ExecuteUbergraph_BP_VfxComponentBase, K2Node_Event_DeltaTime) == 0x000004, "Member 'BP_VfxComponentBase_C_ExecuteUbergraph_BP_VfxComponentBase::K2Node_Event_DeltaTime' has a wrong offset!");

// Function BP_VfxComponentBase.BP_VfxComponentBase_C.BPTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VfxComponentBase_C_BPTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VfxComponentBase_C_BPTick) == 0x000004, "Wrong alignment on BP_VfxComponentBase_C_BPTick");
static_assert(sizeof(BP_VfxComponentBase_C_BPTick) == 0x000004, "Wrong size on BP_VfxComponentBase_C_BPTick");
static_assert(offsetof(BP_VfxComponentBase_C_BPTick, DeltaTime) == 0x000000, "Member 'BP_VfxComponentBase_C_BPTick::DeltaTime' has a wrong offset!");

// Function BP_VfxComponentBase.BP_VfxComponentBase_C.RenderTargetProperties
// 0x0010 (0x0010 - 0x0000)
struct BP_VfxComponentBase_C_RenderTargetProperties final
{
public:
	class UTextureRenderTarget2D*                 RenderTargetInput;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETexturePowerOfTwoSetting                     Pow2;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureAddress                               TileX;                                             // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureAddress                               TileY;                                             // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureFilter                                Filter;                                            // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VfxComponentBase_C_RenderTargetProperties) == 0x000008, "Wrong alignment on BP_VfxComponentBase_C_RenderTargetProperties");
static_assert(sizeof(BP_VfxComponentBase_C_RenderTargetProperties) == 0x000010, "Wrong size on BP_VfxComponentBase_C_RenderTargetProperties");
static_assert(offsetof(BP_VfxComponentBase_C_RenderTargetProperties, RenderTargetInput) == 0x000000, "Member 'BP_VfxComponentBase_C_RenderTargetProperties::RenderTargetInput' has a wrong offset!");
static_assert(offsetof(BP_VfxComponentBase_C_RenderTargetProperties, Pow2) == 0x000008, "Member 'BP_VfxComponentBase_C_RenderTargetProperties::Pow2' has a wrong offset!");
static_assert(offsetof(BP_VfxComponentBase_C_RenderTargetProperties, TileX) == 0x000009, "Member 'BP_VfxComponentBase_C_RenderTargetProperties::TileX' has a wrong offset!");
static_assert(offsetof(BP_VfxComponentBase_C_RenderTargetProperties, TileY) == 0x00000A, "Member 'BP_VfxComponentBase_C_RenderTargetProperties::TileY' has a wrong offset!");
static_assert(offsetof(BP_VfxComponentBase_C_RenderTargetProperties, Filter) == 0x00000B, "Member 'BP_VfxComponentBase_C_RenderTargetProperties::Filter' has a wrong offset!");

}

