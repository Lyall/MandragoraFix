#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Warden_SplinterSwarm_VisualEntity

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Warden_SplinterSwarm_VisualEntity.BP_Warden_SplinterSwarm_VisualEntity_C.ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity
// 0x0058 (0x0058 - 0x0000)
struct BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrawlerHero_C*                      K2Node_DynamicCast_AsBP_Brawler_Hero;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityBase*                           CallFunc_BPGetAbilityByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SplinterSwarm_PassiveSkill_C*       K2Node_DynamicCast_AsBP_Splinter_Swarm_Passive_Skill; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BPGetHitBoxExtent_ReturnValue;            // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity) == 0x000008, "Wrong alignment on BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity");
static_assert(sizeof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity) == 0x000058, "Wrong size on BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, EntryPoint) == 0x000000, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, K2Node_DynamicCast_AsBP_Brawler_Hero) == 0x000010, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::K2Node_DynamicCast_AsBP_Brawler_Hero' has a wrong offset!");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, CallFunc_GetAbilityController_ReturnValue) == 0x000020, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, CallFunc_BPGetAbilityByClass_ReturnValue) == 0x000028, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::CallFunc_BPGetAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, K2Node_DynamicCast_AsBP_Splinter_Swarm_Passive_Skill) == 0x000030, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::K2Node_DynamicCast_AsBP_Splinter_Swarm_Passive_Skill' has a wrong offset!");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, CallFunc_BPGetHitBoxExtent_ReturnValue) == 0x00003C, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::CallFunc_BPGetHitBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, CallFunc_BreakVector_Y) == 0x00004C, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_Warden_SplinterSwarm_VisualEntity_C_ExecuteUbergraph_BP_Warden_SplinterSwarm_VisualEntity::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

}

