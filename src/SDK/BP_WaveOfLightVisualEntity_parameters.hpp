#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WaveOfLightVisualEntity

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_WaveOfLightVisualEntity.BP_WaveOfLightVisualEntity_C.ExecuteUbergraph_BP_WaveOfLightVisualEntity
// 0x00DC (0x00DC - 0x0000)
struct BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity) == 0x000004, "Wrong alignment on BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity");
static_assert(sizeof(BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity) == 0x0000DC, "Wrong size on BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity");
static_assert(offsetof(BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity, EntryPoint) == 0x000000, "Member 'BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000004, "Member 'BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity, CallFunc_GetUpVector_ReturnValue) == 0x000014, "Member 'BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00002C, "Member 'BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity, CallFunc_Add_VectorVector_ReturnValue) == 0x000044, "Member 'BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000050, "Member 'BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000D8, "Member 'BP_WaveOfLightVisualEntity_C_ExecuteUbergraph_BP_WaveOfLightVisualEntity::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_WaveOfLightVisualEntity.BP_WaveOfLightVisualEntity_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_WaveOfLightVisualEntity_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaveOfLightVisualEntity_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_WaveOfLightVisualEntity_C_ReceiveTick");
static_assert(sizeof(BP_WaveOfLightVisualEntity_C_ReceiveTick) == 0x000004, "Wrong size on BP_WaveOfLightVisualEntity_C_ReceiveTick");
static_assert(offsetof(BP_WaveOfLightVisualEntity_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_WaveOfLightVisualEntity_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

