#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeaponActor

#include "Basic.hpp"

#include "BP_ModelActor_classes.hpp"
#include "Engine_structs.hpp"
#include "S_WeaponTrailEffectParameters_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WeaponActor.BP_WeaponActor_C
// 0x00E0 (0x0370 - 0x0290)
class ABP_WeaponActor_C : public ABP_ModelActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_WeaponActor_C;                   // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      HeavyAttackChargeFull;                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      HeavyAttackCharge;                                 // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWeaponDamageTrailEmitPoint*            WeaponDamageTrailEmitPoint1;                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWeaponDamageTrailEmitPoint*            WeaponDamageTrailEmitPoint;                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        WeaponTrail1;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        WeaponTrail0;                                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX_SwordTrail;                                    // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponTrailEffectParameters         WeaponTrailEffectParameters;                       // 0x02D0(0x002C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         OriginalSwordTrailSystem;                          // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHeroBase*                              OwnerHero;                                         // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraSystem*>                 TrailSystems;                                      // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSet<class UNiagaraSystem*>                   TrailSystems_0;                                    // 0x0320(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_WeaponActor(int32 EntryPoint);
	void BPPostWeaponAttachToggle(bool bAttached);
	void WeaponTrailToggle(bool bActivate, bool bLeftHand, bool bRightHand);
	void UserConstructionScript();
	void ResetSwordTrailVFX();
	void GetWeaponTrailEffectParameters(struct FS_WeaponTrailEffectParameters* WeaponTrailEffectParameters_0);
	void HeavyAttackChargeVFX(bool Full);
	void RemoveHeavyAttackVFX();
	void ToggleSwordTrailVFX(bool On);
	void GetOwnerFacing(bool* isRight);
	void ApplyWeaponTrail(class UNiagaraSystem* NiagaraSystemAsset, bool Remove);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WeaponActor_C">();
	}
	static class ABP_WeaponActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WeaponActor_C>();
	}
};
static_assert(alignof(ABP_WeaponActor_C) == 0x000010, "Wrong alignment on ABP_WeaponActor_C");
static_assert(sizeof(ABP_WeaponActor_C) == 0x000370, "Wrong size on ABP_WeaponActor_C");
static_assert(offsetof(ABP_WeaponActor_C, UberGraphFrame_BP_WeaponActor_C) == 0x000290, "Member 'ABP_WeaponActor_C::UberGraphFrame_BP_WeaponActor_C' has a wrong offset!");
static_assert(offsetof(ABP_WeaponActor_C, HeavyAttackChargeFull) == 0x000298, "Member 'ABP_WeaponActor_C::HeavyAttackChargeFull' has a wrong offset!");
static_assert(offsetof(ABP_WeaponActor_C, HeavyAttackCharge) == 0x0002A0, "Member 'ABP_WeaponActor_C::HeavyAttackCharge' has a wrong offset!");
static_assert(offsetof(ABP_WeaponActor_C, WeaponDamageTrailEmitPoint1) == 0x0002A8, "Member 'ABP_WeaponActor_C::WeaponDamageTrailEmitPoint1' has a wrong offset!");
static_assert(offsetof(ABP_WeaponActor_C, WeaponDamageTrailEmitPoint) == 0x0002B0, "Member 'ABP_WeaponActor_C::WeaponDamageTrailEmitPoint' has a wrong offset!");
static_assert(offsetof(ABP_WeaponActor_C, WeaponTrail1) == 0x0002B8, "Member 'ABP_WeaponActor_C::WeaponTrail1' has a wrong offset!");
static_assert(offsetof(ABP_WeaponActor_C, WeaponTrail0) == 0x0002C0, "Member 'ABP_WeaponActor_C::WeaponTrail0' has a wrong offset!");
static_assert(offsetof(ABP_WeaponActor_C, VFX_SwordTrail) == 0x0002C8, "Member 'ABP_WeaponActor_C::VFX_SwordTrail' has a wrong offset!");
static_assert(offsetof(ABP_WeaponActor_C, WeaponTrailEffectParameters) == 0x0002D0, "Member 'ABP_WeaponActor_C::WeaponTrailEffectParameters' has a wrong offset!");
static_assert(offsetof(ABP_WeaponActor_C, OriginalSwordTrailSystem) == 0x000300, "Member 'ABP_WeaponActor_C::OriginalSwordTrailSystem' has a wrong offset!");
static_assert(offsetof(ABP_WeaponActor_C, OwnerHero) == 0x000308, "Member 'ABP_WeaponActor_C::OwnerHero' has a wrong offset!");
static_assert(offsetof(ABP_WeaponActor_C, TrailSystems) == 0x000310, "Member 'ABP_WeaponActor_C::TrailSystems' has a wrong offset!");
static_assert(offsetof(ABP_WeaponActor_C, TrailSystems_0) == 0x000320, "Member 'ABP_WeaponActor_C::TrailSystems_0' has a wrong offset!");

}

