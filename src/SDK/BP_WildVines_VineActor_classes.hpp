#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WildVines_VineActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "man_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WildVines_VineActor.BP_WildVines_VineActor_C
// 0x0058 (0x0878 - 0x0820)
class ABP_WildVines_VineActor_C final : public AWyldVinesActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0820(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0828(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitBox*                                HitBox_Edge;                                       // 0x0830(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitBox*                                HitBox;                                            // 0x0838(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0840(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_BaseColorMul_3527B1684BB6BDE7D93566B5672D9BE0; // 0x0848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_GradientPower_3527B1684BB6BDE7D93566B5672D9BE0; // 0x084C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Dissolve_3527B1684BB6BDE7D93566B5672D9BE0; // 0x0850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Emissive_Power_3527B1684BB6BDE7D93566B5672D9BE0; // 0x0854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Growth_3527B1684BB6BDE7D93566B5672D9BE0; // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_3527B1684BB6BDE7D93566B5672D9BE0; // 0x085C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85D[0x3];                                      // 0x085D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0860(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Color;                                             // 0x0868(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_WildVines_VineActor(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WildVines_VineActor_C">();
	}
	static class ABP_WildVines_VineActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WildVines_VineActor_C>();
	}
};
static_assert(alignof(ABP_WildVines_VineActor_C) == 0x000008, "Wrong alignment on ABP_WildVines_VineActor_C");
static_assert(sizeof(ABP_WildVines_VineActor_C) == 0x000878, "Wrong size on ABP_WildVines_VineActor_C");
static_assert(offsetof(ABP_WildVines_VineActor_C, UberGraphFrame) == 0x000820, "Member 'ABP_WildVines_VineActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_WildVines_VineActor_C, Ak) == 0x000828, "Member 'ABP_WildVines_VineActor_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_WildVines_VineActor_C, HitBox_Edge) == 0x000830, "Member 'ABP_WildVines_VineActor_C::HitBox_Edge' has a wrong offset!");
static_assert(offsetof(ABP_WildVines_VineActor_C, HitBox) == 0x000838, "Member 'ABP_WildVines_VineActor_C::HitBox' has a wrong offset!");
static_assert(offsetof(ABP_WildVines_VineActor_C, DefaultSceneRoot) == 0x000840, "Member 'ABP_WildVines_VineActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_WildVines_VineActor_C, Timeline_0_BaseColorMul_3527B1684BB6BDE7D93566B5672D9BE0) == 0x000848, "Member 'ABP_WildVines_VineActor_C::Timeline_0_BaseColorMul_3527B1684BB6BDE7D93566B5672D9BE0' has a wrong offset!");
static_assert(offsetof(ABP_WildVines_VineActor_C, Timeline_0_GradientPower_3527B1684BB6BDE7D93566B5672D9BE0) == 0x00084C, "Member 'ABP_WildVines_VineActor_C::Timeline_0_GradientPower_3527B1684BB6BDE7D93566B5672D9BE0' has a wrong offset!");
static_assert(offsetof(ABP_WildVines_VineActor_C, Timeline_0_Dissolve_3527B1684BB6BDE7D93566B5672D9BE0) == 0x000850, "Member 'ABP_WildVines_VineActor_C::Timeline_0_Dissolve_3527B1684BB6BDE7D93566B5672D9BE0' has a wrong offset!");
static_assert(offsetof(ABP_WildVines_VineActor_C, Timeline_0_Emissive_Power_3527B1684BB6BDE7D93566B5672D9BE0) == 0x000854, "Member 'ABP_WildVines_VineActor_C::Timeline_0_Emissive_Power_3527B1684BB6BDE7D93566B5672D9BE0' has a wrong offset!");
static_assert(offsetof(ABP_WildVines_VineActor_C, Timeline_0_Growth_3527B1684BB6BDE7D93566B5672D9BE0) == 0x000858, "Member 'ABP_WildVines_VineActor_C::Timeline_0_Growth_3527B1684BB6BDE7D93566B5672D9BE0' has a wrong offset!");
static_assert(offsetof(ABP_WildVines_VineActor_C, Timeline_0__Direction_3527B1684BB6BDE7D93566B5672D9BE0) == 0x00085C, "Member 'ABP_WildVines_VineActor_C::Timeline_0__Direction_3527B1684BB6BDE7D93566B5672D9BE0' has a wrong offset!");
static_assert(offsetof(ABP_WildVines_VineActor_C, Timeline_0) == 0x000860, "Member 'ABP_WildVines_VineActor_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_WildVines_VineActor_C, Color) == 0x000868, "Member 'ABP_WildVines_VineActor_C::Color' has a wrong offset!");

}

