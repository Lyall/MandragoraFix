#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Windmill_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "man_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BP_Windmill_Anim.BP_Windmill_Anim_C
// 0x0210 (0x08B0 - 0x06A0)
class UBP_Windmill_Anim_C final : public UAnimInstanceBase
{
public:
	uint8                                         Pad_698[0x8];                                      // 0x0698(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x06A8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x06D8(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0758(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0860(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0880(0x0020)()
	float                                         Angle;                                             // 0x08A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation;                                          // 0x08A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_Windmill_Anim_AnimGraphNode_ModifyBone_110E4CEE4E1E8438420AF881072C068C();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintBeginPlay();
	void ExecuteUbergraph_BP_Windmill_Anim(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Windmill_Anim_C">();
	}
	static class UBP_Windmill_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Windmill_Anim_C>();
	}
};
static_assert(alignof(UBP_Windmill_Anim_C) == 0x000010, "Wrong alignment on UBP_Windmill_Anim_C");
static_assert(sizeof(UBP_Windmill_Anim_C) == 0x0008B0, "Wrong size on UBP_Windmill_Anim_C");
static_assert(offsetof(UBP_Windmill_Anim_C, UberGraphFrame) == 0x0006A0, "Member 'UBP_Windmill_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Windmill_Anim_C, AnimGraphNode_Root) == 0x0006A8, "Member 'UBP_Windmill_Anim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBP_Windmill_Anim_C, AnimGraphNode_SequencePlayer) == 0x0006D8, "Member 'UBP_Windmill_Anim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBP_Windmill_Anim_C, AnimGraphNode_ModifyBone) == 0x000758, "Member 'UBP_Windmill_Anim_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UBP_Windmill_Anim_C, AnimGraphNode_LocalToComponentSpace) == 0x000860, "Member 'UBP_Windmill_Anim_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UBP_Windmill_Anim_C, AnimGraphNode_ComponentToLocalSpace) == 0x000880, "Member 'UBP_Windmill_Anim_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UBP_Windmill_Anim_C, Angle) == 0x0008A0, "Member 'UBP_Windmill_Anim_C::Angle' has a wrong offset!");
static_assert(offsetof(UBP_Windmill_Anim_C, Rotation) == 0x0008A4, "Member 'UBP_Windmill_Anim_C::Rotation' has a wrong offset!");

}

