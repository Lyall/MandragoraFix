#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WindowWarning

#include "Basic.hpp"

#include "BP_WindowWarning_classes.hpp"
#include "BP_WindowWarning_parameters.hpp"


namespace SDK
{

// Function BP_WindowWarning.BP_WindowWarning_C.ExecuteUbergraph_BP_WindowWarning
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WindowWarning_C::ExecuteUbergraph_BP_WindowWarning(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindowWarning_C", "ExecuteUbergraph_BP_WindowWarning");

	Params::BP_WindowWarning_C_ExecuteUbergraph_BP_WindowWarning Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WindowWarning.BP_WindowWarning_C.OnSetWarningText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             WarningText                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<EHasInventoryResourceResult>     InventoryResourceResults                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_WindowWarning_C::OnSetWarningText(bool bInShow, const class FText& WarningText, const TArray<EHasInventoryResourceResult>& InventoryResourceResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindowWarning_C", "OnSetWarningText");

	Params::BP_WindowWarning_C_OnSetWarningText Parms{};

	Parms.bInShow = bInShow;
	Parms.WarningText = std::move(WarningText);
	Parms.InventoryResourceResults = std::move(InventoryResourceResults);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WindowWarning.BP_WindowWarning_C.OnHide
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WindowWarning_C::OnHide(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindowWarning_C", "OnHide");

	Params::BP_WindowWarning_C_OnHide Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WindowWarning.BP_WindowWarning_C.OnShow
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   AnimDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WindowWarning_C::OnShow(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindowWarning_C", "OnShow");

	Params::BP_WindowWarning_C_OnShow Parms{};

	Parms.AnimDuration = AnimDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WindowWarning.BP_WindowWarning_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WindowWarning_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindowWarning_C", "Tick");

	Params::BP_WindowWarning_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WindowWarning.BP_WindowWarning_C.SetWarningText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             InWarningText                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<EHasInventoryResourceResult>     InResourceResult                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_WindowWarning_C::SetWarningText(bool InShow, const class FText& InWarningText, TArray<EHasInventoryResourceResult>& InResourceResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WindowWarning_C", "SetWarningText");

	Params::BP_WindowWarning_C_SetWarningText Parms{};

	Parms.InShow = InShow;
	Parms.InWarningText = std::move(InWarningText);
	Parms.InResourceResult = std::move(InResourceResult);

	UObject::ProcessEvent(Func, &Parms);

	InResourceResult = std::move(Parms.InResourceResult);
}

}

