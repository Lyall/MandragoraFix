#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WitchLantern_Attribute

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "man_structs.hpp"


namespace SDK::Params
{

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.ExecuteUbergraph_BP_WitchLantern_Attribute
// 0x0068 (0x0068 - 0x0000)
struct BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFormattedValueText_ReturnValue;        // 0x0008(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Value_2;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Value_1;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShow;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Value;                                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFormattedValueText_ReturnValue_1;      // 0x0038(0x0018)()
	class FText                                   CallFunc_GetFormattedValueText_ReturnValue_2;      // 0x0050(0x0018)()
};
static_assert(alignof(BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute) == 0x000008, "Wrong alignment on BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute");
static_assert(sizeof(BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute) == 0x000068, "Wrong size on BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute");
static_assert(offsetof(BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute, EntryPoint) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute, CallFunc_GetFormattedValueText_ReturnValue) == 0x000008, "Member 'BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute::CallFunc_GetFormattedValueText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute, K2Node_Event_IsDesignTime) == 0x000020, "Member 'BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute, K2Node_Event_Value_2) == 0x000024, "Member 'BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute::K2Node_Event_Value_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute, K2Node_Event_Value_1) == 0x000028, "Member 'BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute, K2Node_Event_bShow) == 0x00002C, "Member 'BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute::K2Node_Event_bShow' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute, K2Node_Event_Value) == 0x000030, "Member 'BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute, CallFunc_GetFormattedValueText_ReturnValue_1) == 0x000038, "Member 'BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute::CallFunc_GetFormattedValueText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute, CallFunc_GetFormattedValueText_ReturnValue_2) == 0x000050, "Member 'BP_WitchLantern_Attribute_C_ExecuteUbergraph_BP_WitchLantern_Attribute::CallFunc_GetFormattedValueText_ReturnValue_2' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.OnSetActualValue
// 0x0004 (0x0004 - 0x0000)
struct BP_WitchLantern_Attribute_C_OnSetActualValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WitchLantern_Attribute_C_OnSetActualValue) == 0x000004, "Wrong alignment on BP_WitchLantern_Attribute_C_OnSetActualValue");
static_assert(sizeof(BP_WitchLantern_Attribute_C_OnSetActualValue) == 0x000004, "Wrong size on BP_WitchLantern_Attribute_C_OnSetActualValue");
static_assert(offsetof(BP_WitchLantern_Attribute_C_OnSetActualValue, Value) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_OnSetActualValue::Value' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.OnSetShowCurrentValue
// 0x0001 (0x0001 - 0x0000)
struct BP_WitchLantern_Attribute_C_OnSetShowCurrentValue final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WitchLantern_Attribute_C_OnSetShowCurrentValue) == 0x000001, "Wrong alignment on BP_WitchLantern_Attribute_C_OnSetShowCurrentValue");
static_assert(sizeof(BP_WitchLantern_Attribute_C_OnSetShowCurrentValue) == 0x000001, "Wrong size on BP_WitchLantern_Attribute_C_OnSetShowCurrentValue");
static_assert(offsetof(BP_WitchLantern_Attribute_C_OnSetShowCurrentValue, bShow) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_OnSetShowCurrentValue::bShow' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.OnSetNewValue
// 0x0004 (0x0004 - 0x0000)
struct BP_WitchLantern_Attribute_C_OnSetNewValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WitchLantern_Attribute_C_OnSetNewValue) == 0x000004, "Wrong alignment on BP_WitchLantern_Attribute_C_OnSetNewValue");
static_assert(sizeof(BP_WitchLantern_Attribute_C_OnSetNewValue) == 0x000004, "Wrong size on BP_WitchLantern_Attribute_C_OnSetNewValue");
static_assert(offsetof(BP_WitchLantern_Attribute_C_OnSetNewValue, Value) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_OnSetNewValue::Value' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.OnSetCurrentValue
// 0x0004 (0x0004 - 0x0000)
struct BP_WitchLantern_Attribute_C_OnSetCurrentValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WitchLantern_Attribute_C_OnSetCurrentValue) == 0x000004, "Wrong alignment on BP_WitchLantern_Attribute_C_OnSetCurrentValue");
static_assert(sizeof(BP_WitchLantern_Attribute_C_OnSetCurrentValue) == 0x000004, "Wrong size on BP_WitchLantern_Attribute_C_OnSetCurrentValue");
static_assert(offsetof(BP_WitchLantern_Attribute_C_OnSetCurrentValue, Value) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_OnSetCurrentValue::Value' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_WitchLantern_Attribute_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WitchLantern_Attribute_C_PreConstruct) == 0x000001, "Wrong alignment on BP_WitchLantern_Attribute_C_PreConstruct");
static_assert(sizeof(BP_WitchLantern_Attribute_C_PreConstruct) == 0x000001, "Wrong size on BP_WitchLantern_Attribute_C_PreConstruct");
static_assert(offsetof(BP_WitchLantern_Attribute_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.BP_SetShowCurrentValue
// 0x0003 (0x0003 - 0x0000)
struct BP_WitchLantern_Attribute_C_BP_SetShowCurrentValue final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShowActualValue_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShowActualValue_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WitchLantern_Attribute_C_BP_SetShowCurrentValue) == 0x000001, "Wrong alignment on BP_WitchLantern_Attribute_C_BP_SetShowCurrentValue");
static_assert(sizeof(BP_WitchLantern_Attribute_C_BP_SetShowCurrentValue) == 0x000003, "Wrong size on BP_WitchLantern_Attribute_C_BP_SetShowCurrentValue");
static_assert(offsetof(BP_WitchLantern_Attribute_C_BP_SetShowCurrentValue, Show) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_BP_SetShowCurrentValue::Show' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_BP_SetShowCurrentValue, CallFunc_IsShowActualValue_ReturnValue) == 0x000001, "Member 'BP_WitchLantern_Attribute_C_BP_SetShowCurrentValue::CallFunc_IsShowActualValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_BP_SetShowCurrentValue, CallFunc_IsShowActualValue_ReturnValue_1) == 0x000002, "Member 'BP_WitchLantern_Attribute_C_BP_SetShowCurrentValue::CallFunc_IsShowActualValue_ReturnValue_1' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.SetAttributeName
// 0x0018 (0x0018 - 0x0000)
struct BP_WitchLantern_Attribute_C_SetAttributeName final
{
public:
	class FText                                   CallFunc_GetFormattedAttributeName_ReturnValue;    // 0x0000(0x0018)()
};
static_assert(alignof(BP_WitchLantern_Attribute_C_SetAttributeName) == 0x000008, "Wrong alignment on BP_WitchLantern_Attribute_C_SetAttributeName");
static_assert(sizeof(BP_WitchLantern_Attribute_C_SetAttributeName) == 0x000018, "Wrong size on BP_WitchLantern_Attribute_C_SetAttributeName");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetAttributeName, CallFunc_GetFormattedAttributeName_ReturnValue) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_SetAttributeName::CallFunc_GetFormattedAttributeName_ReturnValue' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.SetNewValueHighlight
// 0x0058 (0x0058 - 0x0000)
struct BP_WitchLantern_Attribute_C_SetNewValueHighlight final
{
public:
	bool                                          Highlighted;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
};
static_assert(alignof(BP_WitchLantern_Attribute_C_SetNewValueHighlight) == 0x000008, "Wrong alignment on BP_WitchLantern_Attribute_C_SetNewValueHighlight");
static_assert(sizeof(BP_WitchLantern_Attribute_C_SetNewValueHighlight) == 0x000058, "Wrong size on BP_WitchLantern_Attribute_C_SetNewValueHighlight");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetNewValueHighlight, Highlighted) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_SetNewValueHighlight::Highlighted' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetNewValueHighlight, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'BP_WitchLantern_Attribute_C_SetNewValueHighlight::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetNewValueHighlight, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'BP_WitchLantern_Attribute_C_SetNewValueHighlight::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.SetValueColors
// 0x0198 (0x0198 - 0x0000)
struct BP_WitchLantern_Attribute_C_SetValueColors final
{
public:
	EEquipLoadIndicator                           Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEquipLoadIndicator                           Temp_byte_Variable_1;                              // 0x0001(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEquipLoadIndicator                           Temp_byte_Variable_2;                              // 0x0002(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0058(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0080(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_4;                    // 0x00A8(0x0028)()
	struct FSlateColor                            CallFunc_Map_Find_Value;                           // 0x00D0(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_Map_Find_Value_1;                         // 0x0100(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_Map_Find_Value_2;                         // 0x0130(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEquipLoadIndicator                           Temp_byte_Variable_3;                              // 0x0160(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_Map_Find_Value_3;                         // 0x0168(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WitchLantern_Attribute_C_SetValueColors) == 0x000008, "Wrong alignment on BP_WitchLantern_Attribute_C_SetValueColors");
static_assert(sizeof(BP_WitchLantern_Attribute_C_SetValueColors) == 0x000198, "Wrong size on BP_WitchLantern_Attribute_C_SetValueColors");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, Temp_byte_Variable) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, Temp_byte_Variable_1) == 0x000001, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, Temp_byte_Variable_2) == 0x000002, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, K2Node_MakeStruct_SlateColor_2) == 0x000058, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, K2Node_MakeStruct_SlateColor_3) == 0x000080, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, K2Node_MakeStruct_SlateColor_4) == 0x0000A8, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::K2Node_MakeStruct_SlateColor_4' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Map_Find_Value) == 0x0000D0, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Map_Find_ReturnValue) == 0x0000F8, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Map_Find_Value_1) == 0x000100, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Map_Find_ReturnValue_1) == 0x000128, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Map_Find_Value_2) == 0x000130, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Map_Find_ReturnValue_2) == 0x000158, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00015C, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, Temp_byte_Variable_3) == 0x000160, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000161, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Map_Find_Value_3) == 0x000168, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Map_Find_ReturnValue_3) == 0x000190, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000191, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000192, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000193, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Less_FloatFloat_ReturnValue) == 0x000194, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetValueColors, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000195, "Member 'BP_WitchLantern_Attribute_C_SetValueColors::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.BP_SetActualValue
// 0x0020 (0x0020 - 0x0000)
struct BP_WitchLantern_Attribute_C_BP_SetActualValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFormattedValueText_ReturnValue;        // 0x0008(0x0018)()
};
static_assert(alignof(BP_WitchLantern_Attribute_C_BP_SetActualValue) == 0x000008, "Wrong alignment on BP_WitchLantern_Attribute_C_BP_SetActualValue");
static_assert(sizeof(BP_WitchLantern_Attribute_C_BP_SetActualValue) == 0x000020, "Wrong size on BP_WitchLantern_Attribute_C_BP_SetActualValue");
static_assert(offsetof(BP_WitchLantern_Attribute_C_BP_SetActualValue, Value) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_BP_SetActualValue::Value' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_BP_SetActualValue, CallFunc_GetFormattedValueText_ReturnValue) == 0x000008, "Member 'BP_WitchLantern_Attribute_C_BP_SetActualValue::CallFunc_GetFormattedValueText_ReturnValue' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.SetFontSize
// 0x00B8 (0x00B8 - 0x0000)
struct BP_WitchLantern_Attribute_C_SetFontSize final
{
public:
	int32                                         InFontSize;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0008(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x0060(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(BP_WitchLantern_Attribute_C_SetFontSize) == 0x000008, "Wrong alignment on BP_WitchLantern_Attribute_C_SetFontSize");
static_assert(sizeof(BP_WitchLantern_Attribute_C_SetFontSize) == 0x0000B8, "Wrong size on BP_WitchLantern_Attribute_C_SetFontSize");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetFontSize, InFontSize) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_SetFontSize::InFontSize' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetFontSize, K2Node_MakeStruct_SlateFontInfo) == 0x000008, "Member 'BP_WitchLantern_Attribute_C_SetFontSize::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_SetFontSize, K2Node_MakeStruct_SlateFontInfo_1) == 0x000060, "Member 'BP_WitchLantern_Attribute_C_SetFontSize::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.BP_SetCurrentValue
// 0x0020 (0x0020 - 0x0000)
struct BP_WitchLantern_Attribute_C_BP_SetCurrentValue final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFormattedValueText_ReturnValue;        // 0x0008(0x0018)()
};
static_assert(alignof(BP_WitchLantern_Attribute_C_BP_SetCurrentValue) == 0x000008, "Wrong alignment on BP_WitchLantern_Attribute_C_BP_SetCurrentValue");
static_assert(sizeof(BP_WitchLantern_Attribute_C_BP_SetCurrentValue) == 0x000020, "Wrong size on BP_WitchLantern_Attribute_C_BP_SetCurrentValue");
static_assert(offsetof(BP_WitchLantern_Attribute_C_BP_SetCurrentValue, InValue) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_BP_SetCurrentValue::InValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_BP_SetCurrentValue, CallFunc_GetFormattedValueText_ReturnValue) == 0x000008, "Member 'BP_WitchLantern_Attribute_C_BP_SetCurrentValue::CallFunc_GetFormattedValueText_ReturnValue' has a wrong offset!");

// Function BP_WitchLantern_Attribute.BP_WitchLantern_Attribute_C.BP_SetNewValue
// 0x0020 (0x0020 - 0x0000)
struct BP_WitchLantern_Attribute_C_BP_SetNewValue final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFormattedValueText_ReturnValue;        // 0x0008(0x0018)()
};
static_assert(alignof(BP_WitchLantern_Attribute_C_BP_SetNewValue) == 0x000008, "Wrong alignment on BP_WitchLantern_Attribute_C_BP_SetNewValue");
static_assert(sizeof(BP_WitchLantern_Attribute_C_BP_SetNewValue) == 0x000020, "Wrong size on BP_WitchLantern_Attribute_C_BP_SetNewValue");
static_assert(offsetof(BP_WitchLantern_Attribute_C_BP_SetNewValue, InValue) == 0x000000, "Member 'BP_WitchLantern_Attribute_C_BP_SetNewValue::InValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Attribute_C_BP_SetNewValue, CallFunc_GetFormattedValueText_ReturnValue) == 0x000008, "Member 'BP_WitchLantern_Attribute_C_BP_SetNewValue::CallFunc_GetFormattedValueText_ReturnValue' has a wrong offset!");

}

