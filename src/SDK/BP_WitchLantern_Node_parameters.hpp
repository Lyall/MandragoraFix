#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WitchLantern_Node

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "man_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_WitchLantern_Node.BP_WitchLantern_Node_C.ExecuteUbergraph_BP_WitchLantern_Node
// 0x00A0 (0x00A0 - 0x0000)
struct BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAnimate_1;                           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAnimate;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_NodeName;                             // 0x0018(0x0018)(ConstParm)
	class UTexture2D*                             K2Node_Event_NodeIcon;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node) == 0x000008, "Wrong alignment on BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node");
static_assert(sizeof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node) == 0x0000A0, "Wrong size on BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, EntryPoint) == 0x000000, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, Temp_bool_Variable) == 0x000004, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, Temp_float_Variable) == 0x000008, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, Temp_float_Variable_1) == 0x000010, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, K2Node_Event_bAnimate_1) == 0x000014, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::K2Node_Event_bAnimate_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, K2Node_Event_bAnimate) == 0x000015, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::K2Node_Event_bAnimate' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, K2Node_Event_IsDesignTime) == 0x000016, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, K2Node_Event_NodeName) == 0x000018, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::K2Node_Event_NodeName' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, K2Node_Event_NodeIcon) == 0x000030, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::K2Node_Event_NodeIcon' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000040, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x000048, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, CallFunc_PlayAnimation_ReturnValue_1) == 0x000050, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, CallFunc_PlayAnimation_ReturnValue_2) == 0x000058, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, CallFunc_GetEndTime_ReturnValue) == 0x000060, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000068, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, K2Node_Select_Default) == 0x000070, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, CallFunc_PlayAnimation_ReturnValue_3) == 0x000078, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, CallFunc_GetEndTime_ReturnValue_1) == 0x000080, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000088, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, K2Node_Select_Default_1) == 0x000090, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node, CallFunc_PlayAnimation_ReturnValue_4) == 0x000098, "Member 'BP_WitchLantern_Node_C_ExecuteUbergraph_BP_WitchLantern_Node::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");

// Function BP_WitchLantern_Node.BP_WitchLantern_Node_C.OnSetNode
// 0x0020 (0x0020 - 0x0000)
struct BP_WitchLantern_Node_C_OnSetNode final
{
public:
	class FText                                   NodeName;                                          // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UTexture2D*                             NodeIcon;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WitchLantern_Node_C_OnSetNode) == 0x000008, "Wrong alignment on BP_WitchLantern_Node_C_OnSetNode");
static_assert(sizeof(BP_WitchLantern_Node_C_OnSetNode) == 0x000020, "Wrong size on BP_WitchLantern_Node_C_OnSetNode");
static_assert(offsetof(BP_WitchLantern_Node_C_OnSetNode, NodeName) == 0x000000, "Member 'BP_WitchLantern_Node_C_OnSetNode::NodeName' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_OnSetNode, NodeIcon) == 0x000018, "Member 'BP_WitchLantern_Node_C_OnSetNode::NodeIcon' has a wrong offset!");

// Function BP_WitchLantern_Node.BP_WitchLantern_Node_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_WitchLantern_Node_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WitchLantern_Node_C_PreConstruct) == 0x000001, "Wrong alignment on BP_WitchLantern_Node_C_PreConstruct");
static_assert(sizeof(BP_WitchLantern_Node_C_PreConstruct) == 0x000001, "Wrong size on BP_WitchLantern_Node_C_PreConstruct");
static_assert(offsetof(BP_WitchLantern_Node_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_WitchLantern_Node_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_WitchLantern_Node.BP_WitchLantern_Node_C.OnUnfocused
// 0x0001 (0x0001 - 0x0000)
struct BP_WitchLantern_Node_C_OnUnfocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WitchLantern_Node_C_OnUnfocused) == 0x000001, "Wrong alignment on BP_WitchLantern_Node_C_OnUnfocused");
static_assert(sizeof(BP_WitchLantern_Node_C_OnUnfocused) == 0x000001, "Wrong size on BP_WitchLantern_Node_C_OnUnfocused");
static_assert(offsetof(BP_WitchLantern_Node_C_OnUnfocused, bAnimate) == 0x000000, "Member 'BP_WitchLantern_Node_C_OnUnfocused::bAnimate' has a wrong offset!");

// Function BP_WitchLantern_Node.BP_WitchLantern_Node_C.OnFocused
// 0x0001 (0x0001 - 0x0000)
struct BP_WitchLantern_Node_C_OnFocused final
{
public:
	bool                                          bAnimate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WitchLantern_Node_C_OnFocused) == 0x000001, "Wrong alignment on BP_WitchLantern_Node_C_OnFocused");
static_assert(sizeof(BP_WitchLantern_Node_C_OnFocused) == 0x000001, "Wrong size on BP_WitchLantern_Node_C_OnFocused");
static_assert(offsetof(BP_WitchLantern_Node_C_OnFocused, bAnimate) == 0x000000, "Member 'BP_WitchLantern_Node_C_OnFocused::bAnimate' has a wrong offset!");

// Function BP_WitchLantern_Node.BP_WitchLantern_Node_C.SetIcon
// 0x0018 (0x0018 - 0x0000)
struct BP_WitchLantern_Node_C_SetIcon final
{
public:
	class UTexture2D*                             InIcon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WitchLantern_Node_C_SetIcon) == 0x000008, "Wrong alignment on BP_WitchLantern_Node_C_SetIcon");
static_assert(sizeof(BP_WitchLantern_Node_C_SetIcon) == 0x000018, "Wrong size on BP_WitchLantern_Node_C_SetIcon");
static_assert(offsetof(BP_WitchLantern_Node_C_SetIcon, InIcon) == 0x000000, "Member 'BP_WitchLantern_Node_C_SetIcon::InIcon' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_SetIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'BP_WitchLantern_Node_C_SetIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_SetIcon, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_WitchLantern_Node_C_SetIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_WitchLantern_Node.BP_WitchLantern_Node_C.SetupTooltip
// 0x0038 (0x0038 - 0x0000)
struct BP_WitchLantern_Node_C_SetupTooltip final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InDescription;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         InCost;                                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WitchLantern_Node_C_SetupTooltip) == 0x000008, "Wrong alignment on BP_WitchLantern_Node_C_SetupTooltip");
static_assert(sizeof(BP_WitchLantern_Node_C_SetupTooltip) == 0x000038, "Wrong size on BP_WitchLantern_Node_C_SetupTooltip");
static_assert(offsetof(BP_WitchLantern_Node_C_SetupTooltip, InName) == 0x000000, "Member 'BP_WitchLantern_Node_C_SetupTooltip::InName' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_SetupTooltip, InDescription) == 0x000018, "Member 'BP_WitchLantern_Node_C_SetupTooltip::InDescription' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_SetupTooltip, InCost) == 0x000030, "Member 'BP_WitchLantern_Node_C_SetupTooltip::InCost' has a wrong offset!");

// Function BP_WitchLantern_Node.BP_WitchLantern_Node_C.UpdateTextures
// 0x0210 (0x0210 - 0x0000)
struct BP_WitchLantern_Node_C_UpdateTextures final
{
public:
	EManSkillTreeNodeType                         InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_1;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_2;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_6;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_3;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_12;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_13;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_14;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_4;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_15;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_16;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_5;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_6;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_17;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_18;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_19;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeState                        Temp_byte_Variable_7;                              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_20;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_21;                            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_22;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_8;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_7;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_9;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_23;                            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_24;                            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_25;                            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_26;                            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_27;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_28;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0124(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_4;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EManSkillTreeNodeType                         Temp_byte_Variable_10;                             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_1;                           // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_5;                           // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_6;                           // 0x018C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x01A0(0x0028)()
	float                                         K2Node_Select_Default_7;                           // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_8;                           // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_9;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_2;          // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_10;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WitchLantern_Node_C_UpdateTextures) == 0x000008, "Wrong alignment on BP_WitchLantern_Node_C_UpdateTextures");
static_assert(sizeof(BP_WitchLantern_Node_C_UpdateTextures) == 0x000210, "Wrong size on BP_WitchLantern_Node_C_UpdateTextures");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, InType) == 0x000000, "Member 'BP_WitchLantern_Node_C_UpdateTextures::InType' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_object_Variable) == 0x000008, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_object_Variable_1) == 0x000010, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_object_Variable_2) == 0x000018, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_byte_Variable) == 0x000020, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable) == 0x000024, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_1) == 0x000028, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_2) == 0x00002C, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_3) == 0x000030, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_4) == 0x000034, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_5) == 0x000038, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_byte_Variable_1) == 0x00003C, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_object_Variable_3) == 0x000040, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_byte_Variable_2) == 0x000048, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_6) == 0x00004C, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_7) == 0x000050, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_8) == 0x000054, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_9) == 0x000058, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_10) == 0x00005C, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_11) == 0x000060, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_byte_Variable_3) == 0x000064, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_12) == 0x000068, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_13) == 0x00006C, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_14) == 0x000070, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_byte_Variable_4) == 0x000074, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_15) == 0x000078, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_16) == 0x00007C, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_byte_Variable_5) == 0x000080, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_struct_Variable) == 0x000084, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_struct_Variable_1) == 0x000094, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_byte_Variable_6) == 0x0000A4, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_17) == 0x0000A8, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_18) == 0x0000AC, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_19) == 0x0000B0, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_byte_Variable_7) == 0x0000B4, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_20) == 0x0000B8, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_21) == 0x0000BC, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_22) == 0x0000C0, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_byte_Variable_8) == 0x0000C4, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_struct_Variable_2) == 0x0000C8, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_struct_Variable_3) == 0x0000D0, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_struct_Variable_4) == 0x0000D8, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_struct_Variable_5) == 0x0000E0, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_struct_Variable_6) == 0x0000E8, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_struct_Variable_7) == 0x0000F0, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_byte_Variable_9) == 0x0000F8, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_23) == 0x0000FC, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_24) == 0x000100, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_25) == 0x000104, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_26) == 0x000108, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_27) == 0x00010C, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_float_Variable_28) == 0x000110, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_float_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000118, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_Select_Default) == 0x000120, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_MakeStruct_Margin) == 0x000124, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000138, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_object_Variable_4) == 0x000140, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_object_Variable_5) == 0x000148, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_object_Variable_6) == 0x000150, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, Temp_byte_Variable_10) == 0x000158, "Member 'BP_WitchLantern_Node_C_UpdateTextures::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000159, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00015A, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00015B, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_BooleanOR_ReturnValue) == 0x00015C, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00015D, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00015E, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_BooleanOR_ReturnValue_1) == 0x00015F, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_Select_Default_1) == 0x000160, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000164, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_MakeStruct_Margin_1) == 0x000168, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_Select_Default_2) == 0x000178, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_Select_Default_3) == 0x000180, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_Select_Default_4) == 0x000184, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_Select_Default_5) == 0x000188, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_Select_Default_6) == 0x00018C, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_MakeStruct_SlateColor) == 0x0001A0, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_Select_Default_7) == 0x0001C8, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_Select_Default_8) == 0x0001CC, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0001D0, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0001D8, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_MakeStruct_Margin_2) == 0x0001E0, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x0001F0, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_Select_Default_9) == 0x0001F8, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, CallFunc_SlotAsOverlaySlot_ReturnValue_2) == 0x000200, "Member 'BP_WitchLantern_Node_C_UpdateTextures::CallFunc_SlotAsOverlaySlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_Node_C_UpdateTextures, K2Node_Select_Default_10) == 0x000208, "Member 'BP_WitchLantern_Node_C_UpdateTextures::K2Node_Select_Default_10' has a wrong offset!");

}

