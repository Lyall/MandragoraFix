#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WitchLantern

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_WitchLantern.BP_WitchLantern_C.ExecuteUbergraph_BP_WitchLantern
// 0x0058 (0x0058 - 0x0000)
struct BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHeroBase*                              K2Node_DynamicCast_AsHero_Base;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityController*                     CallFunc_GetAbilityController_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bActive)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class UInventory*                             CallFunc_GetInventory_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEntropyLantern*                        CallFunc_BPGetEntropyLantern_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bActive;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern) == 0x000008, "Wrong alignment on BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern");
static_assert(sizeof(BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern) == 0x000058, "Wrong size on BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern");
static_assert(offsetof(BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern, EntryPoint) == 0x000000, "Member 'BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern, CallFunc_GetAttachParentActor_ReturnValue) == 0x000008, "Member 'BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern, K2Node_DynamicCast_AsHero_Base) == 0x000010, "Member 'BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern::K2Node_DynamicCast_AsHero_Base' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern, CallFunc_GetAbilityController_ReturnValue) == 0x000020, "Member 'BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern::CallFunc_GetAbilityController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern, CallFunc_GetInventory_ReturnValue) == 0x000038, "Member 'BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern, CallFunc_BPGetEntropyLantern_ReturnValue) == 0x000048, "Member 'BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern::CallFunc_BPGetEntropyLantern_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern, K2Node_CustomEvent_bActive) == 0x000050, "Member 'BP_WitchLantern_C_ExecuteUbergraph_BP_WitchLantern::K2Node_CustomEvent_bActive' has a wrong offset!");

// Function BP_WitchLantern.BP_WitchLantern_C.LanternStateSwitch
// 0x0001 (0x0001 - 0x0000)
struct BP_WitchLantern_C_LanternStateSwitch final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WitchLantern_C_LanternStateSwitch) == 0x000001, "Wrong alignment on BP_WitchLantern_C_LanternStateSwitch");
static_assert(sizeof(BP_WitchLantern_C_LanternStateSwitch) == 0x000001, "Wrong size on BP_WitchLantern_C_LanternStateSwitch");
static_assert(offsetof(BP_WitchLantern_C_LanternStateSwitch, bActive) == 0x000000, "Member 'BP_WitchLantern_C_LanternStateSwitch::bActive' has a wrong offset!");

// Function BP_WitchLantern.BP_WitchLantern_C.ForceToggle
// 0x0001 (0x0001 - 0x0000)
struct BP_WitchLantern_C_ForceToggle final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WitchLantern_C_ForceToggle) == 0x000001, "Wrong alignment on BP_WitchLantern_C_ForceToggle");
static_assert(sizeof(BP_WitchLantern_C_ForceToggle) == 0x000001, "Wrong size on BP_WitchLantern_C_ForceToggle");
static_assert(offsetof(BP_WitchLantern_C_ForceToggle, On) == 0x000000, "Member 'BP_WitchLantern_C_ForceToggle::On' has a wrong offset!");

}

