#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_fog_fx

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_fog_fx.BP_fog_fx_C
// 0x0088 (0x02B0 - 0x0228)
class ABP_fog_fx_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_fog_plane;                                      // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FadeInTimeline_Alpha_E78ECD3E42DB512F7EDF17A08F0B4FA6; // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FadeInTimeline__Direction_E78ECD3E42DB512F7EDF17A08F0B4FA6; // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FadeInTimeline;                                    // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogDensity;                                        // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 FogColor;                                          // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FogScale;                                          // 0x0258(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogGlow;                                           // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Additive;                                          // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MaterialBlend;                                     // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaterialAdditive;                                  // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DepthFade;                                         // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OriginalDensity;                                   // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               OriginalChosenMaterial;                            // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DefaultState;                                      // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            OriginalFogPlane;                                  // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            OptimizedFogPlane;                                 // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseOptimizedFogPlane;                              // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_fog_fx(int32 EntryPoint);
	void ReceiveBeginPlay();
	void FadeInFromInvisibility();
	void FadeInTimeline__UpdateFunc();
	void FadeInTimeline__FinishedFunc();
	void UserConstructionScript();
	void SetUpMaterialBlend();
	void SetUpMaterialAdditive();
	void UpdateFogParameters(float FogDensity_0, const struct FColor& FogColor_0, float FogGlow_0);
	void GetFogParameters(float* FogDensity_0, struct FColor* FogColor_0, float* FogGlow_0);
	void ToggleFog(bool On);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_fog_fx_C">();
	}
	static class ABP_fog_fx_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_fog_fx_C>();
	}
};
static_assert(alignof(ABP_fog_fx_C) == 0x000008, "Wrong alignment on ABP_fog_fx_C");
static_assert(sizeof(ABP_fog_fx_C) == 0x0002B0, "Wrong size on ABP_fog_fx_C");
static_assert(offsetof(ABP_fog_fx_C, UberGraphFrame) == 0x000228, "Member 'ABP_fog_fx_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, SM_fog_plane) == 0x000230, "Member 'ABP_fog_fx_C::SM_fog_plane' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_fog_fx_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, FadeInTimeline_Alpha_E78ECD3E42DB512F7EDF17A08F0B4FA6) == 0x000240, "Member 'ABP_fog_fx_C::FadeInTimeline_Alpha_E78ECD3E42DB512F7EDF17A08F0B4FA6' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, FadeInTimeline__Direction_E78ECD3E42DB512F7EDF17A08F0B4FA6) == 0x000244, "Member 'ABP_fog_fx_C::FadeInTimeline__Direction_E78ECD3E42DB512F7EDF17A08F0B4FA6' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, FadeInTimeline) == 0x000248, "Member 'ABP_fog_fx_C::FadeInTimeline' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, FogDensity) == 0x000250, "Member 'ABP_fog_fx_C::FogDensity' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, FogColor) == 0x000254, "Member 'ABP_fog_fx_C::FogColor' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, FogScale) == 0x000258, "Member 'ABP_fog_fx_C::FogScale' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, FogGlow) == 0x000264, "Member 'ABP_fog_fx_C::FogGlow' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, Additive) == 0x000268, "Member 'ABP_fog_fx_C::Additive' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, MaterialBlend) == 0x000270, "Member 'ABP_fog_fx_C::MaterialBlend' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, MaterialAdditive) == 0x000278, "Member 'ABP_fog_fx_C::MaterialAdditive' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, DepthFade) == 0x000280, "Member 'ABP_fog_fx_C::DepthFade' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, OriginalDensity) == 0x000284, "Member 'ABP_fog_fx_C::OriginalDensity' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, OriginalChosenMaterial) == 0x000288, "Member 'ABP_fog_fx_C::OriginalChosenMaterial' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, DefaultState) == 0x000290, "Member 'ABP_fog_fx_C::DefaultState' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, OriginalFogPlane) == 0x000298, "Member 'ABP_fog_fx_C::OriginalFogPlane' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, OptimizedFogPlane) == 0x0002A0, "Member 'ABP_fog_fx_C::OptimizedFogPlane' has a wrong offset!");
static_assert(offsetof(ABP_fog_fx_C, UseOptimizedFogPlane) == 0x0002A8, "Member 'ABP_fog_fx_C::UseOptimizedFogPlane' has a wrong offset!");

}

