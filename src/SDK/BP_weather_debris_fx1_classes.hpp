#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_weather_debris_fx1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_weather_debris_fx1.BP_weather_debris_fx1_C
// 0x0038 (0x0260 - 0x0228)
class ABP_weather_debris_fx1_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_weather_stormy1;                                // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Brightness;                                        // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DustDensity;                                       // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeafDensity;                                       // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeafDensityRange;                                  // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hue;                                               // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               ParticleMaterialInstance;                          // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_weather_debris_fx1(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UpdateDebrisParams(float Hue_0, float Brightness_0, float LeafDensity_0, float DustDensity_0);
	void GetDebriesParams(float* Hue_0, float* Brightness_0, float* Leaf_Density, float* Dust_Density);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_weather_debris_fx1_C">();
	}
	static class ABP_weather_debris_fx1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_weather_debris_fx1_C>();
	}
};
static_assert(alignof(ABP_weather_debris_fx1_C) == 0x000008, "Wrong alignment on ABP_weather_debris_fx1_C");
static_assert(sizeof(ABP_weather_debris_fx1_C) == 0x000260, "Wrong size on ABP_weather_debris_fx1_C");
static_assert(offsetof(ABP_weather_debris_fx1_C, UberGraphFrame) == 0x000228, "Member 'ABP_weather_debris_fx1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_weather_debris_fx1_C, Billboard) == 0x000230, "Member 'ABP_weather_debris_fx1_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_weather_debris_fx1_C, PS_weather_stormy1) == 0x000238, "Member 'ABP_weather_debris_fx1_C::PS_weather_stormy1' has a wrong offset!");
static_assert(offsetof(ABP_weather_debris_fx1_C, Brightness) == 0x000240, "Member 'ABP_weather_debris_fx1_C::Brightness' has a wrong offset!");
static_assert(offsetof(ABP_weather_debris_fx1_C, DustDensity) == 0x000244, "Member 'ABP_weather_debris_fx1_C::DustDensity' has a wrong offset!");
static_assert(offsetof(ABP_weather_debris_fx1_C, LeafDensity) == 0x000248, "Member 'ABP_weather_debris_fx1_C::LeafDensity' has a wrong offset!");
static_assert(offsetof(ABP_weather_debris_fx1_C, LeafDensityRange) == 0x00024C, "Member 'ABP_weather_debris_fx1_C::LeafDensityRange' has a wrong offset!");
static_assert(offsetof(ABP_weather_debris_fx1_C, Hue) == 0x000250, "Member 'ABP_weather_debris_fx1_C::Hue' has a wrong offset!");
static_assert(offsetof(ABP_weather_debris_fx1_C, ParticleMaterialInstance) == 0x000258, "Member 'ABP_weather_debris_fx1_C::ParticleMaterialInstance' has a wrong offset!");

}

