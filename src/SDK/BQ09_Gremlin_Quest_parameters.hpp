#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BQ09_Gremlin_Quest

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "man_structs.hpp"


namespace SDK::Params
{

// Function BQ09_Gremlin_Quest.BQ09_Gremlin_Quest_C.ExecuteUbergraph_BQ09_Gremlin_Quest
// 0x00A0 (0x00A0 - 0x0000)
struct BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName EntryKey)>         Temp_delegate_Variable;                            // 0x000C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	struct FQuestMarker                           K2Node_MakeStruct_QuestMarker;                     // 0x001C(0x0010)(NoDestructor)
	TDelegate<void(class FName EntryKey)>         Temp_delegate_Variable_1;                          // 0x002C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMandragoraGameMode*                    CallFunc_GetManGameMode_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UManConversationManager*                CallFunc_GetConversationManager_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTextAndStoryParams                    K2Node_MakeStruct_TextAndStoryParams;              // 0x0050(0x0038)()
	bool                                          CallFunc_GlobalDictionarySetInt_ReturnValue;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GlobalDictionarySetInt_ReturnValue_1;     // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UManQuestObjective*                     CallFunc_AddObjective_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UManQuestObjective*                     CallFunc_AddObjective_ReturnValue_1;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest) == 0x000008, "Wrong alignment on BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest");
static_assert(sizeof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest) == 0x0000A0, "Wrong size on BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest");
static_assert(offsetof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest, EntryPoint) == 0x000000, "Member 'BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest::EntryPoint' has a wrong offset!");
static_assert(offsetof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest, K2Node_MakeStruct_IntPoint) == 0x000004, "Member 'BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest, Temp_delegate_Variable) == 0x00000C, "Member 'BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest, K2Node_MakeStruct_QuestMarker) == 0x00001C, "Member 'BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest::K2Node_MakeStruct_QuestMarker' has a wrong offset!");
static_assert(offsetof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest, Temp_delegate_Variable_1) == 0x00002C, "Member 'BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest, CallFunc_GetManGameMode_ReturnValue) == 0x000040, "Member 'BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest::CallFunc_GetManGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest, CallFunc_GetConversationManager_ReturnValue) == 0x000048, "Member 'BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest::CallFunc_GetConversationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest, K2Node_MakeStruct_TextAndStoryParams) == 0x000050, "Member 'BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest::K2Node_MakeStruct_TextAndStoryParams' has a wrong offset!");
static_assert(offsetof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest, CallFunc_GlobalDictionarySetInt_ReturnValue) == 0x000088, "Member 'BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest::CallFunc_GlobalDictionarySetInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest, CallFunc_GlobalDictionarySetInt_ReturnValue_1) == 0x000089, "Member 'BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest::CallFunc_GlobalDictionarySetInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest, CallFunc_AddObjective_ReturnValue) == 0x000090, "Member 'BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest::CallFunc_AddObjective_ReturnValue' has a wrong offset!");
static_assert(offsetof(BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest, CallFunc_AddObjective_ReturnValue_1) == 0x000098, "Member 'BQ09_Gremlin_Quest_C_ExecuteUbergraph_BQ09_Gremlin_Quest::CallFunc_AddObjective_ReturnValue_1' has a wrong offset!");

}

