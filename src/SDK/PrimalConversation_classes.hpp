#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PrimalConversation

#include "Basic.hpp"

#include "PrimalConversation_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Class PrimalConversation.PrimalConversation
// 0x0038 (0x0060 - 0x0028)
class UPrimalConversation final : public UObject
{
public:
	TArray<class UPrimalConversationNode*>        RootNodes;                                         // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FPrimalConversationInfo                Info;                                              // 0x0038(0x0028)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversation">();
	}
	static class UPrimalConversation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversation>();
	}
};
static_assert(alignof(UPrimalConversation) == 0x000008, "Wrong alignment on UPrimalConversation");
static_assert(sizeof(UPrimalConversation) == 0x000060, "Wrong size on UPrimalConversation");
static_assert(offsetof(UPrimalConversation, RootNodes) == 0x000028, "Member 'UPrimalConversation::RootNodes' has a wrong offset!");
static_assert(offsetof(UPrimalConversation, Info) == 0x000038, "Member 'UPrimalConversation::Info' has a wrong offset!");

// Class PrimalConversation.PrimalConversationConditionBase
// 0x0000 (0x0028 - 0x0028)
class UPrimalConversationConditionBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationConditionBase">();
	}
	static class UPrimalConversationConditionBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationConditionBase>();
	}
};
static_assert(alignof(UPrimalConversationConditionBase) == 0x000008, "Wrong alignment on UPrimalConversationConditionBase");
static_assert(sizeof(UPrimalConversationConditionBase) == 0x000028, "Wrong size on UPrimalConversationConditionBase");

// Class PrimalConversation.PrimalConversationCondition_VariableExists
// 0x0010 (0x0038 - 0x0028)
class UPrimalConversationCondition_VariableExists final : public UPrimalConversationConditionBase
{
public:
	EPrimalConversationVariableListId             VariableListId;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Key;                                               // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationCondition_VariableExists">();
	}
	static class UPrimalConversationCondition_VariableExists* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationCondition_VariableExists>();
	}
};
static_assert(alignof(UPrimalConversationCondition_VariableExists) == 0x000008, "Wrong alignment on UPrimalConversationCondition_VariableExists");
static_assert(sizeof(UPrimalConversationCondition_VariableExists) == 0x000038, "Wrong size on UPrimalConversationCondition_VariableExists");
static_assert(offsetof(UPrimalConversationCondition_VariableExists, VariableListId) == 0x000028, "Member 'UPrimalConversationCondition_VariableExists::VariableListId' has a wrong offset!");
static_assert(offsetof(UPrimalConversationCondition_VariableExists, Key) == 0x00002C, "Member 'UPrimalConversationCondition_VariableExists::Key' has a wrong offset!");

// Class PrimalConversation.PrimalConversationCondition_VariableFloat
// 0x0018 (0x0040 - 0x0028)
class UPrimalConversationCondition_VariableFloat final : public UPrimalConversationConditionBase
{
public:
	EPrimalConversationVariableListId             VariableListId;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Key;                                               // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPrimalConversationConditionNumericOperator   Operator;                                          // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationCondition_VariableFloat">();
	}
	static class UPrimalConversationCondition_VariableFloat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationCondition_VariableFloat>();
	}
};
static_assert(alignof(UPrimalConversationCondition_VariableFloat) == 0x000008, "Wrong alignment on UPrimalConversationCondition_VariableFloat");
static_assert(sizeof(UPrimalConversationCondition_VariableFloat) == 0x000040, "Wrong size on UPrimalConversationCondition_VariableFloat");
static_assert(offsetof(UPrimalConversationCondition_VariableFloat, VariableListId) == 0x000028, "Member 'UPrimalConversationCondition_VariableFloat::VariableListId' has a wrong offset!");
static_assert(offsetof(UPrimalConversationCondition_VariableFloat, Key) == 0x00002C, "Member 'UPrimalConversationCondition_VariableFloat::Key' has a wrong offset!");
static_assert(offsetof(UPrimalConversationCondition_VariableFloat, Operator) == 0x000034, "Member 'UPrimalConversationCondition_VariableFloat::Operator' has a wrong offset!");
static_assert(offsetof(UPrimalConversationCondition_VariableFloat, Value) == 0x000038, "Member 'UPrimalConversationCondition_VariableFloat::Value' has a wrong offset!");

// Class PrimalConversation.PrimalConversationCondition_VariableInt
// 0x0018 (0x0040 - 0x0028)
class UPrimalConversationCondition_VariableInt final : public UPrimalConversationConditionBase
{
public:
	EPrimalConversationVariableListId             VariableListId;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Key;                                               // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPrimalConversationConditionNumericOperator   Operator;                                          // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationCondition_VariableInt">();
	}
	static class UPrimalConversationCondition_VariableInt* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationCondition_VariableInt>();
	}
};
static_assert(alignof(UPrimalConversationCondition_VariableInt) == 0x000008, "Wrong alignment on UPrimalConversationCondition_VariableInt");
static_assert(sizeof(UPrimalConversationCondition_VariableInt) == 0x000040, "Wrong size on UPrimalConversationCondition_VariableInt");
static_assert(offsetof(UPrimalConversationCondition_VariableInt, VariableListId) == 0x000028, "Member 'UPrimalConversationCondition_VariableInt::VariableListId' has a wrong offset!");
static_assert(offsetof(UPrimalConversationCondition_VariableInt, Key) == 0x00002C, "Member 'UPrimalConversationCondition_VariableInt::Key' has a wrong offset!");
static_assert(offsetof(UPrimalConversationCondition_VariableInt, Operator) == 0x000034, "Member 'UPrimalConversationCondition_VariableInt::Operator' has a wrong offset!");
static_assert(offsetof(UPrimalConversationCondition_VariableInt, Value) == 0x000038, "Member 'UPrimalConversationCondition_VariableInt::Value' has a wrong offset!");

// Class PrimalConversation.PrimalConversationCondition_VariableBool
// 0x0010 (0x0038 - 0x0028)
class UPrimalConversationCondition_VariableBool final : public UPrimalConversationConditionBase
{
public:
	EPrimalConversationVariableListId             VariableListId;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Key;                                               // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bValue;                                            // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationCondition_VariableBool">();
	}
	static class UPrimalConversationCondition_VariableBool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationCondition_VariableBool>();
	}
};
static_assert(alignof(UPrimalConversationCondition_VariableBool) == 0x000008, "Wrong alignment on UPrimalConversationCondition_VariableBool");
static_assert(sizeof(UPrimalConversationCondition_VariableBool) == 0x000038, "Wrong size on UPrimalConversationCondition_VariableBool");
static_assert(offsetof(UPrimalConversationCondition_VariableBool, VariableListId) == 0x000028, "Member 'UPrimalConversationCondition_VariableBool::VariableListId' has a wrong offset!");
static_assert(offsetof(UPrimalConversationCondition_VariableBool, Key) == 0x00002C, "Member 'UPrimalConversationCondition_VariableBool::Key' has a wrong offset!");
static_assert(offsetof(UPrimalConversationCondition_VariableBool, bValue) == 0x000034, "Member 'UPrimalConversationCondition_VariableBool::bValue' has a wrong offset!");

// Class PrimalConversation.PrimalConversationCondition_VariableString
// 0x0020 (0x0048 - 0x0028)
class UPrimalConversationCondition_VariableString final : public UPrimalConversationConditionBase
{
public:
	EPrimalConversationVariableListId             VariableListId;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Key;                                               // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0038(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationCondition_VariableString">();
	}
	static class UPrimalConversationCondition_VariableString* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationCondition_VariableString>();
	}
};
static_assert(alignof(UPrimalConversationCondition_VariableString) == 0x000008, "Wrong alignment on UPrimalConversationCondition_VariableString");
static_assert(sizeof(UPrimalConversationCondition_VariableString) == 0x000048, "Wrong size on UPrimalConversationCondition_VariableString");
static_assert(offsetof(UPrimalConversationCondition_VariableString, VariableListId) == 0x000028, "Member 'UPrimalConversationCondition_VariableString::VariableListId' has a wrong offset!");
static_assert(offsetof(UPrimalConversationCondition_VariableString, Key) == 0x00002C, "Member 'UPrimalConversationCondition_VariableString::Key' has a wrong offset!");
static_assert(offsetof(UPrimalConversationCondition_VariableString, Value) == 0x000038, "Member 'UPrimalConversationCondition_VariableString::Value' has a wrong offset!");

// Class PrimalConversation.PrimalConversationNode
// 0x0010 (0x0038 - 0x0028)
class UPrimalConversationNode : public UObject
{
public:
	TArray<class UPrimalConversationNode*>        ChildNodes;                                        // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationNode">();
	}
	static class UPrimalConversationNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationNode>();
	}
};
static_assert(alignof(UPrimalConversationNode) == 0x000008, "Wrong alignment on UPrimalConversationNode");
static_assert(sizeof(UPrimalConversationNode) == 0x000038, "Wrong size on UPrimalConversationNode");
static_assert(offsetof(UPrimalConversationNode, ChildNodes) == 0x000028, "Member 'UPrimalConversationNode::ChildNodes' has a wrong offset!");

// Class PrimalConversation.PrimalConversationNodeGroup
// 0x0010 (0x0048 - 0x0038)
class UPrimalConversationNodeGroup final : public UPrimalConversationNode
{
public:
	TArray<class UPrimalConversationConditionBase*> Condition;                                         // 0x0038(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationNodeGroup">();
	}
	static class UPrimalConversationNodeGroup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationNodeGroup>();
	}
};
static_assert(alignof(UPrimalConversationNodeGroup) == 0x000008, "Wrong alignment on UPrimalConversationNodeGroup");
static_assert(sizeof(UPrimalConversationNodeGroup) == 0x000048, "Wrong size on UPrimalConversationNodeGroup");
static_assert(offsetof(UPrimalConversationNodeGroup, Condition) == 0x000038, "Member 'UPrimalConversationNodeGroup::Condition' has a wrong offset!");

// Class PrimalConversation.PrimalConversationNodeLinkAsset
// 0x0008 (0x0040 - 0x0038)
class UPrimalConversationNodeLinkAsset final : public UPrimalConversationNode
{
public:
	class UPrimalConversation*                    LinkToConversation;                                // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationNodeLinkAsset">();
	}
	static class UPrimalConversationNodeLinkAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationNodeLinkAsset>();
	}
};
static_assert(alignof(UPrimalConversationNodeLinkAsset) == 0x000008, "Wrong alignment on UPrimalConversationNodeLinkAsset");
static_assert(sizeof(UPrimalConversationNodeLinkAsset) == 0x000040, "Wrong size on UPrimalConversationNodeLinkAsset");
static_assert(offsetof(UPrimalConversationNodeLinkAsset, LinkToConversation) == 0x000038, "Member 'UPrimalConversationNodeLinkAsset::LinkToConversation' has a wrong offset!");

// Class PrimalConversation.PrimalConversationNodeLinkNode
// 0x0008 (0x0040 - 0x0038)
class UPrimalConversationNodeLinkNode final : public UPrimalConversationNode
{
public:
	class UPrimalConversationNode*                LinkToConversationNode;                            // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationNodeLinkNode">();
	}
	static class UPrimalConversationNodeLinkNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationNodeLinkNode>();
	}
};
static_assert(alignof(UPrimalConversationNodeLinkNode) == 0x000008, "Wrong alignment on UPrimalConversationNodeLinkNode");
static_assert(sizeof(UPrimalConversationNodeLinkNode) == 0x000040, "Wrong size on UPrimalConversationNodeLinkNode");
static_assert(offsetof(UPrimalConversationNodeLinkNode, LinkToConversationNode) == 0x000038, "Member 'UPrimalConversationNodeLinkNode::LinkToConversationNode' has a wrong offset!");

// Class PrimalConversation.PrimalConversationNodeResponse
// 0x0040 (0x0078 - 0x0038)
class UPrimalConversationNodeResponse final : public UPrimalConversationNode
{
public:
	struct FPrimalConversationResponseInfo        Info;                                              // 0x0038(0x0001)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrimalConversationNodeResponseLine> Lines;                                             // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UPrimalConversationConditionBase*> Condition;                                         // 0x0050(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UPrimalConversationTriggerBase*> OnEnter;                                           // 0x0060(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bGrayedOutAfterSelect;                             // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPrimalConversationResponseButtonType         ButtonType;                                        // 0x0071(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationNodeResponse">();
	}
	static class UPrimalConversationNodeResponse* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationNodeResponse>();
	}
};
static_assert(alignof(UPrimalConversationNodeResponse) == 0x000008, "Wrong alignment on UPrimalConversationNodeResponse");
static_assert(sizeof(UPrimalConversationNodeResponse) == 0x000078, "Wrong size on UPrimalConversationNodeResponse");
static_assert(offsetof(UPrimalConversationNodeResponse, Info) == 0x000038, "Member 'UPrimalConversationNodeResponse::Info' has a wrong offset!");
static_assert(offsetof(UPrimalConversationNodeResponse, Lines) == 0x000040, "Member 'UPrimalConversationNodeResponse::Lines' has a wrong offset!");
static_assert(offsetof(UPrimalConversationNodeResponse, Condition) == 0x000050, "Member 'UPrimalConversationNodeResponse::Condition' has a wrong offset!");
static_assert(offsetof(UPrimalConversationNodeResponse, OnEnter) == 0x000060, "Member 'UPrimalConversationNodeResponse::OnEnter' has a wrong offset!");
static_assert(offsetof(UPrimalConversationNodeResponse, bGrayedOutAfterSelect) == 0x000070, "Member 'UPrimalConversationNodeResponse::bGrayedOutAfterSelect' has a wrong offset!");
static_assert(offsetof(UPrimalConversationNodeResponse, ButtonType) == 0x000071, "Member 'UPrimalConversationNodeResponse::ButtonType' has a wrong offset!");

// Class PrimalConversation.PrimalConversationNodeTalk
// 0x0058 (0x0090 - 0x0038)
class UPrimalConversationNodeTalk final : public UPrimalConversationNode
{
public:
	struct FPrimalConversationNodeTalkInfo        Info;                                              // 0x0038(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FPrimalConversationNodeTalkLine> Lines;                                             // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UPrimalConversationConditionBase*> Condition;                                         // 0x0060(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UPrimalConversationTriggerBase*> OnEnter;                                           // 0x0070(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UPrimalConversationTriggerBase*> OnLeave;                                           // 0x0080(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationNodeTalk">();
	}
	static class UPrimalConversationNodeTalk* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationNodeTalk>();
	}
};
static_assert(alignof(UPrimalConversationNodeTalk) == 0x000008, "Wrong alignment on UPrimalConversationNodeTalk");
static_assert(sizeof(UPrimalConversationNodeTalk) == 0x000090, "Wrong size on UPrimalConversationNodeTalk");
static_assert(offsetof(UPrimalConversationNodeTalk, Info) == 0x000038, "Member 'UPrimalConversationNodeTalk::Info' has a wrong offset!");
static_assert(offsetof(UPrimalConversationNodeTalk, Lines) == 0x000050, "Member 'UPrimalConversationNodeTalk::Lines' has a wrong offset!");
static_assert(offsetof(UPrimalConversationNodeTalk, Condition) == 0x000060, "Member 'UPrimalConversationNodeTalk::Condition' has a wrong offset!");
static_assert(offsetof(UPrimalConversationNodeTalk, OnEnter) == 0x000070, "Member 'UPrimalConversationNodeTalk::OnEnter' has a wrong offset!");
static_assert(offsetof(UPrimalConversationNodeTalk, OnLeave) == 0x000080, "Member 'UPrimalConversationNodeTalk::OnLeave' has a wrong offset!");

// Class PrimalConversation.PrimalConversationPlayer
// 0x0070 (0x0098 - 0x0028)
class UPrimalConversationPlayer final : public UObject
{
public:
	TMulticastInlineDelegate<void(class UPrimalConversationPlayer* Player, const struct FPrimalConversationEventId& EventId, const struct FPrimalConversationInfo& Info)> OnStart;                                           // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UPrimalConversationPlayer* Player, const struct FPrimalConversationEventId& EventId, const struct FPrimalConversationPlayerShowInfo& Info)> OnShow;                                            // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UPrimalConversationPlayer* Player, const struct FPrimalConversationEventId& EventId)> OnStop;                                            // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x40];                                      // 0x0058(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationPlayer">();
	}
	static class UPrimalConversationPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationPlayer>();
	}
};
static_assert(alignof(UPrimalConversationPlayer) == 0x000008, "Wrong alignment on UPrimalConversationPlayer");
static_assert(sizeof(UPrimalConversationPlayer) == 0x000098, "Wrong size on UPrimalConversationPlayer");
static_assert(offsetof(UPrimalConversationPlayer, OnStart) == 0x000028, "Member 'UPrimalConversationPlayer::OnStart' has a wrong offset!");
static_assert(offsetof(UPrimalConversationPlayer, OnShow) == 0x000038, "Member 'UPrimalConversationPlayer::OnShow' has a wrong offset!");
static_assert(offsetof(UPrimalConversationPlayer, OnStop) == 0x000048, "Member 'UPrimalConversationPlayer::OnStop' has a wrong offset!");

// Class PrimalConversation.PrimalConversationSpeaker
// 0x0060 (0x0088 - 0x0028)
class UPrimalConversationSpeaker final : public UObject
{
public:
	class FName                                   SpeakerName;                                       // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0030(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FText                                   UIDisplayName;                                     // 0x0048(0x0018)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FFilePath>                      PortraitVideosIdle;                                // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPortraitVideoIdleBridge>       PortraitVideosIdleBridge;                          // 0x0070(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         IdleBridgeVideoInterval;                           // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationSpeaker">();
	}
	static class UPrimalConversationSpeaker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationSpeaker>();
	}
};
static_assert(alignof(UPrimalConversationSpeaker) == 0x000008, "Wrong alignment on UPrimalConversationSpeaker");
static_assert(sizeof(UPrimalConversationSpeaker) == 0x000088, "Wrong size on UPrimalConversationSpeaker");
static_assert(offsetof(UPrimalConversationSpeaker, SpeakerName) == 0x000028, "Member 'UPrimalConversationSpeaker::SpeakerName' has a wrong offset!");
static_assert(offsetof(UPrimalConversationSpeaker, DisplayName) == 0x000030, "Member 'UPrimalConversationSpeaker::DisplayName' has a wrong offset!");
static_assert(offsetof(UPrimalConversationSpeaker, UIDisplayName) == 0x000048, "Member 'UPrimalConversationSpeaker::UIDisplayName' has a wrong offset!");
static_assert(offsetof(UPrimalConversationSpeaker, PortraitVideosIdle) == 0x000060, "Member 'UPrimalConversationSpeaker::PortraitVideosIdle' has a wrong offset!");
static_assert(offsetof(UPrimalConversationSpeaker, PortraitVideosIdleBridge) == 0x000070, "Member 'UPrimalConversationSpeaker::PortraitVideosIdleBridge' has a wrong offset!");
static_assert(offsetof(UPrimalConversationSpeaker, IdleBridgeVideoInterval) == 0x000080, "Member 'UPrimalConversationSpeaker::IdleBridgeVideoInterval' has a wrong offset!");

// Class PrimalConversation.PrimalConversationTriggerBase
// 0x0000 (0x0028 - 0x0028)
class UPrimalConversationTriggerBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationTriggerBase">();
	}
	static class UPrimalConversationTriggerBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationTriggerBase>();
	}
};
static_assert(alignof(UPrimalConversationTriggerBase) == 0x000008, "Wrong alignment on UPrimalConversationTriggerBase");
static_assert(sizeof(UPrimalConversationTriggerBase) == 0x000028, "Wrong size on UPrimalConversationTriggerBase");

// Class PrimalConversation.PrimalConversationTriggerSetVariableFloat
// 0x0010 (0x0038 - 0x0028)
class UPrimalConversationTriggerSetVariableFloat final : public UPrimalConversationTriggerBase
{
public:
	EPrimalConversationVariableListId             VariableListId;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Key;                                               // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationTriggerSetVariableFloat">();
	}
	static class UPrimalConversationTriggerSetVariableFloat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationTriggerSetVariableFloat>();
	}
};
static_assert(alignof(UPrimalConversationTriggerSetVariableFloat) == 0x000008, "Wrong alignment on UPrimalConversationTriggerSetVariableFloat");
static_assert(sizeof(UPrimalConversationTriggerSetVariableFloat) == 0x000038, "Wrong size on UPrimalConversationTriggerSetVariableFloat");
static_assert(offsetof(UPrimalConversationTriggerSetVariableFloat, VariableListId) == 0x000028, "Member 'UPrimalConversationTriggerSetVariableFloat::VariableListId' has a wrong offset!");
static_assert(offsetof(UPrimalConversationTriggerSetVariableFloat, Key) == 0x00002C, "Member 'UPrimalConversationTriggerSetVariableFloat::Key' has a wrong offset!");
static_assert(offsetof(UPrimalConversationTriggerSetVariableFloat, Value) == 0x000034, "Member 'UPrimalConversationTriggerSetVariableFloat::Value' has a wrong offset!");

// Class PrimalConversation.PrimalConversationTriggerIncrementVariableFloat
// 0x0010 (0x0038 - 0x0028)
class UPrimalConversationTriggerIncrementVariableFloat final : public UPrimalConversationTriggerBase
{
public:
	EPrimalConversationVariableListId             VariableListId;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Key;                                               // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationTriggerIncrementVariableFloat">();
	}
	static class UPrimalConversationTriggerIncrementVariableFloat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationTriggerIncrementVariableFloat>();
	}
};
static_assert(alignof(UPrimalConversationTriggerIncrementVariableFloat) == 0x000008, "Wrong alignment on UPrimalConversationTriggerIncrementVariableFloat");
static_assert(sizeof(UPrimalConversationTriggerIncrementVariableFloat) == 0x000038, "Wrong size on UPrimalConversationTriggerIncrementVariableFloat");
static_assert(offsetof(UPrimalConversationTriggerIncrementVariableFloat, VariableListId) == 0x000028, "Member 'UPrimalConversationTriggerIncrementVariableFloat::VariableListId' has a wrong offset!");
static_assert(offsetof(UPrimalConversationTriggerIncrementVariableFloat, Key) == 0x00002C, "Member 'UPrimalConversationTriggerIncrementVariableFloat::Key' has a wrong offset!");
static_assert(offsetof(UPrimalConversationTriggerIncrementVariableFloat, Value) == 0x000034, "Member 'UPrimalConversationTriggerIncrementVariableFloat::Value' has a wrong offset!");

// Class PrimalConversation.PrimalConversationTriggerSetVariableInt
// 0x0010 (0x0038 - 0x0028)
class UPrimalConversationTriggerSetVariableInt final : public UPrimalConversationTriggerBase
{
public:
	EPrimalConversationVariableListId             VariableListId;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Key;                                               // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationTriggerSetVariableInt">();
	}
	static class UPrimalConversationTriggerSetVariableInt* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationTriggerSetVariableInt>();
	}
};
static_assert(alignof(UPrimalConversationTriggerSetVariableInt) == 0x000008, "Wrong alignment on UPrimalConversationTriggerSetVariableInt");
static_assert(sizeof(UPrimalConversationTriggerSetVariableInt) == 0x000038, "Wrong size on UPrimalConversationTriggerSetVariableInt");
static_assert(offsetof(UPrimalConversationTriggerSetVariableInt, VariableListId) == 0x000028, "Member 'UPrimalConversationTriggerSetVariableInt::VariableListId' has a wrong offset!");
static_assert(offsetof(UPrimalConversationTriggerSetVariableInt, Key) == 0x00002C, "Member 'UPrimalConversationTriggerSetVariableInt::Key' has a wrong offset!");
static_assert(offsetof(UPrimalConversationTriggerSetVariableInt, Value) == 0x000034, "Member 'UPrimalConversationTriggerSetVariableInt::Value' has a wrong offset!");

// Class PrimalConversation.PrimalConversationTriggerIncrementVariableInt
// 0x0010 (0x0038 - 0x0028)
class UPrimalConversationTriggerIncrementVariableInt final : public UPrimalConversationTriggerBase
{
public:
	EPrimalConversationVariableListId             VariableListId;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Key;                                               // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationTriggerIncrementVariableInt">();
	}
	static class UPrimalConversationTriggerIncrementVariableInt* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationTriggerIncrementVariableInt>();
	}
};
static_assert(alignof(UPrimalConversationTriggerIncrementVariableInt) == 0x000008, "Wrong alignment on UPrimalConversationTriggerIncrementVariableInt");
static_assert(sizeof(UPrimalConversationTriggerIncrementVariableInt) == 0x000038, "Wrong size on UPrimalConversationTriggerIncrementVariableInt");
static_assert(offsetof(UPrimalConversationTriggerIncrementVariableInt, VariableListId) == 0x000028, "Member 'UPrimalConversationTriggerIncrementVariableInt::VariableListId' has a wrong offset!");
static_assert(offsetof(UPrimalConversationTriggerIncrementVariableInt, Key) == 0x00002C, "Member 'UPrimalConversationTriggerIncrementVariableInt::Key' has a wrong offset!");
static_assert(offsetof(UPrimalConversationTriggerIncrementVariableInt, Value) == 0x000034, "Member 'UPrimalConversationTriggerIncrementVariableInt::Value' has a wrong offset!");

// Class PrimalConversation.PrimalConversationTriggerSetVariableBool
// 0x0010 (0x0038 - 0x0028)
class UPrimalConversationTriggerSetVariableBool final : public UPrimalConversationTriggerBase
{
public:
	EPrimalConversationVariableListId             VariableListId;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Key;                                               // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bValue;                                            // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationTriggerSetVariableBool">();
	}
	static class UPrimalConversationTriggerSetVariableBool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationTriggerSetVariableBool>();
	}
};
static_assert(alignof(UPrimalConversationTriggerSetVariableBool) == 0x000008, "Wrong alignment on UPrimalConversationTriggerSetVariableBool");
static_assert(sizeof(UPrimalConversationTriggerSetVariableBool) == 0x000038, "Wrong size on UPrimalConversationTriggerSetVariableBool");
static_assert(offsetof(UPrimalConversationTriggerSetVariableBool, VariableListId) == 0x000028, "Member 'UPrimalConversationTriggerSetVariableBool::VariableListId' has a wrong offset!");
static_assert(offsetof(UPrimalConversationTriggerSetVariableBool, Key) == 0x00002C, "Member 'UPrimalConversationTriggerSetVariableBool::Key' has a wrong offset!");
static_assert(offsetof(UPrimalConversationTriggerSetVariableBool, bValue) == 0x000034, "Member 'UPrimalConversationTriggerSetVariableBool::bValue' has a wrong offset!");

// Class PrimalConversation.PrimalConversationTriggerSetVariableString
// 0x0020 (0x0048 - 0x0028)
class UPrimalConversationTriggerSetVariableString final : public UPrimalConversationTriggerBase
{
public:
	EPrimalConversationVariableListId             VariableListId;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Key;                                               // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0038(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalConversationTriggerSetVariableString">();
	}
	static class UPrimalConversationTriggerSetVariableString* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalConversationTriggerSetVariableString>();
	}
};
static_assert(alignof(UPrimalConversationTriggerSetVariableString) == 0x000008, "Wrong alignment on UPrimalConversationTriggerSetVariableString");
static_assert(sizeof(UPrimalConversationTriggerSetVariableString) == 0x000048, "Wrong size on UPrimalConversationTriggerSetVariableString");
static_assert(offsetof(UPrimalConversationTriggerSetVariableString, VariableListId) == 0x000028, "Member 'UPrimalConversationTriggerSetVariableString::VariableListId' has a wrong offset!");
static_assert(offsetof(UPrimalConversationTriggerSetVariableString, Key) == 0x00002C, "Member 'UPrimalConversationTriggerSetVariableString::Key' has a wrong offset!");
static_assert(offsetof(UPrimalConversationTriggerSetVariableString, Value) == 0x000038, "Member 'UPrimalConversationTriggerSetVariableString::Value' has a wrong offset!");

}

