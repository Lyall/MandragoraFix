#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PrimalSkillTreePlugin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "PrimalSkillTreePlugin_structs.hpp"


namespace SDK
{

// Class PrimalSkillTreePlugin.PrimalSkillTree
// 0x0010 (0x0038 - 0x0028)
class UPrimalSkillTree final : public UObject
{
public:
	TArray<class UPrimalSkillTreeNode*>           SkillTreeLogic;                                    // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalSkillTree">();
	}
	static class UPrimalSkillTree* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalSkillTree>();
	}
};
static_assert(alignof(UPrimalSkillTree) == 0x000008, "Wrong alignment on UPrimalSkillTree");
static_assert(sizeof(UPrimalSkillTree) == 0x000038, "Wrong size on UPrimalSkillTree");
static_assert(offsetof(UPrimalSkillTree, SkillTreeLogic) == 0x000028, "Member 'UPrimalSkillTree::SkillTreeLogic' has a wrong offset!");

// Class PrimalSkillTreePlugin.CustomPrimalSkillTreeNodeData
// 0x0020 (0x0048 - 0x0028)
class UCustomPrimalSkillTreeNodeData : public UObject
{
public:
	TArray<struct FSkillTreeNodeUINavigationData> UINavigationData;                                  // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 IgnoredTargetNodeIDs;                              // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CustomPrimalSkillTreeNodeData">();
	}
	static class UCustomPrimalSkillTreeNodeData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCustomPrimalSkillTreeNodeData>();
	}
};
static_assert(alignof(UCustomPrimalSkillTreeNodeData) == 0x000008, "Wrong alignment on UCustomPrimalSkillTreeNodeData");
static_assert(sizeof(UCustomPrimalSkillTreeNodeData) == 0x000048, "Wrong size on UCustomPrimalSkillTreeNodeData");
static_assert(offsetof(UCustomPrimalSkillTreeNodeData, UINavigationData) == 0x000028, "Member 'UCustomPrimalSkillTreeNodeData::UINavigationData' has a wrong offset!");
static_assert(offsetof(UCustomPrimalSkillTreeNodeData, IgnoredTargetNodeIDs) == 0x000038, "Member 'UCustomPrimalSkillTreeNodeData::IgnoredTargetNodeIDs' has a wrong offset!");

// Class PrimalSkillTreePlugin.PrimalSkillTreeNode
// 0x0058 (0x0080 - 0x0028)
class UPrimalSkillTreeNode final : public UObject
{
public:
	struct FPrimalSkillTreeNodeInfo               NodeInfo;                                          // 0x0028(0x0028)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UPrimalSkillTreeNode*>           NeighbourNodes;                                    // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector2D                              GraphNodePosition;                                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PrimalNodeID;                                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              NodeChangedEvent;                                  // 0x0070(0x0010)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PrimalSkillTreeNode">();
	}
	static class UPrimalSkillTreeNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPrimalSkillTreeNode>();
	}
};
static_assert(alignof(UPrimalSkillTreeNode) == 0x000008, "Wrong alignment on UPrimalSkillTreeNode");
static_assert(sizeof(UPrimalSkillTreeNode) == 0x000080, "Wrong size on UPrimalSkillTreeNode");
static_assert(offsetof(UPrimalSkillTreeNode, NodeInfo) == 0x000028, "Member 'UPrimalSkillTreeNode::NodeInfo' has a wrong offset!");
static_assert(offsetof(UPrimalSkillTreeNode, NeighbourNodes) == 0x000050, "Member 'UPrimalSkillTreeNode::NeighbourNodes' has a wrong offset!");
static_assert(offsetof(UPrimalSkillTreeNode, GraphNodePosition) == 0x000060, "Member 'UPrimalSkillTreeNode::GraphNodePosition' has a wrong offset!");
static_assert(offsetof(UPrimalSkillTreeNode, PrimalNodeID) == 0x000068, "Member 'UPrimalSkillTreeNode::PrimalNodeID' has a wrong offset!");
static_assert(offsetof(UPrimalSkillTreeNode, NodeChangedEvent) == 0x000070, "Member 'UPrimalSkillTreeNode::NodeChangedEvent' has a wrong offset!");

}

