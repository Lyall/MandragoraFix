#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S_BrawlerBloodstainArea

#include "Basic.hpp"

#include "E_BrawlerBloodstainArea_structs.hpp"


namespace SDK
{

// UserDefinedStruct S_BrawlerBloodstainArea.S_BrawlerBloodstainArea
// 0x0018 (0x0018 - 0x0000)
struct FS_BrawlerBloodstainArea final
{
public:
	E_BrawlerBloodstainArea                       Area_2_16E091404B54D3986CADBDA1D02F5FD2;           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 SkeletalMesh_7_DD86BF4A45CEC57DE28265805AB2432D;   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NiagaraComponent_8_A3A8A79D453A2BB95CEBEC8CAAC422A3; // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FS_BrawlerBloodstainArea) == 0x000008, "Wrong alignment on FS_BrawlerBloodstainArea");
static_assert(sizeof(FS_BrawlerBloodstainArea) == 0x000018, "Wrong size on FS_BrawlerBloodstainArea");
static_assert(offsetof(FS_BrawlerBloodstainArea, Area_2_16E091404B54D3986CADBDA1D02F5FD2) == 0x000000, "Member 'FS_BrawlerBloodstainArea::Area_2_16E091404B54D3986CADBDA1D02F5FD2' has a wrong offset!");
static_assert(offsetof(FS_BrawlerBloodstainArea, SkeletalMesh_7_DD86BF4A45CEC57DE28265805AB2432D) == 0x000008, "Member 'FS_BrawlerBloodstainArea::SkeletalMesh_7_DD86BF4A45CEC57DE28265805AB2432D' has a wrong offset!");
static_assert(offsetof(FS_BrawlerBloodstainArea, NiagaraComponent_8_A3A8A79D453A2BB95CEBEC8CAAC422A3) == 0x000010, "Member 'FS_BrawlerBloodstainArea::NiagaraComponent_8_A3A8A79D453A2BB95CEBEC8CAAC422A3' has a wrong offset!");

}

